

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 18 09:48:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202                           
   203                           	psect	strings
   204  1000                     __pstrings:
   205  1000                     stringtab:
   206  1000                     __stringtab:
   207                           
   208                           ;	String table - string pointers are 1 byte each
   209  1000  1BFF               	btfsc	btemp+1,7
   210  1001  280A               	ljmp	stringcode
   211  1002  1383               	bcf	3,7
   212  1003  187F               	btfsc	btemp+1,0
   213  1004  1783               	bsf	3,7
   214  1005  0800               	movf	0,w
   215  1006  0A84               	incf	4,f
   216  1007  1903               	skipnz
   217  1008  0AFF               	incf	btemp+1,f
   218  1009  0008               	return
   219  100A                     stringcode:
   220  100A                     stringdir:
   221  100A  3010               	movlw	high stringdir
   222  100B  008A               	movwf	10
   223  100C  0804               	movf	4,w
   224  100D  0A84               	incf	4,f
   225  100E  0782               	addwf	2,f
   226  100F                     __stringbase:
   227  100F  3400               	retlw	0
   228  1010                     __end_of__stringtab:
   229  1010                     __powers_:
   230  1010  3400               	retlw	0
   231  1011  3400               	retlw	0
   232  1012  3480               	retlw	128
   233  1013  343F               	retlw	63
   234  1014  3400               	retlw	0
   235  1015  3400               	retlw	0
   236  1016  3420               	retlw	32
   237  1017  3441               	retlw	65
   238  1018  3400               	retlw	0
   239  1019  3400               	retlw	0
   240  101A  34C8               	retlw	200
   241  101B  3442               	retlw	66
   242  101C  3400               	retlw	0
   243  101D  3400               	retlw	0
   244  101E  347A               	retlw	122
   245  101F  3444               	retlw	68
   246  1020  3400               	retlw	0
   247  1021  3440               	retlw	64
   248  1022  341C               	retlw	28
   249  1023  3446               	retlw	70
   250  1024  3400               	retlw	0
   251  1025  3450               	retlw	80
   252  1026  34C3               	retlw	195
   253  1027  3447               	retlw	71
   254  1028  3400               	retlw	0
   255  1029  3424               	retlw	36
   256  102A  3474               	retlw	116
   257  102B  3449               	retlw	73
   258  102C  3480               	retlw	128
   259  102D  3496               	retlw	150
   260  102E  3418               	retlw	24
   261  102F  344B               	retlw	75
   262  1030  3420               	retlw	32
   263  1031  34BC               	retlw	188
   264  1032  34BE               	retlw	190
   265  1033  344C               	retlw	76
   266  1034  3428               	retlw	40
   267  1035  346B               	retlw	107
   268  1036  346E               	retlw	110
   269  1037  344E               	retlw	78
   270  1038  34F9               	retlw	249
   271  1039  3402               	retlw	2
   272  103A  3415               	retlw	21
   273  103B  3450               	retlw	80
   274  103C  34EC               	retlw	236
   275  103D  3478               	retlw	120
   276  103E  34AD               	retlw	173
   277  103F  3460               	retlw	96
   278  1040  34CA               	retlw	202
   279  1041  34F2               	retlw	242
   280  1042  3449               	retlw	73
   281  1043  3471               	retlw	113
   282  1044                     __end_of__powers_:
   283  1044                     __npowers_:
   284  1044  3400               	retlw	0
   285  1045  3400               	retlw	0
   286  1046  3480               	retlw	128
   287  1047  343F               	retlw	63
   288  1048  34CD               	retlw	205
   289  1049  34CC               	retlw	204
   290  104A  34CC               	retlw	204
   291  104B  343D               	retlw	61
   292  104C  340A               	retlw	10
   293  104D  34D7               	retlw	215
   294  104E  3423               	retlw	35
   295  104F  343C               	retlw	60
   296  1050  346F               	retlw	111
   297  1051  3412               	retlw	18
   298  1052  3483               	retlw	131
   299  1053  343A               	retlw	58
   300  1054  3417               	retlw	23
   301  1055  34B7               	retlw	183
   302  1056  34D1               	retlw	209
   303  1057  3438               	retlw	56
   304  1058  34AC               	retlw	172
   305  1059  34C5               	retlw	197
   306  105A  3427               	retlw	39
   307  105B  3437               	retlw	55
   308  105C  34BD               	retlw	189
   309  105D  3437               	retlw	55
   310  105E  3486               	retlw	134
   311  105F  3435               	retlw	53
   312  1060  3495               	retlw	149
   313  1061  34BF               	retlw	191
   314  1062  34D6               	retlw	214
   315  1063  3433               	retlw	51
   316  1064  3477               	retlw	119
   317  1065  34CC               	retlw	204
   318  1066  342B               	retlw	43
   319  1067  3432               	retlw	50
   320  1068  345F               	retlw	95
   321  1069  3470               	retlw	112
   322  106A  3489               	retlw	137
   323  106B  3430               	retlw	48
   324  106C  34FF               	retlw	255
   325  106D  34E6               	retlw	230
   326  106E  34DB               	retlw	219
   327  106F  342E               	retlw	46
   328  1070  3408               	retlw	8
   329  1071  34E5               	retlw	229
   330  1072  343C               	retlw	60
   331  1073  341E               	retlw	30
   332  1074  3460               	retlw	96
   333  1075  3442               	retlw	66
   334  1076  34A2               	retlw	162
   335  1077  340D               	retlw	13
   336  1078                     __end_of__npowers_:
   337  1078                     _dpowers:
   338  1078  3401               	retlw	1
   339  1079  3400               	retlw	0
   340  107A  3400               	retlw	0
   341  107B  3400               	retlw	0
   342  107C  340A               	retlw	10
   343  107D  3400               	retlw	0
   344  107E  3400               	retlw	0
   345  107F  3400               	retlw	0
   346  1080  3464               	retlw	100
   347  1081  3400               	retlw	0
   348  1082  3400               	retlw	0
   349  1083  3400               	retlw	0
   350  1084  34E8               	retlw	232
   351  1085  3403               	retlw	3
   352  1086  3400               	retlw	0
   353  1087  3400               	retlw	0
   354  1088  3410               	retlw	16
   355  1089  3427               	retlw	39
   356  108A  3400               	retlw	0
   357  108B  3400               	retlw	0
   358  108C  34A0               	retlw	160
   359  108D  3486               	retlw	134
   360  108E  3401               	retlw	1
   361  108F  3400               	retlw	0
   362  1090  3440               	retlw	64
   363  1091  3442               	retlw	66
   364  1092  340F               	retlw	15
   365  1093  3400               	retlw	0
   366  1094  3480               	retlw	128
   367  1095  3496               	retlw	150
   368  1096  3498               	retlw	152
   369  1097  3400               	retlw	0
   370  1098  3400               	retlw	0
   371  1099  34E1               	retlw	225
   372  109A  34F5               	retlw	245
   373  109B  3405               	retlw	5
   374  109C  3400               	retlw	0
   375  109D  34CA               	retlw	202
   376  109E  349A               	retlw	154
   377  109F  343B               	retlw	59
   378  10A0                     __end_of_dpowers:
   379  001E                     _ADRESH	set	30
   380  001F                     _ADCON0bits	set	31
   381  0059                     _INTF	set	89
   382  005C                     _INTE	set	92
   383  005F                     _GIE	set	95
   384  0040                     _RD0	set	64
   385  0043                     _RD3	set	67
   386  0042                     _RD2	set	66
   387  0047                     _RD7	set	71
   388  0046                     _RD6	set	70
   389  0045                     _RD5	set	69
   390  0044                     _RD4	set	68
   391  009E                     _ADRESL	set	158
   392  009F                     _ADCON1bits	set	159
   393  0088                     _TRISD	set	136
   394  040E                     _INTEDG	set	1038
   395  0440                     _TRISD0	set	1088
   396  0430                     _TRISB0	set	1072
   397  0428                     _TRISA0	set	1064
   398  10A0                     STR_1:
   399  10A0  344E               	retlw	78	;'N'
   400  10A1  3468               	retlw	104	;'h'
   401  10A2  3469               	retlw	105	;'i'
   402  10A3  3465               	retlw	101	;'e'
   403  10A4  3474               	retlw	116	;'t'
   404  10A5  3420               	retlw	32	;' '
   405  10A6  3464               	retlw	100	;'d'
   406  10A7  346F               	retlw	111	;'o'
   407  10A8  3420               	retlw	32	;' '
   408  10A9  343D               	retlw	61	;'='
   409  10AA  3420               	retlw	32	;' '
   410  10AB  3425               	retlw	37	;'%'
   411  10AC  342E               	retlw	46	;'.'
   412  10AD  3431               	retlw	49	;'1'
   413  10AE  3466               	retlw	102	;'f'
   414  10AF  3420               	retlw	32	;' '
   415  10B0  3400               	retlw	0
   416  10B1                     STR_3:
   417  10B1  3443               	retlw	67	;'C'
   418  10B2  3400               	retlw	0
   419  10AF                     
   420                           	psect	cinit
   421  000F                     start_initialization:	
   422                           ; #config settings
   423                           
   424  000F                     __initialization:
   425                           
   426                           ; Clear objects allocated to BANK1
   427  000F  1683               	bsf	3,5	;RP0=1, select bank1
   428  0010  1303               	bcf	3,6	;RP1=0, select bank1
   429  0011  01E7               	clrf	__pbssBANK1& (0+127)
   430  0012  01E8               	clrf	(__pbssBANK1+1)& (0+127)
   431  0013  01E9               	clrf	(__pbssBANK1+2)& (0+127)
   432  0014  01EA               	clrf	(__pbssBANK1+3)& (0+127)
   433  0015  01EB               	clrf	(__pbssBANK1+4)& (0+127)
   434  0016  01EC               	clrf	(__pbssBANK1+5)& (0+127)
   435                           
   436                           ; Clear objects allocated to BANK3
   437  0017  1683               	bsf	3,5	;RP0=1, select bank3
   438  0018  1703               	bsf	3,6	;RP1=1, select bank3
   439  0019  0190               	clrf	__pbssBANK3& (0+127)
   440  001A  0191               	clrf	(__pbssBANK3+1)& (0+127)
   441  001B  0192               	clrf	(__pbssBANK3+2)& (0+127)
   442  001C  0193               	clrf	(__pbssBANK3+3)& (0+127)
   443  001D                     end_of_initialization:	
   444                           ;End of C runtime variable initialization code
   445                           
   446  001D                     __end_of__initialization:
   447  001D  0183               	clrf	3
   448  001E  120A  118A  2E87   	ljmp	_main	;jump to C main() function
   449                           
   450                           	psect	bssBANK1
   451  00E7                     __pbssBANK1:
   452  00E7                     _ZC:
   453  00E7                     	ds	2
   454  00E9                     _voltage:
   455  00E9                     	ds	2
   456  00EB                     _ADCvalue:
   457  00EB                     	ds	2
   458                           
   459                           	psect	bssBANK3
   460  0190                     __pbssBANK3:
   461  0190                     _temp:
   462  0190                     	ds	4
   463                           
   464                           	psect	cstackBANK1
   465  00A0                     __pcstackBANK1:
   466  00A0                     ___fladd@signs:
   467                           
   468                           ; 1 bytes @ 0x0
   469  00A0                     	ds	1
   470  00A1                     ___fladd@aexp:
   471                           
   472                           ; 1 bytes @ 0x1
   473  00A1                     	ds	1
   474  00A2                     ___fladd@bexp:
   475                           
   476                           ; 1 bytes @ 0x2
   477  00A2                     	ds	1
   478  00A3                     ___fladd@grs:
   479                           
   480                           ; 1 bytes @ 0x3
   481  00A3                     	ds	1
   482  00A4                     ?___flsub:
   483  00A4                     ___flsub@a:	
   484                           ; 4 bytes @ 0x4
   485                           
   486                           
   487                           ; 4 bytes @ 0x4
   488  00A4                     	ds	4
   489  00A8                     ___flsub@b:
   490                           
   491                           ; 4 bytes @ 0x8
   492  00A8                     	ds	4
   493  00AC                     ?_sprintf:
   494  00AC                     sprintf@f:	
   495                           ; 2 bytes @ 0xC
   496                           
   497                           
   498                           ; 1 bytes @ 0xC
   499  00AC                     	ds	5
   500  00B1                     ??_sprintf:
   501                           
   502                           ; 1 bytes @ 0x11
   503  00B1                     	ds	5
   504  00B6                     _sprintf$900:
   505                           
   506                           ; 4 bytes @ 0x16
   507  00B6                     	ds	4
   508  00BA                     sprintf@ap:
   509                           
   510                           ; 1 bytes @ 0x1A
   511  00BA                     	ds	1
   512  00BB                     sprintf@flag:
   513                           
   514                           ; 2 bytes @ 0x1B
   515  00BB                     	ds	2
   516  00BD                     sprintf@val:
   517                           
   518                           ; 4 bytes @ 0x1D
   519  00BD                     	ds	4
   520  00C1                     sprintf@eexp:
   521                           
   522                           ; 2 bytes @ 0x21
   523  00C1                     	ds	2
   524  00C3                     sprintf@tmpval:
   525                           
   526                           ; 4 bytes @ 0x23
   527  00C3                     	ds	4
   528  00C7                     sprintf@sp:
   529                           
   530                           ; 1 bytes @ 0x27
   531  00C7                     	ds	1
   532  00C8                     sprintf@prec:
   533                           
   534                           ; 2 bytes @ 0x28
   535  00C8                     	ds	2
   536  00CA                     sprintf@fval:
   537                           
   538                           ; 4 bytes @ 0x2A
   539  00CA                     	ds	4
   540  00CE                     sprintf@c:
   541                           
   542                           ; 1 bytes @ 0x2E
   543  00CE                     	ds	1
   544  00CF                     ??_main:
   545                           
   546                           ; 1 bytes @ 0x2F
   547  00CF                     	ds	4
   548  00D3                     main@str:
   549                           
   550                           ; 20 bytes @ 0x33
   551  00D3                     	ds	20
   552                           
   553                           	psect	cstackCOMMON
   554  0070                     __pcstackCOMMON:
   555  0070                     ?_isdigit:
   556  0070                     ?_ADCinit:	
   557                           ; 1 bit 
   558                           
   559  0070                     ?_Lcd_Port:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_Lcd_Cmd:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Lcd_Init:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_Lcd_Write_Char:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_ISR:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_ISR:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Lcd_Clear:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_main:	
   581                           ; 2 bytes @ 0x0
   582                           
   583                           
   584                           ; 2 bytes @ 0x0
   585  0070                     	ds	2
   586  0072                     ?___fleq:
   587  0072                     ?___flge:	
   588                           ; 1 bit 
   589                           
   590  0072                     ??_ADCinit:	
   591                           ; 1 bit 
   592                           
   593  0072                     ??_isdigit:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  0072                     ??_Lcd_Port:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ?_ReadADC:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ?__Umul8_16:	
   603                           ; 2 bytes @ 0x2
   604                           
   605  0072                     ?___wmul:	
   606                           ; 2 bytes @ 0x2
   607                           
   608  0072                     ?___awmod:	
   609                           ; 2 bytes @ 0x2
   610                           
   611  0072                     ?___lwmod:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0072                     ?__tdiv_to_l_:	
   615                           ; 2 bytes @ 0x2
   616                           
   617  0072                     ?__div_to_l_:	
   618                           ; 4 bytes @ 0x2
   619                           
   620  0072                     ?___lldiv:	
   621                           ; 4 bytes @ 0x2
   622                           
   623  0072                     ?___flneg:	
   624                           ; 4 bytes @ 0x2
   625                           
   626  0072                     ?___llmod:	
   627                           ; 4 bytes @ 0x2
   628                           
   629  0072                     Lcd_Port@a:	
   630                           ; 4 bytes @ 0x2
   631                           
   632  0072                     __Umul8_16@multiplicand:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     _isdigit$708:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     ___wmul@multiplier:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     ___awmod@divisor:	
   642                           ; 2 bytes @ 0x2
   643                           
   644  0072                     ___lwmod@divisor:	
   645                           ; 2 bytes @ 0x2
   646                           
   647  0072                     ___lldiv@divisor:	
   648                           ; 2 bytes @ 0x2
   649                           
   650  0072                     __div_to_l_@f1:	
   651                           ; 4 bytes @ 0x2
   652                           
   653  0072                     ___fleq@ff1:	
   654                           ; 4 bytes @ 0x2
   655                           
   656  0072                     ___flge@ff1:	
   657                           ; 4 bytes @ 0x2
   658                           
   659  0072                     ___flneg@f1:	
   660                           ; 4 bytes @ 0x2
   661                           
   662  0072                     __tdiv_to_l_@f1:	
   663                           ; 4 bytes @ 0x2
   664                           
   665  0072                     ___llmod@divisor:	
   666                           ; 4 bytes @ 0x2
   667                           
   668                           
   669                           ; 4 bytes @ 0x2
   670  0072                     	ds	1
   671  0073                     ??_Lcd_Cmd:
   672  0073                     ??_Lcd_Write_Char:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     isdigit@c:	
   676                           ; 1 bytes @ 0x3
   677                           
   678                           
   679                           ; 1 bytes @ 0x3
   680  0073                     	ds	1
   681  0074                     ??_ReadADC:
   682  0074                     ??__Umul8_16:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0074                     Lcd_Write_Char@temp:	
   686                           ; 1 bytes @ 0x4
   687                           
   688  0074                     ReadADC@TempValue:	
   689                           ; 1 bytes @ 0x4
   690                           
   691  0074                     ___wmul@multiplicand:	
   692                           ; 2 bytes @ 0x4
   693                           
   694  0074                     ___awmod@dividend:	
   695                           ; 2 bytes @ 0x4
   696                           
   697  0074                     ___lwmod@dividend:	
   698                           ; 2 bytes @ 0x4
   699                           
   700                           
   701                           ; 2 bytes @ 0x4
   702  0074                     	ds	1
   703  0075                     Lcd_Cmd@a:
   704  0075                     Lcd_Write_Char@y:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 1 bytes @ 0x5
   709  0075                     	ds	1
   710  0076                     ??_Lcd_Clear:
   711  0076                     ?_Lcd_Set_Cursor:	
   712                           ; 1 bytes @ 0x6
   713                           
   714  0076                     ??_Lcd_Init:	
   715                           ; 1 bytes @ 0x6
   716                           
   717  0076                     ??___wmul:	
   718                           ; 1 bytes @ 0x6
   719                           
   720  0076                     ??___awmod:	
   721                           ; 1 bytes @ 0x6
   722                           
   723  0076                     ??___flneg:	
   724                           ; 1 bytes @ 0x6
   725                           
   726  0076                     ??___lwmod:	
   727                           ; 1 bytes @ 0x6
   728                           
   729  0076                     Lcd_Set_Cursor@b:	
   730                           ; 1 bytes @ 0x6
   731                           
   732  0076                     Lcd_Write_Char@a:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ___wmul@product:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     __Umul8_16@product:	
   739                           ; 2 bytes @ 0x6
   740                           
   741  0076                     ___lldiv@dividend:	
   742                           ; 2 bytes @ 0x6
   743                           
   744  0076                     __div_to_l_@f2:	
   745                           ; 4 bytes @ 0x6
   746                           
   747  0076                     ___fleq@ff2:	
   748                           ; 4 bytes @ 0x6
   749                           
   750  0076                     ___flge@ff2:	
   751                           ; 4 bytes @ 0x6
   752                           
   753  0076                     __tdiv_to_l_@f2:	
   754                           ; 4 bytes @ 0x6
   755                           
   756  0076                     ___llmod@dividend:	
   757                           ; 4 bytes @ 0x6
   758                           
   759                           
   760                           ; 4 bytes @ 0x6
   761  0076                     	ds	1
   762  0077                     ??_Lcd_Set_Cursor:
   763  0077                     ?_Lcd_Write_String:	
   764                           ; 1 bytes @ 0x7
   765                           
   766  0077                     ___awmod@counter:	
   767                           ; 1 bytes @ 0x7
   768                           
   769  0077                     ___lwmod@counter:	
   770                           ; 1 bytes @ 0x7
   771                           
   772  0077                     Lcd_Write_String@a:	
   773                           ; 1 bytes @ 0x7
   774                           
   775                           
   776                           ; 2 bytes @ 0x7
   777  0077                     	ds	1
   778  0078                     ?___lwdiv:
   779  0078                     ___awmod@sign:	
   780                           ; 2 bytes @ 0x8
   781                           
   782  0078                     ___lwdiv@divisor:	
   783                           ; 1 bytes @ 0x8
   784                           
   785  0078                     __Umul8_16@word_mpld:	
   786                           ; 2 bytes @ 0x8
   787                           
   788                           
   789                           ; 2 bytes @ 0x8
   790  0078                     	ds	1
   791  0079                     ??_Lcd_Write_String:
   792  0079                     ??___awdiv:	
   793                           ; 1 bytes @ 0x9
   794                           
   795                           
   796                           ; 1 bytes @ 0x9
   797  0079                     	ds	1
   798  007A                     ??__div_to_l_:
   799  007A                     ??___lldiv:	
   800                           ; 1 bytes @ 0xA
   801                           
   802  007A                     ??___llmod:	
   803                           ; 1 bytes @ 0xA
   804                           
   805  007A                     __Umul8_16@multiplier:	
   806                           ; 1 bytes @ 0xA
   807                           
   808  007A                     ___lwdiv@dividend:	
   809                           ; 1 bytes @ 0xA
   810                           
   811                           
   812                           ; 2 bytes @ 0xA
   813  007A                     	ds	1
   814  007B                     ___llmod@counter:
   815                           
   816                           ; 1 bytes @ 0xB
   817  007B                     	ds	1
   818  007C                     ??___flsub:
   819                           
   820                           	psect	cstackBANK0
   821  0020                     __pcstackBANK0:	
   822                           ; 1 bytes @ 0xC
   823                           
   824  0020                     ??__tdiv_to_l_:
   825  0020                     ??___fleq:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0020                     ??___flge:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0020                     ??___lwdiv:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0020                     ?___awdiv:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0020                     Lcd_Set_Cursor@a:	
   838                           ; 2 bytes @ 0x0
   839                           
   840  0020                     Lcd_Write_String@i:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0020                     ___awdiv@divisor:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0020                     ___lldiv@quotient:	
   847                           ; 2 bytes @ 0x0
   848                           
   849  0020                     __div_to_l_@quot:	
   850                           ; 4 bytes @ 0x0
   851                           
   852                           
   853                           ; 4 bytes @ 0x0
   854  0020                     	ds	1
   855  0021                     Lcd_Set_Cursor@z:
   856  0021                     ___lwdiv@quotient:	
   857                           ; 1 bytes @ 0x1
   858                           
   859                           
   860                           ; 2 bytes @ 0x1
   861  0021                     	ds	1
   862  0022                     Lcd_Set_Cursor@y:
   863  0022                     ___awdiv@dividend:	
   864                           ; 1 bytes @ 0x2
   865                           
   866                           
   867                           ; 2 bytes @ 0x2
   868  0022                     	ds	1
   869  0023                     Lcd_Set_Cursor@temp:
   870  0023                     ___lwdiv@counter:	
   871                           ; 1 bytes @ 0x3
   872                           
   873                           
   874                           ; 1 bytes @ 0x3
   875  0023                     	ds	1
   876  0024                     ?___xxtofl:
   877  0024                     ___lldiv@counter:	
   878                           ; 4 bytes @ 0x4
   879                           
   880  0024                     ___awdiv@counter:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0024                     __div_to_l_@cntr:	
   884                           ; 1 bytes @ 0x4
   885                           
   886  0024                     __tdiv_to_l_@quot:	
   887                           ; 1 bytes @ 0x4
   888                           
   889  0024                     ___xxtofl@val:	
   890                           ; 4 bytes @ 0x4
   891                           
   892                           
   893                           ; 4 bytes @ 0x4
   894  0024                     	ds	1
   895  0025                     ___awdiv@sign:
   896  0025                     __div_to_l_@exp1:	
   897                           ; 1 bytes @ 0x5
   898                           
   899                           
   900                           ; 1 bytes @ 0x5
   901  0025                     	ds	1
   902  0026                     ___awdiv@quotient:
   903                           
   904                           ; 2 bytes @ 0x6
   905  0026                     	ds	2
   906  0028                     ??___xxtofl:
   907  0028                     __tdiv_to_l_@cntr:	
   908                           ; 1 bytes @ 0x8
   909                           
   910                           
   911                           ; 1 bytes @ 0x8
   912  0028                     	ds	1
   913  0029                     __tdiv_to_l_@exp1:
   914                           
   915                           ; 1 bytes @ 0x9
   916  0029                     	ds	3
   917  002C                     ___xxtofl@sign:
   918                           
   919                           ; 1 bytes @ 0xC
   920  002C                     	ds	1
   921  002D                     ___xxtofl@exp:
   922                           
   923                           ; 1 bytes @ 0xD
   924  002D                     	ds	1
   925  002E                     ___xxtofl@arg:
   926                           
   927                           ; 4 bytes @ 0xE
   928  002E                     	ds	4
   929  0032                     ?___flmul:
   930  0032                     ___flmul@b:	
   931                           ; 4 bytes @ 0x12
   932                           
   933                           
   934                           ; 4 bytes @ 0x12
   935  0032                     	ds	4
   936  0036                     ___flmul@a:
   937                           
   938                           ; 4 bytes @ 0x16
   939  0036                     	ds	4
   940  003A                     ??___flmul:
   941                           
   942                           ; 1 bytes @ 0x1A
   943  003A                     	ds	5
   944  003F                     ___flmul@sign:
   945                           
   946                           ; 1 bytes @ 0x1F
   947  003F                     	ds	1
   948  0040                     ___flmul@grs:
   949                           
   950                           ; 4 bytes @ 0x20
   951  0040                     	ds	4
   952  0044                     ___flmul@aexp:
   953                           
   954                           ; 1 bytes @ 0x24
   955  0044                     	ds	1
   956  0045                     ___flmul@bexp:
   957                           
   958                           ; 1 bytes @ 0x25
   959  0045                     	ds	1
   960  0046                     ___flmul@prod:
   961                           
   962                           ; 4 bytes @ 0x26
   963  0046                     	ds	4
   964  004A                     ___flmul@temp:
   965                           
   966                           ; 2 bytes @ 0x2A
   967  004A                     	ds	2
   968  004C                     ?_fround:
   969  004C                     ?_scale:	
   970                           ; 4 bytes @ 0x2C
   971                           
   972                           
   973                           ; 4 bytes @ 0x2C
   974  004C                     	ds	4
   975  0050                     ??_fround:
   976  0050                     ??_scale:	
   977                           ; 1 bytes @ 0x30
   978                           
   979                           
   980                           ; 1 bytes @ 0x30
   981  0050                     	ds	7
   982  0057                     _fround$898:
   983                           
   984                           ; 4 bytes @ 0x37
   985  0057                     	ds	3
   986  005A                     _scale$899:
   987                           
   988                           ; 4 bytes @ 0x3A
   989  005A                     	ds	1
   990  005B                     _fround$897:
   991                           
   992                           ; 4 bytes @ 0x3B
   993  005B                     	ds	3
   994  005E                     scale@scl:
   995                           
   996                           ; 1 bytes @ 0x3E
   997  005E                     	ds	1
   998  005F                     ?___fltol:
   999  005F                     fround@prec:	
  1000                           ; 4 bytes @ 0x3F
  1001                           
  1002  005F                     ___fltol@f1:	
  1003                           ; 1 bytes @ 0x3F
  1004                           
  1005                           
  1006                           ; 4 bytes @ 0x3F
  1007  005F                     	ds	1
  1008  0060                     ?___fladd:
  1009  0060                     ___fladd@b:	
  1010                           ; 4 bytes @ 0x40
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x40
  1014  0060                     	ds	3
  1015  0063                     ??___fltol:
  1016                           
  1017                           ; 1 bytes @ 0x43
  1018  0063                     	ds	1
  1019  0064                     ___fladd@a:
  1020                           
  1021                           ; 4 bytes @ 0x44
  1022  0064                     	ds	4
  1023  0068                     ??___fladd:
  1024  0068                     ___fltol@sign1:	
  1025                           ; 1 bytes @ 0x48
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x48
  1029  0068                     	ds	1
  1030  0069                     ___fltol@exp1:
  1031                           
  1032                           ; 1 bytes @ 0x49
  1033  0069                     	ds	7
  1034                           
  1035                           	psect	maintext
  1036  0687                     __pmaintext:	
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 34 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  str            20   51[BANK1 ] unsigned char [20]
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  2   99[None  ] int 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : B00/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       0      20       0       0
  1058 ;;      Temps:          0       0       4       0       0
  1059 ;;      Totals:         0       0      24       0       0
  1060 ;;Total ram usage:       24 bytes
  1061 ;; Hardware stack levels required when called:    5
  1062 ;; This function calls:
  1063 ;;		_ADCinit
  1064 ;;		_Lcd_Clear
  1065 ;;		_Lcd_Init
  1066 ;;		_Lcd_Set_Cursor
  1067 ;;		_Lcd_Write_String
  1068 ;;		_ReadADC
  1069 ;;		___flmul
  1070 ;;		___fltol
  1071 ;;		___lwdiv
  1072 ;;		___xxtofl
  1073 ;;		_sprintf
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _main
  1081  0687                     _main:
  1082  0687                     l3237:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1085                           
  1086                           
  1087                           ;main.c: 36:             _delay((unsigned long)((5)*(8000000/4000.0)));;main.c: 39:     
      +                              }
  1088  0687  160A  158A  23AA  120A  118A  	fcall	_ADCinit
  1089  068C                     l3239:
  1090                           
  1091                           ;main.c: 40: 
  1092  068C  1683               	bsf	3,5	;RP0=1, select bank1
  1093  068D  1303               	bcf	3,6	;RP1=0, select bank1
  1094  068E  1405               	bsf	5,0	;volatile
  1095  068F                     l3241:
  1096                           
  1097                           ;main.c: 43:         temp = voltage / 10;
  1098  068F  0188               	clrf	8	;volatile
  1099  0690                     l3243:
  1100                           
  1101                           ;main.c: 44:         sprintf(str, "Nhiet do = %.1f ", temp);
  1102  0690  160A  158A  2697  120A  118A  	fcall	_Lcd_Init
  1103  0695                     l3245:
  1104                           
  1105                           ;main.c: 47:         Lcd_Set_Cursor(1,1);
  1106  0695  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0696  1303               	bcf	3,6	;RP1=0, select bank1
  1108  0697  1406               	bsf	6,0	;volatile
  1109  0698                     l3247:
  1110                           
  1111                           ;main.c: 48:         Lcd_Write_String(str);
  1112  0698  1008               	bcf	8,0	;volatile
  1113  0699                     l3249:
  1114                           
  1115                           ;main.c: 49:         Lcd_Write_String(" ");
  1116  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1117  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1118  069B  1008               	bcf	8,0	;volatile
  1119  069C                     l3251:
  1120                           
  1121                           ;main.c: 52:     }
  1122  069C  178B               	bsf	11,7	;volatile
  1123  069D                     l3253:
  1124                           
  1125                           ;main.c: 53:     return 0;
  1126  069D  1683               	bsf	3,5	;RP0=1, select bank1
  1127  069E  1303               	bcf	3,6	;RP1=0, select bank1
  1128  069F  1701               	bsf	1,6	;volatile
  1129  06A0                     l3255:
  1130                           
  1131                           ;main.c: 54: }
  1132  06A0  160B               	bsf	11,4	;volatile
  1133  06A1                     l3257:
  1134                           
  1135                           ;main.c: 57: {;main.c: 58: 
  1136  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  1137  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  1138  06A3  0367               	decf	_ZC^(0+128),w
  1139  06A4  0468               	iorwf	(_ZC+1)^(0+128),w
  1140  06A5  1D03               	btfss	3,2
  1141  06A6  2EA8               	goto	u5451
  1142  06A7  2EA9               	goto	u5450
  1143  06A8                     u5451:
  1144  06A8  2EC8               	goto	l3267
  1145  06A9                     u5450:
  1146  06A9                     l3259:
  1147                           
  1148                           ;main.c: 59:     ADCON1bits.ADCS2 = 0, ADCON0bits.ADCS1 = 0,ADCON0bits.ADCS0 = 1;
  1149  06A9  3006               	movlw	6
  1150  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  1151  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  1152  06AC  00D0               	movwf	(??_main^(0+128)+1)
  1153  06AD  302F               	movlw	47
  1154  06AE  00CF               	movwf	??_main^(0+128)
  1155  06AF                     u5477:
  1156  06AF  0BCF               	decfsz	??_main^(0+128),f
  1157  06B0  2EAF               	goto	u5477
  1158  06B1  0BD0               	decfsz	(??_main^(0+128)+1),f
  1159  06B2  2EAF               	goto	u5477
  1160  06B3  2EB4               	nop2
  1161  06B4                     l3261:
  1162                           
  1163                           ;main.c: 60: 
  1164  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1165  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1166  06B6  1408               	bsf	8,0	;volatile
  1167                           
  1168                           ;main.c: 61:     ADCON0bits.CHS2 = 0, ADCON0bits.CHS1 = 0, ADCON0bits.CHS0 = 0;
  1169  06B7  300D               	movlw	13
  1170  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  1171  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  1172  06BA  00D0               	movwf	(??_main^(0+128)+1)
  1173  06BB  30FB               	movlw	251
  1174  06BC  00CF               	movwf	??_main^(0+128)
  1175  06BD                     u5487:
  1176  06BD  0BCF               	decfsz	??_main^(0+128),f
  1177  06BE  2EBD               	goto	u5487
  1178  06BF  0BD0               	decfsz	(??_main^(0+128)+1),f
  1179  06C0  2EBD               	goto	u5487
  1180  06C1                     l3263:
  1181                           
  1182                           ;main.c: 62: 
  1183  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1184  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1185  06C3  1008               	bcf	8,0	;volatile
  1186  06C4                     l3265:
  1187                           
  1188                           ;main.c: 63:     ADCON1bits.ADFM = 1;
  1189  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  1190  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  1191  06C6  01E7               	clrf	_ZC^(0+128)
  1192  06C7  01E8               	clrf	(_ZC+1)^(0+128)
  1193  06C8                     l3267:
  1194                           
  1195                           ;main.c: 66: 
  1196  06C8  160A  158A  2386  120A  118A  	fcall	_ReadADC
  1197  06CD  0873               	movf	?_ReadADC+1,w
  1198  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  1199  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  1200  06D0  00EC               	movwf	(_ADCvalue+1)^(0+128)
  1201  06D1  0872               	movf	?_ReadADC,w
  1202  06D2  00EB               	movwf	_ADCvalue^(0+128)
  1203  06D3                     l3269:
  1204                           
  1205                           ;main.c: 67:     ADCON0bits.ADON = 1;
  1206  06D3  086B               	movf	_ADCvalue^(0+128),w
  1207  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1208  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1209  06D6  00A4               	movwf	___xxtofl@val
  1210  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  1211  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  1212  06D9  086C               	movf	(_ADCvalue+1)^(0+128),w
  1213  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1214  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1215  06DC  00A5               	movwf	___xxtofl@val+1
  1216  06DD  01A6               	clrf	___xxtofl@val+2
  1217  06DE  01A7               	clrf	___xxtofl@val+3
  1218  06DF  3000               	movlw	0
  1219  06E0  160A  118A  213C  120A  118A  	fcall	___xxtofl
  1220  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1221  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1222  06E7  0827               	movf	?___xxtofl+3,w
  1223  06E8  00B9               	movwf	___flmul@a+3
  1224  06E9  0826               	movf	?___xxtofl+2,w
  1225  06EA  00B8               	movwf	___flmul@a+2
  1226  06EB  0825               	movf	?___xxtofl+1,w
  1227  06EC  00B7               	movwf	___flmul@a+1
  1228  06ED  0824               	movf	?___xxtofl,w
  1229  06EE  00B6               	movwf	___flmul@a
  1230  06EF  3040               	movlw	64
  1231  06F0  00B5               	movwf	___flmul@b+3
  1232  06F1  309C               	movlw	156
  1233  06F2  00B4               	movwf	___flmul@b+2
  1234  06F3  3067               	movlw	103
  1235  06F4  00B3               	movwf	___flmul@b+1
  1236  06F5  301A               	movlw	26
  1237  06F6  00B2               	movwf	___flmul@b
  1238  06F7  120A  158A  213C  120A  118A  	fcall	___flmul
  1239  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1240  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1241  06FE  0835               	movf	?___flmul+3,w
  1242  06FF  00E2               	movwf	___fltol@f1+3
  1243  0700  0834               	movf	?___flmul+2,w
  1244  0701  00E1               	movwf	___fltol@f1+2
  1245  0702  0833               	movf	?___flmul+1,w
  1246  0703  00E0               	movwf	___fltol@f1+1
  1247  0704  0832               	movf	?___flmul,w
  1248  0705  00DF               	movwf	___fltol@f1
  1249  0706  120A  158A  2002  120A  118A  	fcall	___fltol
  1250  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1251  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1252  070D  0860               	movf	?___fltol+1,w
  1253  070E  1683               	bsf	3,5	;RP0=1, select bank1
  1254  070F  1303               	bcf	3,6	;RP1=0, select bank1
  1255  0710  00EA               	movwf	(_voltage+1)^(0+128)
  1256  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0713  085F               	movf	?___fltol,w
  1259  0714  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0715  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0716  00E9               	movwf	_voltage^(0+128)
  1262  0717                     l3271:
  1263                           
  1264                           ;main.c: 68: }
  1265  0717  086A               	movf	(_voltage+1)^(0+128),w
  1266  0718  00FB               	movwf	___lwdiv@dividend+1
  1267  0719  0869               	movf	_voltage^(0+128),w
  1268  071A  00FA               	movwf	___lwdiv@dividend
  1269  071B  300A               	movlw	10
  1270  071C  00F8               	movwf	___lwdiv@divisor
  1271  071D  3000               	movlw	0
  1272  071E  00F9               	movwf	___lwdiv@divisor+1
  1273  071F  160A  158A  24AC  120A  118A  	fcall	___lwdiv
  1274  0724  0878               	movf	?___lwdiv,w
  1275  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0727  00CF               	movwf	??_main^(0+128)
  1278  0728  0879               	movf	?___lwdiv+1,w
  1279  0729  00D0               	movwf	(??_main^(0+128)+1)
  1280  072A  01D1               	clrf	(??_main^(0+128)+2)
  1281  072B  01D2               	clrf	(??_main^(0+128)+3)
  1282  072C  0852               	movf	(??_main+3)^(0+128),w
  1283  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1284  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1285  072F  00A7               	movwf	___xxtofl@val+3
  1286  0730  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0731  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0732  0851               	movf	(??_main+2)^(0+128),w
  1289  0733  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0734  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0735  00A6               	movwf	___xxtofl@val+2
  1292  0736  1683               	bsf	3,5	;RP0=1, select bank1
  1293  0737  1303               	bcf	3,6	;RP1=0, select bank1
  1294  0738  0850               	movf	(??_main+1)^(0+128),w
  1295  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1296  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1297  073B  00A5               	movwf	___xxtofl@val+1
  1298  073C  1683               	bsf	3,5	;RP0=1, select bank1
  1299  073D  1303               	bcf	3,6	;RP1=0, select bank1
  1300  073E  084F               	movf	??_main^(0+128),w
  1301  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0741  00A4               	movwf	___xxtofl@val
  1304  0742  3000               	movlw	0
  1305  0743  160A  118A  213C  120A  118A  	fcall	___xxtofl
  1306  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1308  074A  0827               	movf	?___xxtofl+3,w
  1309  074B  1683               	bsf	3,5	;RP0=1, select bank3
  1310  074C  1703               	bsf	3,6	;RP1=1, select bank3
  1311  074D  0093               	movwf	(_temp+3)^(0+384)
  1312  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1313  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0750  0826               	movf	?___xxtofl+2,w
  1315  0751  1683               	bsf	3,5	;RP0=1, select bank3
  1316  0752  1703               	bsf	3,6	;RP1=1, select bank3
  1317  0753  0092               	movwf	(_temp+2)^(0+384)
  1318  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0756  0825               	movf	?___xxtofl+1,w
  1321  0757  1683               	bsf	3,5	;RP0=1, select bank3
  1322  0758  1703               	bsf	3,6	;RP1=1, select bank3
  1323  0759  0091               	movwf	(_temp+1)^(0+384)
  1324  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1325  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1326  075C  0824               	movf	?___xxtofl,w
  1327  075D  1683               	bsf	3,5	;RP0=1, select bank3
  1328  075E  1703               	bsf	3,6	;RP1=1, select bank3
  1329  075F  0090               	movwf	_temp^(0+384)
  1330  0760                     l3273:
  1331                           
  1332                           ;main.c: 69: 
  1333  0760  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1334  0761  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0762  1303               	bcf	3,6	;RP1=0, select bank1
  1336  0763  00CF               	movwf	??_main^(0+128)
  1337  0764  084F               	movf	??_main^(0+128),w
  1338  0765  00AC               	movwf	sprintf@f^(0+128)
  1339  0766  1683               	bsf	3,5	;RP0=1, select bank3
  1340  0767  1703               	bsf	3,6	;RP1=1, select bank3
  1341  0768  0813               	movf	(_temp+3)^(0+384),w
  1342  0769  1683               	bsf	3,5	;RP0=1, select bank1
  1343  076A  1303               	bcf	3,6	;RP1=0, select bank1
  1344  076B  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  1345  076C  1683               	bsf	3,5	;RP0=1, select bank3
  1346  076D  1703               	bsf	3,6	;RP1=1, select bank3
  1347  076E  0812               	movf	(_temp+2)^(0+384),w
  1348  076F  1683               	bsf	3,5	;RP0=1, select bank1
  1349  0770  1303               	bcf	3,6	;RP1=0, select bank1
  1350  0771  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  1351  0772  1683               	bsf	3,5	;RP0=1, select bank3
  1352  0773  1703               	bsf	3,6	;RP1=1, select bank3
  1353  0774  0811               	movf	(_temp+1)^(0+384),w
  1354  0775  1683               	bsf	3,5	;RP0=1, select bank1
  1355  0776  1303               	bcf	3,6	;RP1=0, select bank1
  1356  0777  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  1357  0778  1683               	bsf	3,5	;RP0=1, select bank3
  1358  0779  1703               	bsf	3,6	;RP1=1, select bank3
  1359  077A  0810               	movf	_temp^(0+384),w
  1360  077B  1683               	bsf	3,5	;RP0=1, select bank1
  1361  077C  1303               	bcf	3,6	;RP1=0, select bank1
  1362  077D  00AD               	movwf	(?_sprintf^(0+128)+1)
  1363  077E  30D3               	movlw	(low (main@str| 0))& (0+255)
  1364  077F  120A  118A  2021  120A  118A  	fcall	_sprintf
  1365  0784                     l3275:
  1366                           
  1367                           ;main.c: 71: {
  1368  0784  160A  158A  2367  120A  118A  	fcall	_Lcd_Clear
  1369  0789                     l3277:
  1370                           
  1371                           ;main.c: 72:     unsigned int TempValue = 0;
  1372  0789  01F6               	clrf	Lcd_Set_Cursor@b
  1373  078A  0AF6               	incf	Lcd_Set_Cursor@b,f
  1374  078B  3001               	movlw	1
  1375  078C  160A  158A  25E6  120A  118A  	fcall	_Lcd_Set_Cursor
  1376  0791                     l3279:
  1377                           
  1378                           ;main.c: 73:     ADCON0bits.GO_nDONE = 1;
  1379  0791  30D3               	movlw	(low (main@str| 0))& (0+255)
  1380  0792  00F7               	movwf	Lcd_Write_String@a
  1381  0793  3000               	movlw	0
  1382  0794  00F8               	movwf	Lcd_Write_String@a+1
  1383  0795  160A  158A  2466  120A  118A  	fcall	_Lcd_Write_String
  1384  079A                     l3281:
  1385                           
  1386                           ;main.c: 74:     while(ADCON0bits.GO_nDONE);
  1387  079A  30A0               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  1388  079B  00F7               	movwf	Lcd_Write_String@a
  1389  079C  3080               	movlw	128
  1390  079D  00F8               	movwf	Lcd_Write_String@a+1
  1391  079E  160A  158A  2466  120A  118A  	fcall	_Lcd_Write_String
  1392  07A3                     l3283:
  1393                           
  1394                           ;main.c: 75:     TempValue = ADRESH*256 + ADRESL;
  1395  07A3  30A2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1396  07A4  00F7               	movwf	Lcd_Write_String@a
  1397  07A5  3080               	movlw	128
  1398  07A6  00F8               	movwf	Lcd_Write_String@a+1
  1399  07A7  160A  158A  2466  120A  118A  	fcall	_Lcd_Write_String
  1400  07AC                     l3285:
  1401                           
  1402                           ;main.c: 76:     return (TempValue);
  1403  07AC  300B               	movlw	11
  1404  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1405  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1406  07AF  00D1               	movwf	(??_main^(0+128)+2)
  1407  07B0  3026               	movlw	38
  1408  07B1  00D0               	movwf	(??_main^(0+128)+1)
  1409  07B2  305D               	movlw	93
  1410  07B3  00CF               	movwf	??_main^(0+128)
  1411  07B4                     u5497:
  1412  07B4  0BCF               	decfsz	??_main^(0+128),f
  1413  07B5  2FB4               	goto	u5497
  1414  07B6  0BD0               	decfsz	(??_main^(0+128)+1),f
  1415  07B7  2FB4               	goto	u5497
  1416  07B8  0BD1               	decfsz	(??_main^(0+128)+2),f
  1417  07B9  2FB4               	goto	u5497
  1418  07BA  2EA1               	goto	l3257
  1419  07BB  120A  118A  280C   	ljmp	start
  1420  07BE                     __end_of_main:
  1421                           
  1422                           	psect	text1
  1423  0021                     __ptext1:	
  1424 ;; *************** function _sprintf *****************
  1425 ;; Defined at:
  1426 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  sp              1    wreg     PTR unsigned char 
  1429 ;;		 -> main@str(20), 
  1430 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1431 ;;		 -> STR_1(17), 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1434 ;;		 -> main@str(20), 
  1435 ;;  fval            4   42[BANK1 ] PTR unsigned char 
  1436 ;;  tmpval          4   35[BANK1 ] struct .
  1437 ;;  val             4   29[BANK1 ] unsigned long 
  1438 ;;  prec            2   40[BANK1 ] int 
  1439 ;;  eexp            2   33[BANK1 ] int 
  1440 ;;  flag            2   27[BANK1 ] unsigned short 
  1441 ;;  cp              2    0        PTR const unsigned char 
  1442 ;;  len             2    0        unsigned int 
  1443 ;;  width           2    0        int 
  1444 ;;  c               1   46[BANK1 ] unsigned char 
  1445 ;;  ap              1   26[BANK1 ] PTR void [1]
  1446 ;;		 -> ?_sprintf(2), 
  1447 ;;  d               1    0        unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2   12[BANK1 ] int 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       5       0       0
  1458 ;;      Locals:         0       0      25       0       0
  1459 ;;      Temps:          0       0       5       0       0
  1460 ;;      Totals:         0       0      35       0       0
  1461 ;;Total ram usage:       35 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    4
  1464 ;; This function calls:
  1465 ;;		___awdiv
  1466 ;;		___fladd
  1467 ;;		___fleq
  1468 ;;		___flge
  1469 ;;		___flmul
  1470 ;;		___flneg
  1471 ;;		___flsub
  1472 ;;		___fltol
  1473 ;;		___lldiv
  1474 ;;		___llmod
  1475 ;;		___wmul
  1476 ;;		___xxtofl
  1477 ;;		__div_to_l_
  1478 ;;		__tdiv_to_l_
  1479 ;;		_fround
  1480 ;;		_isdigit
  1481 ;;		_scale
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _sprintf
  1489  0021                     _sprintf:
  1490                           
  1491                           ;incstack = 0
  1492                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1493                           ;sprintf@sp stored from wreg
  1494  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1495  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1496  0023  00C7               	movwf	sprintf@sp^(0+128)
  1497  0024                     l3027:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1500  0024  30AD               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1501  0025  00B1               	movwf	??_sprintf^(0+128)
  1502  0026  0831               	movf	??_sprintf^(0+128),w
  1503  0027  00BA               	movwf	sprintf@ap^(0+128)
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1506  0028  2E70               	goto	l3221
  1507  0029                     l3029:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1510  0029  3025               	movlw	37
  1511  002A  064E               	xorwf	sprintf@c^(0+128),w
  1512  002B  1903               	btfsc	3,2
  1513  002C  282E               	goto	u5101
  1514  002D  282F               	goto	u5100
  1515  002E                     u5101:
  1516  002E  283B               	goto	l3035
  1517  002F                     u5100:
  1518  002F                     l3031:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1521  002F  084E               	movf	sprintf@c^(0+128),w
  1522  0030  00B1               	movwf	??_sprintf^(0+128)
  1523  0031  0847               	movf	sprintf@sp^(0+128),w
  1524  0032  0084               	movwf	4
  1525  0033  0831               	movf	??_sprintf^(0+128),w
  1526  0034  1383               	bcf	3,7	;select IRP bank0
  1527  0035  0080               	movwf	0
  1528  0036                     l3033:
  1529  0036  3001               	movlw	1
  1530  0037  00B1               	movwf	??_sprintf^(0+128)
  1531  0038  0831               	movf	??_sprintf^(0+128),w
  1532  0039  07C7               	addwf	sprintf@sp^(0+128),f
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1535  003A  2E70               	goto	l3221
  1536  003B                     l3035:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1539  003B  01BB               	clrf	sprintf@flag^(0+128)
  1540  003C  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1541  003D                     l3037:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1544  003D  082C               	movf	sprintf@f^(0+128),w
  1545  003E  0084               	movwf	4
  1546  003F  160A  118A  200A  120A  118A  	fcall	stringdir
  1547  0044  3A2E               	xorlw	46
  1548  0045  1D03               	skipz
  1549  0046  2848               	goto	u5111
  1550  0047  2849               	goto	u5110
  1551  0048                     u5111:
  1552  0048  288E               	goto	l3053
  1553  0049                     u5110:
  1554  0049                     l3039:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1557  0049  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1558  004A                     l3041:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1561  004A  3001               	movlw	1
  1562  004B  00B1               	movwf	??_sprintf^(0+128)
  1563  004C  0831               	movf	??_sprintf^(0+128),w
  1564  004D  07AC               	addwf	sprintf@f^(0+128),f
  1565  004E                     l3043:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1568  004E  01C8               	clrf	sprintf@prec^(0+128)
  1569  004F  01C9               	clrf	(sprintf@prec+1)^(0+128)
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1572  0050  287D               	goto	l3051
  1573  0051                     l3045:
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1576  0051  300A               	movlw	10
  1577  0052  00F2               	movwf	___wmul@multiplier
  1578  0053  3000               	movlw	0
  1579  0054  00F3               	movwf	___wmul@multiplier+1
  1580  0055  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0056  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0057  0849               	movf	(sprintf@prec+1)^(0+128),w
  1583  0058  00F5               	movwf	___wmul@multiplicand+1
  1584  0059  0848               	movf	sprintf@prec^(0+128),w
  1585  005A  00F4               	movwf	___wmul@multiplicand
  1586  005B  160A  158A  23E1  120A  118A  	fcall	___wmul
  1587  0060  0873               	movf	?___wmul+1,w
  1588  0061  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0062  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0063  00C9               	movwf	(sprintf@prec+1)^(0+128)
  1591  0064  0872               	movf	?___wmul,w
  1592  0065  00C8               	movwf	sprintf@prec^(0+128)
  1593  0066                     l3047:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1596  0066  082C               	movf	sprintf@f^(0+128),w
  1597  0067  0084               	movwf	4
  1598  0068  160A  118A  200A  120A  118A  	fcall	stringdir
  1599  006D  3ED0               	addlw	208
  1600  006E  00B1               	movwf	??_sprintf^(0+128)
  1601  006F  30FF               	movlw	255
  1602  0070  1803               	skipnc
  1603  0071  3000               	movlw	0
  1604  0072  00B2               	movwf	(??_sprintf^(0+128)+1)
  1605  0073  0831               	movf	??_sprintf^(0+128),w
  1606  0074  07C8               	addwf	sprintf@prec^(0+128),f
  1607  0075  1803               	skipnc
  1608  0076  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  1609  0077  0832               	movf	(??_sprintf+1)^(0+128),w
  1610  0078  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  1611  0079                     l3049:
  1612  0079  3001               	movlw	1
  1613  007A  00B1               	movwf	??_sprintf^(0+128)
  1614  007B  0831               	movf	??_sprintf^(0+128),w
  1615  007C  07AC               	addwf	sprintf@f^(0+128),f
  1616  007D                     l3051:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1619  007D  082C               	movf	sprintf@f^(0+128),w
  1620  007E  0084               	movwf	4
  1621  007F  160A  118A  200A  120A  118A  	fcall	stringdir
  1622  0084  160A  158A  2398  120A  118A  	fcall	_isdigit
  1623  0089  1803               	btfsc	3,0
  1624  008A  288C               	goto	u5121
  1625  008B  288D               	goto	u5120
  1626  008C                     u5121:
  1627  008C  2851               	goto	l3045
  1628  008D                     u5120:
  1629  008D  2894               	goto	l3059
  1630  008E                     l3053:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1633  008E  01C8               	clrf	sprintf@prec^(0+128)
  1634  008F  01C9               	clrf	(sprintf@prec+1)^(0+128)
  1635  0090                     l3055:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1638  0090  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1639  0091  2894               	goto	l3059
  1640  0092                     l247:	
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1642                           
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1645  0092  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1648  0093  28B0               	goto	l3061
  1649  0094                     l3059:
  1650  0094  3001               	movlw	1
  1651  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1652  0096  1303               	bcf	3,6	;RP1=0, select bank1
  1653  0097  07AC               	addwf	sprintf@f^(0+128),f
  1654  0098  30FF               	movlw	-1
  1655  0099  072C               	addwf	sprintf@f^(0+128),w
  1656  009A  0084               	movwf	4
  1657  009B  160A  118A  200A  120A  118A  	fcall	stringdir
  1658  00A0  00CE               	movwf	sprintf@c^(0+128)
  1659  00A1  00B1               	movwf	??_sprintf^(0+128)
  1660  00A2  01B2               	clrf	(??_sprintf^(0+128)+1)
  1661                           
  1662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 1, Range of values is 0 to 0
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte            4     3 (average)
  1668                           ; direct_byte           11     8 (fixed)
  1669                           ; jumptable            260     6 (fixed)
  1670                           ;	Chosen strategy is simple_byte
  1671  00A3  0832               	movf	(??_sprintf+1)^(0+128),w
  1672  00A4  3A00               	xorlw	0	; case 0
  1673  00A5  1903               	skipnz
  1674  00A6  28A8               	goto	l3323
  1675  00A7  2E70               	goto	l3221
  1676  00A8                     l3323:
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 2, Range of values is 0 to 102
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte            7     4 (average)
  1683                           ; jumptable            260     6 (fixed)
  1684                           ;	Chosen strategy is simple_byte
  1685  00A8  0831               	movf	??_sprintf^(0+128),w
  1686  00A9  3A00               	xorlw	0	; case 0
  1687  00AA  1903               	skipnz
  1688  00AB  2E82               	goto	l3223
  1689  00AC  3A66               	xorlw	102	; case 102
  1690  00AD  1903               	skipnz
  1691  00AE  2892               	goto	l247
  1692  00AF  2E70               	goto	l3221
  1693  00B0                     l3061:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1696  00B0  3000               	movlw	0
  1697  00B1  053B               	andwf	sprintf@flag^(0+128),w
  1698  00B2  00B1               	movwf	??_sprintf^(0+128)
  1699  00B3  3007               	movlw	7
  1700  00B4  053C               	andwf	(sprintf@flag+1)^(0+128),w
  1701  00B5  00B2               	movwf	(??_sprintf+1)^(0+128)
  1702  00B6  0831               	movf	??_sprintf^(0+128),w
  1703  00B7  0432               	iorwf	(??_sprintf^(0+128)+1),w
  1704  00B8  1903               	btfsc	3,2
  1705  00B9  28BB               	goto	u5131
  1706  00BA  28BC               	goto	u5130
  1707  00BB                     u5131:
  1708  00BB  2E2B               	goto	l3203
  1709  00BC                     u5130:
  1710  00BC                     l3063:
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1713  00BC  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  1714  00BD  28BF               	goto	u5141
  1715  00BE  28C0               	goto	u5140
  1716  00BF                     u5141:
  1717  00BF  28C4               	goto	l3067
  1718  00C0                     u5140:
  1719  00C0                     l3065:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1722  00C0  3006               	movlw	6
  1723  00C1  00C8               	movwf	sprintf@prec^(0+128)
  1724  00C2  3000               	movlw	0
  1725  00C3  00C9               	movwf	(sprintf@prec^(0+128)+1)
  1726  00C4                     l3067:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1729  00C4  083A               	movf	sprintf@ap^(0+128),w
  1730  00C5  0084               	movwf	4
  1731  00C6  1383               	bcf	3,7	;select IRP bank0
  1732  00C7  0800               	movf	0,w
  1733  00C8  00CA               	movwf	sprintf@fval^(0+128)
  1734  00C9  0A84               	incf	4,f
  1735  00CA  0800               	movf	0,w
  1736  00CB  00CB               	movwf	(sprintf@fval+1)^(0+128)
  1737  00CC  0A84               	incf	4,f
  1738  00CD  0800               	movf	0,w
  1739  00CE  00CC               	movwf	(sprintf@fval+2)^(0+128)
  1740  00CF  0A84               	incf	4,f
  1741  00D0  0800               	movf	0,w
  1742  00D1  00CD               	movwf	(sprintf@fval+3)^(0+128)
  1743  00D2                     l3069:
  1744  00D2  3004               	movlw	4
  1745  00D3  00B1               	movwf	??_sprintf^(0+128)
  1746  00D4  0831               	movf	??_sprintf^(0+128),w
  1747  00D5  07BA               	addwf	sprintf@ap^(0+128),f
  1748  00D6                     l3071:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1751  00D6  084D               	movf	(sprintf@fval+3)^(0+128),w
  1752  00D7  00F5               	movwf	___flge@ff1+3
  1753  00D8  084C               	movf	(sprintf@fval+2)^(0+128),w
  1754  00D9  00F4               	movwf	___flge@ff1+2
  1755  00DA  084B               	movf	(sprintf@fval+1)^(0+128),w
  1756  00DB  00F3               	movwf	___flge@ff1+1
  1757  00DC  084A               	movf	sprintf@fval^(0+128),w
  1758  00DD  00F2               	movwf	___flge@ff1
  1759  00DE  3000               	movlw	0
  1760  00DF  00F9               	movwf	___flge@ff2+3
  1761  00E0  3000               	movlw	0
  1762  00E1  00F8               	movwf	___flge@ff2+2
  1763  00E2  3000               	movlw	0
  1764  00E3  00F7               	movwf	___flge@ff2+1
  1765  00E4  3000               	movlw	0
  1766  00E5  00F6               	movwf	___flge@ff2
  1767  00E6  160A  158A  275C  120A  118A  	fcall	___flge
  1768  00EB  1803               	btfsc	3,0
  1769  00EC  28EE               	goto	u5151
  1770  00ED  28EF               	goto	u5150
  1771  00EE                     u5151:
  1772  00EE  290C               	goto	l3077
  1773  00EF                     u5150:
  1774  00EF                     l3073:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1777  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1778  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1779  00F1  084D               	movf	(sprintf@fval+3)^(0+128),w
  1780  00F2  00F5               	movwf	___flneg@f1+3
  1781  00F3  084C               	movf	(sprintf@fval+2)^(0+128),w
  1782  00F4  00F4               	movwf	___flneg@f1+2
  1783  00F5  084B               	movf	(sprintf@fval+1)^(0+128),w
  1784  00F6  00F3               	movwf	___flneg@f1+1
  1785  00F7  084A               	movf	sprintf@fval^(0+128),w
  1786  00F8  00F2               	movwf	___flneg@f1
  1787  00F9  160A  158A  235C  120A  118A  	fcall	___flneg
  1788  00FE  0875               	movf	?___flneg+3,w
  1789  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0101  00CD               	movwf	(sprintf@fval+3)^(0+128)
  1792  0102  0874               	movf	?___flneg+2,w
  1793  0103  00CC               	movwf	(sprintf@fval+2)^(0+128)
  1794  0104  0873               	movf	?___flneg+1,w
  1795  0105  00CB               	movwf	(sprintf@fval+1)^(0+128)
  1796  0106  0872               	movf	?___flneg,w
  1797  0107  00CA               	movwf	sprintf@fval^(0+128)
  1798  0108                     l3075:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1801  0108  3003               	movlw	3
  1802  0109  04BB               	iorwf	sprintf@flag^(0+128),f
  1803  010A  3000               	movlw	0
  1804  010B  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  1805  010C                     l3077:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1808  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1809  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1810  010E  01C1               	clrf	sprintf@eexp^(0+128)
  1811  010F  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  1812  0110                     l3079:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1815  0110  084D               	movf	(sprintf@fval+3)^(0+128),w
  1816  0111  00F5               	movwf	___fleq@ff1+3
  1817  0112  084C               	movf	(sprintf@fval+2)^(0+128),w
  1818  0113  00F4               	movwf	___fleq@ff1+2
  1819  0114  084B               	movf	(sprintf@fval+1)^(0+128),w
  1820  0115  00F3               	movwf	___fleq@ff1+1
  1821  0116  084A               	movf	sprintf@fval^(0+128),w
  1822  0117  00F2               	movwf	___fleq@ff1
  1823  0118  3000               	movlw	0
  1824  0119  00F9               	movwf	___fleq@ff2+3
  1825  011A  3000               	movlw	0
  1826  011B  00F8               	movwf	___fleq@ff2+2
  1827  011C  3000               	movlw	0
  1828  011D  00F7               	movwf	___fleq@ff2+1
  1829  011E  3000               	movlw	0
  1830  011F  00F6               	movwf	___fleq@ff2
  1831  0120  160A  158A  24F2  120A  118A  	fcall	___fleq
  1832  0125  1803               	btfsc	3,0
  1833  0126  2928               	goto	u5161
  1834  0127  2929               	goto	u5160
  1835  0128                     u5161:
  1836  0128  2A29               	goto	l3105
  1837  0129                     u5160:
  1838  0129                     l3081:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1841  0129  1003               	clrc
  1842  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1843  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1844  012C  0D4C               	rlf	(sprintf@fval+2)^(0+128),w
  1845  012D  0D4D               	rlf	(sprintf@fval+3)^(0+128),w
  1846  012E  3E82               	addlw	130
  1847  012F  00C1               	movwf	sprintf@eexp^(0+128)
  1848  0130  30FF               	movlw	255
  1849  0131  1803               	skipnc
  1850  0132  3000               	movlw	0
  1851  0133  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  1852  0134                     l3083:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1855  0134  30FF               	movlw	255
  1856  0135  07C1               	addwf	sprintf@eexp^(0+128),f
  1857  0136  1803               	skipnc
  1858  0137  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  1859  0138  30FF               	movlw	255
  1860  0139  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  1861  013A                     l3085:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1864  013A  3003               	movlw	3
  1865  013B  00F2               	movwf	___wmul@multiplier
  1866  013C  3000               	movlw	0
  1867  013D  00F3               	movwf	___wmul@multiplier+1
  1868  013E  0842               	movf	(sprintf@eexp+1)^(0+128),w
  1869  013F  00F5               	movwf	___wmul@multiplicand+1
  1870  0140  0841               	movf	sprintf@eexp^(0+128),w
  1871  0141  00F4               	movwf	___wmul@multiplicand
  1872  0142  160A  158A  23E1  120A  118A  	fcall	___wmul
  1873  0147  0873               	movf	?___wmul+1,w
  1874  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1876  014A  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  1877  014B  0872               	movf	?___wmul,w
  1878  014C  00C1               	movwf	sprintf@eexp^(0+128)
  1879  014D                     l3087:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1882  014D  300A               	movlw	10
  1883  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1884  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0150  00A0               	movwf	___awdiv@divisor
  1886  0151  3000               	movlw	0
  1887  0152  00A1               	movwf	___awdiv@divisor+1
  1888  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0155  0842               	movf	(sprintf@eexp+1)^(0+128),w
  1891  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0158  00A3               	movwf	___awdiv@dividend+1
  1894  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1895  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1896  015B  0841               	movf	sprintf@eexp^(0+128),w
  1897  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1898  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1899  015E  00A2               	movwf	___awdiv@dividend
  1900  015F  160A  118A  20D3  120A  118A  	fcall	___awdiv
  1901  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0166  0821               	movf	?___awdiv+1,w
  1904  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0169  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  1907  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1908  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1909  016C  0820               	movf	?___awdiv,w
  1910  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1911  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1912  016F  00C1               	movwf	sprintf@eexp^(0+128)
  1913  0170                     l3089:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1916  0170  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  1917  0171  2973               	goto	u5171
  1918  0172  2974               	goto	u5170
  1919  0173                     u5171:
  1920  0173  297A               	goto	l3093
  1921  0174                     u5170:
  1922  0174                     l3091:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1925  0174  30FF               	movlw	255
  1926  0175  07C1               	addwf	sprintf@eexp^(0+128),f
  1927  0176  1803               	skipnc
  1928  0177  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  1929  0178  30FF               	movlw	255
  1930  0179  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  1931  017A                     l3093:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1934  017A  0341               	decf	sprintf@eexp^(0+128),w
  1935  017B  3AFF               	xorlw	255
  1936  017C  120A  158A  249D  120A  118A  	fcall	_scale
  1937  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0183  084F               	movf	?_scale+3,w
  1940  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1941  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1942  0186  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  1943  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0189  084E               	movf	?_scale+2,w
  1946  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1947  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1948  018C  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  1949  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1950  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1951  018F  084D               	movf	?_scale+1,w
  1952  0190  1683               	bsf	3,5	;RP0=1, select bank1
  1953  0191  1303               	bcf	3,6	;RP1=0, select bank1
  1954  0192  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  1955  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0195  084C               	movf	?_scale,w
  1958  0196  1683               	bsf	3,5	;RP0=1, select bank1
  1959  0197  1303               	bcf	3,6	;RP1=0, select bank1
  1960  0198  00C3               	movwf	sprintf@tmpval^(0+128)
  1961  0199                     l3095:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1964  0199  084D               	movf	(sprintf@fval+3)^(0+128),w
  1965  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1966  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1967  019C  00B5               	movwf	___flmul@b+3
  1968  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1969  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1970  019F  084C               	movf	(sprintf@fval+2)^(0+128),w
  1971  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1972  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1973  01A2  00B4               	movwf	___flmul@b+2
  1974  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1975  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1976  01A5  084B               	movf	(sprintf@fval+1)^(0+128),w
  1977  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1978  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1979  01A8  00B3               	movwf	___flmul@b+1
  1980  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1981  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1982  01AB  084A               	movf	sprintf@fval^(0+128),w
  1983  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1984  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1985  01AE  00B2               	movwf	___flmul@b
  1986  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1987  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1988  01B1  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  1989  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1990  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1991  01B4  00B9               	movwf	___flmul@a+3
  1992  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1993  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1994  01B7  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  1995  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1996  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1997  01BA  00B8               	movwf	___flmul@a+2
  1998  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1999  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2000  01BD  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2001  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2002  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2003  01C0  00B7               	movwf	___flmul@a+1
  2004  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2005  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2006  01C3  0843               	movf	sprintf@tmpval^(0+128),w
  2007  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2008  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2009  01C6  00B6               	movwf	___flmul@a
  2010  01C7  120A  158A  213C  120A  118A  	fcall	___flmul
  2011  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2012  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2013  01CE  0835               	movf	?___flmul+3,w
  2014  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2015  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  2016  01D1  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2017  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2018  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2019  01D4  0834               	movf	?___flmul+2,w
  2020  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2021  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2022  01D7  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2023  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2024  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2025  01DA  0833               	movf	?___flmul+1,w
  2026  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2027  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  2028  01DD  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2029  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2030  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2031  01E0  0832               	movf	?___flmul,w
  2032  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  2033  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  2034  01E3  00C3               	movwf	sprintf@tmpval^(0+128)
  2035  01E4                     l3097:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2038  01E4  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2039  01E5  00F5               	movwf	___flge@ff1+3
  2040  01E6  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2041  01E7  00F4               	movwf	___flge@ff1+2
  2042  01E8  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2043  01E9  00F3               	movwf	___flge@ff1+1
  2044  01EA  0843               	movf	sprintf@tmpval^(0+128),w
  2045  01EB  00F2               	movwf	___flge@ff1
  2046  01EC  303F               	movlw	63
  2047  01ED  00F9               	movwf	___flge@ff2+3
  2048  01EE  3080               	movlw	128
  2049  01EF  00F8               	movwf	___flge@ff2+2
  2050  01F0  3000               	movlw	0
  2051  01F1  00F7               	movwf	___flge@ff2+1
  2052  01F2  3000               	movlw	0
  2053  01F3  00F6               	movwf	___flge@ff2
  2054  01F4  160A  158A  275C  120A  118A  	fcall	___flge
  2055  01F9  1803               	btfsc	3,0
  2056  01FA  29FC               	goto	u5181
  2057  01FB  29FD               	goto	u5180
  2058  01FC                     u5181:
  2059  01FC  2A06               	goto	l3101
  2060  01FD                     u5180:
  2061  01FD                     l3099:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2064  01FD  30FF               	movlw	255
  2065  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2066  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2067  0200  07C1               	addwf	sprintf@eexp^(0+128),f
  2068  0201  1803               	skipnc
  2069  0202  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2070  0203  30FF               	movlw	255
  2071  0204  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2072  0205  2A29               	goto	l3105
  2073  0206                     l3101:
  2074  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2076  0208  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2077  0209  00F5               	movwf	___flge@ff1+3
  2078  020A  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2079  020B  00F4               	movwf	___flge@ff1+2
  2080  020C  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2081  020D  00F3               	movwf	___flge@ff1+1
  2082  020E  0843               	movf	sprintf@tmpval^(0+128),w
  2083  020F  00F2               	movwf	___flge@ff1
  2084  0210  3041               	movlw	65
  2085  0211  00F9               	movwf	___flge@ff2+3
  2086  0212  3020               	movlw	32
  2087  0213  00F8               	movwf	___flge@ff2+2
  2088  0214  3000               	movlw	0
  2089  0215  00F7               	movwf	___flge@ff2+1
  2090  0216  3000               	movlw	0
  2091  0217  00F6               	movwf	___flge@ff2
  2092  0218  160A  158A  275C  120A  118A  	fcall	___flge
  2093  021D  1C03               	btfss	3,0
  2094  021E  2A20               	goto	u5191
  2095  021F  2A21               	goto	u5190
  2096  0220                     u5191:
  2097  0220  2A29               	goto	l3105
  2098  0221                     u5190:
  2099  0221                     l3103:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2102  0221  3001               	movlw	1
  2103  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2104  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2105  0224  07C1               	addwf	sprintf@eexp^(0+128),f
  2106  0225  1803               	skipnc
  2107  0226  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2108  0227  3000               	movlw	0
  2109  0228  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2110  0229                     l3105:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2113  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2114  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2115  022B  0849               	movf	(sprintf@prec+1)^(0+128),w
  2116  022C  3A80               	xorlw	128
  2117  022D  00FF               	movwf	btemp+1
  2118  022E  3080               	movlw	128
  2119  022F  027F               	subwf	btemp+1,w
  2120  0230  1D03               	skipz
  2121  0231  2A34               	goto	u5205
  2122  0232  300D               	movlw	13
  2123  0233  0248               	subwf	sprintf@prec^(0+128),w
  2124  0234                     u5205:
  2125  0234  1803               	skipnc
  2126  0235  2A37               	goto	u5201
  2127  0236  2A38               	goto	u5200
  2128  0237                     u5201:
  2129  0237  2A7F               	goto	l3109
  2130  0238                     u5200:
  2131  0238                     l3107:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2134  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2135  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2136  023A  0848               	movf	sprintf@prec^(0+128),w
  2137  023B  160A  118A  22B5  120A  118A  	fcall	_fround
  2138  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0242  084F               	movf	?_fround+3,w
  2141  0243  00E3               	movwf	___fladd@b+3
  2142  0244  084E               	movf	?_fround+2,w
  2143  0245  00E2               	movwf	___fladd@b+2
  2144  0246  084D               	movf	?_fround+1,w
  2145  0247  00E1               	movwf	___fladd@b+1
  2146  0248  084C               	movf	?_fround,w
  2147  0249  00E0               	movwf	___fladd@b
  2148  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2149  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2150  024C  084D               	movf	(sprintf@fval+3)^(0+128),w
  2151  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2152  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2153  024F  00E7               	movwf	___fladd@a+3
  2154  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2155  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2156  0252  084C               	movf	(sprintf@fval+2)^(0+128),w
  2157  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0255  00E6               	movwf	___fladd@a+2
  2160  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2161  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2162  0258  084B               	movf	(sprintf@fval+1)^(0+128),w
  2163  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2164  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2165  025B  00E5               	movwf	___fladd@a+1
  2166  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2167  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2168  025E  084A               	movf	sprintf@fval^(0+128),w
  2169  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0261  00E4               	movwf	___fladd@a
  2172  0262  160A  118A  24C0  120A  118A  	fcall	___fladd
  2173  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0269  0863               	movf	?___fladd+3,w
  2176  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2177  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2178  026C  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2179  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2180  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2181  026F  0862               	movf	?___fladd+2,w
  2182  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2183  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0272  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2185  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0275  0861               	movf	?___fladd+1,w
  2188  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0278  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2191  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2192  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2193  027B  0860               	movf	?___fladd,w
  2194  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2195  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2196  027E  00CA               	movwf	sprintf@fval^(0+128)
  2197  027F                     l3109:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2200  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2201  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2202  0281  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2203  0282  3A80               	xorlw	128
  2204  0283  00FF               	movwf	btemp+1
  2205  0284  3080               	movlw	128
  2206  0285  027F               	subwf	btemp+1,w
  2207  0286  1D03               	skipz
  2208  0287  2A8A               	goto	u5215
  2209  0288  300A               	movlw	10
  2210  0289  0241               	subwf	sprintf@eexp^(0+128),w
  2211  028A                     u5215:
  2212  028A  1803               	skipnc
  2213  028B  2A8D               	goto	u5211
  2214  028C  2A8E               	goto	u5210
  2215  028D                     u5211:
  2216  028D  2ADF               	goto	l3117
  2217  028E                     u5210:
  2218  028E                     l3111:
  2219  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2220  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0290  084D               	movf	(sprintf@fval+3)^(0+128),w
  2222  0291  00F5               	movwf	___fleq@ff1+3
  2223  0292  084C               	movf	(sprintf@fval+2)^(0+128),w
  2224  0293  00F4               	movwf	___fleq@ff1+2
  2225  0294  084B               	movf	(sprintf@fval+1)^(0+128),w
  2226  0295  00F3               	movwf	___fleq@ff1+1
  2227  0296  084A               	movf	sprintf@fval^(0+128),w
  2228  0297  00F2               	movwf	___fleq@ff1
  2229  0298  3000               	movlw	0
  2230  0299  00F9               	movwf	___fleq@ff2+3
  2231  029A  3000               	movlw	0
  2232  029B  00F8               	movwf	___fleq@ff2+2
  2233  029C  3000               	movlw	0
  2234  029D  00F7               	movwf	___fleq@ff2+1
  2235  029E  3000               	movlw	0
  2236  029F  00F6               	movwf	___fleq@ff2
  2237  02A0  160A  158A  24F2  120A  118A  	fcall	___fleq
  2238  02A5  1803               	btfsc	3,0
  2239  02A6  2AA8               	goto	u5221
  2240  02A7  2AA9               	goto	u5220
  2241  02A8                     u5221:
  2242  02A8  2B51               	goto	l3131
  2243  02A9                     u5220:
  2244  02A9                     l3113:
  2245  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2246  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2247  02AB  084D               	movf	(sprintf@fval+3)^(0+128),w
  2248  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2249  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2250  02AE  00E2               	movwf	___fltol@f1+3
  2251  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2252  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2253  02B1  084C               	movf	(sprintf@fval+2)^(0+128),w
  2254  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2255  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2256  02B4  00E1               	movwf	___fltol@f1+2
  2257  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2258  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2259  02B7  084B               	movf	(sprintf@fval+1)^(0+128),w
  2260  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2261  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2262  02BA  00E0               	movwf	___fltol@f1+1
  2263  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2264  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2265  02BD  084A               	movf	sprintf@fval^(0+128),w
  2266  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2267  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2268  02C0  00DF               	movwf	___fltol@f1
  2269  02C1  120A  158A  2002  120A  118A  	fcall	___fltol
  2270  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2271  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2272  02C8  0862               	movf	?___fltol+3,w
  2273  02C9  0461               	iorwf	?___fltol+2,w
  2274  02CA  0460               	iorwf	?___fltol+1,w
  2275  02CB  045F               	iorwf	?___fltol,w
  2276  02CC  1D03               	skipz
  2277  02CD  2ACF               	goto	u5231
  2278  02CE  2AD0               	goto	u5230
  2279  02CF                     u5231:
  2280  02CF  2B51               	goto	l3131
  2281  02D0                     u5230:
  2282  02D0                     l3115:
  2283  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2284  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2285  02D2  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2286  02D3  3A80               	xorlw	128
  2287  02D4  00FF               	movwf	btemp+1
  2288  02D5  3080               	movlw	128
  2289  02D6  027F               	subwf	btemp+1,w
  2290  02D7  1D03               	skipz
  2291  02D8  2ADB               	goto	u5245
  2292  02D9  3002               	movlw	2
  2293  02DA  0241               	subwf	sprintf@eexp^(0+128),w
  2294  02DB                     u5245:
  2295  02DB  1C03               	skipc
  2296  02DC  2ADE               	goto	u5241
  2297  02DD  2ADF               	goto	u5240
  2298  02DE                     u5241:
  2299  02DE  2B51               	goto	l3131
  2300  02DF                     u5240:
  2301  02DF                     l3117:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2304  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2305  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  2306  02E1  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2307  02E2  00F5               	movwf	___flge@ff1+3
  2308  02E3  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2309  02E4  00F4               	movwf	___flge@ff1+2
  2310  02E5  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2311  02E6  00F3               	movwf	___flge@ff1+1
  2312  02E7  0843               	movf	sprintf@tmpval^(0+128),w
  2313  02E8  00F2               	movwf	___flge@ff1
  2314  02E9  3040               	movlw	64
  2315  02EA  00F9               	movwf	___flge@ff2+3
  2316  02EB  3089               	movlw	137
  2317  02EC  00F8               	movwf	___flge@ff2+2
  2318  02ED  3070               	movlw	112
  2319  02EE  00F7               	movwf	___flge@ff2+1
  2320  02EF  305F               	movlw	95
  2321  02F0  00F6               	movwf	___flge@ff2
  2322  02F1  160A  158A  275C  120A  118A  	fcall	___flge
  2323  02F6  1803               	btfsc	3,0
  2324  02F7  2AF9               	goto	u5251
  2325  02F8  2AFA               	goto	u5250
  2326  02F9                     u5251:
  2327  02F9  2B03               	goto	l3121
  2328  02FA                     u5250:
  2329  02FA                     l3119:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2332  02FA  30F7               	movlw	247
  2333  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2334  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2335  02FD  07C1               	addwf	sprintf@eexp^(0+128),f
  2336  02FE  1803               	skipnc
  2337  02FF  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2338  0300  30FF               	movlw	255
  2339  0301  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2342  0302  2B0B               	goto	l3123
  2343  0303                     l3121:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2346  0303  30F8               	movlw	248
  2347  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2348  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2349  0306  07C1               	addwf	sprintf@eexp^(0+128),f
  2350  0307  1803               	skipnc
  2351  0308  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2352  0309  30FF               	movlw	255
  2353  030A  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2354  030B                     l3123:
  2355                           
  2356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2357  030B  0841               	movf	sprintf@eexp^(0+128),w
  2358  030C  120A  158A  249D  120A  118A  	fcall	_scale
  2359  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0313  084F               	movf	?_scale+3,w
  2362  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0316  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2365  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0319  084E               	movf	?_scale+2,w
  2368  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2369  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2370  031C  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2371  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2372  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2373  031F  084D               	movf	?_scale+1,w
  2374  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2376  0322  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2377  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0325  084C               	movf	?_scale,w
  2380  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2381  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2382  0328  00C3               	movwf	sprintf@tmpval^(0+128)
  2383  0329                     l3125:
  2384  0329  084D               	movf	(sprintf@fval+3)^(0+128),w
  2385  032A  00F5               	movwf	__div_to_l_@f1+3
  2386  032B  084C               	movf	(sprintf@fval+2)^(0+128),w
  2387  032C  00F4               	movwf	__div_to_l_@f1+2
  2388  032D  084B               	movf	(sprintf@fval+1)^(0+128),w
  2389  032E  00F3               	movwf	__div_to_l_@f1+1
  2390  032F  084A               	movf	sprintf@fval^(0+128),w
  2391  0330  00F2               	movwf	__div_to_l_@f1
  2392  0331  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2393  0332  00F9               	movwf	__div_to_l_@f2+3
  2394  0333  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2395  0334  00F8               	movwf	__div_to_l_@f2+2
  2396  0335  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2397  0336  00F7               	movwf	__div_to_l_@f2+1
  2398  0337  0843               	movf	sprintf@tmpval^(0+128),w
  2399  0338  00F6               	movwf	__div_to_l_@f2
  2400  0339  120A  158A  207E  120A  118A  	fcall	__div_to_l_
  2401  033E  0875               	movf	?__div_to_l_+3,w
  2402  033F  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0340  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0341  00C0               	movwf	(sprintf@val+3)^(0+128)
  2405  0342  0874               	movf	?__div_to_l_+2,w
  2406  0343  00BF               	movwf	(sprintf@val+2)^(0+128)
  2407  0344  0873               	movf	?__div_to_l_+1,w
  2408  0345  00BE               	movwf	(sprintf@val+1)^(0+128)
  2409  0346  0872               	movf	?__div_to_l_,w
  2410  0347  00BD               	movwf	sprintf@val^(0+128)
  2411  0348                     l3129:
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2414  0348  3000               	movlw	0
  2415  0349  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2416  034A  3000               	movlw	0
  2417  034B  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2418  034C  3000               	movlw	0
  2419  034D  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2420  034E  3000               	movlw	0
  2421  034F  00CA               	movwf	sprintf@fval^(0+128)
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2424  0350  2BD3               	goto	l3137
  2425  0351                     l3131:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2428  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0353  084D               	movf	(sprintf@fval+3)^(0+128),w
  2431  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0356  00E2               	movwf	___fltol@f1+3
  2434  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0359  084C               	movf	(sprintf@fval+2)^(0+128),w
  2437  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2438  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2439  035C  00E1               	movwf	___fltol@f1+2
  2440  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2441  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2442  035F  084B               	movf	(sprintf@fval+1)^(0+128),w
  2443  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0362  00E0               	movwf	___fltol@f1+1
  2446  0363  1683               	bsf	3,5	;RP0=1, select bank1
  2447  0364  1303               	bcf	3,6	;RP1=0, select bank1
  2448  0365  084A               	movf	sprintf@fval^(0+128),w
  2449  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0368  00DF               	movwf	___fltol@f1
  2452  0369  120A  158A  2002  120A  118A  	fcall	___fltol
  2453  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2454  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0370  0862               	movf	?___fltol+3,w
  2456  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0373  00C0               	movwf	(sprintf@val+3)^(0+128)
  2459  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0376  0861               	movf	?___fltol+2,w
  2462  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0379  00BF               	movwf	(sprintf@val+2)^(0+128)
  2465  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2466  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2467  037C  0860               	movf	?___fltol+1,w
  2468  037D  1683               	bsf	3,5	;RP0=1, select bank1
  2469  037E  1303               	bcf	3,6	;RP1=0, select bank1
  2470  037F  00BE               	movwf	(sprintf@val+1)^(0+128)
  2471  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0382  085F               	movf	?___fltol,w
  2474  0383  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0384  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0385  00BD               	movwf	sprintf@val^(0+128)
  2477  0386                     l3133:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2480  0386  0840               	movf	(sprintf@val+3)^(0+128),w
  2481  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0389  00A7               	movwf	___xxtofl@val+3
  2484  038A  1683               	bsf	3,5	;RP0=1, select bank1
  2485  038B  1303               	bcf	3,6	;RP1=0, select bank1
  2486  038C  083F               	movf	(sprintf@val+2)^(0+128),w
  2487  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2488  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2489  038F  00A6               	movwf	___xxtofl@val+2
  2490  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2491  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2492  0392  083E               	movf	(sprintf@val+1)^(0+128),w
  2493  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0395  00A5               	movwf	___xxtofl@val+1
  2496  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2498  0398  083D               	movf	sprintf@val^(0+128),w
  2499  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2500  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2501  039B  00A4               	movwf	___xxtofl@val
  2502  039C  3000               	movlw	0
  2503  039D  160A  118A  213C  120A  118A  	fcall	___xxtofl
  2504  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2505  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2506  03A4  0827               	movf	?___xxtofl+3,w
  2507  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2508  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2509  03A7  00A7               	movwf	(___flsub@a+3)^(0+128)
  2510  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2511  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2512  03AA  0826               	movf	?___xxtofl+2,w
  2513  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2514  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2515  03AD  00A6               	movwf	(___flsub@a+2)^(0+128)
  2516  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2517  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2518  03B0  0825               	movf	?___xxtofl+1,w
  2519  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2520  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2521  03B3  00A5               	movwf	(___flsub@a+1)^(0+128)
  2522  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2523  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2524  03B6  0824               	movf	?___xxtofl,w
  2525  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2526  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2527  03B9  00A4               	movwf	___flsub@a^(0+128)
  2528  03BA  084D               	movf	(sprintf@fval+3)^(0+128),w
  2529  03BB  00AB               	movwf	(___flsub@b+3)^(0+128)
  2530  03BC  084C               	movf	(sprintf@fval+2)^(0+128),w
  2531  03BD  00AA               	movwf	(___flsub@b+2)^(0+128)
  2532  03BE  084B               	movf	(sprintf@fval+1)^(0+128),w
  2533  03BF  00A9               	movwf	(___flsub@b+1)^(0+128)
  2534  03C0  084A               	movf	sprintf@fval^(0+128),w
  2535  03C1  00A8               	movwf	___flsub@b^(0+128)
  2536  03C2  160A  158A  2542  120A  118A  	fcall	___flsub
  2537  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2538  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2539  03C9  0827               	movf	(?___flsub+3)^(0+128),w
  2540  03CA  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2541  03CB  0826               	movf	(?___flsub+2)^(0+128),w
  2542  03CC  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2543  03CD  0825               	movf	(?___flsub+1)^(0+128),w
  2544  03CE  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2545  03CF  0824               	movf	?___flsub^(0+128),w
  2546  03D0  00CA               	movwf	sprintf@fval^(0+128)
  2547  03D1                     l3135:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2550  03D1  01C1               	clrf	sprintf@eexp^(0+128)
  2551  03D2  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  2552  03D3                     l3137:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2555  03D3  01CE               	clrf	sprintf@c^(0+128)
  2556  03D4  0ACE               	incf	sprintf@c^(0+128),f
  2557  03D5                     l3143:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2560  03D5  084E               	movf	sprintf@c^(0+128),w
  2561  03D6  00B1               	movwf	??_sprintf^(0+128)
  2562  03D7  3001               	movlw	1
  2563  03D8                     u5265:
  2564  03D8  1003               	clrc
  2565  03D9  0DB1               	rlf	??_sprintf^(0+128),f
  2566  03DA  3EFF               	addlw	-1
  2567  03DB  1D03               	skipz
  2568  03DC  2BD8               	goto	u5265
  2569  03DD  1003               	clrc
  2570  03DE  0D31               	rlf	??_sprintf^(0+128),w
  2571  03DF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2572  03E0  0084               	movwf	4
  2573  03E1  160A  118A  200A  120A  118A  	fcall	stringdir
  2574  03E6  00B2               	movwf	(??_sprintf+1)^(0+128)
  2575  03E7  160A  118A  200A  120A  118A  	fcall	stringdir
  2576  03EC  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  2577  03ED  160A  118A  200A  120A  118A  	fcall	stringdir
  2578  03F2  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  2579  03F3  160A  118A  200A  120A  118A  	fcall	stringdir
  2580  03F8  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  2581  03F9  0835               	movf	(??_sprintf+4)^(0+128),w
  2582  03FA  0240               	subwf	(sprintf@val+3)^(0+128),w
  2583  03FB  1D03               	skipz
  2584  03FC  2C07               	goto	u5275
  2585  03FD  0834               	movf	(??_sprintf+3)^(0+128),w
  2586  03FE  023F               	subwf	(sprintf@val+2)^(0+128),w
  2587  03FF  1D03               	skipz
  2588  0400  2C07               	goto	u5275
  2589  0401  0833               	movf	(??_sprintf+2)^(0+128),w
  2590  0402  023E               	subwf	(sprintf@val+1)^(0+128),w
  2591  0403  1D03               	skipz
  2592  0404  2C07               	goto	u5275
  2593  0405  0832               	movf	(??_sprintf+1)^(0+128),w
  2594  0406  023D               	subwf	sprintf@val^(0+128),w
  2595  0407                     u5275:
  2596  0407  1803               	skipnc
  2597  0408  2C0A               	goto	u5271
  2598  0409  2C0B               	goto	u5270
  2599  040A                     u5271:
  2600  040A  2C0C               	goto	l3147
  2601  040B                     u5270:
  2602  040B  2C16               	goto	l3149
  2603  040C                     l3147:
  2604  040C  3001               	movlw	1
  2605  040D  00B1               	movwf	??_sprintf^(0+128)
  2606  040E  0831               	movf	??_sprintf^(0+128),w
  2607  040F  07CE               	addwf	sprintf@c^(0+128),f
  2608  0410  300A               	movlw	10
  2609  0411  064E               	xorwf	sprintf@c^(0+128),w
  2610  0412  1D03               	btfss	3,2
  2611  0413  2C15               	goto	u5281
  2612  0414  2C16               	goto	u5280
  2613  0415                     u5281:
  2614  0415  2BD5               	goto	l3143
  2615  0416                     u5280:
  2616  0416                     l3149:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2619  0416  3003               	movlw	3
  2620  0417  053B               	andwf	sprintf@flag^(0+128),w
  2621  0418  00B1               	movwf	??_sprintf^(0+128)
  2622  0419  3000               	movlw	0
  2623  041A  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2624  041B  00B2               	movwf	(??_sprintf+1)^(0+128)
  2625  041C  0831               	movf	??_sprintf^(0+128),w
  2626  041D  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2627  041E  1903               	btfsc	3,2
  2628  041F  2C21               	goto	u5291
  2629  0420  2C22               	goto	u5290
  2630  0421                     u5291:
  2631  0421  2C94               	goto	l273
  2632  0422                     u5290:
  2633  0422                     l3151:
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2636  0422  302D               	movlw	45
  2637  0423  00B1               	movwf	??_sprintf^(0+128)
  2638  0424  0847               	movf	sprintf@sp^(0+128),w
  2639  0425  0084               	movwf	4
  2640  0426  0831               	movf	??_sprintf^(0+128),w
  2641  0427  1383               	bcf	3,7	;select IRP bank0
  2642  0428  0080               	movwf	0
  2643  0429                     l3153:
  2644  0429  3001               	movlw	1
  2645  042A  00B1               	movwf	??_sprintf^(0+128)
  2646  042B  0831               	movf	??_sprintf^(0+128),w
  2647  042C  07C7               	addwf	sprintf@sp^(0+128),f
  2648  042D  2C94               	goto	l273
  2649  042E                     l3155:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2652  042E  084E               	movf	sprintf@c^(0+128),w
  2653  042F  00B1               	movwf	??_sprintf^(0+128)
  2654  0430  3001               	movlw	1
  2655  0431                     u5305:
  2656  0431  1003               	clrc
  2657  0432  0DB1               	rlf	??_sprintf^(0+128),f
  2658  0433  3EFF               	addlw	-1
  2659  0434  1D03               	skipz
  2660  0435  2C31               	goto	u5305
  2661  0436  1003               	clrc
  2662  0437  0D31               	rlf	??_sprintf^(0+128),w
  2663  0438  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2664  0439  0084               	movwf	4
  2665  043A  160A  118A  200A  120A  118A  	fcall	stringdir
  2666  043F  00F2               	movwf	___lldiv@divisor
  2667  0440  160A  118A  200A  120A  118A  	fcall	stringdir
  2668  0445  00F3               	movwf	___lldiv@divisor+1
  2669  0446  160A  118A  200A  120A  118A  	fcall	stringdir
  2670  044B  00F4               	movwf	___lldiv@divisor+2
  2671  044C  160A  118A  200A  120A  118A  	fcall	stringdir
  2672  0451  00F5               	movwf	___lldiv@divisor+3
  2673  0452  0840               	movf	(sprintf@val+3)^(0+128),w
  2674  0453  00F9               	movwf	___lldiv@dividend+3
  2675  0454  083F               	movf	(sprintf@val+2)^(0+128),w
  2676  0455  00F8               	movwf	___lldiv@dividend+2
  2677  0456  083E               	movf	(sprintf@val+1)^(0+128),w
  2678  0457  00F7               	movwf	___lldiv@dividend+1
  2679  0458  083D               	movf	sprintf@val^(0+128),w
  2680  0459  00F6               	movwf	___lldiv@dividend
  2681  045A  160A  158A  26F4  120A  118A  	fcall	___lldiv
  2682  045F  0875               	movf	?___lldiv+3,w
  2683  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0462  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2686  0463  0874               	movf	?___lldiv+2,w
  2687  0464  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2688  0465  0873               	movf	?___lldiv+1,w
  2689  0466  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2690  0467  0872               	movf	?___lldiv,w
  2691  0468  00C3               	movwf	sprintf@tmpval^(0+128)
  2692  0469                     l3157:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2695  0469  3000               	movlw	0
  2696  046A  00F5               	movwf	___llmod@divisor+3
  2697  046B  3000               	movlw	0
  2698  046C  00F4               	movwf	___llmod@divisor+2
  2699  046D  3000               	movlw	0
  2700  046E  00F3               	movwf	___llmod@divisor+1
  2701  046F  300A               	movlw	10
  2702  0470  00F2               	movwf	___llmod@divisor
  2703  0471  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2704  0472  00F9               	movwf	___llmod@dividend+3
  2705  0473  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2706  0474  00F8               	movwf	___llmod@dividend+2
  2707  0475  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2708  0476  00F7               	movwf	___llmod@dividend+1
  2709  0477  0843               	movf	sprintf@tmpval^(0+128),w
  2710  0478  00F6               	movwf	___llmod@dividend
  2711  0479  160A  158A  2592  120A  118A  	fcall	___llmod
  2712  047E  0875               	movf	?___llmod+3,w
  2713  047F  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0480  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0481  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2716  0482  0874               	movf	?___llmod+2,w
  2717  0483  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2718  0484  0873               	movf	?___llmod+1,w
  2719  0485  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2720  0486  0872               	movf	?___llmod,w
  2721  0487  00C3               	movwf	sprintf@tmpval^(0+128)
  2722  0488                     l3159:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2725  0488  0843               	movf	sprintf@tmpval^(0+128),w
  2726  0489  3E30               	addlw	48
  2727  048A  00B1               	movwf	??_sprintf^(0+128)
  2728  048B  0847               	movf	sprintf@sp^(0+128),w
  2729  048C  0084               	movwf	4
  2730  048D  0831               	movf	??_sprintf^(0+128),w
  2731  048E  1383               	bcf	3,7	;select IRP bank0
  2732  048F  0080               	movwf	0
  2733  0490  3001               	movlw	1
  2734  0491  00B1               	movwf	??_sprintf^(0+128)
  2735  0492  0831               	movf	??_sprintf^(0+128),w
  2736  0493  07C7               	addwf	sprintf@sp^(0+128),f
  2737  0494                     l273:	
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  2739                           
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2742  0494  3001               	movlw	1
  2743  0495  02CE               	subwf	sprintf@c^(0+128),f
  2744  0496  0A4E               	incf	sprintf@c^(0+128),w
  2745  0497  1D03               	btfss	3,2
  2746  0498  2C9A               	goto	u5311
  2747  0499  2C9B               	goto	u5310
  2748  049A                     u5311:
  2749  049A  2C2E               	goto	l3155
  2750  049B                     u5310:
  2751  049B  2CAF               	goto	l3167
  2752  049C                     l3161:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2755  049C  3030               	movlw	48
  2756  049D  1683               	bsf	3,5	;RP0=1, select bank1
  2757  049E  1303               	bcf	3,6	;RP1=0, select bank1
  2758  049F  00B1               	movwf	??_sprintf^(0+128)
  2759  04A0  0847               	movf	sprintf@sp^(0+128),w
  2760  04A1  0084               	movwf	4
  2761  04A2  0831               	movf	??_sprintf^(0+128),w
  2762  04A3  1383               	bcf	3,7	;select IRP bank0
  2763  04A4  0080               	movwf	0
  2764  04A5                     l3163:
  2765  04A5  3001               	movlw	1
  2766  04A6  00B1               	movwf	??_sprintf^(0+128)
  2767  04A7  0831               	movf	??_sprintf^(0+128),w
  2768  04A8  07C7               	addwf	sprintf@sp^(0+128),f
  2769  04A9                     l3165:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2772  04A9  30FF               	movlw	255
  2773  04AA  07C1               	addwf	sprintf@eexp^(0+128),f
  2774  04AB  1803               	skipnc
  2775  04AC  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2776  04AD  30FF               	movlw	255
  2777  04AE  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2778  04AF                     l3167:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2781  04AF  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2782  04B0  3A80               	xorlw	128
  2783  04B1  00FF               	movwf	btemp+1
  2784  04B2  3080               	movlw	128
  2785  04B3  027F               	subwf	btemp+1,w
  2786  04B4  1D03               	skipz
  2787  04B5  2CB8               	goto	u5325
  2788  04B6  3001               	movlw	1
  2789  04B7  0241               	subwf	sprintf@eexp^(0+128),w
  2790  04B8                     u5325:
  2791  04B8  1803               	skipnc
  2792  04B9  2CBB               	goto	u5321
  2793  04BA  2CBC               	goto	u5320
  2794  04BB                     u5321:
  2795  04BB  2C9C               	goto	l3161
  2796  04BC                     u5320:
  2797  04BC                     l3169:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2800  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2801  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2802  04BE  0849               	movf	(sprintf@prec+1)^(0+128),w
  2803  04BF  3A80               	xorlw	128
  2804  04C0  00FF               	movwf	btemp+1
  2805  04C1  3080               	movlw	128
  2806  04C2  027F               	subwf	btemp+1,w
  2807  04C3  1D03               	skipz
  2808  04C4  2CC7               	goto	u5335
  2809  04C5  3009               	movlw	9
  2810  04C6  0248               	subwf	sprintf@prec^(0+128),w
  2811  04C7                     u5335:
  2812  04C7  1C03               	skipc
  2813  04C8  2CCA               	goto	u5331
  2814  04C9  2CCB               	goto	u5330
  2815  04CA                     u5331:
  2816  04CA  2CD2               	goto	l3173
  2817  04CB                     u5330:
  2818  04CB                     l3171:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2821  04CB  3008               	movlw	8
  2822  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2823  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  2824  04CE  00B1               	movwf	??_sprintf^(0+128)
  2825  04CF  0831               	movf	??_sprintf^(0+128),w
  2826  04D0  00CE               	movwf	sprintf@c^(0+128)
  2827  04D1  2CD8               	goto	l280
  2828  04D2                     l3173:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2831  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  2832  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  2833  04D4  0848               	movf	sprintf@prec^(0+128),w
  2834  04D5  00B1               	movwf	??_sprintf^(0+128)
  2835  04D6  0831               	movf	??_sprintf^(0+128),w
  2836  04D7  00CE               	movwf	sprintf@c^(0+128)
  2837  04D8                     l280:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2840  04D8  084E               	movf	sprintf@c^(0+128),w
  2841  04D9  00B1               	movwf	??_sprintf^(0+128)
  2842  04DA  01B2               	clrf	(??_sprintf^(0+128)+1)
  2843  04DB  0831               	movf	??_sprintf^(0+128),w
  2844  04DC  02C8               	subwf	sprintf@prec^(0+128),f
  2845  04DD  0832               	movf	(??_sprintf+1)^(0+128),w
  2846  04DE  1C03               	skipc
  2847  04DF  03C9               	decf	(sprintf@prec+1)^(0+128),f
  2848  04E0  02C9               	subwf	(sprintf@prec+1)^(0+128),f
  2849  04E1                     l3175:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2852  04E1  084E               	movf	sprintf@c^(0+128),w
  2853  04E2  1903               	btfsc	3,2
  2854  04E3  2CE5               	goto	u5341
  2855  04E4  2CE6               	goto	u5340
  2856  04E5                     u5341:
  2857  04E5  2CF1               	goto	l3181
  2858  04E6                     u5340:
  2859  04E6                     l3177:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2862  04E6  302E               	movlw	46
  2863  04E7  00B1               	movwf	??_sprintf^(0+128)
  2864  04E8  0847               	movf	sprintf@sp^(0+128),w
  2865  04E9  0084               	movwf	4
  2866  04EA  0831               	movf	??_sprintf^(0+128),w
  2867  04EB  1383               	bcf	3,7	;select IRP bank0
  2868  04EC  0080               	movwf	0
  2869  04ED                     l3179:
  2870  04ED  3001               	movlw	1
  2871  04EE  00B1               	movwf	??_sprintf^(0+128)
  2872  04EF  0831               	movf	??_sprintf^(0+128),w
  2873  04F0  07C7               	addwf	sprintf@sp^(0+128),f
  2874  04F1                     l3181:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2877  04F1  084E               	movf	sprintf@c^(0+128),w
  2878  04F2  120A  158A  249D  120A  118A  	fcall	_scale
  2879  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2880  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2881  04F9  084F               	movf	?_scale+3,w
  2882  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2883  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2884  04FC  00B9               	movwf	(_sprintf$900+3)^(0+128)
  2885  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2886  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2887  04FF  084E               	movf	?_scale+2,w
  2888  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2889  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2890  0502  00B8               	movwf	(_sprintf$900+2)^(0+128)
  2891  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0505  084D               	movf	?_scale+1,w
  2894  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2895  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2896  0508  00B7               	movwf	(_sprintf$900+1)^(0+128)
  2897  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2898  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2899  050B  084C               	movf	?_scale,w
  2900  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2901  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2902  050E  00B6               	movwf	_sprintf$900^(0+128)
  2903  050F                     l3183:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2906  050F  0839               	movf	(_sprintf$900+3)^(0+128),w
  2907  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0512  00B9               	movwf	___flmul@a+3
  2910  0513  1683               	bsf	3,5	;RP0=1, select bank1
  2911  0514  1303               	bcf	3,6	;RP1=0, select bank1
  2912  0515  0838               	movf	(_sprintf$900+2)^(0+128),w
  2913  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0518  00B8               	movwf	___flmul@a+2
  2916  0519  1683               	bsf	3,5	;RP0=1, select bank1
  2917  051A  1303               	bcf	3,6	;RP1=0, select bank1
  2918  051B  0837               	movf	(_sprintf$900+1)^(0+128),w
  2919  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2920  051D  1303               	bcf	3,6	;RP1=0, select bank0
  2921  051E  00B7               	movwf	___flmul@a+1
  2922  051F  1683               	bsf	3,5	;RP0=1, select bank1
  2923  0520  1303               	bcf	3,6	;RP1=0, select bank1
  2924  0521  0836               	movf	_sprintf$900^(0+128),w
  2925  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0524  00B6               	movwf	___flmul@a
  2928  0525  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0526  1303               	bcf	3,6	;RP1=0, select bank1
  2930  0527  084D               	movf	(sprintf@fval+3)^(0+128),w
  2931  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2933  052A  00B5               	movwf	___flmul@b+3
  2934  052B  1683               	bsf	3,5	;RP0=1, select bank1
  2935  052C  1303               	bcf	3,6	;RP1=0, select bank1
  2936  052D  084C               	movf	(sprintf@fval+2)^(0+128),w
  2937  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2938  052F  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0530  00B4               	movwf	___flmul@b+2
  2940  0531  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0532  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0533  084B               	movf	(sprintf@fval+1)^(0+128),w
  2943  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0536  00B3               	movwf	___flmul@b+1
  2946  0537  1683               	bsf	3,5	;RP0=1, select bank1
  2947  0538  1303               	bcf	3,6	;RP1=0, select bank1
  2948  0539  084A               	movf	sprintf@fval^(0+128),w
  2949  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2950  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2951  053C  00B2               	movwf	___flmul@b
  2952  053D  120A  158A  213C  120A  118A  	fcall	___flmul
  2953  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0544  0835               	movf	?___flmul+3,w
  2956  0545  00E2               	movwf	___fltol@f1+3
  2957  0546  0834               	movf	?___flmul+2,w
  2958  0547  00E1               	movwf	___fltol@f1+2
  2959  0548  0833               	movf	?___flmul+1,w
  2960  0549  00E0               	movwf	___fltol@f1+1
  2961  054A  0832               	movf	?___flmul,w
  2962  054B  00DF               	movwf	___fltol@f1
  2963  054C  120A  158A  2002  120A  118A  	fcall	___fltol
  2964  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0553  0862               	movf	?___fltol+3,w
  2967  0554  1683               	bsf	3,5	;RP0=1, select bank1
  2968  0555  1303               	bcf	3,6	;RP1=0, select bank1
  2969  0556  00C0               	movwf	(sprintf@val+3)^(0+128)
  2970  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0559  0861               	movf	?___fltol+2,w
  2973  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2974  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2975  055C  00BF               	movwf	(sprintf@val+2)^(0+128)
  2976  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2977  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2978  055F  0860               	movf	?___fltol+1,w
  2979  0560  1683               	bsf	3,5	;RP0=1, select bank1
  2980  0561  1303               	bcf	3,6	;RP1=0, select bank1
  2981  0562  00BE               	movwf	(sprintf@val+1)^(0+128)
  2982  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0565  085F               	movf	?___fltol,w
  2985  0566  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0567  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0568  00BD               	movwf	sprintf@val^(0+128)
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2990  0569  2E0B               	goto	l3193
  2991  056A                     l3185:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  2994  056A  084E               	movf	sprintf@c^(0+128),w
  2995  056B  00B1               	movwf	??_sprintf^(0+128)
  2996  056C  3001               	movlw	1
  2997  056D                     u5355:
  2998  056D  1003               	clrc
  2999  056E  0DB1               	rlf	??_sprintf^(0+128),f
  3000  056F  3EFF               	addlw	-1
  3001  0570  1D03               	skipz
  3002  0571  2D6D               	goto	u5355
  3003  0572  1003               	clrc
  3004  0573  0D31               	rlf	??_sprintf^(0+128),w
  3005  0574  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3006  0575  0084               	movwf	4
  3007  0576  160A  118A  200A  120A  118A  	fcall	stringdir
  3008  057B  00F2               	movwf	___lldiv@divisor
  3009  057C  160A  118A  200A  120A  118A  	fcall	stringdir
  3010  0581  00F3               	movwf	___lldiv@divisor+1
  3011  0582  160A  118A  200A  120A  118A  	fcall	stringdir
  3012  0587  00F4               	movwf	___lldiv@divisor+2
  3013  0588  160A  118A  200A  120A  118A  	fcall	stringdir
  3014  058D  00F5               	movwf	___lldiv@divisor+3
  3015  058E  0840               	movf	(sprintf@val+3)^(0+128),w
  3016  058F  00F9               	movwf	___lldiv@dividend+3
  3017  0590  083F               	movf	(sprintf@val+2)^(0+128),w
  3018  0591  00F8               	movwf	___lldiv@dividend+2
  3019  0592  083E               	movf	(sprintf@val+1)^(0+128),w
  3020  0593  00F7               	movwf	___lldiv@dividend+1
  3021  0594  083D               	movf	sprintf@val^(0+128),w
  3022  0595  00F6               	movwf	___lldiv@dividend
  3023  0596  160A  158A  26F4  120A  118A  	fcall	___lldiv
  3024  059B  0875               	movf	?___lldiv+3,w
  3025  059C  1683               	bsf	3,5	;RP0=1, select bank1
  3026  059D  1303               	bcf	3,6	;RP1=0, select bank1
  3027  059E  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3028  059F  0874               	movf	?___lldiv+2,w
  3029  05A0  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3030  05A1  0873               	movf	?___lldiv+1,w
  3031  05A2  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3032  05A3  0872               	movf	?___lldiv,w
  3033  05A4  00C3               	movwf	sprintf@tmpval^(0+128)
  3034  05A5                     l3187:
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3037  05A5  3000               	movlw	0
  3038  05A6  00F5               	movwf	___llmod@divisor+3
  3039  05A7  3000               	movlw	0
  3040  05A8  00F4               	movwf	___llmod@divisor+2
  3041  05A9  3000               	movlw	0
  3042  05AA  00F3               	movwf	___llmod@divisor+1
  3043  05AB  300A               	movlw	10
  3044  05AC  00F2               	movwf	___llmod@divisor
  3045  05AD  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3046  05AE  00F9               	movwf	___llmod@dividend+3
  3047  05AF  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3048  05B0  00F8               	movwf	___llmod@dividend+2
  3049  05B1  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3050  05B2  00F7               	movwf	___llmod@dividend+1
  3051  05B3  0843               	movf	sprintf@tmpval^(0+128),w
  3052  05B4  00F6               	movwf	___llmod@dividend
  3053  05B5  160A  158A  2592  120A  118A  	fcall	___llmod
  3054  05BA  0875               	movf	?___llmod+3,w
  3055  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3056  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3057  05BD  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3058  05BE  0874               	movf	?___llmod+2,w
  3059  05BF  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3060  05C0  0873               	movf	?___llmod+1,w
  3061  05C1  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3062  05C2  0872               	movf	?___llmod,w
  3063  05C3  00C3               	movwf	sprintf@tmpval^(0+128)
  3064  05C4                     l3189:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3067  05C4  0843               	movf	sprintf@tmpval^(0+128),w
  3068  05C5  3E30               	addlw	48
  3069  05C6  00B1               	movwf	??_sprintf^(0+128)
  3070  05C7  0847               	movf	sprintf@sp^(0+128),w
  3071  05C8  0084               	movwf	4
  3072  05C9  0831               	movf	??_sprintf^(0+128),w
  3073  05CA  1383               	bcf	3,7	;select IRP bank0
  3074  05CB  0080               	movwf	0
  3075  05CC  3001               	movlw	1
  3076  05CD  00B1               	movwf	??_sprintf^(0+128)
  3077  05CE  0831               	movf	??_sprintf^(0+128),w
  3078  05CF  07C7               	addwf	sprintf@sp^(0+128),f
  3079  05D0                     l3191:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3082  05D0  084E               	movf	sprintf@c^(0+128),w
  3083  05D1  00B1               	movwf	??_sprintf^(0+128)
  3084  05D2  3001               	movlw	1
  3085  05D3                     u5365:
  3086  05D3  1003               	clrc
  3087  05D4  0DB1               	rlf	??_sprintf^(0+128),f
  3088  05D5  3EFF               	addlw	-1
  3089  05D6  1D03               	skipz
  3090  05D7  2DD3               	goto	u5365
  3091  05D8  1003               	clrc
  3092  05D9  0D31               	rlf	??_sprintf^(0+128),w
  3093  05DA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3094  05DB  0084               	movwf	4
  3095  05DC  160A  118A  200A  120A  118A  	fcall	stringdir
  3096  05E1  00F2               	movwf	___llmod@divisor
  3097  05E2  160A  118A  200A  120A  118A  	fcall	stringdir
  3098  05E7  00F3               	movwf	___llmod@divisor+1
  3099  05E8  160A  118A  200A  120A  118A  	fcall	stringdir
  3100  05ED  00F4               	movwf	___llmod@divisor+2
  3101  05EE  160A  118A  200A  120A  118A  	fcall	stringdir
  3102  05F3  00F5               	movwf	___llmod@divisor+3
  3103  05F4  0840               	movf	(sprintf@val+3)^(0+128),w
  3104  05F5  00F9               	movwf	___llmod@dividend+3
  3105  05F6  083F               	movf	(sprintf@val+2)^(0+128),w
  3106  05F7  00F8               	movwf	___llmod@dividend+2
  3107  05F8  083E               	movf	(sprintf@val+1)^(0+128),w
  3108  05F9  00F7               	movwf	___llmod@dividend+1
  3109  05FA  083D               	movf	sprintf@val^(0+128),w
  3110  05FB  00F6               	movwf	___llmod@dividend
  3111  05FC  160A  158A  2592  120A  118A  	fcall	___llmod
  3112  0601  0875               	movf	?___llmod+3,w
  3113  0602  1683               	bsf	3,5	;RP0=1, select bank1
  3114  0603  1303               	bcf	3,6	;RP1=0, select bank1
  3115  0604  00C0               	movwf	(sprintf@val+3)^(0+128)
  3116  0605  0874               	movf	?___llmod+2,w
  3117  0606  00BF               	movwf	(sprintf@val+2)^(0+128)
  3118  0607  0873               	movf	?___llmod+1,w
  3119  0608  00BE               	movwf	(sprintf@val+1)^(0+128)
  3120  0609  0872               	movf	?___llmod,w
  3121  060A  00BD               	movwf	sprintf@val^(0+128)
  3122  060B                     l3193:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3125  060B  3001               	movlw	1
  3126  060C  02CE               	subwf	sprintf@c^(0+128),f
  3127  060D  0A4E               	incf	sprintf@c^(0+128),w
  3128  060E  1D03               	btfss	3,2
  3129  060F  2E11               	goto	u5371
  3130  0610  2E12               	goto	u5370
  3131  0611                     u5371:
  3132  0611  2D6A               	goto	l3185
  3133  0612                     u5370:
  3134  0612  2E24               	goto	l3201
  3135  0613                     l3195:
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3138  0613  3030               	movlw	48
  3139  0614  00B1               	movwf	??_sprintf^(0+128)
  3140  0615  0847               	movf	sprintf@sp^(0+128),w
  3141  0616  0084               	movwf	4
  3142  0617  0831               	movf	??_sprintf^(0+128),w
  3143  0618  1383               	bcf	3,7	;select IRP bank0
  3144  0619  0080               	movwf	0
  3145  061A                     l3197:
  3146  061A  3001               	movlw	1
  3147  061B  00B1               	movwf	??_sprintf^(0+128)
  3148  061C  0831               	movf	??_sprintf^(0+128),w
  3149  061D  07C7               	addwf	sprintf@sp^(0+128),f
  3150  061E                     l3199:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3153  061E  30FF               	movlw	255
  3154  061F  07C8               	addwf	sprintf@prec^(0+128),f
  3155  0620  1803               	skipnc
  3156  0621  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  3157  0622  30FF               	movlw	255
  3158  0623  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  3159  0624                     l3201:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3162  0624  0848               	movf	sprintf@prec^(0+128),w
  3163  0625  0449               	iorwf	(sprintf@prec+1)^(0+128),w
  3164  0626  1D03               	btfss	3,2
  3165  0627  2E29               	goto	u5381
  3166  0628  2E2A               	goto	u5380
  3167  0629                     u5381:
  3168  0629  2E13               	goto	l3195
  3169  062A                     u5380:
  3170  062A  2E70               	goto	l3221
  3171  062B                     l3203:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3174  062B  0848               	movf	sprintf@prec^(0+128),w
  3175  062C  0449               	iorwf	(sprintf@prec+1)^(0+128),w
  3176  062D  1D03               	btfss	3,2
  3177  062E  2E30               	goto	u5391
  3178  062F  2E31               	goto	u5390
  3179  0630                     u5391:
  3180  0630  2E3F               	goto	l288
  3181  0631                     u5390:
  3182  0631                     l3205:
  3183  0631  0840               	movf	(sprintf@val+3)^(0+128),w
  3184  0632  043F               	iorwf	(sprintf@val+2)^(0+128),w
  3185  0633  043E               	iorwf	(sprintf@val+1)^(0+128),w
  3186  0634  043D               	iorwf	sprintf@val^(0+128),w
  3187  0635  1D03               	skipz
  3188  0636  2E38               	goto	u5401
  3189  0637  2E39               	goto	u5400
  3190  0638                     u5401:
  3191  0638  2E3F               	goto	l288
  3192  0639                     u5400:
  3193  0639                     l3207:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3196  0639  3001               	movlw	1
  3197  063A  07C8               	addwf	sprintf@prec^(0+128),f
  3198  063B  1803               	skipnc
  3199  063C  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  3200  063D  3000               	movlw	0
  3201  063E  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  3202  063F                     l288:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3205  063F  0849               	movf	(sprintf@prec+1)^(0+128),w
  3206  0640  3A80               	xorlw	128
  3207  0641  3C80               	sublw	128
  3208  0642  1D03               	skipz
  3209  0643  2E46               	goto	u5415
  3210  0644  0848               	movf	sprintf@prec^(0+128),w
  3211  0645  024E               	subwf	sprintf@c^(0+128),w
  3212  0646                     u5415:
  3213  0646  1803               	skipnc
  3214  0647  2E49               	goto	u5411
  3215  0648  2E4A               	goto	u5410
  3216  0649                     u5411:
  3217  0649  2E4B               	goto	l3211
  3218  064A                     u5410:
  3219  064A                     l3209:
  3220  064A  2E5A               	goto	l3215
  3221  064B                     l3211:
  3222  064B  1683               	bsf	3,5	;RP0=1, select bank1
  3223  064C  1303               	bcf	3,6	;RP1=0, select bank1
  3224  064D  0849               	movf	(sprintf@prec+1)^(0+128),w
  3225  064E  3A80               	xorlw	128
  3226  064F  00B1               	movwf	??_sprintf^(0+128)
  3227  0650  3080               	movlw	128
  3228  0651  0231               	subwf	??_sprintf^(0+128),w
  3229  0652  1D03               	skipz
  3230  0653  2E56               	goto	u5425
  3231  0654  084E               	movf	sprintf@c^(0+128),w
  3232  0655  0248               	subwf	sprintf@prec^(0+128),w
  3233  0656                     u5425:
  3234  0656  1803               	skipnc
  3235  0657  2E59               	goto	u5421
  3236  0658  2E5A               	goto	u5420
  3237  0659                     u5421:
  3238  0659  2E5A               	goto	l3215
  3239  065A                     u5420:
  3240  065A                     l3213:
  3241  065A                     l3215:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3244  065A  3003               	movlw	3
  3245  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3246  065C  1303               	bcf	3,6	;RP1=0, select bank1
  3247  065D  053B               	andwf	sprintf@flag^(0+128),w
  3248  065E  00B1               	movwf	??_sprintf^(0+128)
  3249  065F  3000               	movlw	0
  3250  0660  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3251  0661  00B2               	movwf	(??_sprintf+1)^(0+128)
  3252  0662  0831               	movf	??_sprintf^(0+128),w
  3253  0663  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3254  0664  1903               	btfsc	3,2
  3255  0665  2E67               	goto	u5431
  3256  0666  2E68               	goto	u5430
  3257  0667                     u5431:
  3258  0667  2E70               	goto	l3221
  3259  0668                     u5430:
  3260  0668                     l3217:
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3263  0668  302D               	movlw	45
  3264  0669  00B1               	movwf	??_sprintf^(0+128)
  3265  066A  0847               	movf	sprintf@sp^(0+128),w
  3266  066B  0084               	movwf	4
  3267  066C  0831               	movf	??_sprintf^(0+128),w
  3268  066D  1383               	bcf	3,7	;select IRP bank0
  3269  066E  0080               	movwf	0
  3270  066F  2836               	goto	l3033
  3271  0670                     l3221:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3274  0670  3001               	movlw	1
  3275  0671  07AC               	addwf	sprintf@f^(0+128),f
  3276  0672  30FF               	movlw	-1
  3277  0673  072C               	addwf	sprintf@f^(0+128),w
  3278  0674  0084               	movwf	4
  3279  0675  160A  118A  200A  120A  118A  	fcall	stringdir
  3280  067A  00B1               	movwf	??_sprintf^(0+128)
  3281  067B  0831               	movf	??_sprintf^(0+128),w
  3282  067C  00CE               	movwf	sprintf@c^(0+128)
  3283  067D  084E               	movf	sprintf@c^(0+128),w
  3284  067E  1D03               	btfss	3,2
  3285  067F  2E81               	goto	u5441
  3286  0680  2E82               	goto	u5440
  3287  0681                     u5441:
  3288  0681  2829               	goto	l3029
  3289  0682                     u5440:
  3290  0682                     l3223:
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3293  0682  0847               	movf	sprintf@sp^(0+128),w
  3294  0683  0084               	movwf	4
  3295  0684  1383               	bcf	3,7	;select IRP bank0
  3296  0685  0180               	clrf	0
  3297  0686                     l294:
  3298  0686  0008               	return
  3299  0687                     __end_of_sprintf:
  3300                           
  3301                           	psect	text2
  3302  0C9D                     __ptext2:	
  3303 ;; *************** function _scale *****************
  3304 ;; Defined at:
  3305 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  scl             1    wreg     char 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  scl             1   62[BANK0 ] char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  4   44[BANK0 ] char 
  3312 ;; Registers used:
  3313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       4       0       0       0
  3320 ;;      Locals:         0       5       0       0       0
  3321 ;;      Temps:          0      10       0       0       0
  3322 ;;      Totals:         0      19       0       0       0
  3323 ;;Total ram usage:       19 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    3
  3326 ;; This function calls:
  3327 ;;		___awdiv
  3328 ;;		___awmod
  3329 ;;		___flmul
  3330 ;; This function is called by:
  3331 ;;		_sprintf
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           
  3336                           ;psect for function _scale
  3337  0C9D                     _scale:
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3341                           ;scale@scl stored from wreg
  3342  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0C9F  00DE               	movwf	scale@scl
  3345  0CA0                     l2637:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3348  0CA0  1FDE               	btfss	scale@scl,7
  3349  0CA1  2CA3               	goto	u4051
  3350  0CA2  2CA4               	goto	u4050
  3351  0CA3                     u4051:
  3352  0CA3  2E53               	goto	l2659
  3353  0CA4                     u4050:
  3354  0CA4                     l2639:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3357  0CA4  09DE               	comf	scale@scl,f
  3358  0CA5  0ADE               	incf	scale@scl,f
  3359  0CA6                     l2641:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3362  0CA6  085E               	movf	scale@scl,w
  3363  0CA7  3A80               	xorlw	128
  3364  0CA8  3E12               	addlw	-238
  3365  0CA9  1C03               	skipc
  3366  0CAA  2CAC               	goto	u4061
  3367  0CAB  2CAD               	goto	u4060
  3368  0CAC                     u4061:
  3369  0CAC  2D97               	goto	l2649
  3370  0CAD                     u4060:
  3371  0CAD                     l2643:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3374  0CAD  300A               	movlw	10
  3375  0CAE  00A0               	movwf	___awdiv@divisor
  3376  0CAF  3000               	movlw	0
  3377  0CB0  00A1               	movwf	___awdiv@divisor+1
  3378  0CB1  085E               	movf	scale@scl,w
  3379  0CB2  00F4               	movwf	___awmod@dividend
  3380  0CB3  01F5               	clrf	___awmod@dividend+1
  3381  0CB4  1BF4               	btfsc	___awmod@dividend,7
  3382  0CB5  03F5               	decf	___awmod@dividend+1,f
  3383  0CB6  3064               	movlw	100
  3384  0CB7  00F2               	movwf	___awmod@divisor
  3385  0CB8  3000               	movlw	0
  3386  0CB9  00F3               	movwf	___awmod@divisor+1
  3387  0CBA  160A  158A  263E  120A  158A  	fcall	___awmod
  3388  0CBF  0873               	movf	?___awmod+1,w
  3389  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0CC2  00A3               	movwf	___awdiv@dividend+1
  3392  0CC3  0872               	movf	?___awmod,w
  3393  0CC4  00A2               	movwf	___awdiv@dividend
  3394  0CC5  160A  118A  20D3  120A  158A  	fcall	___awdiv
  3395  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3397  0CCC  0820               	movf	?___awdiv,w
  3398  0CCD  00D0               	movwf	??_scale
  3399  0CCE  3001               	movlw	1
  3400  0CCF                     u4075:
  3401  0CCF  1003               	clrc
  3402  0CD0  0DD0               	rlf	??_scale,f
  3403  0CD1  3EFF               	addlw	-1
  3404  0CD2  1D03               	skipz
  3405  0CD3  2CCF               	goto	u4075
  3406  0CD4  1003               	clrc
  3407  0CD5  0D50               	rlf	??_scale,w
  3408  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3409  0CD7  0084               	movwf	4
  3410  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3411  0CDD  00D1               	movwf	??_scale+1
  3412  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3413  0CE3  00D2               	movwf	??_scale+2
  3414  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3415  0CE9  00D3               	movwf	??_scale+3
  3416  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3417  0CEF  00D4               	movwf	??_scale+4
  3418  0CF0  0854               	movf	??_scale+4,w
  3419  0CF1  00B5               	movwf	___flmul@b+3
  3420  0CF2  0853               	movf	??_scale+3,w
  3421  0CF3  00B4               	movwf	___flmul@b+2
  3422  0CF4  0852               	movf	??_scale+2,w
  3423  0CF5  00B3               	movwf	___flmul@b+1
  3424  0CF6  0851               	movf	??_scale+1,w
  3425  0CF7  00B2               	movwf	___flmul@b
  3426  0CF8  3064               	movlw	100
  3427  0CF9  00A0               	movwf	___awdiv@divisor
  3428  0CFA  3000               	movlw	0
  3429  0CFB  00A1               	movwf	___awdiv@divisor+1
  3430  0CFC  085E               	movf	scale@scl,w
  3431  0CFD  00A2               	movwf	___awdiv@dividend
  3432  0CFE  01A3               	clrf	___awdiv@dividend+1
  3433  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3434  0D00  03A3               	decf	___awdiv@dividend+1,f
  3435  0D01  160A  118A  20D3  120A  158A  	fcall	___awdiv
  3436  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0D08  0820               	movf	?___awdiv,w
  3439  0D09  00D5               	movwf	??_scale+5
  3440  0D0A  3001               	movlw	1
  3441  0D0B                     u4085:
  3442  0D0B  1003               	clrc
  3443  0D0C  0DD5               	rlf	??_scale+5,f
  3444  0D0D  3EFF               	addlw	-1
  3445  0D0E  1D03               	skipz
  3446  0D0F  2D0B               	goto	u4085
  3447  0D10  1003               	clrc
  3448  0D11  0D55               	rlf	??_scale+5,w
  3449  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3450  0D13  0084               	movwf	4
  3451  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  3452  0D19  00D6               	movwf	??_scale+6
  3453  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3454  0D1F  00D7               	movwf	??_scale+7
  3455  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  3456  0D25  00D8               	movwf	??_scale+8
  3457  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  3458  0D2B  00D9               	movwf	??_scale+9
  3459  0D2C  0859               	movf	??_scale+9,w
  3460  0D2D  00B9               	movwf	___flmul@a+3
  3461  0D2E  0858               	movf	??_scale+8,w
  3462  0D2F  00B8               	movwf	___flmul@a+2
  3463  0D30  0857               	movf	??_scale+7,w
  3464  0D31  00B7               	movwf	___flmul@a+1
  3465  0D32  0856               	movf	??_scale+6,w
  3466  0D33  00B6               	movwf	___flmul@a
  3467  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3468  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0D3B  0835               	movf	?___flmul+3,w
  3471  0D3C  00DD               	movwf	_scale$899+3
  3472  0D3D  0834               	movf	?___flmul+2,w
  3473  0D3E  00DC               	movwf	_scale$899+2
  3474  0D3F  0833               	movf	?___flmul+1,w
  3475  0D40  00DB               	movwf	_scale$899+1
  3476  0D41  0832               	movf	?___flmul,w
  3477  0D42  00DA               	movwf	_scale$899
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3480  0D43  300A               	movlw	10
  3481  0D44  00F2               	movwf	___awmod@divisor
  3482  0D45  3000               	movlw	0
  3483  0D46  00F3               	movwf	___awmod@divisor+1
  3484  0D47  085E               	movf	scale@scl,w
  3485  0D48  00F4               	movwf	___awmod@dividend
  3486  0D49  01F5               	clrf	___awmod@dividend+1
  3487  0D4A  1BF4               	btfsc	___awmod@dividend,7
  3488  0D4B  03F5               	decf	___awmod@dividend+1,f
  3489  0D4C  160A  158A  263E  120A  158A  	fcall	___awmod
  3490  0D51  0872               	movf	?___awmod,w
  3491  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0D54  00D0               	movwf	??_scale
  3494  0D55  3001               	movlw	1
  3495  0D56                     u4095:
  3496  0D56  1003               	clrc
  3497  0D57  0DD0               	rlf	??_scale,f
  3498  0D58  3EFF               	addlw	-1
  3499  0D59  1D03               	skipz
  3500  0D5A  2D56               	goto	u4095
  3501  0D5B  1003               	clrc
  3502  0D5C  0D50               	rlf	??_scale,w
  3503  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3504  0D5E  0084               	movwf	4
  3505  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3506  0D64  00D1               	movwf	??_scale+1
  3507  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  3508  0D6A  00D2               	movwf	??_scale+2
  3509  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3510  0D70  00D3               	movwf	??_scale+3
  3511  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  3512  0D76  00D4               	movwf	??_scale+4
  3513  0D77  0854               	movf	??_scale+4,w
  3514  0D78  00B5               	movwf	___flmul@b+3
  3515  0D79  0853               	movf	??_scale+3,w
  3516  0D7A  00B4               	movwf	___flmul@b+2
  3517  0D7B  0852               	movf	??_scale+2,w
  3518  0D7C  00B3               	movwf	___flmul@b+1
  3519  0D7D  0851               	movf	??_scale+1,w
  3520  0D7E  00B2               	movwf	___flmul@b
  3521  0D7F  085D               	movf	_scale$899+3,w
  3522  0D80  00B9               	movwf	___flmul@a+3
  3523  0D81  085C               	movf	_scale$899+2,w
  3524  0D82  00B8               	movwf	___flmul@a+2
  3525  0D83  085B               	movf	_scale$899+1,w
  3526  0D84  00B7               	movwf	___flmul@a+1
  3527  0D85  085A               	movf	_scale$899,w
  3528  0D86  00B6               	movwf	___flmul@a
  3529  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3530  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0D8E  0835               	movf	?___flmul+3,w
  3533  0D8F  00CF               	movwf	?_scale+3
  3534  0D90  0834               	movf	?___flmul+2,w
  3535  0D91  00CE               	movwf	?_scale+2
  3536  0D92  0833               	movf	?___flmul+1,w
  3537  0D93  00CD               	movwf	?_scale+1
  3538  0D94  0832               	movf	?___flmul,w
  3539  0D95  00CC               	movwf	?_scale
  3540  0D96  2FFF               	goto	l228
  3541  0D97                     l2649:
  3542  0D97  085E               	movf	scale@scl,w
  3543  0D98  3A80               	xorlw	128
  3544  0D99  3E75               	addlw	-139
  3545  0D9A  1C03               	skipc
  3546  0D9B  2D9D               	goto	u4101
  3547  0D9C  2D9E               	goto	u4100
  3548  0D9D                     u4101:
  3549  0D9D  2E26               	goto	l2655
  3550  0D9E                     u4100:
  3551  0D9E                     l2651:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3554  0D9E  300A               	movlw	10
  3555  0D9F  00F2               	movwf	___awmod@divisor
  3556  0DA0  3000               	movlw	0
  3557  0DA1  00F3               	movwf	___awmod@divisor+1
  3558  0DA2  085E               	movf	scale@scl,w
  3559  0DA3  00F4               	movwf	___awmod@dividend
  3560  0DA4  01F5               	clrf	___awmod@dividend+1
  3561  0DA5  1BF4               	btfsc	___awmod@dividend,7
  3562  0DA6  03F5               	decf	___awmod@dividend+1,f
  3563  0DA7  160A  158A  263E  120A  158A  	fcall	___awmod
  3564  0DAC  0872               	movf	?___awmod,w
  3565  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0DAF  00D0               	movwf	??_scale
  3568  0DB0  3001               	movlw	1
  3569  0DB1                     u4115:
  3570  0DB1  1003               	clrc
  3571  0DB2  0DD0               	rlf	??_scale,f
  3572  0DB3  3EFF               	addlw	-1
  3573  0DB4  1D03               	skipz
  3574  0DB5  2DB1               	goto	u4115
  3575  0DB6  1003               	clrc
  3576  0DB7  0D50               	rlf	??_scale,w
  3577  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3578  0DB9  0084               	movwf	4
  3579  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3580  0DBF  00D1               	movwf	??_scale+1
  3581  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3582  0DC5  00D2               	movwf	??_scale+2
  3583  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3584  0DCB  00D3               	movwf	??_scale+3
  3585  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3586  0DD1  00D4               	movwf	??_scale+4
  3587  0DD2  0854               	movf	??_scale+4,w
  3588  0DD3  00B5               	movwf	___flmul@b+3
  3589  0DD4  0853               	movf	??_scale+3,w
  3590  0DD5  00B4               	movwf	___flmul@b+2
  3591  0DD6  0852               	movf	??_scale+2,w
  3592  0DD7  00B3               	movwf	___flmul@b+1
  3593  0DD8  0851               	movf	??_scale+1,w
  3594  0DD9  00B2               	movwf	___flmul@b
  3595  0DDA  300A               	movlw	10
  3596  0DDB  00A0               	movwf	___awdiv@divisor
  3597  0DDC  3000               	movlw	0
  3598  0DDD  00A1               	movwf	___awdiv@divisor+1
  3599  0DDE  085E               	movf	scale@scl,w
  3600  0DDF  00A2               	movwf	___awdiv@dividend
  3601  0DE0  01A3               	clrf	___awdiv@dividend+1
  3602  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3603  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3604  0DE3  160A  118A  20D3  120A  158A  	fcall	___awdiv
  3605  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0DEA  0820               	movf	?___awdiv,w
  3608  0DEB  00D5               	movwf	??_scale+5
  3609  0DEC  3001               	movlw	1
  3610  0DED                     u4125:
  3611  0DED  1003               	clrc
  3612  0DEE  0DD5               	rlf	??_scale+5,f
  3613  0DEF  3EFF               	addlw	-1
  3614  0DF0  1D03               	skipz
  3615  0DF1  2DED               	goto	u4125
  3616  0DF2  1003               	clrc
  3617  0DF3  0D55               	rlf	??_scale+5,w
  3618  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3619  0DF5  0084               	movwf	4
  3620  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  3621  0DFB  00D6               	movwf	??_scale+6
  3622  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3623  0E01  00D7               	movwf	??_scale+7
  3624  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  3625  0E07  00D8               	movwf	??_scale+8
  3626  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  3627  0E0D  00D9               	movwf	??_scale+9
  3628  0E0E  0859               	movf	??_scale+9,w
  3629  0E0F  00B9               	movwf	___flmul@a+3
  3630  0E10  0858               	movf	??_scale+8,w
  3631  0E11  00B8               	movwf	___flmul@a+2
  3632  0E12  0857               	movf	??_scale+7,w
  3633  0E13  00B7               	movwf	___flmul@a+1
  3634  0E14  0856               	movf	??_scale+6,w
  3635  0E15  00B6               	movwf	___flmul@a
  3636  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3637  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0E1D  0835               	movf	?___flmul+3,w
  3640  0E1E  00CF               	movwf	?_scale+3
  3641  0E1F  0834               	movf	?___flmul+2,w
  3642  0E20  00CE               	movwf	?_scale+2
  3643  0E21  0833               	movf	?___flmul+1,w
  3644  0E22  00CD               	movwf	?_scale+1
  3645  0E23  0832               	movf	?___flmul,w
  3646  0E24  00CC               	movwf	?_scale
  3647  0E25  2FFF               	goto	l228
  3648  0E26                     l2655:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3651  0E26  085E               	movf	scale@scl,w
  3652  0E27  00D0               	movwf	??_scale
  3653  0E28  3001               	movlw	1
  3654  0E29                     u4135:
  3655  0E29  1003               	clrc
  3656  0E2A  0DD0               	rlf	??_scale,f
  3657  0E2B  3EFF               	addlw	-1
  3658  0E2C  1D03               	skipz
  3659  0E2D  2E29               	goto	u4135
  3660  0E2E  1003               	clrc
  3661  0E2F  0D50               	rlf	??_scale,w
  3662  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3663  0E31  0084               	movwf	4
  3664  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  3665  0E37  00D1               	movwf	??_scale+1
  3666  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  3667  0E3D  00D2               	movwf	??_scale+2
  3668  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  3669  0E43  00D3               	movwf	??_scale+3
  3670  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  3671  0E49  00D4               	movwf	??_scale+4
  3672  0E4A  0854               	movf	??_scale+4,w
  3673  0E4B  00CF               	movwf	?_scale+3
  3674  0E4C  0853               	movf	??_scale+3,w
  3675  0E4D  00CE               	movwf	?_scale+2
  3676  0E4E  0852               	movf	??_scale+2,w
  3677  0E4F  00CD               	movwf	?_scale+1
  3678  0E50  0851               	movf	??_scale+1,w
  3679  0E51  00CC               	movwf	?_scale
  3680  0E52  2FFF               	goto	l228
  3681  0E53                     l2659:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3684  0E53  085E               	movf	scale@scl,w
  3685  0E54  3A80               	xorlw	128
  3686  0E55  3E12               	addlw	-238
  3687  0E56  1C03               	skipc
  3688  0E57  2E59               	goto	u4141
  3689  0E58  2E5A               	goto	u4140
  3690  0E59                     u4141:
  3691  0E59  2F44               	goto	l2667
  3692  0E5A                     u4140:
  3693  0E5A                     l2661:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3696  0E5A  300A               	movlw	10
  3697  0E5B  00A0               	movwf	___awdiv@divisor
  3698  0E5C  3000               	movlw	0
  3699  0E5D  00A1               	movwf	___awdiv@divisor+1
  3700  0E5E  085E               	movf	scale@scl,w
  3701  0E5F  00F4               	movwf	___awmod@dividend
  3702  0E60  01F5               	clrf	___awmod@dividend+1
  3703  0E61  1BF4               	btfsc	___awmod@dividend,7
  3704  0E62  03F5               	decf	___awmod@dividend+1,f
  3705  0E63  3064               	movlw	100
  3706  0E64  00F2               	movwf	___awmod@divisor
  3707  0E65  3000               	movlw	0
  3708  0E66  00F3               	movwf	___awmod@divisor+1
  3709  0E67  160A  158A  263E  120A  158A  	fcall	___awmod
  3710  0E6C  0873               	movf	?___awmod+1,w
  3711  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3713  0E6F  00A3               	movwf	___awdiv@dividend+1
  3714  0E70  0872               	movf	?___awmod,w
  3715  0E71  00A2               	movwf	___awdiv@dividend
  3716  0E72  160A  118A  20D3  120A  158A  	fcall	___awdiv
  3717  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0E79  0820               	movf	?___awdiv,w
  3720  0E7A  00D0               	movwf	??_scale
  3721  0E7B  3001               	movlw	1
  3722  0E7C                     u4155:
  3723  0E7C  1003               	clrc
  3724  0E7D  0DD0               	rlf	??_scale,f
  3725  0E7E  3EFF               	addlw	-1
  3726  0E7F  1D03               	skipz
  3727  0E80  2E7C               	goto	u4155
  3728  0E81  1003               	clrc
  3729  0E82  0D50               	rlf	??_scale,w
  3730  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3731  0E84  0084               	movwf	4
  3732  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3733  0E8A  00D1               	movwf	??_scale+1
  3734  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3735  0E90  00D2               	movwf	??_scale+2
  3736  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3737  0E96  00D3               	movwf	??_scale+3
  3738  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3739  0E9C  00D4               	movwf	??_scale+4
  3740  0E9D  0854               	movf	??_scale+4,w
  3741  0E9E  00B5               	movwf	___flmul@b+3
  3742  0E9F  0853               	movf	??_scale+3,w
  3743  0EA0  00B4               	movwf	___flmul@b+2
  3744  0EA1  0852               	movf	??_scale+2,w
  3745  0EA2  00B3               	movwf	___flmul@b+1
  3746  0EA3  0851               	movf	??_scale+1,w
  3747  0EA4  00B2               	movwf	___flmul@b
  3748  0EA5  3064               	movlw	100
  3749  0EA6  00A0               	movwf	___awdiv@divisor
  3750  0EA7  3000               	movlw	0
  3751  0EA8  00A1               	movwf	___awdiv@divisor+1
  3752  0EA9  085E               	movf	scale@scl,w
  3753  0EAA  00A2               	movwf	___awdiv@dividend
  3754  0EAB  01A3               	clrf	___awdiv@dividend+1
  3755  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3756  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3757  0EAE  160A  118A  20D3  120A  158A  	fcall	___awdiv
  3758  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0EB5  0820               	movf	?___awdiv,w
  3761  0EB6  00D5               	movwf	??_scale+5
  3762  0EB7  3001               	movlw	1
  3763  0EB8                     u4165:
  3764  0EB8  1003               	clrc
  3765  0EB9  0DD5               	rlf	??_scale+5,f
  3766  0EBA  3EFF               	addlw	-1
  3767  0EBB  1D03               	skipz
  3768  0EBC  2EB8               	goto	u4165
  3769  0EBD  1003               	clrc
  3770  0EBE  0D55               	rlf	??_scale+5,w
  3771  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3772  0EC0  0084               	movwf	4
  3773  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3774  0EC6  00D6               	movwf	??_scale+6
  3775  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3776  0ECC  00D7               	movwf	??_scale+7
  3777  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3778  0ED2  00D8               	movwf	??_scale+8
  3779  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3780  0ED8  00D9               	movwf	??_scale+9
  3781  0ED9  0859               	movf	??_scale+9,w
  3782  0EDA  00B9               	movwf	___flmul@a+3
  3783  0EDB  0858               	movf	??_scale+8,w
  3784  0EDC  00B8               	movwf	___flmul@a+2
  3785  0EDD  0857               	movf	??_scale+7,w
  3786  0EDE  00B7               	movwf	___flmul@a+1
  3787  0EDF  0856               	movf	??_scale+6,w
  3788  0EE0  00B6               	movwf	___flmul@a
  3789  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3790  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3792  0EE8  0835               	movf	?___flmul+3,w
  3793  0EE9  00DD               	movwf	_scale$899+3
  3794  0EEA  0834               	movf	?___flmul+2,w
  3795  0EEB  00DC               	movwf	_scale$899+2
  3796  0EEC  0833               	movf	?___flmul+1,w
  3797  0EED  00DB               	movwf	_scale$899+1
  3798  0EEE  0832               	movf	?___flmul,w
  3799  0EEF  00DA               	movwf	_scale$899
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3802  0EF0  300A               	movlw	10
  3803  0EF1  00F2               	movwf	___awmod@divisor
  3804  0EF2  3000               	movlw	0
  3805  0EF3  00F3               	movwf	___awmod@divisor+1
  3806  0EF4  085E               	movf	scale@scl,w
  3807  0EF5  00F4               	movwf	___awmod@dividend
  3808  0EF6  01F5               	clrf	___awmod@dividend+1
  3809  0EF7  1BF4               	btfsc	___awmod@dividend,7
  3810  0EF8  03F5               	decf	___awmod@dividend+1,f
  3811  0EF9  160A  158A  263E  120A  158A  	fcall	___awmod
  3812  0EFE  0872               	movf	?___awmod,w
  3813  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3814  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3815  0F01  00D0               	movwf	??_scale
  3816  0F02  3001               	movlw	1
  3817  0F03                     u4175:
  3818  0F03  1003               	clrc
  3819  0F04  0DD0               	rlf	??_scale,f
  3820  0F05  3EFF               	addlw	-1
  3821  0F06  1D03               	skipz
  3822  0F07  2F03               	goto	u4175
  3823  0F08  1003               	clrc
  3824  0F09  0D50               	rlf	??_scale,w
  3825  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3826  0F0B  0084               	movwf	4
  3827  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3828  0F11  00D1               	movwf	??_scale+1
  3829  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3830  0F17  00D2               	movwf	??_scale+2
  3831  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3832  0F1D  00D3               	movwf	??_scale+3
  3833  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3834  0F23  00D4               	movwf	??_scale+4
  3835  0F24  0854               	movf	??_scale+4,w
  3836  0F25  00B5               	movwf	___flmul@b+3
  3837  0F26  0853               	movf	??_scale+3,w
  3838  0F27  00B4               	movwf	___flmul@b+2
  3839  0F28  0852               	movf	??_scale+2,w
  3840  0F29  00B3               	movwf	___flmul@b+1
  3841  0F2A  0851               	movf	??_scale+1,w
  3842  0F2B  00B2               	movwf	___flmul@b
  3843  0F2C  085D               	movf	_scale$899+3,w
  3844  0F2D  00B9               	movwf	___flmul@a+3
  3845  0F2E  085C               	movf	_scale$899+2,w
  3846  0F2F  00B8               	movwf	___flmul@a+2
  3847  0F30  085B               	movf	_scale$899+1,w
  3848  0F31  00B7               	movwf	___flmul@a+1
  3849  0F32  085A               	movf	_scale$899,w
  3850  0F33  00B6               	movwf	___flmul@a
  3851  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3852  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3853  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3854  0F3B  0835               	movf	?___flmul+3,w
  3855  0F3C  00CF               	movwf	?_scale+3
  3856  0F3D  0834               	movf	?___flmul+2,w
  3857  0F3E  00CE               	movwf	?_scale+2
  3858  0F3F  0833               	movf	?___flmul+1,w
  3859  0F40  00CD               	movwf	?_scale+1
  3860  0F41  0832               	movf	?___flmul,w
  3861  0F42  00CC               	movwf	?_scale
  3862  0F43  2FFF               	goto	l228
  3863  0F44                     l2667:
  3864  0F44  085E               	movf	scale@scl,w
  3865  0F45  3A80               	xorlw	128
  3866  0F46  3E75               	addlw	-139
  3867  0F47  1C03               	skipc
  3868  0F48  2F4A               	goto	u4181
  3869  0F49  2F4B               	goto	u4180
  3870  0F4A                     u4181:
  3871  0F4A  2FD3               	goto	l2673
  3872  0F4B                     u4180:
  3873  0F4B                     l2669:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3876  0F4B  300A               	movlw	10
  3877  0F4C  00F2               	movwf	___awmod@divisor
  3878  0F4D  3000               	movlw	0
  3879  0F4E  00F3               	movwf	___awmod@divisor+1
  3880  0F4F  085E               	movf	scale@scl,w
  3881  0F50  00F4               	movwf	___awmod@dividend
  3882  0F51  01F5               	clrf	___awmod@dividend+1
  3883  0F52  1BF4               	btfsc	___awmod@dividend,7
  3884  0F53  03F5               	decf	___awmod@dividend+1,f
  3885  0F54  160A  158A  263E  120A  158A  	fcall	___awmod
  3886  0F59  0872               	movf	?___awmod,w
  3887  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3889  0F5C  00D0               	movwf	??_scale
  3890  0F5D  3001               	movlw	1
  3891  0F5E                     u4195:
  3892  0F5E  1003               	clrc
  3893  0F5F  0DD0               	rlf	??_scale,f
  3894  0F60  3EFF               	addlw	-1
  3895  0F61  1D03               	skipz
  3896  0F62  2F5E               	goto	u4195
  3897  0F63  1003               	clrc
  3898  0F64  0D50               	rlf	??_scale,w
  3899  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3900  0F66  0084               	movwf	4
  3901  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3902  0F6C  00D1               	movwf	??_scale+1
  3903  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3904  0F72  00D2               	movwf	??_scale+2
  3905  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3906  0F78  00D3               	movwf	??_scale+3
  3907  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3908  0F7E  00D4               	movwf	??_scale+4
  3909  0F7F  0854               	movf	??_scale+4,w
  3910  0F80  00B5               	movwf	___flmul@b+3
  3911  0F81  0853               	movf	??_scale+3,w
  3912  0F82  00B4               	movwf	___flmul@b+2
  3913  0F83  0852               	movf	??_scale+2,w
  3914  0F84  00B3               	movwf	___flmul@b+1
  3915  0F85  0851               	movf	??_scale+1,w
  3916  0F86  00B2               	movwf	___flmul@b
  3917  0F87  300A               	movlw	10
  3918  0F88  00A0               	movwf	___awdiv@divisor
  3919  0F89  3000               	movlw	0
  3920  0F8A  00A1               	movwf	___awdiv@divisor+1
  3921  0F8B  085E               	movf	scale@scl,w
  3922  0F8C  00A2               	movwf	___awdiv@dividend
  3923  0F8D  01A3               	clrf	___awdiv@dividend+1
  3924  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3925  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3926  0F90  160A  118A  20D3  120A  158A  	fcall	___awdiv
  3927  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3928  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3929  0F97  0820               	movf	?___awdiv,w
  3930  0F98  00D5               	movwf	??_scale+5
  3931  0F99  3001               	movlw	1
  3932  0F9A                     u4205:
  3933  0F9A  1003               	clrc
  3934  0F9B  0DD5               	rlf	??_scale+5,f
  3935  0F9C  3EFF               	addlw	-1
  3936  0F9D  1D03               	skipz
  3937  0F9E  2F9A               	goto	u4205
  3938  0F9F  1003               	clrc
  3939  0FA0  0D55               	rlf	??_scale+5,w
  3940  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3941  0FA2  0084               	movwf	4
  3942  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3943  0FA8  00D6               	movwf	??_scale+6
  3944  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3945  0FAE  00D7               	movwf	??_scale+7
  3946  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3947  0FB4  00D8               	movwf	??_scale+8
  3948  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3949  0FBA  00D9               	movwf	??_scale+9
  3950  0FBB  0859               	movf	??_scale+9,w
  3951  0FBC  00B9               	movwf	___flmul@a+3
  3952  0FBD  0858               	movf	??_scale+8,w
  3953  0FBE  00B8               	movwf	___flmul@a+2
  3954  0FBF  0857               	movf	??_scale+7,w
  3955  0FC0  00B7               	movwf	___flmul@a+1
  3956  0FC1  0856               	movf	??_scale+6,w
  3957  0FC2  00B6               	movwf	___flmul@a
  3958  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3959  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3960  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3961  0FCA  0835               	movf	?___flmul+3,w
  3962  0FCB  00CF               	movwf	?_scale+3
  3963  0FCC  0834               	movf	?___flmul+2,w
  3964  0FCD  00CE               	movwf	?_scale+2
  3965  0FCE  0833               	movf	?___flmul+1,w
  3966  0FCF  00CD               	movwf	?_scale+1
  3967  0FD0  0832               	movf	?___flmul,w
  3968  0FD1  00CC               	movwf	?_scale
  3969  0FD2  2FFF               	goto	l228
  3970  0FD3                     l2673:
  3971                           
  3972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3973  0FD3  085E               	movf	scale@scl,w
  3974  0FD4  00D0               	movwf	??_scale
  3975  0FD5  3001               	movlw	1
  3976  0FD6                     u4215:
  3977  0FD6  1003               	clrc
  3978  0FD7  0DD0               	rlf	??_scale,f
  3979  0FD8  3EFF               	addlw	-1
  3980  0FD9  1D03               	skipz
  3981  0FDA  2FD6               	goto	u4215
  3982  0FDB  1003               	clrc
  3983  0FDC  0D50               	rlf	??_scale,w
  3984  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3985  0FDE  0084               	movwf	4
  3986  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3987  0FE4  00D1               	movwf	??_scale+1
  3988  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3989  0FEA  00D2               	movwf	??_scale+2
  3990  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3991  0FF0  00D3               	movwf	??_scale+3
  3992  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3993  0FF6  00D4               	movwf	??_scale+4
  3994  0FF7  0854               	movf	??_scale+4,w
  3995  0FF8  00CF               	movwf	?_scale+3
  3996  0FF9  0853               	movf	??_scale+3,w
  3997  0FFA  00CE               	movwf	?_scale+2
  3998  0FFB  0852               	movf	??_scale+2,w
  3999  0FFC  00CD               	movwf	?_scale+1
  4000  0FFD  0851               	movf	??_scale+1,w
  4001  0FFE  00CC               	movwf	?_scale
  4002  0FFF                     l228:
  4003  0FFF  0008               	return
  4004  1000                     __end_of_scale:
  4005                           
  4006                           	psect	text3
  4007  1E3E                     __ptext3:	
  4008 ;; *************** function ___awmod *****************
  4009 ;; Defined at:
  4010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  divisor         2    2[COMMON] int 
  4013 ;;  dividend        2    4[COMMON] int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  sign            1    8[COMMON] unsigned char 
  4016 ;;  counter         1    7[COMMON] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    2[COMMON] int 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4026 ;;      Params:         4       0       0       0       0
  4027 ;;      Locals:         2       0       0       0       0
  4028 ;;      Temps:          1       0       0       0       0
  4029 ;;      Totals:         7       0       0       0       0
  4030 ;;Total ram usage:        7 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    1
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_scale
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function ___awmod
  4042  1E3E                     ___awmod:
  4043  1E3E                     l2169:	
  4044                           ;incstack = 0
  4045                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4046                           
  4047  1E3E  01F8               	clrf	___awmod@sign
  4048  1E3F                     l2171:
  4049  1E3F  1FF5               	btfss	___awmod@dividend+1,7
  4050  1E40  2E42               	goto	u2911
  4051  1E41  2E43               	goto	u2910
  4052  1E42                     u2911:
  4053  1E42  2E4A               	goto	l2177
  4054  1E43                     u2910:
  4055  1E43                     l2173:
  4056  1E43  09F4               	comf	___awmod@dividend,f
  4057  1E44  09F5               	comf	___awmod@dividend+1,f
  4058  1E45  0AF4               	incf	___awmod@dividend,f
  4059  1E46  1903               	skipnz
  4060  1E47  0AF5               	incf	___awmod@dividend+1,f
  4061  1E48                     l2175:
  4062  1E48  01F8               	clrf	___awmod@sign
  4063  1E49  0AF8               	incf	___awmod@sign,f
  4064  1E4A                     l2177:
  4065  1E4A  1FF3               	btfss	___awmod@divisor+1,7
  4066  1E4B  2E4D               	goto	u2921
  4067  1E4C  2E4E               	goto	u2920
  4068  1E4D                     u2921:
  4069  1E4D  2E53               	goto	l2181
  4070  1E4E                     u2920:
  4071  1E4E                     l2179:
  4072  1E4E  09F2               	comf	___awmod@divisor,f
  4073  1E4F  09F3               	comf	___awmod@divisor+1,f
  4074  1E50  0AF2               	incf	___awmod@divisor,f
  4075  1E51  1903               	skipnz
  4076  1E52  0AF3               	incf	___awmod@divisor+1,f
  4077  1E53                     l2181:
  4078  1E53  0872               	movf	___awmod@divisor,w
  4079  1E54  0473               	iorwf	___awmod@divisor+1,w
  4080  1E55  1903               	btfsc	3,2
  4081  1E56  2E58               	goto	u2931
  4082  1E57  2E59               	goto	u2930
  4083  1E58                     u2931:
  4084  1E58  2E88               	goto	l2199
  4085  1E59                     u2930:
  4086  1E59                     l2183:
  4087  1E59  01F7               	clrf	___awmod@counter
  4088  1E5A  0AF7               	incf	___awmod@counter,f
  4089  1E5B  2E67               	goto	l2189
  4090  1E5C                     l2185:
  4091  1E5C  3001               	movlw	1
  4092  1E5D                     u2945:
  4093  1E5D  1003               	clrc
  4094  1E5E  0DF2               	rlf	___awmod@divisor,f
  4095  1E5F  0DF3               	rlf	___awmod@divisor+1,f
  4096  1E60  3EFF               	addlw	-1
  4097  1E61  1D03               	skipz
  4098  1E62  2E5D               	goto	u2945
  4099  1E63                     l2187:
  4100  1E63  3001               	movlw	1
  4101  1E64  00F6               	movwf	??___awmod
  4102  1E65  0876               	movf	??___awmod,w
  4103  1E66  07F7               	addwf	___awmod@counter,f
  4104  1E67                     l2189:
  4105  1E67  1FF3               	btfss	___awmod@divisor+1,7
  4106  1E68  2E6A               	goto	u2951
  4107  1E69  2E6B               	goto	u2950
  4108  1E6A                     u2951:
  4109  1E6A  2E5C               	goto	l2185
  4110  1E6B                     u2950:
  4111  1E6B                     l2191:
  4112  1E6B  0873               	movf	___awmod@divisor+1,w
  4113  1E6C  0275               	subwf	___awmod@dividend+1,w
  4114  1E6D  1D03               	skipz
  4115  1E6E  2E71               	goto	u2965
  4116  1E6F  0872               	movf	___awmod@divisor,w
  4117  1E70  0274               	subwf	___awmod@dividend,w
  4118  1E71                     u2965:
  4119  1E71  1C03               	skipc
  4120  1E72  2E74               	goto	u2961
  4121  1E73  2E75               	goto	u2960
  4122  1E74                     u2961:
  4123  1E74  2E7B               	goto	l2195
  4124  1E75                     u2960:
  4125  1E75                     l2193:
  4126  1E75  0872               	movf	___awmod@divisor,w
  4127  1E76  02F4               	subwf	___awmod@dividend,f
  4128  1E77  0873               	movf	___awmod@divisor+1,w
  4129  1E78  1C03               	skipc
  4130  1E79  03F5               	decf	___awmod@dividend+1,f
  4131  1E7A  02F5               	subwf	___awmod@dividend+1,f
  4132  1E7B                     l2195:
  4133  1E7B  3001               	movlw	1
  4134  1E7C                     u2975:
  4135  1E7C  1003               	clrc
  4136  1E7D  0CF3               	rrf	___awmod@divisor+1,f
  4137  1E7E  0CF2               	rrf	___awmod@divisor,f
  4138  1E7F  3EFF               	addlw	-1
  4139  1E80  1D03               	skipz
  4140  1E81  2E7C               	goto	u2975
  4141  1E82                     l2197:
  4142  1E82  3001               	movlw	1
  4143  1E83  02F7               	subwf	___awmod@counter,f
  4144  1E84  1D03               	btfss	3,2
  4145  1E85  2E87               	goto	u2981
  4146  1E86  2E88               	goto	u2980
  4147  1E87                     u2981:
  4148  1E87  2E6B               	goto	l2191
  4149  1E88                     u2980:
  4150  1E88                     l2199:
  4151  1E88  0878               	movf	___awmod@sign,w
  4152  1E89  1903               	btfsc	3,2
  4153  1E8A  2E8C               	goto	u2991
  4154  1E8B  2E8D               	goto	u2990
  4155  1E8C                     u2991:
  4156  1E8C  2E92               	goto	l2203
  4157  1E8D                     u2990:
  4158  1E8D                     l2201:
  4159  1E8D  09F4               	comf	___awmod@dividend,f
  4160  1E8E  09F5               	comf	___awmod@dividend+1,f
  4161  1E8F  0AF4               	incf	___awmod@dividend,f
  4162  1E90  1903               	skipnz
  4163  1E91  0AF5               	incf	___awmod@dividend+1,f
  4164  1E92                     l2203:
  4165  1E92  0875               	movf	___awmod@dividend+1,w
  4166  1E93  00F3               	movwf	?___awmod+1
  4167  1E94  0874               	movf	___awmod@dividend,w
  4168  1E95  00F2               	movwf	?___awmod
  4169  1E96                     l464:
  4170  1E96  0008               	return
  4171  1E97                     __end_of___awmod:
  4172                           
  4173                           	psect	text4
  4174  10D3                     __ptext4:	
  4175 ;; *************** function ___awdiv *****************
  4176 ;; Defined at:
  4177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  divisor         2    0[BANK0 ] int 
  4180 ;;  dividend        2    2[BANK0 ] int 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  quotient        2    6[BANK0 ] int 
  4183 ;;  sign            1    5[BANK0 ] unsigned char 
  4184 ;;  counter         1    4[BANK0 ] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  2    0[BANK0 ] int 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4194 ;;      Params:         0       4       0       0       0
  4195 ;;      Locals:         0       4       0       0       0
  4196 ;;      Temps:          1       0       0       0       0
  4197 ;;      Totals:         1       8       0       0       0
  4198 ;;Total ram usage:        9 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_scale
  4205 ;;		_sprintf
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function ___awdiv
  4211  10D3                     ___awdiv:
  4212  10D3                     l2125:	
  4213                           ;incstack = 0
  4214                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4215                           
  4216  10D3  1283               	bcf	3,5	;RP0=0, select bank0
  4217  10D4  1303               	bcf	3,6	;RP1=0, select bank0
  4218  10D5  01A5               	clrf	___awdiv@sign
  4219  10D6                     l2127:
  4220  10D6  1FA1               	btfss	___awdiv@divisor+1,7
  4221  10D7  28D9               	goto	u2811
  4222  10D8  28DA               	goto	u2810
  4223  10D9                     u2811:
  4224  10D9  28E1               	goto	l2133
  4225  10DA                     u2810:
  4226  10DA                     l2129:
  4227  10DA  09A0               	comf	___awdiv@divisor,f
  4228  10DB  09A1               	comf	___awdiv@divisor+1,f
  4229  10DC  0AA0               	incf	___awdiv@divisor,f
  4230  10DD  1903               	skipnz
  4231  10DE  0AA1               	incf	___awdiv@divisor+1,f
  4232  10DF                     l2131:
  4233  10DF  01A5               	clrf	___awdiv@sign
  4234  10E0  0AA5               	incf	___awdiv@sign,f
  4235  10E1                     l2133:
  4236  10E1  1FA3               	btfss	___awdiv@dividend+1,7
  4237  10E2  28E4               	goto	u2821
  4238  10E3  28E5               	goto	u2820
  4239  10E4                     u2821:
  4240  10E4  28EE               	goto	l2139
  4241  10E5                     u2820:
  4242  10E5                     l2135:
  4243  10E5  09A2               	comf	___awdiv@dividend,f
  4244  10E6  09A3               	comf	___awdiv@dividend+1,f
  4245  10E7  0AA2               	incf	___awdiv@dividend,f
  4246  10E8  1903               	skipnz
  4247  10E9  0AA3               	incf	___awdiv@dividend+1,f
  4248  10EA                     l2137:
  4249  10EA  3001               	movlw	1
  4250  10EB  00F9               	movwf	??___awdiv
  4251  10EC  0879               	movf	??___awdiv,w
  4252  10ED  06A5               	xorwf	___awdiv@sign,f
  4253  10EE                     l2139:
  4254  10EE  01A6               	clrf	___awdiv@quotient
  4255  10EF  01A7               	clrf	___awdiv@quotient+1
  4256  10F0                     l2141:
  4257  10F0  0820               	movf	___awdiv@divisor,w
  4258  10F1  0421               	iorwf	___awdiv@divisor+1,w
  4259  10F2  1903               	btfsc	3,2
  4260  10F3  28F5               	goto	u2831
  4261  10F4  28F6               	goto	u2830
  4262  10F5                     u2831:
  4263  10F5  292D               	goto	l2161
  4264  10F6                     u2830:
  4265  10F6                     l2143:
  4266  10F6  01A4               	clrf	___awdiv@counter
  4267  10F7  0AA4               	incf	___awdiv@counter,f
  4268  10F8  2904               	goto	l2149
  4269  10F9                     l2145:
  4270  10F9  3001               	movlw	1
  4271  10FA                     u2845:
  4272  10FA  1003               	clrc
  4273  10FB  0DA0               	rlf	___awdiv@divisor,f
  4274  10FC  0DA1               	rlf	___awdiv@divisor+1,f
  4275  10FD  3EFF               	addlw	-1
  4276  10FE  1D03               	skipz
  4277  10FF  28FA               	goto	u2845
  4278  1100                     l2147:
  4279  1100  3001               	movlw	1
  4280  1101  00F9               	movwf	??___awdiv
  4281  1102  0879               	movf	??___awdiv,w
  4282  1103  07A4               	addwf	___awdiv@counter,f
  4283  1104                     l2149:
  4284  1104  1FA1               	btfss	___awdiv@divisor+1,7
  4285  1105  2907               	goto	u2851
  4286  1106  2908               	goto	u2850
  4287  1107                     u2851:
  4288  1107  28F9               	goto	l2145
  4289  1108                     u2850:
  4290  1108                     l2151:
  4291  1108  3001               	movlw	1
  4292  1109                     u2865:
  4293  1109  1003               	clrc
  4294  110A  0DA6               	rlf	___awdiv@quotient,f
  4295  110B  0DA7               	rlf	___awdiv@quotient+1,f
  4296  110C  3EFF               	addlw	-1
  4297  110D  1D03               	skipz
  4298  110E  2909               	goto	u2865
  4299  110F  0821               	movf	___awdiv@divisor+1,w
  4300  1110  0223               	subwf	___awdiv@dividend+1,w
  4301  1111  1D03               	skipz
  4302  1112  2915               	goto	u2875
  4303  1113  0820               	movf	___awdiv@divisor,w
  4304  1114  0222               	subwf	___awdiv@dividend,w
  4305  1115                     u2875:
  4306  1115  1C03               	skipc
  4307  1116  2918               	goto	u2871
  4308  1117  2919               	goto	u2870
  4309  1118                     u2871:
  4310  1118  2920               	goto	l2157
  4311  1119                     u2870:
  4312  1119                     l2153:
  4313  1119  0820               	movf	___awdiv@divisor,w
  4314  111A  02A2               	subwf	___awdiv@dividend,f
  4315  111B  0821               	movf	___awdiv@divisor+1,w
  4316  111C  1C03               	skipc
  4317  111D  03A3               	decf	___awdiv@dividend+1,f
  4318  111E  02A3               	subwf	___awdiv@dividend+1,f
  4319  111F                     l2155:
  4320  111F  1426               	bsf	___awdiv@quotient,0
  4321  1120                     l2157:
  4322  1120  3001               	movlw	1
  4323  1121                     u2885:
  4324  1121  1003               	clrc
  4325  1122  0CA1               	rrf	___awdiv@divisor+1,f
  4326  1123  0CA0               	rrf	___awdiv@divisor,f
  4327  1124  3EFF               	addlw	-1
  4328  1125  1D03               	skipz
  4329  1126  2921               	goto	u2885
  4330  1127                     l2159:
  4331  1127  3001               	movlw	1
  4332  1128  02A4               	subwf	___awdiv@counter,f
  4333  1129  1D03               	btfss	3,2
  4334  112A  292C               	goto	u2891
  4335  112B  292D               	goto	u2890
  4336  112C                     u2891:
  4337  112C  2908               	goto	l2151
  4338  112D                     u2890:
  4339  112D                     l2161:
  4340  112D  0825               	movf	___awdiv@sign,w
  4341  112E  1903               	btfsc	3,2
  4342  112F  2931               	goto	u2901
  4343  1130  2932               	goto	u2900
  4344  1131                     u2901:
  4345  1131  2937               	goto	l2165
  4346  1132                     u2900:
  4347  1132                     l2163:
  4348  1132  09A6               	comf	___awdiv@quotient,f
  4349  1133  09A7               	comf	___awdiv@quotient+1,f
  4350  1134  0AA6               	incf	___awdiv@quotient,f
  4351  1135  1903               	skipnz
  4352  1136  0AA7               	incf	___awdiv@quotient+1,f
  4353  1137                     l2165:
  4354  1137  0827               	movf	___awdiv@quotient+1,w
  4355  1138  00A1               	movwf	?___awdiv+1
  4356  1139  0826               	movf	___awdiv@quotient,w
  4357  113A  00A0               	movwf	?___awdiv
  4358  113B                     l451:
  4359  113B  0008               	return
  4360  113C                     __end_of___awdiv:
  4361                           
  4362                           	psect	text5
  4363  1B98                     __ptext5:	
  4364 ;; *************** function _isdigit *****************
  4365 ;; Defined at:
  4366 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  c               1    wreg     unsigned char 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  c               1    3[COMMON] unsigned char 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;		None               void
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4380 ;;      Params:         0       0       0       0       0
  4381 ;;      Locals:         2       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0
  4383 ;;      Totals:         2       0       0       0       0
  4384 ;;Total ram usage:        2 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    1
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_sprintf
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function _isdigit
  4396  1B98                     _isdigit:
  4397                           
  4398                           ;incstack = 0
  4399                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4400                           ;isdigit@c stored from wreg
  4401  1B98  00F3               	movwf	isdigit@c
  4402  1B99                     l2677:
  4403  1B99  01F2               	clrf	_isdigit$708
  4404  1B9A                     l2679:
  4405  1B9A  303A               	movlw	58
  4406  1B9B  0273               	subwf	isdigit@c,w
  4407  1B9C  1803               	skipnc
  4408  1B9D  2B9F               	goto	u4221
  4409  1B9E  2BA0               	goto	u4220
  4410  1B9F                     u4221:
  4411  1B9F  2BA8               	goto	l2685
  4412  1BA0                     u4220:
  4413  1BA0                     l2681:
  4414  1BA0  3030               	movlw	48
  4415  1BA1  0273               	subwf	isdigit@c,w
  4416  1BA2  1C03               	skipc
  4417  1BA3  2BA5               	goto	u4231
  4418  1BA4  2BA6               	goto	u4230
  4419  1BA5                     u4231:
  4420  1BA5  2BA8               	goto	l2685
  4421  1BA6                     u4230:
  4422  1BA6                     l2683:
  4423  1BA6  01F2               	clrf	_isdigit$708
  4424  1BA7  0AF2               	incf	_isdigit$708,f
  4425  1BA8                     l2685:
  4426  1BA8  0C72               	rrf	_isdigit$708,w
  4427  1BA9                     l785:
  4428  1BA9  0008               	return
  4429  1BAA                     __end_of_isdigit:
  4430                           
  4431                           	psect	text6
  4432  12B5                     __ptext6:	
  4433 ;; *************** function _fround *****************
  4434 ;; Defined at:
  4435 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  prec            1    wreg     unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  prec            1   63[BANK0 ] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  4   44[BANK0 ] unsigned char 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       4       0       0       0
  4450 ;;      Locals:         0       9       0       0       0
  4451 ;;      Temps:          0       7       0       0       0
  4452 ;;      Totals:         0      20       0       0       0
  4453 ;;Total ram usage:       20 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    3
  4456 ;; This function calls:
  4457 ;;		___flmul
  4458 ;;		___lwdiv
  4459 ;;		___lwmod
  4460 ;; This function is called by:
  4461 ;;		_sprintf
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           
  4466                           ;psect for function _fround
  4467  12B5                     _fround:
  4468                           
  4469                           ;incstack = 0
  4470                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4471                           ;fround@prec stored from wreg
  4472  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  4473  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  4474  12B7  00DF               	movwf	fround@prec
  4475  12B8                     l2619:
  4476                           
  4477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4478  12B8  306E               	movlw	110
  4479  12B9  025F               	subwf	fround@prec,w
  4480  12BA  1C03               	skipc
  4481  12BB  2ABD               	goto	u3971
  4482  12BC  2ABE               	goto	u3970
  4483  12BD                     u3971:
  4484  12BD  2BCB               	goto	l2627
  4485  12BE                     u3970:
  4486  12BE                     l2621:
  4487                           
  4488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4489  12BE  303F               	movlw	63
  4490  12BF  00B5               	movwf	___flmul@b+3
  4491  12C0  3000               	movlw	0
  4492  12C1  00B4               	movwf	___flmul@b+2
  4493  12C2  3000               	movlw	0
  4494  12C3  00B3               	movwf	___flmul@b+1
  4495  12C4  3000               	movlw	0
  4496  12C5  00B2               	movwf	___flmul@b
  4497  12C6  3064               	movlw	100
  4498  12C7  00F8               	movwf	___lwdiv@divisor
  4499  12C8  3000               	movlw	0
  4500  12C9  00F9               	movwf	___lwdiv@divisor+1
  4501  12CA  085F               	movf	fround@prec,w
  4502  12CB  00D0               	movwf	??_fround
  4503  12CC  01D1               	clrf	??_fround+1
  4504  12CD  0850               	movf	??_fround,w
  4505  12CE  00FA               	movwf	___lwdiv@dividend
  4506  12CF  0851               	movf	??_fround+1,w
  4507  12D0  00FB               	movwf	___lwdiv@dividend+1
  4508  12D1  160A  158A  24AC  160A  118A  	fcall	___lwdiv
  4509  12D6  0878               	movf	?___lwdiv,w
  4510  12D7  1283               	bcf	3,5	;RP0=0, select bank0
  4511  12D8  1303               	bcf	3,6	;RP1=0, select bank0
  4512  12D9  00D2               	movwf	??_fround+2
  4513  12DA  3001               	movlw	1
  4514  12DB                     u3985:
  4515  12DB  1003               	clrc
  4516  12DC  0DD2               	rlf	??_fround+2,f
  4517  12DD  3EFF               	addlw	-1
  4518  12DE  1D03               	skipz
  4519  12DF  2ADB               	goto	u3985
  4520  12E0  1003               	clrc
  4521  12E1  0D52               	rlf	??_fround+2,w
  4522  12E2  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4523  12E3  0084               	movwf	4
  4524  12E4  160A  118A  200A  160A  118A  	fcall	stringdir
  4525  12E9  00D3               	movwf	??_fround+3
  4526  12EA  160A  118A  200A  160A  118A  	fcall	stringdir
  4527  12EF  00D4               	movwf	??_fround+4
  4528  12F0  160A  118A  200A  160A  118A  	fcall	stringdir
  4529  12F5  00D5               	movwf	??_fround+5
  4530  12F6  160A  118A  200A  160A  118A  	fcall	stringdir
  4531  12FB  00D6               	movwf	??_fround+6
  4532  12FC  0856               	movf	??_fround+6,w
  4533  12FD  00B9               	movwf	___flmul@a+3
  4534  12FE  0855               	movf	??_fround+5,w
  4535  12FF  00B8               	movwf	___flmul@a+2
  4536  1300  0854               	movf	??_fround+4,w
  4537  1301  00B7               	movwf	___flmul@a+1
  4538  1302  0853               	movf	??_fround+3,w
  4539  1303  00B6               	movwf	___flmul@a
  4540  1304  120A  158A  213C  160A  118A  	fcall	___flmul
  4541  1309  1283               	bcf	3,5	;RP0=0, select bank0
  4542  130A  1303               	bcf	3,6	;RP1=0, select bank0
  4543  130B  0835               	movf	?___flmul+3,w
  4544  130C  00DE               	movwf	_fround$897+3
  4545  130D  0834               	movf	?___flmul+2,w
  4546  130E  00DD               	movwf	_fround$897+2
  4547  130F  0833               	movf	?___flmul+1,w
  4548  1310  00DC               	movwf	_fround$897+1
  4549  1311  0832               	movf	?___flmul,w
  4550  1312  00DB               	movwf	_fround$897
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4553  1313  300A               	movlw	10
  4554  1314  00F8               	movwf	___lwdiv@divisor
  4555  1315  3000               	movlw	0
  4556  1316  00F9               	movwf	___lwdiv@divisor+1
  4557  1317  085F               	movf	fround@prec,w
  4558  1318  00D0               	movwf	??_fround
  4559  1319  01D1               	clrf	??_fround+1
  4560  131A  0850               	movf	??_fround,w
  4561  131B  00F4               	movwf	___lwmod@dividend
  4562  131C  0851               	movf	??_fround+1,w
  4563  131D  00F5               	movwf	___lwmod@dividend+1
  4564  131E  3064               	movlw	100
  4565  131F  00F2               	movwf	___lwmod@divisor
  4566  1320  3000               	movlw	0
  4567  1321  00F3               	movwf	___lwmod@divisor+1
  4568  1322  120A  118A  27BE  160A  118A  	fcall	___lwmod
  4569  1327  0873               	movf	?___lwmod+1,w
  4570  1328  00FB               	movwf	___lwdiv@dividend+1
  4571  1329  0872               	movf	?___lwmod,w
  4572  132A  00FA               	movwf	___lwdiv@dividend
  4573  132B  160A  158A  24AC  160A  118A  	fcall	___lwdiv
  4574  1330  0878               	movf	?___lwdiv,w
  4575  1331  1283               	bcf	3,5	;RP0=0, select bank0
  4576  1332  1303               	bcf	3,6	;RP1=0, select bank0
  4577  1333  00D2               	movwf	??_fround+2
  4578  1334  3001               	movlw	1
  4579  1335                     u3995:
  4580  1335  1003               	clrc
  4581  1336  0DD2               	rlf	??_fround+2,f
  4582  1337  3EFF               	addlw	-1
  4583  1338  1D03               	skipz
  4584  1339  2B35               	goto	u3995
  4585  133A  1003               	clrc
  4586  133B  0D52               	rlf	??_fround+2,w
  4587  133C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4588  133D  0084               	movwf	4
  4589  133E  160A  118A  200A  160A  118A  	fcall	stringdir
  4590  1343  00D3               	movwf	??_fround+3
  4591  1344  160A  118A  200A  160A  118A  	fcall	stringdir
  4592  1349  00D4               	movwf	??_fround+4
  4593  134A  160A  118A  200A  160A  118A  	fcall	stringdir
  4594  134F  00D5               	movwf	??_fround+5
  4595  1350  160A  118A  200A  160A  118A  	fcall	stringdir
  4596  1355  00D6               	movwf	??_fround+6
  4597  1356  0856               	movf	??_fround+6,w
  4598  1357  00B5               	movwf	___flmul@b+3
  4599  1358  0855               	movf	??_fround+5,w
  4600  1359  00B4               	movwf	___flmul@b+2
  4601  135A  0854               	movf	??_fround+4,w
  4602  135B  00B3               	movwf	___flmul@b+1
  4603  135C  0853               	movf	??_fround+3,w
  4604  135D  00B2               	movwf	___flmul@b
  4605  135E  085E               	movf	_fround$897+3,w
  4606  135F  00B9               	movwf	___flmul@a+3
  4607  1360  085D               	movf	_fround$897+2,w
  4608  1361  00B8               	movwf	___flmul@a+2
  4609  1362  085C               	movf	_fround$897+1,w
  4610  1363  00B7               	movwf	___flmul@a+1
  4611  1364  085B               	movf	_fround$897,w
  4612  1365  00B6               	movwf	___flmul@a
  4613  1366  120A  158A  213C  160A  118A  	fcall	___flmul
  4614  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4615  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4616  136D  0835               	movf	?___flmul+3,w
  4617  136E  00DA               	movwf	_fround$898+3
  4618  136F  0834               	movf	?___flmul+2,w
  4619  1370  00D9               	movwf	_fround$898+2
  4620  1371  0833               	movf	?___flmul+1,w
  4621  1372  00D8               	movwf	_fround$898+1
  4622  1373  0832               	movf	?___flmul,w
  4623  1374  00D7               	movwf	_fround$898
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4626  1375  300A               	movlw	10
  4627  1376  00F2               	movwf	___lwmod@divisor
  4628  1377  3000               	movlw	0
  4629  1378  00F3               	movwf	___lwmod@divisor+1
  4630  1379  085F               	movf	fround@prec,w
  4631  137A  00D0               	movwf	??_fround
  4632  137B  01D1               	clrf	??_fround+1
  4633  137C  0850               	movf	??_fround,w
  4634  137D  00F4               	movwf	___lwmod@dividend
  4635  137E  0851               	movf	??_fround+1,w
  4636  137F  00F5               	movwf	___lwmod@dividend+1
  4637  1380  120A  118A  27BE  160A  118A  	fcall	___lwmod
  4638  1385  0872               	movf	?___lwmod,w
  4639  1386  1283               	bcf	3,5	;RP0=0, select bank0
  4640  1387  1303               	bcf	3,6	;RP1=0, select bank0
  4641  1388  00D2               	movwf	??_fround+2
  4642  1389  3001               	movlw	1
  4643  138A                     u4005:
  4644  138A  1003               	clrc
  4645  138B  0DD2               	rlf	??_fround+2,f
  4646  138C  3EFF               	addlw	-1
  4647  138D  1D03               	skipz
  4648  138E  2B8A               	goto	u4005
  4649  138F  1003               	clrc
  4650  1390  0D52               	rlf	??_fround+2,w
  4651  1391  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4652  1392  0084               	movwf	4
  4653  1393  160A  118A  200A  160A  118A  	fcall	stringdir
  4654  1398  00D3               	movwf	??_fround+3
  4655  1399  160A  118A  200A  160A  118A  	fcall	stringdir
  4656  139E  00D4               	movwf	??_fround+4
  4657  139F  160A  118A  200A  160A  118A  	fcall	stringdir
  4658  13A4  00D5               	movwf	??_fround+5
  4659  13A5  160A  118A  200A  160A  118A  	fcall	stringdir
  4660  13AA  00D6               	movwf	??_fround+6
  4661  13AB  0856               	movf	??_fround+6,w
  4662  13AC  00B5               	movwf	___flmul@b+3
  4663  13AD  0855               	movf	??_fround+5,w
  4664  13AE  00B4               	movwf	___flmul@b+2
  4665  13AF  0854               	movf	??_fround+4,w
  4666  13B0  00B3               	movwf	___flmul@b+1
  4667  13B1  0853               	movf	??_fround+3,w
  4668  13B2  00B2               	movwf	___flmul@b
  4669  13B3  085A               	movf	_fround$898+3,w
  4670  13B4  00B9               	movwf	___flmul@a+3
  4671  13B5  0859               	movf	_fround$898+2,w
  4672  13B6  00B8               	movwf	___flmul@a+2
  4673  13B7  0858               	movf	_fround$898+1,w
  4674  13B8  00B7               	movwf	___flmul@a+1
  4675  13B9  0857               	movf	_fround$898,w
  4676  13BA  00B6               	movwf	___flmul@a
  4677  13BB  120A  158A  213C  160A  118A  	fcall	___flmul
  4678  13C0  1283               	bcf	3,5	;RP0=0, select bank0
  4679  13C1  1303               	bcf	3,6	;RP1=0, select bank0
  4680  13C2  0835               	movf	?___flmul+3,w
  4681  13C3  00CF               	movwf	?_fround+3
  4682  13C4  0834               	movf	?___flmul+2,w
  4683  13C5  00CE               	movwf	?_fround+2
  4684  13C6  0833               	movf	?___flmul+1,w
  4685  13C7  00CD               	movwf	?_fround+1
  4686  13C8  0832               	movf	?___flmul,w
  4687  13C9  00CC               	movwf	?_fround
  4688  13CA  2CBF               	goto	l221
  4689  13CB                     l2627:
  4690  13CB  300B               	movlw	11
  4691  13CC  025F               	subwf	fround@prec,w
  4692  13CD  1C03               	skipc
  4693  13CE  2BD0               	goto	u4011
  4694  13CF  2BD1               	goto	u4010
  4695  13D0                     u4011:
  4696  13D0  2C7C               	goto	l2633
  4697  13D1                     u4010:
  4698  13D1                     l2629:
  4699                           
  4700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4701  13D1  303F               	movlw	63
  4702  13D2  00B5               	movwf	___flmul@b+3
  4703  13D3  3000               	movlw	0
  4704  13D4  00B4               	movwf	___flmul@b+2
  4705  13D5  3000               	movlw	0
  4706  13D6  00B3               	movwf	___flmul@b+1
  4707  13D7  3000               	movlw	0
  4708  13D8  00B2               	movwf	___flmul@b
  4709  13D9  300A               	movlw	10
  4710  13DA  00F8               	movwf	___lwdiv@divisor
  4711  13DB  3000               	movlw	0
  4712  13DC  00F9               	movwf	___lwdiv@divisor+1
  4713  13DD  085F               	movf	fround@prec,w
  4714  13DE  00D0               	movwf	??_fround
  4715  13DF  01D1               	clrf	??_fround+1
  4716  13E0  0850               	movf	??_fround,w
  4717  13E1  00FA               	movwf	___lwdiv@dividend
  4718  13E2  0851               	movf	??_fround+1,w
  4719  13E3  00FB               	movwf	___lwdiv@dividend+1
  4720  13E4  160A  158A  24AC  160A  118A  	fcall	___lwdiv
  4721  13E9  0878               	movf	?___lwdiv,w
  4722  13EA  1283               	bcf	3,5	;RP0=0, select bank0
  4723  13EB  1303               	bcf	3,6	;RP1=0, select bank0
  4724  13EC  00D2               	movwf	??_fround+2
  4725  13ED  3001               	movlw	1
  4726  13EE                     u4025:
  4727  13EE  1003               	clrc
  4728  13EF  0DD2               	rlf	??_fround+2,f
  4729  13F0  3EFF               	addlw	-1
  4730  13F1  1D03               	skipz
  4731  13F2  2BEE               	goto	u4025
  4732  13F3  1003               	clrc
  4733  13F4  0D52               	rlf	??_fround+2,w
  4734  13F5  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4735  13F6  0084               	movwf	4
  4736  13F7  160A  118A  200A  160A  118A  	fcall	stringdir
  4737  13FC  00D3               	movwf	??_fround+3
  4738  13FD  160A  118A  200A  160A  118A  	fcall	stringdir
  4739  1402  00D4               	movwf	??_fround+4
  4740  1403  160A  118A  200A  160A  118A  	fcall	stringdir
  4741  1408  00D5               	movwf	??_fround+5
  4742  1409  160A  118A  200A  160A  118A  	fcall	stringdir
  4743  140E  00D6               	movwf	??_fround+6
  4744  140F  0856               	movf	??_fround+6,w
  4745  1410  00B9               	movwf	___flmul@a+3
  4746  1411  0855               	movf	??_fround+5,w
  4747  1412  00B8               	movwf	___flmul@a+2
  4748  1413  0854               	movf	??_fround+4,w
  4749  1414  00B7               	movwf	___flmul@a+1
  4750  1415  0853               	movf	??_fround+3,w
  4751  1416  00B6               	movwf	___flmul@a
  4752  1417  120A  158A  213C  160A  118A  	fcall	___flmul
  4753  141C  1283               	bcf	3,5	;RP0=0, select bank0
  4754  141D  1303               	bcf	3,6	;RP1=0, select bank0
  4755  141E  0835               	movf	?___flmul+3,w
  4756  141F  00DE               	movwf	_fround$897+3
  4757  1420  0834               	movf	?___flmul+2,w
  4758  1421  00DD               	movwf	_fround$897+2
  4759  1422  0833               	movf	?___flmul+1,w
  4760  1423  00DC               	movwf	_fround$897+1
  4761  1424  0832               	movf	?___flmul,w
  4762  1425  00DB               	movwf	_fround$897
  4763                           
  4764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4765  1426  300A               	movlw	10
  4766  1427  00F2               	movwf	___lwmod@divisor
  4767  1428  3000               	movlw	0
  4768  1429  00F3               	movwf	___lwmod@divisor+1
  4769  142A  085F               	movf	fround@prec,w
  4770  142B  00D0               	movwf	??_fround
  4771  142C  01D1               	clrf	??_fround+1
  4772  142D  0850               	movf	??_fround,w
  4773  142E  00F4               	movwf	___lwmod@dividend
  4774  142F  0851               	movf	??_fround+1,w
  4775  1430  00F5               	movwf	___lwmod@dividend+1
  4776  1431  120A  118A  27BE  160A  118A  	fcall	___lwmod
  4777  1436  0872               	movf	?___lwmod,w
  4778  1437  1283               	bcf	3,5	;RP0=0, select bank0
  4779  1438  1303               	bcf	3,6	;RP1=0, select bank0
  4780  1439  00D2               	movwf	??_fround+2
  4781  143A  3001               	movlw	1
  4782  143B                     u4035:
  4783  143B  1003               	clrc
  4784  143C  0DD2               	rlf	??_fround+2,f
  4785  143D  3EFF               	addlw	-1
  4786  143E  1D03               	skipz
  4787  143F  2C3B               	goto	u4035
  4788  1440  1003               	clrc
  4789  1441  0D52               	rlf	??_fround+2,w
  4790  1442  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4791  1443  0084               	movwf	4
  4792  1444  160A  118A  200A  160A  118A  	fcall	stringdir
  4793  1449  00D3               	movwf	??_fround+3
  4794  144A  160A  118A  200A  160A  118A  	fcall	stringdir
  4795  144F  00D4               	movwf	??_fround+4
  4796  1450  160A  118A  200A  160A  118A  	fcall	stringdir
  4797  1455  00D5               	movwf	??_fround+5
  4798  1456  160A  118A  200A  160A  118A  	fcall	stringdir
  4799  145B  00D6               	movwf	??_fround+6
  4800  145C  0856               	movf	??_fround+6,w
  4801  145D  00B5               	movwf	___flmul@b+3
  4802  145E  0855               	movf	??_fround+5,w
  4803  145F  00B4               	movwf	___flmul@b+2
  4804  1460  0854               	movf	??_fround+4,w
  4805  1461  00B3               	movwf	___flmul@b+1
  4806  1462  0853               	movf	??_fround+3,w
  4807  1463  00B2               	movwf	___flmul@b
  4808  1464  085E               	movf	_fround$897+3,w
  4809  1465  00B9               	movwf	___flmul@a+3
  4810  1466  085D               	movf	_fround$897+2,w
  4811  1467  00B8               	movwf	___flmul@a+2
  4812  1468  085C               	movf	_fround$897+1,w
  4813  1469  00B7               	movwf	___flmul@a+1
  4814  146A  085B               	movf	_fround$897,w
  4815  146B  00B6               	movwf	___flmul@a
  4816  146C  120A  158A  213C  160A  118A  	fcall	___flmul
  4817  1471  1283               	bcf	3,5	;RP0=0, select bank0
  4818  1472  1303               	bcf	3,6	;RP1=0, select bank0
  4819  1473  0835               	movf	?___flmul+3,w
  4820  1474  00CF               	movwf	?_fround+3
  4821  1475  0834               	movf	?___flmul+2,w
  4822  1476  00CE               	movwf	?_fround+2
  4823  1477  0833               	movf	?___flmul+1,w
  4824  1478  00CD               	movwf	?_fround+1
  4825  1479  0832               	movf	?___flmul,w
  4826  147A  00CC               	movwf	?_fround
  4827  147B  2CBF               	goto	l221
  4828  147C                     l2633:
  4829                           
  4830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4831  147C  303F               	movlw	63
  4832  147D  00B5               	movwf	___flmul@b+3
  4833  147E  3000               	movlw	0
  4834  147F  00B4               	movwf	___flmul@b+2
  4835  1480  3000               	movlw	0
  4836  1481  00B3               	movwf	___flmul@b+1
  4837  1482  3000               	movlw	0
  4838  1483  00B2               	movwf	___flmul@b
  4839  1484  085F               	movf	fround@prec,w
  4840  1485  00D0               	movwf	??_fround
  4841  1486  3001               	movlw	1
  4842  1487                     u4045:
  4843  1487  1003               	clrc
  4844  1488  0DD0               	rlf	??_fround,f
  4845  1489  3EFF               	addlw	-1
  4846  148A  1D03               	skipz
  4847  148B  2C87               	goto	u4045
  4848  148C  1003               	clrc
  4849  148D  0D50               	rlf	??_fround,w
  4850  148E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4851  148F  0084               	movwf	4
  4852  1490  160A  118A  200A  160A  118A  	fcall	stringdir
  4853  1495  00D1               	movwf	??_fround+1
  4854  1496  160A  118A  200A  160A  118A  	fcall	stringdir
  4855  149B  00D2               	movwf	??_fround+2
  4856  149C  160A  118A  200A  160A  118A  	fcall	stringdir
  4857  14A1  00D3               	movwf	??_fround+3
  4858  14A2  160A  118A  200A  160A  118A  	fcall	stringdir
  4859  14A7  00D4               	movwf	??_fround+4
  4860  14A8  0854               	movf	??_fround+4,w
  4861  14A9  00B9               	movwf	___flmul@a+3
  4862  14AA  0853               	movf	??_fround+3,w
  4863  14AB  00B8               	movwf	___flmul@a+2
  4864  14AC  0852               	movf	??_fround+2,w
  4865  14AD  00B7               	movwf	___flmul@a+1
  4866  14AE  0851               	movf	??_fround+1,w
  4867  14AF  00B6               	movwf	___flmul@a
  4868  14B0  120A  158A  213C  160A  118A  	fcall	___flmul
  4869  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  4870  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  4871  14B7  0835               	movf	?___flmul+3,w
  4872  14B8  00CF               	movwf	?_fround+3
  4873  14B9  0834               	movf	?___flmul+2,w
  4874  14BA  00CE               	movwf	?_fround+2
  4875  14BB  0833               	movf	?___flmul+1,w
  4876  14BC  00CD               	movwf	?_fround+1
  4877  14BD  0832               	movf	?___flmul,w
  4878  14BE  00CC               	movwf	?_fround
  4879  14BF                     l221:
  4880  14BF  0008               	return
  4881  14C0                     __end_of_fround:
  4882                           
  4883                           	psect	text7
  4884  07BE                     __ptext7:	
  4885 ;; *************** function ___lwmod *****************
  4886 ;; Defined at:
  4887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  divisor         2    2[COMMON] unsigned int 
  4890 ;;  dividend        2    4[COMMON] unsigned int 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  counter         1    7[COMMON] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  2    2[COMMON] unsigned int 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         4       0       0       0       0
  4903 ;;      Locals:         1       0       0       0       0
  4904 ;;      Temps:          1       0       0       0       0
  4905 ;;      Totals:         6       0       0       0       0
  4906 ;;Total ram usage:        6 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_fround
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function ___lwmod
  4918  07BE                     ___lwmod:
  4919  07BE                     l2233:	
  4920                           ;incstack = 0
  4921                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4922                           
  4923  07BE  0872               	movf	___lwmod@divisor,w
  4924  07BF  0473               	iorwf	___lwmod@divisor+1,w
  4925  07C0  1903               	btfsc	3,2
  4926  07C1  2FC3               	goto	u3071
  4927  07C2  2FC4               	goto	u3070
  4928  07C3                     u3071:
  4929  07C3  2FF3               	goto	l2251
  4930  07C4                     u3070:
  4931  07C4                     l2235:
  4932  07C4  01F7               	clrf	___lwmod@counter
  4933  07C5  0AF7               	incf	___lwmod@counter,f
  4934  07C6  2FD2               	goto	l2241
  4935  07C7                     l2237:
  4936  07C7  3001               	movlw	1
  4937  07C8                     u3085:
  4938  07C8  1003               	clrc
  4939  07C9  0DF2               	rlf	___lwmod@divisor,f
  4940  07CA  0DF3               	rlf	___lwmod@divisor+1,f
  4941  07CB  3EFF               	addlw	-1
  4942  07CC  1D03               	skipz
  4943  07CD  2FC8               	goto	u3085
  4944  07CE                     l2239:
  4945  07CE  3001               	movlw	1
  4946  07CF  00F6               	movwf	??___lwmod
  4947  07D0  0876               	movf	??___lwmod,w
  4948  07D1  07F7               	addwf	___lwmod@counter,f
  4949  07D2                     l2241:
  4950  07D2  1FF3               	btfss	___lwmod@divisor+1,7
  4951  07D3  2FD5               	goto	u3091
  4952  07D4  2FD6               	goto	u3090
  4953  07D5                     u3091:
  4954  07D5  2FC7               	goto	l2237
  4955  07D6                     u3090:
  4956  07D6                     l2243:
  4957  07D6  0873               	movf	___lwmod@divisor+1,w
  4958  07D7  0275               	subwf	___lwmod@dividend+1,w
  4959  07D8  1D03               	skipz
  4960  07D9  2FDC               	goto	u3105
  4961  07DA  0872               	movf	___lwmod@divisor,w
  4962  07DB  0274               	subwf	___lwmod@dividend,w
  4963  07DC                     u3105:
  4964  07DC  1C03               	skipc
  4965  07DD  2FDF               	goto	u3101
  4966  07DE  2FE0               	goto	u3100
  4967  07DF                     u3101:
  4968  07DF  2FE6               	goto	l2247
  4969  07E0                     u3100:
  4970  07E0                     l2245:
  4971  07E0  0872               	movf	___lwmod@divisor,w
  4972  07E1  02F4               	subwf	___lwmod@dividend,f
  4973  07E2  0873               	movf	___lwmod@divisor+1,w
  4974  07E3  1C03               	skipc
  4975  07E4  03F5               	decf	___lwmod@dividend+1,f
  4976  07E5  02F5               	subwf	___lwmod@dividend+1,f
  4977  07E6                     l2247:
  4978  07E6  3001               	movlw	1
  4979  07E7                     u3115:
  4980  07E7  1003               	clrc
  4981  07E8  0CF3               	rrf	___lwmod@divisor+1,f
  4982  07E9  0CF2               	rrf	___lwmod@divisor,f
  4983  07EA  3EFF               	addlw	-1
  4984  07EB  1D03               	skipz
  4985  07EC  2FE7               	goto	u3115
  4986  07ED                     l2249:
  4987  07ED  3001               	movlw	1
  4988  07EE  02F7               	subwf	___lwmod@counter,f
  4989  07EF  1D03               	btfss	3,2
  4990  07F0  2FF2               	goto	u3121
  4991  07F1  2FF3               	goto	u3120
  4992  07F2                     u3121:
  4993  07F2  2FD6               	goto	l2243
  4994  07F3                     u3120:
  4995  07F3                     l2251:
  4996  07F3  0875               	movf	___lwmod@dividend+1,w
  4997  07F4  00F3               	movwf	?___lwmod+1
  4998  07F5  0874               	movf	___lwmod@dividend,w
  4999  07F6  00F2               	movwf	?___lwmod
  5000  07F7                     l614:
  5001  07F7  0008               	return
  5002  07F8                     __end_of___lwmod:
  5003                           
  5004                           	psect	text8
  5005  1CAC                     __ptext8:	
  5006 ;; *************** function ___lwdiv *****************
  5007 ;; Defined at:
  5008 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  divisor         2    8[COMMON] unsigned int 
  5011 ;;  dividend        2   10[COMMON] unsigned int 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  quotient        2    1[BANK0 ] unsigned int 
  5014 ;;  counter         1    3[BANK0 ] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  2    8[COMMON] unsigned int 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5024 ;;      Params:         4       0       0       0       0
  5025 ;;      Locals:         0       3       0       0       0
  5026 ;;      Temps:          0       1       0       0       0
  5027 ;;      Totals:         4       4       0       0       0
  5028 ;;Total ram usage:        8 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_main
  5035 ;;		_fround
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           
  5040                           ;psect for function ___lwdiv
  5041  1CAC                     ___lwdiv:
  5042  1CAC                     l2207:	
  5043                           ;incstack = 0
  5044                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5045                           
  5046  1CAC  1283               	bcf	3,5	;RP0=0, select bank0
  5047  1CAD  1303               	bcf	3,6	;RP1=0, select bank0
  5048  1CAE  01A1               	clrf	___lwdiv@quotient
  5049  1CAF  01A2               	clrf	___lwdiv@quotient+1
  5050  1CB0                     l2209:
  5051  1CB0  0878               	movf	___lwdiv@divisor,w
  5052  1CB1  0479               	iorwf	___lwdiv@divisor+1,w
  5053  1CB2  1903               	btfsc	3,2
  5054  1CB3  2CB5               	goto	u3001
  5055  1CB4  2CB6               	goto	u3000
  5056  1CB5                     u3001:
  5057  1CB5  2CED               	goto	l2229
  5058  1CB6                     u3000:
  5059  1CB6                     l2211:
  5060  1CB6  01A3               	clrf	___lwdiv@counter
  5061  1CB7  0AA3               	incf	___lwdiv@counter,f
  5062  1CB8  2CC4               	goto	l2217
  5063  1CB9                     l2213:
  5064  1CB9  3001               	movlw	1
  5065  1CBA                     u3015:
  5066  1CBA  1003               	clrc
  5067  1CBB  0DF8               	rlf	___lwdiv@divisor,f
  5068  1CBC  0DF9               	rlf	___lwdiv@divisor+1,f
  5069  1CBD  3EFF               	addlw	-1
  5070  1CBE  1D03               	skipz
  5071  1CBF  2CBA               	goto	u3015
  5072  1CC0                     l2215:
  5073  1CC0  3001               	movlw	1
  5074  1CC1  00A0               	movwf	??___lwdiv
  5075  1CC2  0820               	movf	??___lwdiv,w
  5076  1CC3  07A3               	addwf	___lwdiv@counter,f
  5077  1CC4                     l2217:
  5078  1CC4  1FF9               	btfss	___lwdiv@divisor+1,7
  5079  1CC5  2CC7               	goto	u3021
  5080  1CC6  2CC8               	goto	u3020
  5081  1CC7                     u3021:
  5082  1CC7  2CB9               	goto	l2213
  5083  1CC8                     u3020:
  5084  1CC8                     l2219:
  5085  1CC8  3001               	movlw	1
  5086  1CC9                     u3035:
  5087  1CC9  1003               	clrc
  5088  1CCA  0DA1               	rlf	___lwdiv@quotient,f
  5089  1CCB  0DA2               	rlf	___lwdiv@quotient+1,f
  5090  1CCC  3EFF               	addlw	-1
  5091  1CCD  1D03               	skipz
  5092  1CCE  2CC9               	goto	u3035
  5093  1CCF  0879               	movf	___lwdiv@divisor+1,w
  5094  1CD0  027B               	subwf	___lwdiv@dividend+1,w
  5095  1CD1  1D03               	skipz
  5096  1CD2  2CD5               	goto	u3045
  5097  1CD3  0878               	movf	___lwdiv@divisor,w
  5098  1CD4  027A               	subwf	___lwdiv@dividend,w
  5099  1CD5                     u3045:
  5100  1CD5  1C03               	skipc
  5101  1CD6  2CD8               	goto	u3041
  5102  1CD7  2CD9               	goto	u3040
  5103  1CD8                     u3041:
  5104  1CD8  2CE0               	goto	l2225
  5105  1CD9                     u3040:
  5106  1CD9                     l2221:
  5107  1CD9  0878               	movf	___lwdiv@divisor,w
  5108  1CDA  02FA               	subwf	___lwdiv@dividend,f
  5109  1CDB  0879               	movf	___lwdiv@divisor+1,w
  5110  1CDC  1C03               	skipc
  5111  1CDD  03FB               	decf	___lwdiv@dividend+1,f
  5112  1CDE  02FB               	subwf	___lwdiv@dividend+1,f
  5113  1CDF                     l2223:
  5114  1CDF  1421               	bsf	___lwdiv@quotient,0
  5115  1CE0                     l2225:
  5116  1CE0  3001               	movlw	1
  5117  1CE1                     u3055:
  5118  1CE1  1003               	clrc
  5119  1CE2  0CF9               	rrf	___lwdiv@divisor+1,f
  5120  1CE3  0CF8               	rrf	___lwdiv@divisor,f
  5121  1CE4  3EFF               	addlw	-1
  5122  1CE5  1D03               	skipz
  5123  1CE6  2CE1               	goto	u3055
  5124  1CE7                     l2227:
  5125  1CE7  3001               	movlw	1
  5126  1CE8  02A3               	subwf	___lwdiv@counter,f
  5127  1CE9  1D03               	btfss	3,2
  5128  1CEA  2CEC               	goto	u3061
  5129  1CEB  2CED               	goto	u3060
  5130  1CEC                     u3061:
  5131  1CEC  2CC8               	goto	l2219
  5132  1CED                     u3060:
  5133  1CED                     l2229:
  5134  1CED  0822               	movf	___lwdiv@quotient+1,w
  5135  1CEE  00F9               	movwf	?___lwdiv+1
  5136  1CEF  0821               	movf	___lwdiv@quotient,w
  5137  1CF0  00F8               	movwf	?___lwdiv
  5138  1CF1                     l604:
  5139  1CF1  0008               	return
  5140  1CF2                     __end_of___lwdiv:
  5141                           
  5142                           	psect	text9
  5143  093C                     __ptext9:	
  5144 ;; *************** function ___flmul *****************
  5145 ;; Defined at:
  5146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  b               4   18[BANK0 ] unsigned int 
  5149 ;;  a               4   22[BANK0 ] unsigned int 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  prod            4   38[BANK0 ] struct .
  5152 ;;  grs             4   32[BANK0 ] unsigned long 
  5153 ;;  temp            2   42[BANK0 ] struct .
  5154 ;;  bexp            1   37[BANK0 ] unsigned char 
  5155 ;;  aexp            1   36[BANK0 ] unsigned char 
  5156 ;;  sign            1   31[BANK0 ] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  4   18[BANK0 ] unsigned char 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5166 ;;      Params:         0       8       0       0       0
  5167 ;;      Locals:         0      13       0       0       0
  5168 ;;      Temps:          0       5       0       0       0
  5169 ;;      Totals:         0      26       0       0       0
  5170 ;;Total ram usage:       26 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    2
  5173 ;; This function calls:
  5174 ;;		__Umul8_16
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;;		_fround
  5178 ;;		_scale
  5179 ;;		_sprintf
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function ___flmul
  5185  093C                     ___flmul:
  5186  093C                     l2449:	
  5187                           ;incstack = 0
  5188                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5189                           
  5190  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5191  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5192  093E  0835               	movf	___flmul@b+3,w
  5193  093F  3980               	andlw	128
  5194  0940  00BA               	movwf	??___flmul
  5195  0941  083A               	movf	??___flmul,w
  5196  0942  00BF               	movwf	___flmul@sign
  5197  0943                     l2451:
  5198  0943  0835               	movf	___flmul@b+3,w
  5199  0944  00BA               	movwf	??___flmul
  5200  0945  073A               	addwf	??___flmul,w
  5201  0946  00BB               	movwf	??___flmul+1
  5202  0947  083B               	movf	??___flmul+1,w
  5203  0948  00C5               	movwf	___flmul@bexp
  5204  0949                     l2453:
  5205  0949  1FB4               	btfss	___flmul@b+2,7
  5206  094A  294C               	goto	u3591
  5207  094B  294D               	goto	u3590
  5208  094C                     u3591:
  5209  094C  294E               	goto	l2457
  5210  094D                     u3590:
  5211  094D                     l2455:
  5212  094D  1445               	bsf	___flmul@bexp,0
  5213  094E                     l2457:
  5214  094E  0845               	movf	___flmul@bexp,w
  5215  094F  1903               	btfsc	3,2
  5216  0950  2952               	goto	u3601
  5217  0951  2953               	goto	u3600
  5218  0952                     u3601:
  5219  0952  2962               	goto	l2465
  5220  0953                     u3600:
  5221  0953                     l2459:
  5222  0953  0A45               	incf	___flmul@bexp,w
  5223  0954  1D03               	btfss	3,2
  5224  0955  2957               	goto	u3611
  5225  0956  2958               	goto	u3610
  5226  0957                     u3611:
  5227  0957  2960               	goto	l2463
  5228  0958                     u3610:
  5229  0958                     l2461:
  5230  0958  3000               	movlw	0
  5231  0959  00B5               	movwf	___flmul@b+3
  5232  095A  3000               	movlw	0
  5233  095B  00B4               	movwf	___flmul@b+2
  5234  095C  3000               	movlw	0
  5235  095D  00B3               	movwf	___flmul@b+1
  5236  095E  3000               	movlw	0
  5237  095F  00B2               	movwf	___flmul@b
  5238  0960                     l2463:
  5239  0960  17B4               	bsf	___flmul@b+2,7
  5240  0961  296A               	goto	l2467
  5241  0962                     l2465:
  5242  0962  3000               	movlw	0
  5243  0963  00B5               	movwf	___flmul@b+3
  5244  0964  3000               	movlw	0
  5245  0965  00B4               	movwf	___flmul@b+2
  5246  0966  3000               	movlw	0
  5247  0967  00B3               	movwf	___flmul@b+1
  5248  0968  3000               	movlw	0
  5249  0969  00B2               	movwf	___flmul@b
  5250  096A                     l2467:
  5251  096A  0839               	movf	___flmul@a+3,w
  5252  096B  3980               	andlw	128
  5253  096C  00BA               	movwf	??___flmul
  5254  096D  083A               	movf	??___flmul,w
  5255  096E  06BF               	xorwf	___flmul@sign,f
  5256  096F                     l2469:
  5257  096F  0839               	movf	___flmul@a+3,w
  5258  0970  00BA               	movwf	??___flmul
  5259  0971  073A               	addwf	??___flmul,w
  5260  0972  00BB               	movwf	??___flmul+1
  5261  0973  083B               	movf	??___flmul+1,w
  5262  0974  00C4               	movwf	___flmul@aexp
  5263  0975                     l2471:
  5264  0975  1FB8               	btfss	___flmul@a+2,7
  5265  0976  2978               	goto	u3621
  5266  0977  2979               	goto	u3620
  5267  0978                     u3621:
  5268  0978  297A               	goto	l2475
  5269  0979                     u3620:
  5270  0979                     l2473:
  5271  0979  1444               	bsf	___flmul@aexp,0
  5272  097A                     l2475:
  5273  097A  0844               	movf	___flmul@aexp,w
  5274  097B  1903               	btfsc	3,2
  5275  097C  297E               	goto	u3631
  5276  097D  297F               	goto	u3630
  5277  097E                     u3631:
  5278  097E  298E               	goto	l2483
  5279  097F                     u3630:
  5280  097F                     l2477:
  5281  097F  0A44               	incf	___flmul@aexp,w
  5282  0980  1D03               	btfss	3,2
  5283  0981  2983               	goto	u3641
  5284  0982  2984               	goto	u3640
  5285  0983                     u3641:
  5286  0983  298C               	goto	l2481
  5287  0984                     u3640:
  5288  0984                     l2479:
  5289  0984  3000               	movlw	0
  5290  0985  00B9               	movwf	___flmul@a+3
  5291  0986  3000               	movlw	0
  5292  0987  00B8               	movwf	___flmul@a+2
  5293  0988  3000               	movlw	0
  5294  0989  00B7               	movwf	___flmul@a+1
  5295  098A  3000               	movlw	0
  5296  098B  00B6               	movwf	___flmul@a
  5297  098C                     l2481:
  5298  098C  17B8               	bsf	___flmul@a+2,7
  5299  098D  2996               	goto	l2485
  5300  098E                     l2483:
  5301  098E  3000               	movlw	0
  5302  098F  00B9               	movwf	___flmul@a+3
  5303  0990  3000               	movlw	0
  5304  0991  00B8               	movwf	___flmul@a+2
  5305  0992  3000               	movlw	0
  5306  0993  00B7               	movwf	___flmul@a+1
  5307  0994  3000               	movlw	0
  5308  0995  00B6               	movwf	___flmul@a
  5309  0996                     l2485:
  5310  0996  0844               	movf	___flmul@aexp,w
  5311  0997  1903               	btfsc	3,2
  5312  0998  299A               	goto	u3651
  5313  0999  299B               	goto	u3650
  5314  099A                     u3651:
  5315  099A  29A0               	goto	l2489
  5316  099B                     u3650:
  5317  099B                     l2487:
  5318  099B  0845               	movf	___flmul@bexp,w
  5319  099C  1D03               	btfss	3,2
  5320  099D  299F               	goto	u3661
  5321  099E  29A0               	goto	u3660
  5322  099F                     u3661:
  5323  099F  29A9               	goto	l2493
  5324  09A0                     u3660:
  5325  09A0                     l2489:
  5326  09A0  3000               	movlw	0
  5327  09A1  00B5               	movwf	?___flmul+3
  5328  09A2  3000               	movlw	0
  5329  09A3  00B4               	movwf	?___flmul+2
  5330  09A4  3000               	movlw	0
  5331  09A5  00B3               	movwf	?___flmul+1
  5332  09A6  3000               	movlw	0
  5333  09A7  00B2               	movwf	?___flmul
  5334  09A8  2C9C               	goto	l721
  5335  09A9                     l2493:
  5336  09A9  0832               	movf	___flmul@b,w
  5337  09AA  00BA               	movwf	??___flmul
  5338  09AB  083A               	movf	??___flmul,w
  5339  09AC  00F2               	movwf	__Umul8_16@multiplicand
  5340  09AD  0838               	movf	___flmul@a+2,w
  5341  09AE  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5342  09B3  0873               	movf	?__Umul8_16+1,w
  5343  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5344  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5345  09B6  00CB               	movwf	___flmul@temp+1
  5346  09B7  0872               	movf	?__Umul8_16,w
  5347  09B8  00CA               	movwf	___flmul@temp
  5348  09B9                     l2495:
  5349  09B9  084A               	movf	___flmul@temp,w
  5350  09BA  00BA               	movwf	??___flmul
  5351  09BB  01BB               	clrf	??___flmul+1
  5352  09BC  01BC               	clrf	??___flmul+2
  5353  09BD  01BD               	clrf	??___flmul+3
  5354  09BE  083D               	movf	??___flmul+3,w
  5355  09BF  00C3               	movwf	___flmul@grs+3
  5356  09C0  083C               	movf	??___flmul+2,w
  5357  09C1  00C2               	movwf	___flmul@grs+2
  5358  09C2  083B               	movf	??___flmul+1,w
  5359  09C3  00C1               	movwf	___flmul@grs+1
  5360  09C4  083A               	movf	??___flmul,w
  5361  09C5  00C0               	movwf	___flmul@grs
  5362  09C6                     l2497:
  5363  09C6  084B               	movf	___flmul@temp+1,w
  5364  09C7  00BA               	movwf	??___flmul
  5365  09C8  01BB               	clrf	??___flmul+1
  5366  09C9  01BC               	clrf	??___flmul+2
  5367  09CA  01BD               	clrf	??___flmul+3
  5368  09CB  083D               	movf	??___flmul+3,w
  5369  09CC  00C9               	movwf	___flmul@prod+3
  5370  09CD  083C               	movf	??___flmul+2,w
  5371  09CE  00C8               	movwf	___flmul@prod+2
  5372  09CF  083B               	movf	??___flmul+1,w
  5373  09D0  00C7               	movwf	___flmul@prod+1
  5374  09D1  083A               	movf	??___flmul,w
  5375  09D2  00C6               	movwf	___flmul@prod
  5376  09D3  0833               	movf	___flmul@b+1,w
  5377  09D4  00BA               	movwf	??___flmul
  5378  09D5  083A               	movf	??___flmul,w
  5379  09D6  00F2               	movwf	__Umul8_16@multiplicand
  5380  09D7  0837               	movf	___flmul@a+1,w
  5381  09D8  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5382  09DD  0873               	movf	?__Umul8_16+1,w
  5383  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5384  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5385  09E0  00CB               	movwf	___flmul@temp+1
  5386  09E1  0872               	movf	?__Umul8_16,w
  5387  09E2  00CA               	movwf	___flmul@temp
  5388  09E3                     l2499:
  5389  09E3  084A               	movf	___flmul@temp,w
  5390  09E4  00BA               	movwf	??___flmul
  5391  09E5  01BB               	clrf	??___flmul+1
  5392  09E6  01BC               	clrf	??___flmul+2
  5393  09E7  01BD               	clrf	??___flmul+3
  5394  09E8  083A               	movf	??___flmul,w
  5395  09E9  07C0               	addwf	___flmul@grs,f
  5396  09EA  083B               	movf	??___flmul+1,w
  5397  09EB  1103               	clrz
  5398  09EC  1803               	skipnc
  5399  09ED  3E01               	addlw	1
  5400  09EE  1903               	skipnz
  5401  09EF  29F1               	goto	u3671
  5402  09F0  07C1               	addwf	___flmul@grs+1,f
  5403  09F1                     u3671:
  5404  09F1  083C               	movf	??___flmul+2,w
  5405  09F2  1103               	clrz
  5406  09F3  1803               	skipnc
  5407  09F4  3E01               	addlw	1
  5408  09F5  1903               	skipnz
  5409  09F6  29F8               	goto	u3672
  5410  09F7  07C2               	addwf	___flmul@grs+2,f
  5411  09F8                     u3672:
  5412  09F8  083D               	movf	??___flmul+3,w
  5413  09F9  1103               	clrz
  5414  09FA  1803               	skipnc
  5415  09FB  3E01               	addlw	1
  5416  09FC  1903               	skipnz
  5417  09FD  29FF               	goto	u3673
  5418  09FE  07C3               	addwf	___flmul@grs+3,f
  5419  09FF                     u3673:
  5420  09FF                     l2501:
  5421  09FF  084B               	movf	___flmul@temp+1,w
  5422  0A00  00BA               	movwf	??___flmul
  5423  0A01  01BB               	clrf	??___flmul+1
  5424  0A02  01BC               	clrf	??___flmul+2
  5425  0A03  01BD               	clrf	??___flmul+3
  5426  0A04  083A               	movf	??___flmul,w
  5427  0A05  07C6               	addwf	___flmul@prod,f
  5428  0A06  083B               	movf	??___flmul+1,w
  5429  0A07  1103               	clrz
  5430  0A08  1803               	skipnc
  5431  0A09  3E01               	addlw	1
  5432  0A0A  1903               	skipnz
  5433  0A0B  2A0D               	goto	u3681
  5434  0A0C  07C7               	addwf	___flmul@prod+1,f
  5435  0A0D                     u3681:
  5436  0A0D  083C               	movf	??___flmul+2,w
  5437  0A0E  1103               	clrz
  5438  0A0F  1803               	skipnc
  5439  0A10  3E01               	addlw	1
  5440  0A11  1903               	skipnz
  5441  0A12  2A14               	goto	u3682
  5442  0A13  07C8               	addwf	___flmul@prod+2,f
  5443  0A14                     u3682:
  5444  0A14  083D               	movf	??___flmul+3,w
  5445  0A15  1103               	clrz
  5446  0A16  1803               	skipnc
  5447  0A17  3E01               	addlw	1
  5448  0A18  1903               	skipnz
  5449  0A19  2A1B               	goto	u3683
  5450  0A1A  07C9               	addwf	___flmul@prod+3,f
  5451  0A1B                     u3683:
  5452  0A1B  0834               	movf	___flmul@b+2,w
  5453  0A1C  00BA               	movwf	??___flmul
  5454  0A1D  083A               	movf	??___flmul,w
  5455  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  5456  0A1F  0836               	movf	___flmul@a,w
  5457  0A20  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5458  0A25  0873               	movf	?__Umul8_16+1,w
  5459  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5460  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5461  0A28  00CB               	movwf	___flmul@temp+1
  5462  0A29  0872               	movf	?__Umul8_16,w
  5463  0A2A  00CA               	movwf	___flmul@temp
  5464  0A2B                     l2503:
  5465  0A2B  084A               	movf	___flmul@temp,w
  5466  0A2C  00BA               	movwf	??___flmul
  5467  0A2D  01BB               	clrf	??___flmul+1
  5468  0A2E  01BC               	clrf	??___flmul+2
  5469  0A2F  01BD               	clrf	??___flmul+3
  5470  0A30  083A               	movf	??___flmul,w
  5471  0A31  07C0               	addwf	___flmul@grs,f
  5472  0A32  083B               	movf	??___flmul+1,w
  5473  0A33  1103               	clrz
  5474  0A34  1803               	skipnc
  5475  0A35  3E01               	addlw	1
  5476  0A36  1903               	skipnz
  5477  0A37  2A39               	goto	u3691
  5478  0A38  07C1               	addwf	___flmul@grs+1,f
  5479  0A39                     u3691:
  5480  0A39  083C               	movf	??___flmul+2,w
  5481  0A3A  1103               	clrz
  5482  0A3B  1803               	skipnc
  5483  0A3C  3E01               	addlw	1
  5484  0A3D  1903               	skipnz
  5485  0A3E  2A40               	goto	u3692
  5486  0A3F  07C2               	addwf	___flmul@grs+2,f
  5487  0A40                     u3692:
  5488  0A40  083D               	movf	??___flmul+3,w
  5489  0A41  1103               	clrz
  5490  0A42  1803               	skipnc
  5491  0A43  3E01               	addlw	1
  5492  0A44  1903               	skipnz
  5493  0A45  2A47               	goto	u3693
  5494  0A46  07C3               	addwf	___flmul@grs+3,f
  5495  0A47                     u3693:
  5496  0A47                     l2505:
  5497  0A47  084B               	movf	___flmul@temp+1,w
  5498  0A48  00BA               	movwf	??___flmul
  5499  0A49  01BB               	clrf	??___flmul+1
  5500  0A4A  01BC               	clrf	??___flmul+2
  5501  0A4B  01BD               	clrf	??___flmul+3
  5502  0A4C  083A               	movf	??___flmul,w
  5503  0A4D  07C6               	addwf	___flmul@prod,f
  5504  0A4E  083B               	movf	??___flmul+1,w
  5505  0A4F  1103               	clrz
  5506  0A50  1803               	skipnc
  5507  0A51  3E01               	addlw	1
  5508  0A52  1903               	skipnz
  5509  0A53  2A55               	goto	u3701
  5510  0A54  07C7               	addwf	___flmul@prod+1,f
  5511  0A55                     u3701:
  5512  0A55  083C               	movf	??___flmul+2,w
  5513  0A56  1103               	clrz
  5514  0A57  1803               	skipnc
  5515  0A58  3E01               	addlw	1
  5516  0A59  1903               	skipnz
  5517  0A5A  2A5C               	goto	u3702
  5518  0A5B  07C8               	addwf	___flmul@prod+2,f
  5519  0A5C                     u3702:
  5520  0A5C  083D               	movf	??___flmul+3,w
  5521  0A5D  1103               	clrz
  5522  0A5E  1803               	skipnc
  5523  0A5F  3E01               	addlw	1
  5524  0A60  1903               	skipnz
  5525  0A61  2A63               	goto	u3703
  5526  0A62  07C9               	addwf	___flmul@prod+3,f
  5527  0A63                     u3703:
  5528  0A63                     l2507:
  5529  0A63  3008               	movlw	8
  5530  0A64  00BA               	movwf	??___flmul
  5531  0A65                     u3715:
  5532  0A65  1003               	clrc
  5533  0A66  0DC0               	rlf	___flmul@grs,f
  5534  0A67  0DC1               	rlf	___flmul@grs+1,f
  5535  0A68  0DC2               	rlf	___flmul@grs+2,f
  5536  0A69  0DC3               	rlf	___flmul@grs+3,f
  5537  0A6A  0BBA               	decfsz	??___flmul,f
  5538  0A6B  2A65               	goto	u3715
  5539  0A6C                     l2509:
  5540  0A6C  0833               	movf	___flmul@b+1,w
  5541  0A6D  00BA               	movwf	??___flmul
  5542  0A6E  083A               	movf	??___flmul,w
  5543  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  5544  0A70  0836               	movf	___flmul@a,w
  5545  0A71  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5546  0A76  0873               	movf	?__Umul8_16+1,w
  5547  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5549  0A79  00CB               	movwf	___flmul@temp+1
  5550  0A7A  0872               	movf	?__Umul8_16,w
  5551  0A7B  00CA               	movwf	___flmul@temp
  5552  0A7C                     l2511:
  5553  0A7C  084A               	movf	___flmul@temp,w
  5554  0A7D  00BA               	movwf	??___flmul
  5555  0A7E  084B               	movf	___flmul@temp+1,w
  5556  0A7F  00BB               	movwf	??___flmul+1
  5557  0A80  01BC               	clrf	??___flmul+2
  5558  0A81  01BD               	clrf	??___flmul+3
  5559  0A82  083A               	movf	??___flmul,w
  5560  0A83  07C0               	addwf	___flmul@grs,f
  5561  0A84  083B               	movf	??___flmul+1,w
  5562  0A85  1103               	clrz
  5563  0A86  1803               	skipnc
  5564  0A87  3E01               	addlw	1
  5565  0A88  1903               	skipnz
  5566  0A89  2A8B               	goto	u3721
  5567  0A8A  07C1               	addwf	___flmul@grs+1,f
  5568  0A8B                     u3721:
  5569  0A8B  083C               	movf	??___flmul+2,w
  5570  0A8C  1103               	clrz
  5571  0A8D  1803               	skipnc
  5572  0A8E  3E01               	addlw	1
  5573  0A8F  1903               	skipnz
  5574  0A90  2A92               	goto	u3722
  5575  0A91  07C2               	addwf	___flmul@grs+2,f
  5576  0A92                     u3722:
  5577  0A92  083D               	movf	??___flmul+3,w
  5578  0A93  1103               	clrz
  5579  0A94  1803               	skipnc
  5580  0A95  3E01               	addlw	1
  5581  0A96  1903               	skipnz
  5582  0A97  2A99               	goto	u3723
  5583  0A98  07C3               	addwf	___flmul@grs+3,f
  5584  0A99                     u3723:
  5585  0A99                     l2513:
  5586  0A99  0832               	movf	___flmul@b,w
  5587  0A9A  00BA               	movwf	??___flmul
  5588  0A9B  083A               	movf	??___flmul,w
  5589  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  5590  0A9D  0837               	movf	___flmul@a+1,w
  5591  0A9E  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5592  0AA3  0873               	movf	?__Umul8_16+1,w
  5593  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0AA6  00CB               	movwf	___flmul@temp+1
  5596  0AA7  0872               	movf	?__Umul8_16,w
  5597  0AA8  00CA               	movwf	___flmul@temp
  5598  0AA9                     l2515:
  5599  0AA9  084A               	movf	___flmul@temp,w
  5600  0AAA  00BA               	movwf	??___flmul
  5601  0AAB  084B               	movf	___flmul@temp+1,w
  5602  0AAC  00BB               	movwf	??___flmul+1
  5603  0AAD  01BC               	clrf	??___flmul+2
  5604  0AAE  01BD               	clrf	??___flmul+3
  5605  0AAF  083A               	movf	??___flmul,w
  5606  0AB0  07C0               	addwf	___flmul@grs,f
  5607  0AB1  083B               	movf	??___flmul+1,w
  5608  0AB2  1103               	clrz
  5609  0AB3  1803               	skipnc
  5610  0AB4  3E01               	addlw	1
  5611  0AB5  1903               	skipnz
  5612  0AB6  2AB8               	goto	u3731
  5613  0AB7  07C1               	addwf	___flmul@grs+1,f
  5614  0AB8                     u3731:
  5615  0AB8  083C               	movf	??___flmul+2,w
  5616  0AB9  1103               	clrz
  5617  0ABA  1803               	skipnc
  5618  0ABB  3E01               	addlw	1
  5619  0ABC  1903               	skipnz
  5620  0ABD  2ABF               	goto	u3732
  5621  0ABE  07C2               	addwf	___flmul@grs+2,f
  5622  0ABF                     u3732:
  5623  0ABF  083D               	movf	??___flmul+3,w
  5624  0AC0  1103               	clrz
  5625  0AC1  1803               	skipnc
  5626  0AC2  3E01               	addlw	1
  5627  0AC3  1903               	skipnz
  5628  0AC4  2AC6               	goto	u3733
  5629  0AC5  07C3               	addwf	___flmul@grs+3,f
  5630  0AC6                     u3733:
  5631  0AC6                     l2517:
  5632  0AC6  3008               	movlw	8
  5633  0AC7  00BA               	movwf	??___flmul
  5634  0AC8                     u3745:
  5635  0AC8  1003               	clrc
  5636  0AC9  0DC0               	rlf	___flmul@grs,f
  5637  0ACA  0DC1               	rlf	___flmul@grs+1,f
  5638  0ACB  0DC2               	rlf	___flmul@grs+2,f
  5639  0ACC  0DC3               	rlf	___flmul@grs+3,f
  5640  0ACD  0BBA               	decfsz	??___flmul,f
  5641  0ACE  2AC8               	goto	u3745
  5642  0ACF  0832               	movf	___flmul@b,w
  5643  0AD0  00BA               	movwf	??___flmul
  5644  0AD1  083A               	movf	??___flmul,w
  5645  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  5646  0AD3  0836               	movf	___flmul@a,w
  5647  0AD4  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5648  0AD9  0873               	movf	?__Umul8_16+1,w
  5649  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5650  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0ADC  00CB               	movwf	___flmul@temp+1
  5652  0ADD  0872               	movf	?__Umul8_16,w
  5653  0ADE  00CA               	movwf	___flmul@temp
  5654  0ADF                     l2519:
  5655  0ADF  084A               	movf	___flmul@temp,w
  5656  0AE0  00BA               	movwf	??___flmul
  5657  0AE1  084B               	movf	___flmul@temp+1,w
  5658  0AE2  00BB               	movwf	??___flmul+1
  5659  0AE3  01BC               	clrf	??___flmul+2
  5660  0AE4  01BD               	clrf	??___flmul+3
  5661  0AE5  083A               	movf	??___flmul,w
  5662  0AE6  07C0               	addwf	___flmul@grs,f
  5663  0AE7  083B               	movf	??___flmul+1,w
  5664  0AE8  1103               	clrz
  5665  0AE9  1803               	skipnc
  5666  0AEA  3E01               	addlw	1
  5667  0AEB  1903               	skipnz
  5668  0AEC  2AEE               	goto	u3751
  5669  0AED  07C1               	addwf	___flmul@grs+1,f
  5670  0AEE                     u3751:
  5671  0AEE  083C               	movf	??___flmul+2,w
  5672  0AEF  1103               	clrz
  5673  0AF0  1803               	skipnc
  5674  0AF1  3E01               	addlw	1
  5675  0AF2  1903               	skipnz
  5676  0AF3  2AF5               	goto	u3752
  5677  0AF4  07C2               	addwf	___flmul@grs+2,f
  5678  0AF5                     u3752:
  5679  0AF5  083D               	movf	??___flmul+3,w
  5680  0AF6  1103               	clrz
  5681  0AF7  1803               	skipnc
  5682  0AF8  3E01               	addlw	1
  5683  0AF9  1903               	skipnz
  5684  0AFA  2AFC               	goto	u3753
  5685  0AFB  07C3               	addwf	___flmul@grs+3,f
  5686  0AFC                     u3753:
  5687  0AFC                     l2521:
  5688  0AFC  0833               	movf	___flmul@b+1,w
  5689  0AFD  00BA               	movwf	??___flmul
  5690  0AFE  083A               	movf	??___flmul,w
  5691  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  5692  0B00  0838               	movf	___flmul@a+2,w
  5693  0B01  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5694  0B06  0873               	movf	?__Umul8_16+1,w
  5695  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5696  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5697  0B09  00CB               	movwf	___flmul@temp+1
  5698  0B0A  0872               	movf	?__Umul8_16,w
  5699  0B0B  00CA               	movwf	___flmul@temp
  5700  0B0C  084A               	movf	___flmul@temp,w
  5701  0B0D  00BA               	movwf	??___flmul
  5702  0B0E  084B               	movf	___flmul@temp+1,w
  5703  0B0F  00BB               	movwf	??___flmul+1
  5704  0B10  01BC               	clrf	??___flmul+2
  5705  0B11  01BD               	clrf	??___flmul+3
  5706  0B12  083A               	movf	??___flmul,w
  5707  0B13  07C6               	addwf	___flmul@prod,f
  5708  0B14  083B               	movf	??___flmul+1,w
  5709  0B15  1103               	clrz
  5710  0B16  1803               	skipnc
  5711  0B17  3E01               	addlw	1
  5712  0B18  1903               	skipnz
  5713  0B19  2B1B               	goto	u3761
  5714  0B1A  07C7               	addwf	___flmul@prod+1,f
  5715  0B1B                     u3761:
  5716  0B1B  083C               	movf	??___flmul+2,w
  5717  0B1C  1103               	clrz
  5718  0B1D  1803               	skipnc
  5719  0B1E  3E01               	addlw	1
  5720  0B1F  1903               	skipnz
  5721  0B20  2B22               	goto	u3762
  5722  0B21  07C8               	addwf	___flmul@prod+2,f
  5723  0B22                     u3762:
  5724  0B22  083D               	movf	??___flmul+3,w
  5725  0B23  1103               	clrz
  5726  0B24  1803               	skipnc
  5727  0B25  3E01               	addlw	1
  5728  0B26  1903               	skipnz
  5729  0B27  2B29               	goto	u3763
  5730  0B28  07C9               	addwf	___flmul@prod+3,f
  5731  0B29                     u3763:
  5732  0B29                     l2523:
  5733  0B29  0834               	movf	___flmul@b+2,w
  5734  0B2A  00BA               	movwf	??___flmul
  5735  0B2B  083A               	movf	??___flmul,w
  5736  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  5737  0B2D  0837               	movf	___flmul@a+1,w
  5738  0B2E  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5739  0B33  0873               	movf	?__Umul8_16+1,w
  5740  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5741  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5742  0B36  00CB               	movwf	___flmul@temp+1
  5743  0B37  0872               	movf	?__Umul8_16,w
  5744  0B38  00CA               	movwf	___flmul@temp
  5745  0B39                     l2525:
  5746  0B39  084A               	movf	___flmul@temp,w
  5747  0B3A  00BA               	movwf	??___flmul
  5748  0B3B  084B               	movf	___flmul@temp+1,w
  5749  0B3C  00BB               	movwf	??___flmul+1
  5750  0B3D  01BC               	clrf	??___flmul+2
  5751  0B3E  01BD               	clrf	??___flmul+3
  5752  0B3F  083A               	movf	??___flmul,w
  5753  0B40  07C6               	addwf	___flmul@prod,f
  5754  0B41  083B               	movf	??___flmul+1,w
  5755  0B42  1103               	clrz
  5756  0B43  1803               	skipnc
  5757  0B44  3E01               	addlw	1
  5758  0B45  1903               	skipnz
  5759  0B46  2B48               	goto	u3771
  5760  0B47  07C7               	addwf	___flmul@prod+1,f
  5761  0B48                     u3771:
  5762  0B48  083C               	movf	??___flmul+2,w
  5763  0B49  1103               	clrz
  5764  0B4A  1803               	skipnc
  5765  0B4B  3E01               	addlw	1
  5766  0B4C  1903               	skipnz
  5767  0B4D  2B4F               	goto	u3772
  5768  0B4E  07C8               	addwf	___flmul@prod+2,f
  5769  0B4F                     u3772:
  5770  0B4F  083D               	movf	??___flmul+3,w
  5771  0B50  1103               	clrz
  5772  0B51  1803               	skipnc
  5773  0B52  3E01               	addlw	1
  5774  0B53  1903               	skipnz
  5775  0B54  2B56               	goto	u3773
  5776  0B55  07C9               	addwf	___flmul@prod+3,f
  5777  0B56                     u3773:
  5778  0B56  0834               	movf	___flmul@b+2,w
  5779  0B57  00BA               	movwf	??___flmul
  5780  0B58  083A               	movf	??___flmul,w
  5781  0B59  00F2               	movwf	__Umul8_16@multiplicand
  5782  0B5A  0838               	movf	___flmul@a+2,w
  5783  0B5B  160A  158A  2406  120A  158A  	fcall	__Umul8_16
  5784  0B60  0873               	movf	?__Umul8_16+1,w
  5785  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0B63  00CB               	movwf	___flmul@temp+1
  5788  0B64  0872               	movf	?__Umul8_16,w
  5789  0B65  00CA               	movwf	___flmul@temp
  5790  0B66                     l2527:
  5791  0B66  084A               	movf	___flmul@temp,w
  5792  0B67  00BA               	movwf	??___flmul
  5793  0B68  084B               	movf	___flmul@temp+1,w
  5794  0B69  00BB               	movwf	??___flmul+1
  5795  0B6A  01BC               	clrf	??___flmul+2
  5796  0B6B  01BD               	clrf	??___flmul+3
  5797  0B6C  3008               	movlw	8
  5798  0B6D                     u3785:
  5799  0B6D  1003               	clrc
  5800  0B6E  0DBA               	rlf	??___flmul,f
  5801  0B6F  0DBB               	rlf	??___flmul+1,f
  5802  0B70  0DBC               	rlf	??___flmul+2,f
  5803  0B71  0DBD               	rlf	??___flmul+3,f
  5804  0B72                     u3780:
  5805  0B72  3EFF               	addlw	-1
  5806  0B73  1D03               	skipz
  5807  0B74  2B6D               	goto	u3785
  5808  0B75  083A               	movf	??___flmul,w
  5809  0B76  07C6               	addwf	___flmul@prod,f
  5810  0B77  083B               	movf	??___flmul+1,w
  5811  0B78  1103               	clrz
  5812  0B79  1803               	skipnc
  5813  0B7A  3E01               	addlw	1
  5814  0B7B  1903               	skipnz
  5815  0B7C  2B7E               	goto	u3791
  5816  0B7D  07C7               	addwf	___flmul@prod+1,f
  5817  0B7E                     u3791:
  5818  0B7E  083C               	movf	??___flmul+2,w
  5819  0B7F  1103               	clrz
  5820  0B80  1803               	skipnc
  5821  0B81  3E01               	addlw	1
  5822  0B82  1903               	skipnz
  5823  0B83  2B85               	goto	u3792
  5824  0B84  07C8               	addwf	___flmul@prod+2,f
  5825  0B85                     u3792:
  5826  0B85  083D               	movf	??___flmul+3,w
  5827  0B86  1103               	clrz
  5828  0B87  1803               	skipnc
  5829  0B88  3E01               	addlw	1
  5830  0B89  1903               	skipnz
  5831  0B8A  2B8C               	goto	u3793
  5832  0B8B  07C9               	addwf	___flmul@prod+3,f
  5833  0B8C                     u3793:
  5834  0B8C                     l2529:
  5835  0B8C  0840               	movf	___flmul@grs,w
  5836  0B8D  00BA               	movwf	??___flmul
  5837  0B8E  0841               	movf	___flmul@grs+1,w
  5838  0B8F  00BB               	movwf	??___flmul+1
  5839  0B90  0842               	movf	___flmul@grs+2,w
  5840  0B91  00BC               	movwf	??___flmul+2
  5841  0B92  0843               	movf	___flmul@grs+3,w
  5842  0B93  00BD               	movwf	??___flmul+3
  5843  0B94  3018               	movlw	24
  5844  0B95                     u3805:
  5845  0B95  1003               	clrc
  5846  0B96  0CBD               	rrf	??___flmul+3,f
  5847  0B97  0CBC               	rrf	??___flmul+2,f
  5848  0B98  0CBB               	rrf	??___flmul+1,f
  5849  0B99  0CBA               	rrf	??___flmul,f
  5850  0B9A                     u3800:
  5851  0B9A  3EFF               	addlw	-1
  5852  0B9B  1D03               	skipz
  5853  0B9C  2B95               	goto	u3805
  5854  0B9D  083A               	movf	??___flmul,w
  5855  0B9E  07C6               	addwf	___flmul@prod,f
  5856  0B9F  083B               	movf	??___flmul+1,w
  5857  0BA0  1103               	clrz
  5858  0BA1  1803               	skipnc
  5859  0BA2  3E01               	addlw	1
  5860  0BA3  1903               	skipnz
  5861  0BA4  2BA6               	goto	u3811
  5862  0BA5  07C7               	addwf	___flmul@prod+1,f
  5863  0BA6                     u3811:
  5864  0BA6  083C               	movf	??___flmul+2,w
  5865  0BA7  1103               	clrz
  5866  0BA8  1803               	skipnc
  5867  0BA9  3E01               	addlw	1
  5868  0BAA  1903               	skipnz
  5869  0BAB  2BAD               	goto	u3812
  5870  0BAC  07C8               	addwf	___flmul@prod+2,f
  5871  0BAD                     u3812:
  5872  0BAD  083D               	movf	??___flmul+3,w
  5873  0BAE  1103               	clrz
  5874  0BAF  1803               	skipnc
  5875  0BB0  3E01               	addlw	1
  5876  0BB1  1903               	skipnz
  5877  0BB2  2BB4               	goto	u3813
  5878  0BB3  07C9               	addwf	___flmul@prod+3,f
  5879  0BB4                     u3813:
  5880  0BB4                     l2531:
  5881  0BB4  3008               	movlw	8
  5882  0BB5  00BA               	movwf	??___flmul
  5883  0BB6                     u3825:
  5884  0BB6  1003               	clrc
  5885  0BB7  0DC0               	rlf	___flmul@grs,f
  5886  0BB8  0DC1               	rlf	___flmul@grs+1,f
  5887  0BB9  0DC2               	rlf	___flmul@grs+2,f
  5888  0BBA  0DC3               	rlf	___flmul@grs+3,f
  5889  0BBB  0BBA               	decfsz	??___flmul,f
  5890  0BBC  2BB6               	goto	u3825
  5891  0BBD                     l2533:
  5892  0BBD  0845               	movf	___flmul@bexp,w
  5893  0BBE  0744               	addwf	___flmul@aexp,w
  5894  0BBF  00BA               	movwf	??___flmul
  5895  0BC0  01BB               	clrf	??___flmul+1
  5896  0BC1  0DBB               	rlf	??___flmul+1,f
  5897  0BC2  083A               	movf	??___flmul,w
  5898  0BC3  3E82               	addlw	130
  5899  0BC4  00CA               	movwf	___flmul@temp
  5900  0BC5  083B               	movf	??___flmul+1,w
  5901  0BC6  1803               	skipnc
  5902  0BC7  3E01               	addlw	1
  5903  0BC8  3EFF               	addlw	255
  5904  0BC9  00CB               	movwf	___flmul@temp+1
  5905  0BCA  2BE8               	goto	l2545
  5906  0BCB                     l2535:
  5907  0BCB  3001               	movlw	1
  5908  0BCC  00BA               	movwf	??___flmul
  5909  0BCD                     u3835:
  5910  0BCD  1003               	clrc
  5911  0BCE  0DC6               	rlf	___flmul@prod,f
  5912  0BCF  0DC7               	rlf	___flmul@prod+1,f
  5913  0BD0  0DC8               	rlf	___flmul@prod+2,f
  5914  0BD1  0DC9               	rlf	___flmul@prod+3,f
  5915  0BD2  0BBA               	decfsz	??___flmul,f
  5916  0BD3  2BCD               	goto	u3835
  5917  0BD4                     l2537:
  5918  0BD4  1FC3               	btfss	___flmul@grs+3,7
  5919  0BD5  2BD7               	goto	u3841
  5920  0BD6  2BD8               	goto	u3840
  5921  0BD7                     u3841:
  5922  0BD7  2BD9               	goto	l2541
  5923  0BD8                     u3840:
  5924  0BD8                     l2539:
  5925  0BD8  1446               	bsf	___flmul@prod,0
  5926  0BD9                     l2541:
  5927  0BD9  3001               	movlw	1
  5928  0BDA  00BA               	movwf	??___flmul
  5929  0BDB                     u3855:
  5930  0BDB  1003               	clrc
  5931  0BDC  0DC0               	rlf	___flmul@grs,f
  5932  0BDD  0DC1               	rlf	___flmul@grs+1,f
  5933  0BDE  0DC2               	rlf	___flmul@grs+2,f
  5934  0BDF  0DC3               	rlf	___flmul@grs+3,f
  5935  0BE0  0BBA               	decfsz	??___flmul,f
  5936  0BE1  2BDB               	goto	u3855
  5937  0BE2                     l2543:
  5938  0BE2  30FF               	movlw	255
  5939  0BE3  07CA               	addwf	___flmul@temp,f
  5940  0BE4  1803               	skipnc
  5941  0BE5  0ACB               	incf	___flmul@temp+1,f
  5942  0BE6  30FF               	movlw	255
  5943  0BE7  07CB               	addwf	___flmul@temp+1,f
  5944  0BE8                     l2545:
  5945  0BE8  1FC8               	btfss	___flmul@prod+2,7
  5946  0BE9  2BEB               	goto	u3861
  5947  0BEA  2BEC               	goto	u3860
  5948  0BEB                     u3861:
  5949  0BEB  2BCB               	goto	l2535
  5950  0BEC                     u3860:
  5951  0BEC                     l2547:
  5952  0BEC  01C4               	clrf	___flmul@aexp
  5953  0BED                     l2549:
  5954  0BED  1FC3               	btfss	___flmul@grs+3,7
  5955  0BEE  2BF0               	goto	u3871
  5956  0BEF  2BF1               	goto	u3870
  5957  0BF0                     u3871:
  5958  0BF0  2C0D               	goto	l2557
  5959  0BF1                     u3870:
  5960  0BF1                     l2551:
  5961  0BF1  30FF               	movlw	255
  5962  0BF2  0540               	andwf	___flmul@grs,w
  5963  0BF3  00BA               	movwf	??___flmul
  5964  0BF4  30FF               	movlw	255
  5965  0BF5  0541               	andwf	___flmul@grs+1,w
  5966  0BF6  00BB               	movwf	??___flmul+1
  5967  0BF7  30FF               	movlw	255
  5968  0BF8  0542               	andwf	___flmul@grs+2,w
  5969  0BF9  00BC               	movwf	??___flmul+2
  5970  0BFA  307F               	movlw	127
  5971  0BFB  0543               	andwf	___flmul@grs+3,w
  5972  0BFC  00BD               	movwf	??___flmul+3
  5973  0BFD  083D               	movf	??___flmul+3,w
  5974  0BFE  043C               	iorwf	??___flmul+2,w
  5975  0BFF  043B               	iorwf	??___flmul+1,w
  5976  0C00  043A               	iorwf	??___flmul,w
  5977  0C01  1903               	skipnz
  5978  0C02  2C04               	goto	u3881
  5979  0C03  2C05               	goto	u3880
  5980  0C04                     u3881:
  5981  0C04  2C08               	goto	l727
  5982  0C05                     u3880:
  5983  0C05                     l2553:
  5984  0C05  01C4               	clrf	___flmul@aexp
  5985  0C06  0AC4               	incf	___flmul@aexp,f
  5986  0C07  2C0D               	goto	l2557
  5987  0C08                     l727:
  5988  0C08  1C46               	btfss	___flmul@prod,0
  5989  0C09  2C0B               	goto	u3891
  5990  0C0A  2C0C               	goto	u3890
  5991  0C0B                     u3891:
  5992  0C0B  2C0D               	goto	l2557
  5993  0C0C                     u3890:
  5994  0C0C  2C05               	goto	l2553
  5995  0C0D                     l2557:
  5996  0C0D  0844               	movf	___flmul@aexp,w
  5997  0C0E  1903               	btfsc	3,2
  5998  0C0F  2C11               	goto	u3901
  5999  0C10  2C12               	goto	u3900
  6000  0C11                     u3901:
  6001  0C11  2C43               	goto	l2567
  6002  0C12                     u3900:
  6003  0C12                     l2559:
  6004  0C12  3001               	movlw	1
  6005  0C13  07C6               	addwf	___flmul@prod,f
  6006  0C14  3000               	movlw	0
  6007  0C15  1803               	skipnc
  6008  0C16  3001               	movlw	1
  6009  0C17  07C7               	addwf	___flmul@prod+1,f
  6010  0C18  3000               	movlw	0
  6011  0C19  1803               	skipnc
  6012  0C1A  3001               	movlw	1
  6013  0C1B  07C8               	addwf	___flmul@prod+2,f
  6014  0C1C  3000               	movlw	0
  6015  0C1D  1803               	skipnc
  6016  0C1E  3001               	movlw	1
  6017  0C1F  07C9               	addwf	___flmul@prod+3,f
  6018  0C20                     l2561:
  6019  0C20  1C49               	btfss	___flmul@prod+3,0
  6020  0C21  2C23               	goto	u3911
  6021  0C22  2C24               	goto	u3910
  6022  0C23                     u3911:
  6023  0C23  2C43               	goto	l2567
  6024  0C24                     u3910:
  6025  0C24                     l2563:
  6026  0C24  0846               	movf	___flmul@prod,w
  6027  0C25  00BA               	movwf	??___flmul
  6028  0C26  0847               	movf	___flmul@prod+1,w
  6029  0C27  00BB               	movwf	??___flmul+1
  6030  0C28  0848               	movf	___flmul@prod+2,w
  6031  0C29  00BC               	movwf	??___flmul+2
  6032  0C2A  0849               	movf	___flmul@prod+3,w
  6033  0C2B  00BD               	movwf	??___flmul+3
  6034  0C2C  3001               	movlw	1
  6035  0C2D  00BE               	movwf	??___flmul+4
  6036  0C2E                     u3925:
  6037  0C2E  0D3D               	rlf	??___flmul+3,w
  6038  0C2F  0CBD               	rrf	??___flmul+3,f
  6039  0C30  0CBC               	rrf	??___flmul+2,f
  6040  0C31  0CBB               	rrf	??___flmul+1,f
  6041  0C32  0CBA               	rrf	??___flmul,f
  6042  0C33                     u3920:
  6043  0C33  0BBE               	decfsz	??___flmul+4,f
  6044  0C34  2C2E               	goto	u3925
  6045  0C35  083D               	movf	??___flmul+3,w
  6046  0C36  00C9               	movwf	___flmul@prod+3
  6047  0C37  083C               	movf	??___flmul+2,w
  6048  0C38  00C8               	movwf	___flmul@prod+2
  6049  0C39  083B               	movf	??___flmul+1,w
  6050  0C3A  00C7               	movwf	___flmul@prod+1
  6051  0C3B  083A               	movf	??___flmul,w
  6052  0C3C  00C6               	movwf	___flmul@prod
  6053  0C3D                     l2565:
  6054  0C3D  3001               	movlw	1
  6055  0C3E  07CA               	addwf	___flmul@temp,f
  6056  0C3F  1803               	skipnc
  6057  0C40  0ACB               	incf	___flmul@temp+1,f
  6058  0C41  3000               	movlw	0
  6059  0C42  07CB               	addwf	___flmul@temp+1,f
  6060  0C43                     l2567:
  6061  0C43  084B               	movf	___flmul@temp+1,w
  6062  0C44  3A80               	xorlw	128
  6063  0C45  00FF               	movwf	btemp+1
  6064  0C46  3080               	movlw	128
  6065  0C47  027F               	subwf	btemp+1,w
  6066  0C48  1D03               	skipz
  6067  0C49  2C4C               	goto	u3935
  6068  0C4A  30FF               	movlw	255
  6069  0C4B  024A               	subwf	___flmul@temp,w
  6070  0C4C                     u3935:
  6071  0C4C  1C03               	skipc
  6072  0C4D  2C4F               	goto	u3931
  6073  0C4E  2C50               	goto	u3930
  6074  0C4F                     u3931:
  6075  0C4F  2C5B               	goto	l2571
  6076  0C50                     u3930:
  6077  0C50                     l2569:
  6078  0C50  307F               	movlw	127
  6079  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6080  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6081  0C53  00C9               	movwf	___flmul@prod+3
  6082  0C54  3080               	movlw	128
  6083  0C55  00C8               	movwf	___flmul@prod+2
  6084  0C56  3000               	movlw	0
  6085  0C57  00C7               	movwf	___flmul@prod+1
  6086  0C58  3000               	movlw	0
  6087  0C59  00C6               	movwf	___flmul@prod
  6088  0C5A  2C90               	goto	l733
  6089  0C5B                     l2571:
  6090  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6091  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6092  0C5D  084B               	movf	___flmul@temp+1,w
  6093  0C5E  3A80               	xorlw	128
  6094  0C5F  00FF               	movwf	btemp+1
  6095  0C60  3080               	movlw	128
  6096  0C61  027F               	subwf	btemp+1,w
  6097  0C62  1D03               	skipz
  6098  0C63  2C66               	goto	u3945
  6099  0C64  3001               	movlw	1
  6100  0C65  024A               	subwf	___flmul@temp,w
  6101  0C66                     u3945:
  6102  0C66  1803               	skipnc
  6103  0C67  2C69               	goto	u3941
  6104  0C68  2C6A               	goto	u3940
  6105  0C69                     u3941:
  6106  0C69  2C76               	goto	l2577
  6107  0C6A                     u3940:
  6108  0C6A                     l2573:
  6109  0C6A  3000               	movlw	0
  6110  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6111  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6112  0C6D  00C9               	movwf	___flmul@prod+3
  6113  0C6E  3000               	movlw	0
  6114  0C6F  00C8               	movwf	___flmul@prod+2
  6115  0C70  3000               	movlw	0
  6116  0C71  00C7               	movwf	___flmul@prod+1
  6117  0C72  3000               	movlw	0
  6118  0C73  00C6               	movwf	___flmul@prod
  6119  0C74                     l2575:
  6120  0C74  01BF               	clrf	___flmul@sign
  6121  0C75  2C90               	goto	l733
  6122  0C76                     l2577:
  6123  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6125  0C78  084A               	movf	___flmul@temp,w
  6126  0C79  00BA               	movwf	??___flmul
  6127  0C7A  083A               	movf	??___flmul,w
  6128  0C7B  00C5               	movwf	___flmul@bexp
  6129  0C7C  30FF               	movlw	255
  6130  0C7D  05C6               	andwf	___flmul@prod,f
  6131  0C7E  30FF               	movlw	255
  6132  0C7F  05C7               	andwf	___flmul@prod+1,f
  6133  0C80  307F               	movlw	127
  6134  0C81  05C8               	andwf	___flmul@prod+2,f
  6135  0C82  3000               	movlw	0
  6136  0C83  05C9               	andwf	___flmul@prod+3,f
  6137  0C84                     l2579:
  6138  0C84  1C45               	btfss	___flmul@bexp,0
  6139  0C85  2C87               	goto	u3951
  6140  0C86  2C88               	goto	u3950
  6141  0C87                     u3951:
  6142  0C87  2C89               	goto	l2583
  6143  0C88                     u3950:
  6144  0C88                     l2581:
  6145  0C88  17C8               	bsf	___flmul@prod+2,7
  6146  0C89                     l2583:
  6147  0C89  0845               	movf	___flmul@bexp,w
  6148  0C8A  00BA               	movwf	??___flmul
  6149  0C8B  1003               	clrc
  6150  0C8C  0C3A               	rrf	??___flmul,w
  6151  0C8D  00BB               	movwf	??___flmul+1
  6152  0C8E  083B               	movf	??___flmul+1,w
  6153  0C8F  00C9               	movwf	___flmul@prod+3
  6154  0C90                     l733:
  6155  0C90  083F               	movf	___flmul@sign,w
  6156  0C91  00BA               	movwf	??___flmul
  6157  0C92  083A               	movf	??___flmul,w
  6158  0C93  04C9               	iorwf	___flmul@prod+3,f
  6159  0C94                     l2585:
  6160  0C94  0849               	movf	___flmul@prod+3,w
  6161  0C95  00B5               	movwf	?___flmul+3
  6162  0C96  0848               	movf	___flmul@prod+2,w
  6163  0C97  00B4               	movwf	?___flmul+2
  6164  0C98  0847               	movf	___flmul@prod+1,w
  6165  0C99  00B3               	movwf	?___flmul+1
  6166  0C9A  0846               	movf	___flmul@prod,w
  6167  0C9B  00B2               	movwf	?___flmul
  6168  0C9C                     l721:
  6169  0C9C  0008               	return
  6170  0C9D                     __end_of___flmul:
  6171                           
  6172                           	psect	text10
  6173  1C06                     __ptext10:	
  6174 ;; *************** function __Umul8_16 *****************
  6175 ;; Defined at:
  6176 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  multiplier      1    wreg     unsigned char 
  6179 ;;  multiplicand    1    2[COMMON] unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  multiplier      1   10[COMMON] unsigned char 
  6182 ;;  word_mpld       2    8[COMMON] unsigned int 
  6183 ;;  product         2    6[COMMON] unsigned int 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  2    2[COMMON] unsigned int 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6193 ;;      Params:         2       0       0       0       0
  6194 ;;      Locals:         5       0       0       0       0
  6195 ;;      Temps:          2       0       0       0       0
  6196 ;;      Totals:         9       0       0       0       0
  6197 ;;Total ram usage:        9 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		___flmul
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function __Umul8_16
  6209  1C06                     __Umul8_16:
  6210                           
  6211                           ;incstack = 0
  6212                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6213                           ;__Umul8_16@multiplier stored from wreg
  6214  1C06  00FA               	movwf	__Umul8_16@multiplier
  6215  1C07                     l2101:
  6216  1C07  01F6               	clrf	__Umul8_16@product
  6217  1C08  01F7               	clrf	__Umul8_16@product+1
  6218  1C09                     l2103:
  6219  1C09  0872               	movf	__Umul8_16@multiplicand,w
  6220  1C0A  00F4               	movwf	??__Umul8_16
  6221  1C0B  01F5               	clrf	??__Umul8_16+1
  6222  1C0C  0874               	movf	??__Umul8_16,w
  6223  1C0D  00F8               	movwf	__Umul8_16@word_mpld
  6224  1C0E  0875               	movf	??__Umul8_16+1,w
  6225  1C0F  00F9               	movwf	__Umul8_16@word_mpld+1
  6226  1C10                     l2105:
  6227  1C10  1C7A               	btfss	__Umul8_16@multiplier,0
  6228  1C11  2C13               	goto	u2741
  6229  1C12  2C14               	goto	u2740
  6230  1C13                     u2741:
  6231  1C13  2C1A               	goto	l740
  6232  1C14                     u2740:
  6233  1C14                     l2107:
  6234  1C14  0878               	movf	__Umul8_16@word_mpld,w
  6235  1C15  07F6               	addwf	__Umul8_16@product,f
  6236  1C16  1803               	skipnc
  6237  1C17  0AF7               	incf	__Umul8_16@product+1,f
  6238  1C18  0879               	movf	__Umul8_16@word_mpld+1,w
  6239  1C19  07F7               	addwf	__Umul8_16@product+1,f
  6240  1C1A                     l740:
  6241  1C1A  3001               	movlw	1
  6242  1C1B                     u2755:
  6243  1C1B  1003               	clrc
  6244  1C1C  0DF8               	rlf	__Umul8_16@word_mpld,f
  6245  1C1D  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  6246  1C1E  3EFF               	addlw	-1
  6247  1C1F  1D03               	skipz
  6248  1C20  2C1B               	goto	u2755
  6249  1C21  1003               	clrc
  6250  1C22  0CFA               	rrf	__Umul8_16@multiplier,f
  6251  1C23                     l2109:
  6252  1C23  087A               	movf	__Umul8_16@multiplier,w
  6253  1C24  1D03               	btfss	3,2
  6254  1C25  2C27               	goto	u2761
  6255  1C26  2C28               	goto	u2760
  6256  1C27                     u2761:
  6257  1C27  2C10               	goto	l2105
  6258  1C28                     u2760:
  6259  1C28                     l2111:
  6260  1C28  0877               	movf	__Umul8_16@product+1,w
  6261  1C29  00F3               	movwf	?__Umul8_16+1
  6262  1C2A  0876               	movf	__Umul8_16@product,w
  6263  1C2B  00F2               	movwf	?__Umul8_16
  6264  1C2C                     l742:
  6265  1C2C  0008               	return
  6266  1C2D                     __end_of__Umul8_16:
  6267                           
  6268                           	psect	text11
  6269  11F8                     __ptext11:	
  6270 ;; *************** function __tdiv_to_l_ *****************
  6271 ;; Defined at:
  6272 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  f1              4    2[COMMON] float 
  6275 ;;  f2              4    6[COMMON] float 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  quot            4    4[BANK0 ] unsigned long 
  6278 ;;  exp1            1    9[BANK0 ] unsigned char 
  6279 ;;  cntr            1    8[BANK0 ] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  4    2[COMMON] unsigned long 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6289 ;;      Params:         8       0       0       0       0
  6290 ;;      Locals:         0       6       0       0       0
  6291 ;;      Temps:          0       4       0       0       0
  6292 ;;      Totals:         8      10       0       0       0
  6293 ;;Total ram usage:       18 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    1
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_sprintf
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           
  6304                           ;psect for function __tdiv_to_l_
  6305  11F8                     __tdiv_to_l_:
  6306  11F8                     l2689:	
  6307                           ;incstack = 0
  6308                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6309                           
  6310  11F8  0872               	movf	__tdiv_to_l_@f1,w
  6311  11F9  1283               	bcf	3,5	;RP0=0, select bank0
  6312  11FA  1303               	bcf	3,6	;RP1=0, select bank0
  6313  11FB  00A0               	movwf	??__tdiv_to_l_
  6314  11FC  0873               	movf	__tdiv_to_l_@f1+1,w
  6315  11FD  00A1               	movwf	??__tdiv_to_l_+1
  6316  11FE  0874               	movf	__tdiv_to_l_@f1+2,w
  6317  11FF  00A2               	movwf	??__tdiv_to_l_+2
  6318  1200  1003               	clrc
  6319  1201  0D21               	rlf	??__tdiv_to_l_+1,w
  6320  1202  0D22               	rlf	??__tdiv_to_l_+2,w
  6321  1203  00A3               	movwf	??__tdiv_to_l_+3
  6322  1204  0823               	movf	??__tdiv_to_l_+3,w
  6323  1205  00A9               	movwf	__tdiv_to_l_@exp1
  6324  1206  0829               	movf	__tdiv_to_l_@exp1,w
  6325  1207  1D03               	btfss	3,2
  6326  1208  2A0A               	goto	u4241
  6327  1209  2A0B               	goto	u4240
  6328  120A                     u4241:
  6329  120A  2A14               	goto	l2695
  6330  120B                     u4240:
  6331  120B                     l2691:
  6332  120B  3000               	movlw	0
  6333  120C  00F5               	movwf	?__tdiv_to_l_+3
  6334  120D  3000               	movlw	0
  6335  120E  00F4               	movwf	?__tdiv_to_l_+2
  6336  120F  3000               	movlw	0
  6337  1210  00F3               	movwf	?__tdiv_to_l_+1
  6338  1211  3000               	movlw	0
  6339  1212  00F2               	movwf	?__tdiv_to_l_
  6340  1213  2AB4               	goto	l515
  6341  1214                     l2695:
  6342  1214  0876               	movf	__tdiv_to_l_@f2,w
  6343  1215  00A0               	movwf	??__tdiv_to_l_
  6344  1216  0877               	movf	__tdiv_to_l_@f2+1,w
  6345  1217  00A1               	movwf	??__tdiv_to_l_+1
  6346  1218  0878               	movf	__tdiv_to_l_@f2+2,w
  6347  1219  00A2               	movwf	??__tdiv_to_l_+2
  6348  121A  1003               	clrc
  6349  121B  0D21               	rlf	??__tdiv_to_l_+1,w
  6350  121C  0D22               	rlf	??__tdiv_to_l_+2,w
  6351  121D  00A3               	movwf	??__tdiv_to_l_+3
  6352  121E  0823               	movf	??__tdiv_to_l_+3,w
  6353  121F  00A8               	movwf	__tdiv_to_l_@cntr
  6354  1220  0828               	movf	__tdiv_to_l_@cntr,w
  6355  1221  1D03               	btfss	3,2
  6356  1222  2A24               	goto	u4251
  6357  1223  2A25               	goto	u4250
  6358  1224                     u4251:
  6359  1224  2A26               	goto	l516
  6360  1225                     u4250:
  6361  1225  2A0B               	goto	l2691
  6362  1226                     l516:
  6363  1226  17F3               	bsf	__tdiv_to_l_@f1+1,7
  6364  1227                     l2701:
  6365  1227  30FF               	movlw	255
  6366  1228  05F2               	andwf	__tdiv_to_l_@f1,f
  6367  1229  30FF               	movlw	255
  6368  122A  05F3               	andwf	__tdiv_to_l_@f1+1,f
  6369  122B  3000               	movlw	0
  6370  122C  05F4               	andwf	__tdiv_to_l_@f1+2,f
  6371  122D                     l2703:
  6372  122D  17F7               	bsf	__tdiv_to_l_@f2+1,7
  6373  122E  30FF               	movlw	255
  6374  122F  05F6               	andwf	__tdiv_to_l_@f2,f
  6375  1230  30FF               	movlw	255
  6376  1231  05F7               	andwf	__tdiv_to_l_@f2+1,f
  6377  1232  3000               	movlw	0
  6378  1233  05F8               	andwf	__tdiv_to_l_@f2+2,f
  6379  1234  3000               	movlw	0
  6380  1235  00A7               	movwf	__tdiv_to_l_@quot+3
  6381  1236  3000               	movlw	0
  6382  1237  00A6               	movwf	__tdiv_to_l_@quot+2
  6383  1238  3000               	movlw	0
  6384  1239  00A5               	movwf	__tdiv_to_l_@quot+1
  6385  123A  3000               	movlw	0
  6386  123B  00A4               	movwf	__tdiv_to_l_@quot
  6387  123C                     l2705:
  6388  123C  307F               	movlw	127
  6389  123D  02A9               	subwf	__tdiv_to_l_@exp1,f
  6390  123E                     l2707:
  6391  123E  3098               	movlw	152
  6392  123F  0728               	addwf	__tdiv_to_l_@cntr,w
  6393  1240  00A0               	movwf	??__tdiv_to_l_
  6394  1241  0820               	movf	??__tdiv_to_l_,w
  6395  1242  02A9               	subwf	__tdiv_to_l_@exp1,f
  6396  1243  3018               	movlw	24
  6397  1244  00A0               	movwf	??__tdiv_to_l_
  6398  1245  0820               	movf	??__tdiv_to_l_,w
  6399  1246  00A8               	movwf	__tdiv_to_l_@cntr
  6400  1247                     l2709:
  6401  1247  3001               	movlw	1
  6402  1248  00A0               	movwf	??__tdiv_to_l_
  6403  1249                     u4265:
  6404  1249  1003               	clrc
  6405  124A  0DA4               	rlf	__tdiv_to_l_@quot,f
  6406  124B  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6407  124C  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6408  124D  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6409  124E  0BA0               	decfsz	??__tdiv_to_l_,f
  6410  124F  2A49               	goto	u4265
  6411  1250                     l2711:
  6412  1250  0878               	movf	__tdiv_to_l_@f2+2,w
  6413  1251  0274               	subwf	__tdiv_to_l_@f1+2,w
  6414  1252  1D03               	skipz
  6415  1253  2A5A               	goto	u4275
  6416  1254  0877               	movf	__tdiv_to_l_@f2+1,w
  6417  1255  0273               	subwf	__tdiv_to_l_@f1+1,w
  6418  1256  1D03               	skipz
  6419  1257  2A5A               	goto	u4275
  6420  1258  0876               	movf	__tdiv_to_l_@f2,w
  6421  1259  0272               	subwf	__tdiv_to_l_@f1,w
  6422  125A                     u4275:
  6423  125A  1C03               	skipc
  6424  125B  2A5D               	goto	u4271
  6425  125C  2A5E               	goto	u4270
  6426  125D                     u4271:
  6427  125D  2A69               	goto	l2717
  6428  125E                     u4270:
  6429  125E                     l2713:
  6430  125E  0876               	movf	__tdiv_to_l_@f2,w
  6431  125F  02F2               	subwf	__tdiv_to_l_@f1,f
  6432  1260  0877               	movf	__tdiv_to_l_@f2+1,w
  6433  1261  1C03               	skipc
  6434  1262  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  6435  1263  02F3               	subwf	__tdiv_to_l_@f1+1,f
  6436  1264  0878               	movf	__tdiv_to_l_@f2+2,w
  6437  1265  1C03               	skipc
  6438  1266  0A78               	incf	__tdiv_to_l_@f2+2,w
  6439  1267  02F4               	subwf	__tdiv_to_l_@f1+2,f
  6440  1268                     l2715:
  6441  1268  1424               	bsf	__tdiv_to_l_@quot,0
  6442  1269                     l2717:
  6443  1269  3001               	movlw	1
  6444  126A                     u4285:
  6445  126A  1003               	clrc
  6446  126B  0DF2               	rlf	__tdiv_to_l_@f1,f
  6447  126C  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  6448  126D  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  6449  126E  3EFF               	addlw	-1
  6450  126F  1D03               	skipz
  6451  1270  2A6A               	goto	u4285
  6452  1271                     l2719:
  6453  1271  3001               	movlw	1
  6454  1272  02A8               	subwf	__tdiv_to_l_@cntr,f
  6455  1273  1D03               	btfss	3,2
  6456  1274  2A76               	goto	u4291
  6457  1275  2A77               	goto	u4290
  6458  1276                     u4291:
  6459  1276  2A47               	goto	l2709
  6460  1277                     u4290:
  6461  1277                     l519:
  6462  1277  1FA9               	btfss	__tdiv_to_l_@exp1,7
  6463  1278  2A7A               	goto	u4301
  6464  1279  2A7B               	goto	u4300
  6465  127A                     u4301:
  6466  127A  2A95               	goto	l2729
  6467  127B                     u4300:
  6468  127B                     l2721:
  6469  127B  0829               	movf	__tdiv_to_l_@exp1,w
  6470  127C  3A80               	xorlw	128
  6471  127D  3E97               	addlw	151
  6472  127E  1803               	skipnc
  6473  127F  2A81               	goto	u4311
  6474  1280  2A82               	goto	u4310
  6475  1281                     u4311:
  6476  1281  2A83               	goto	l2727
  6477  1282                     u4310:
  6478  1282  2A0B               	goto	l2691
  6479  1283                     l2727:
  6480  1283  3001               	movlw	1
  6481  1284                     u4325:
  6482  1284  1003               	clrc
  6483  1285  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  6484  1286  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  6485  1287  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  6486  1288  0CA4               	rrf	__tdiv_to_l_@quot,f
  6487  1289  3EFF               	addlw	-1
  6488  128A  1D03               	skipz
  6489  128B  2A84               	goto	u4325
  6490  128C  3001               	movlw	1
  6491  128D  00A0               	movwf	??__tdiv_to_l_
  6492  128E  0820               	movf	??__tdiv_to_l_,w
  6493  128F  07A9               	addwf	__tdiv_to_l_@exp1,f
  6494  1290  1D03               	btfss	3,2
  6495  1291  2A93               	goto	u4331
  6496  1292  2A94               	goto	u4330
  6497  1293                     u4331:
  6498  1293  2A83               	goto	l2727
  6499  1294                     u4330:
  6500  1294  2AAC               	goto	l2737
  6501  1295                     l2729:
  6502  1295  3018               	movlw	24
  6503  1296  0229               	subwf	__tdiv_to_l_@exp1,w
  6504  1297  1C03               	skipc
  6505  1298  2A9A               	goto	u4341
  6506  1299  2A9B               	goto	u4340
  6507  129A                     u4341:
  6508  129A  2AA7               	goto	l526
  6509  129B                     u4340:
  6510  129B  2A0B               	goto	l2691
  6511  129C                     l2735:
  6512  129C  3001               	movlw	1
  6513  129D  00A0               	movwf	??__tdiv_to_l_
  6514  129E                     u4355:
  6515  129E  1003               	clrc
  6516  129F  0DA4               	rlf	__tdiv_to_l_@quot,f
  6517  12A0  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6518  12A1  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6519  12A2  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6520  12A3  0BA0               	decfsz	??__tdiv_to_l_,f
  6521  12A4  2A9E               	goto	u4355
  6522  12A5  3001               	movlw	1
  6523  12A6  02A9               	subwf	__tdiv_to_l_@exp1,f
  6524  12A7                     l526:
  6525  12A7  0829               	movf	__tdiv_to_l_@exp1,w
  6526  12A8  1D03               	btfss	3,2
  6527  12A9  2AAB               	goto	u4361
  6528  12AA  2AAC               	goto	u4360
  6529  12AB                     u4361:
  6530  12AB  2A9C               	goto	l2735
  6531  12AC                     u4360:
  6532  12AC                     l2737:
  6533  12AC  0827               	movf	__tdiv_to_l_@quot+3,w
  6534  12AD  00F5               	movwf	?__tdiv_to_l_+3
  6535  12AE  0826               	movf	__tdiv_to_l_@quot+2,w
  6536  12AF  00F4               	movwf	?__tdiv_to_l_+2
  6537  12B0  0825               	movf	__tdiv_to_l_@quot+1,w
  6538  12B1  00F3               	movwf	?__tdiv_to_l_+1
  6539  12B2  0824               	movf	__tdiv_to_l_@quot,w
  6540  12B3  00F2               	movwf	?__tdiv_to_l_
  6541  12B4                     l515:
  6542  12B4  0008               	return
  6543  12B5                     __end_of__tdiv_to_l_:
  6544                           
  6545                           	psect	text12
  6546  087E                     __ptext12:	
  6547 ;; *************** function __div_to_l_ *****************
  6548 ;; Defined at:
  6549 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  f1              4    2[COMMON] unsigned long 
  6552 ;;  f2              4    6[COMMON] unsigned long 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  quot            4    0[BANK0 ] unsigned long 
  6555 ;;  exp1            1    5[BANK0 ] unsigned char 
  6556 ;;  cntr            1    4[BANK0 ] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  4    2[COMMON] unsigned long 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6566 ;;      Params:         8       0       0       0       0
  6567 ;;      Locals:         0       6       0       0       0
  6568 ;;      Temps:          1       0       0       0       0
  6569 ;;      Totals:         9       6       0       0       0
  6570 ;;Total ram usage:       15 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    1
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_sprintf
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           
  6581                           ;psect for function __div_to_l_
  6582  087E                     __div_to_l_:
  6583  087E                     l2741:	
  6584                           ;incstack = 0
  6585                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6586                           
  6587  087E  1003               	clrc
  6588  087F  0D74               	rlf	__div_to_l_@f1+2,w
  6589  0880  0D75               	rlf	__div_to_l_@f1+3,w
  6590  0881  00FA               	movwf	??__div_to_l_
  6591  0882  087A               	movf	??__div_to_l_,w
  6592  0883  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0884  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0885  00A5               	movwf	__div_to_l_@exp1
  6595  0886  0825               	movf	__div_to_l_@exp1,w
  6596  0887  1D03               	btfss	3,2
  6597  0888  288A               	goto	u4371
  6598  0889  288B               	goto	u4370
  6599  088A                     u4371:
  6600  088A  2894               	goto	l2747
  6601  088B                     u4370:
  6602  088B                     l2743:
  6603  088B  3000               	movlw	0
  6604  088C  00F5               	movwf	?__div_to_l_+3
  6605  088D  3000               	movlw	0
  6606  088E  00F4               	movwf	?__div_to_l_+2
  6607  088F  3000               	movlw	0
  6608  0890  00F3               	movwf	?__div_to_l_+1
  6609  0891  3000               	movlw	0
  6610  0892  00F2               	movwf	?__div_to_l_
  6611  0893  293B               	goto	l468
  6612  0894                     l2747:
  6613  0894  1003               	clrc
  6614  0895  0D78               	rlf	__div_to_l_@f2+2,w
  6615  0896  0D79               	rlf	__div_to_l_@f2+3,w
  6616  0897  00FA               	movwf	??__div_to_l_
  6617  0898  087A               	movf	??__div_to_l_,w
  6618  0899  00A4               	movwf	__div_to_l_@cntr
  6619  089A  0824               	movf	__div_to_l_@cntr,w
  6620  089B  1D03               	btfss	3,2
  6621  089C  289E               	goto	u4381
  6622  089D  289F               	goto	u4380
  6623  089E                     u4381:
  6624  089E  28A0               	goto	l469
  6625  089F                     u4380:
  6626  089F  288B               	goto	l2743
  6627  08A0                     l469:
  6628  08A0  17F4               	bsf	__div_to_l_@f1+2,7
  6629  08A1                     l2753:
  6630  08A1  30FF               	movlw	255
  6631  08A2  05F2               	andwf	__div_to_l_@f1,f
  6632  08A3  30FF               	movlw	255
  6633  08A4  05F3               	andwf	__div_to_l_@f1+1,f
  6634  08A5  30FF               	movlw	255
  6635  08A6  05F4               	andwf	__div_to_l_@f1+2,f
  6636  08A7  3000               	movlw	0
  6637  08A8  05F5               	andwf	__div_to_l_@f1+3,f
  6638  08A9                     l2755:
  6639  08A9  17F8               	bsf	__div_to_l_@f2+2,7
  6640  08AA  30FF               	movlw	255
  6641  08AB  05F6               	andwf	__div_to_l_@f2,f
  6642  08AC  30FF               	movlw	255
  6643  08AD  05F7               	andwf	__div_to_l_@f2+1,f
  6644  08AE  30FF               	movlw	255
  6645  08AF  05F8               	andwf	__div_to_l_@f2+2,f
  6646  08B0  3000               	movlw	0
  6647  08B1  05F9               	andwf	__div_to_l_@f2+3,f
  6648  08B2  3000               	movlw	0
  6649  08B3  00A3               	movwf	__div_to_l_@quot+3
  6650  08B4  3000               	movlw	0
  6651  08B5  00A2               	movwf	__div_to_l_@quot+2
  6652  08B6  3000               	movlw	0
  6653  08B7  00A1               	movwf	__div_to_l_@quot+1
  6654  08B8  3000               	movlw	0
  6655  08B9  00A0               	movwf	__div_to_l_@quot
  6656  08BA                     l2757:
  6657  08BA  307F               	movlw	127
  6658  08BB  02A5               	subwf	__div_to_l_@exp1,f
  6659  08BC                     l2759:
  6660  08BC  30A0               	movlw	160
  6661  08BD  0724               	addwf	__div_to_l_@cntr,w
  6662  08BE  00FA               	movwf	??__div_to_l_
  6663  08BF  087A               	movf	??__div_to_l_,w
  6664  08C0  02A5               	subwf	__div_to_l_@exp1,f
  6665  08C1  3020               	movlw	32
  6666  08C2  00FA               	movwf	??__div_to_l_
  6667  08C3  087A               	movf	??__div_to_l_,w
  6668  08C4  00A4               	movwf	__div_to_l_@cntr
  6669  08C5                     l2761:
  6670  08C5  3001               	movlw	1
  6671  08C6  00FA               	movwf	??__div_to_l_
  6672  08C7                     u4395:
  6673  08C7  1003               	clrc
  6674  08C8  0DA0               	rlf	__div_to_l_@quot,f
  6675  08C9  0DA1               	rlf	__div_to_l_@quot+1,f
  6676  08CA  0DA2               	rlf	__div_to_l_@quot+2,f
  6677  08CB  0DA3               	rlf	__div_to_l_@quot+3,f
  6678  08CC  0BFA               	decfsz	??__div_to_l_,f
  6679  08CD  28C7               	goto	u4395
  6680  08CE                     l2763:
  6681  08CE  0879               	movf	__div_to_l_@f2+3,w
  6682  08CF  0275               	subwf	__div_to_l_@f1+3,w
  6683  08D0  1D03               	skipz
  6684  08D1  28DC               	goto	u4405
  6685  08D2  0878               	movf	__div_to_l_@f2+2,w
  6686  08D3  0274               	subwf	__div_to_l_@f1+2,w
  6687  08D4  1D03               	skipz
  6688  08D5  28DC               	goto	u4405
  6689  08D6  0877               	movf	__div_to_l_@f2+1,w
  6690  08D7  0273               	subwf	__div_to_l_@f1+1,w
  6691  08D8  1D03               	skipz
  6692  08D9  28DC               	goto	u4405
  6693  08DA  0876               	movf	__div_to_l_@f2,w
  6694  08DB  0272               	subwf	__div_to_l_@f1,w
  6695  08DC                     u4405:
  6696  08DC  1C03               	skipc
  6697  08DD  28DF               	goto	u4401
  6698  08DE  28E0               	goto	u4400
  6699  08DF                     u4401:
  6700  08DF  28EF               	goto	l2769
  6701  08E0                     u4400:
  6702  08E0                     l2765:
  6703  08E0  0876               	movf	__div_to_l_@f2,w
  6704  08E1  02F2               	subwf	__div_to_l_@f1,f
  6705  08E2  0877               	movf	__div_to_l_@f2+1,w
  6706  08E3  1C03               	skipc
  6707  08E4  0F77               	incfsz	__div_to_l_@f2+1,w
  6708  08E5  02F3               	subwf	__div_to_l_@f1+1,f
  6709  08E6  0878               	movf	__div_to_l_@f2+2,w
  6710  08E7  1C03               	skipc
  6711  08E8  0F78               	incfsz	__div_to_l_@f2+2,w
  6712  08E9  02F4               	subwf	__div_to_l_@f1+2,f
  6713  08EA  0879               	movf	__div_to_l_@f2+3,w
  6714  08EB  1C03               	skipc
  6715  08EC  0F79               	incfsz	__div_to_l_@f2+3,w
  6716  08ED  02F5               	subwf	__div_to_l_@f1+3,f
  6717  08EE                     l2767:
  6718  08EE  1420               	bsf	__div_to_l_@quot,0
  6719  08EF                     l2769:
  6720  08EF  3001               	movlw	1
  6721  08F0  00FA               	movwf	??__div_to_l_
  6722  08F1                     u4415:
  6723  08F1  1003               	clrc
  6724  08F2  0DF2               	rlf	__div_to_l_@f1,f
  6725  08F3  0DF3               	rlf	__div_to_l_@f1+1,f
  6726  08F4  0DF4               	rlf	__div_to_l_@f1+2,f
  6727  08F5  0DF5               	rlf	__div_to_l_@f1+3,f
  6728  08F6  0BFA               	decfsz	??__div_to_l_,f
  6729  08F7  28F1               	goto	u4415
  6730  08F8                     l2771:
  6731  08F8  3001               	movlw	1
  6732  08F9  02A4               	subwf	__div_to_l_@cntr,f
  6733  08FA  1D03               	btfss	3,2
  6734  08FB  28FD               	goto	u4421
  6735  08FC  28FE               	goto	u4420
  6736  08FD                     u4421:
  6737  08FD  28C5               	goto	l2761
  6738  08FE                     u4420:
  6739  08FE                     l472:
  6740  08FE  1FA5               	btfss	__div_to_l_@exp1,7
  6741  08FF  2901               	goto	u4431
  6742  0900  2902               	goto	u4430
  6743  0901                     u4431:
  6744  0901  291C               	goto	l2781
  6745  0902                     u4430:
  6746  0902                     l2773:
  6747  0902  0825               	movf	__div_to_l_@exp1,w
  6748  0903  3A80               	xorlw	128
  6749  0904  3E9F               	addlw	159
  6750  0905  1803               	skipnc
  6751  0906  2908               	goto	u4441
  6752  0907  2909               	goto	u4440
  6753  0908                     u4441:
  6754  0908  290A               	goto	l2779
  6755  0909                     u4440:
  6756  0909  288B               	goto	l2743
  6757  090A                     l2779:
  6758  090A  3001               	movlw	1
  6759  090B                     u4455:
  6760  090B  1003               	clrc
  6761  090C  0CA3               	rrf	__div_to_l_@quot+3,f
  6762  090D  0CA2               	rrf	__div_to_l_@quot+2,f
  6763  090E  0CA1               	rrf	__div_to_l_@quot+1,f
  6764  090F  0CA0               	rrf	__div_to_l_@quot,f
  6765  0910  3EFF               	addlw	-1
  6766  0911  1D03               	skipz
  6767  0912  290B               	goto	u4455
  6768  0913  3001               	movlw	1
  6769  0914  00FA               	movwf	??__div_to_l_
  6770  0915  087A               	movf	??__div_to_l_,w
  6771  0916  07A5               	addwf	__div_to_l_@exp1,f
  6772  0917  1D03               	btfss	3,2
  6773  0918  291A               	goto	u4461
  6774  0919  291B               	goto	u4460
  6775  091A                     u4461:
  6776  091A  290A               	goto	l2779
  6777  091B                     u4460:
  6778  091B  2933               	goto	l2789
  6779  091C                     l2781:
  6780  091C  3020               	movlw	32
  6781  091D  0225               	subwf	__div_to_l_@exp1,w
  6782  091E  1C03               	skipc
  6783  091F  2921               	goto	u4471
  6784  0920  2922               	goto	u4470
  6785  0921                     u4471:
  6786  0921  292E               	goto	l479
  6787  0922                     u4470:
  6788  0922  288B               	goto	l2743
  6789  0923                     l2787:
  6790  0923  3001               	movlw	1
  6791  0924  00FA               	movwf	??__div_to_l_
  6792  0925                     u4485:
  6793  0925  1003               	clrc
  6794  0926  0DA0               	rlf	__div_to_l_@quot,f
  6795  0927  0DA1               	rlf	__div_to_l_@quot+1,f
  6796  0928  0DA2               	rlf	__div_to_l_@quot+2,f
  6797  0929  0DA3               	rlf	__div_to_l_@quot+3,f
  6798  092A  0BFA               	decfsz	??__div_to_l_,f
  6799  092B  2925               	goto	u4485
  6800  092C  3001               	movlw	1
  6801  092D  02A5               	subwf	__div_to_l_@exp1,f
  6802  092E                     l479:
  6803  092E  0825               	movf	__div_to_l_@exp1,w
  6804  092F  1D03               	btfss	3,2
  6805  0930  2932               	goto	u4491
  6806  0931  2933               	goto	u4490
  6807  0932                     u4491:
  6808  0932  2923               	goto	l2787
  6809  0933                     u4490:
  6810  0933                     l2789:
  6811  0933  0823               	movf	__div_to_l_@quot+3,w
  6812  0934  00F5               	movwf	?__div_to_l_+3
  6813  0935  0822               	movf	__div_to_l_@quot+2,w
  6814  0936  00F4               	movwf	?__div_to_l_+2
  6815  0937  0821               	movf	__div_to_l_@quot+1,w
  6816  0938  00F3               	movwf	?__div_to_l_+1
  6817  0939  0820               	movf	__div_to_l_@quot,w
  6818  093A  00F2               	movwf	?__div_to_l_
  6819  093B                     l468:
  6820  093B  0008               	return
  6821  093C                     __end_of__div_to_l_:
  6822                           
  6823                           	psect	text13
  6824  113C                     __ptext13:	
  6825 ;; *************** function ___xxtofl *****************
  6826 ;; Defined at:
  6827 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  sign            1    wreg     unsigned char 
  6830 ;;  val             4    4[BANK0 ] long 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  sign            1   12[BANK0 ] unsigned char 
  6833 ;;  arg             4   14[BANK0 ] unsigned long 
  6834 ;;  exp             1   13[BANK0 ] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  4    4[BANK0 ] unsigned char 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6844 ;;      Params:         0       4       0       0       0
  6845 ;;      Locals:         0       6       0       0       0
  6846 ;;      Temps:          0       4       0       0       0
  6847 ;;      Totals:         0      14       0       0       0
  6848 ;;Total ram usage:       14 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    1
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_main
  6855 ;;		_sprintf
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           
  6860                           ;psect for function ___xxtofl
  6861  113C                     ___xxtofl:
  6862                           
  6863                           ;incstack = 0
  6864                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6865                           ;___xxtofl@sign stored from wreg
  6866  113C  1283               	bcf	3,5	;RP0=0, select bank0
  6867  113D  1303               	bcf	3,6	;RP1=0, select bank0
  6868  113E  00AC               	movwf	___xxtofl@sign
  6869  113F                     l2933:
  6870  113F  082C               	movf	___xxtofl@sign,w
  6871  1140  1903               	btfsc	3,2
  6872  1141  2943               	goto	u4881
  6873  1142  2944               	goto	u4880
  6874  1143                     u4881:
  6875  1143  2958               	goto	l2939
  6876  1144                     u4880:
  6877  1144                     l2935:
  6878  1144  1FA7               	btfss	___xxtofl@val+3,7
  6879  1145  2947               	goto	u4891
  6880  1146  2948               	goto	u4890
  6881  1147                     u4891:
  6882  1147  2958               	goto	l2939
  6883  1148                     u4890:
  6884  1148                     l2937:
  6885  1148  0924               	comf	___xxtofl@val,w
  6886  1149  00AE               	movwf	___xxtofl@arg
  6887  114A  0925               	comf	___xxtofl@val+1,w
  6888  114B  00AF               	movwf	___xxtofl@arg+1
  6889  114C  0926               	comf	___xxtofl@val+2,w
  6890  114D  00B0               	movwf	___xxtofl@arg+2
  6891  114E  0927               	comf	___xxtofl@val+3,w
  6892  114F  00B1               	movwf	___xxtofl@arg+3
  6893  1150  0AAE               	incf	___xxtofl@arg,f
  6894  1151  1903               	skipnz
  6895  1152  0AAF               	incf	___xxtofl@arg+1,f
  6896  1153  1903               	skipnz
  6897  1154  0AB0               	incf	___xxtofl@arg+2,f
  6898  1155  1903               	skipnz
  6899  1156  0AB1               	incf	___xxtofl@arg+3,f
  6900  1157  2960               	goto	l765
  6901  1158                     l2939:
  6902  1158  0827               	movf	___xxtofl@val+3,w
  6903  1159  00B1               	movwf	___xxtofl@arg+3
  6904  115A  0826               	movf	___xxtofl@val+2,w
  6905  115B  00B0               	movwf	___xxtofl@arg+2
  6906  115C  0825               	movf	___xxtofl@val+1,w
  6907  115D  00AF               	movwf	___xxtofl@arg+1
  6908  115E  0824               	movf	___xxtofl@val,w
  6909  115F  00AE               	movwf	___xxtofl@arg
  6910  1160                     l765:
  6911  1160  0827               	movf	___xxtofl@val+3,w
  6912  1161  0426               	iorwf	___xxtofl@val+2,w
  6913  1162  0425               	iorwf	___xxtofl@val+1,w
  6914  1163  0424               	iorwf	___xxtofl@val,w
  6915  1164  1D03               	skipz
  6916  1165  2967               	goto	u4901
  6917  1166  2968               	goto	u4900
  6918  1167                     u4901:
  6919  1167  2971               	goto	l2945
  6920  1168                     u4900:
  6921  1168                     l2941:
  6922  1168  3000               	movlw	0
  6923  1169  00A7               	movwf	?___xxtofl+3
  6924  116A  3000               	movlw	0
  6925  116B  00A6               	movwf	?___xxtofl+2
  6926  116C  3000               	movlw	0
  6927  116D  00A5               	movwf	?___xxtofl+1
  6928  116E  3000               	movlw	0
  6929  116F  00A4               	movwf	?___xxtofl
  6930  1170  29F7               	goto	l767
  6931  1171                     l2945:
  6932  1171  3096               	movlw	150
  6933  1172  00A8               	movwf	??___xxtofl
  6934  1173  0828               	movf	??___xxtofl,w
  6935  1174  00AD               	movwf	___xxtofl@exp
  6936  1175  2983               	goto	l2949
  6937  1176                     l2947:
  6938  1176  3001               	movlw	1
  6939  1177  00A8               	movwf	??___xxtofl
  6940  1178  0828               	movf	??___xxtofl,w
  6941  1179  07AD               	addwf	___xxtofl@exp,f
  6942  117A  3001               	movlw	1
  6943  117B                     u4915:
  6944  117B  1003               	clrc
  6945  117C  0CB1               	rrf	___xxtofl@arg+3,f
  6946  117D  0CB0               	rrf	___xxtofl@arg+2,f
  6947  117E  0CAF               	rrf	___xxtofl@arg+1,f
  6948  117F  0CAE               	rrf	___xxtofl@arg,f
  6949  1180  3EFF               	addlw	-1
  6950  1181  1D03               	skipz
  6951  1182  297B               	goto	u4915
  6952  1183                     l2949:
  6953  1183  30FE               	movlw	254
  6954  1184  0531               	andwf	___xxtofl@arg+3,w
  6955  1185  1D03               	btfss	3,2
  6956  1186  2988               	goto	u4921
  6957  1187  2989               	goto	u4920
  6958  1188                     u4921:
  6959  1188  2976               	goto	l2947
  6960  1189                     u4920:
  6961  1189  29A5               	goto	l771
  6962  118A                     l2951:
  6963  118A  3001               	movlw	1
  6964  118B  00A8               	movwf	??___xxtofl
  6965  118C  0828               	movf	??___xxtofl,w
  6966  118D  07AD               	addwf	___xxtofl@exp,f
  6967  118E                     l2953:
  6968  118E  3001               	movlw	1
  6969  118F  07AE               	addwf	___xxtofl@arg,f
  6970  1190  3000               	movlw	0
  6971  1191  1803               	skipnc
  6972  1192  3001               	movlw	1
  6973  1193  07AF               	addwf	___xxtofl@arg+1,f
  6974  1194  3000               	movlw	0
  6975  1195  1803               	skipnc
  6976  1196  3001               	movlw	1
  6977  1197  07B0               	addwf	___xxtofl@arg+2,f
  6978  1198  3000               	movlw	0
  6979  1199  1803               	skipnc
  6980  119A  3001               	movlw	1
  6981  119B  07B1               	addwf	___xxtofl@arg+3,f
  6982  119C                     l2955:
  6983  119C  3001               	movlw	1
  6984  119D                     u4935:
  6985  119D  1003               	clrc
  6986  119E  0CB1               	rrf	___xxtofl@arg+3,f
  6987  119F  0CB0               	rrf	___xxtofl@arg+2,f
  6988  11A0  0CAF               	rrf	___xxtofl@arg+1,f
  6989  11A1  0CAE               	rrf	___xxtofl@arg,f
  6990  11A2  3EFF               	addlw	-1
  6991  11A3  1D03               	skipz
  6992  11A4  299D               	goto	u4935
  6993  11A5                     l771:
  6994  11A5  30FF               	movlw	255
  6995  11A6  0531               	andwf	___xxtofl@arg+3,w
  6996  11A7  1D03               	btfss	3,2
  6997  11A8  29AA               	goto	u4941
  6998  11A9  29AB               	goto	u4940
  6999  11AA                     u4941:
  7000  11AA  298A               	goto	l2951
  7001  11AB                     u4940:
  7002  11AB  29B7               	goto	l2959
  7003  11AC                     l2957:
  7004  11AC  3001               	movlw	1
  7005  11AD  02AD               	subwf	___xxtofl@exp,f
  7006  11AE  3001               	movlw	1
  7007  11AF  00A8               	movwf	??___xxtofl
  7008  11B0                     u4955:
  7009  11B0  1003               	clrc
  7010  11B1  0DAE               	rlf	___xxtofl@arg,f
  7011  11B2  0DAF               	rlf	___xxtofl@arg+1,f
  7012  11B3  0DB0               	rlf	___xxtofl@arg+2,f
  7013  11B4  0DB1               	rlf	___xxtofl@arg+3,f
  7014  11B5  0BA8               	decfsz	??___xxtofl,f
  7015  11B6  29B0               	goto	u4955
  7016  11B7                     l2959:
  7017  11B7  1BB0               	btfsc	___xxtofl@arg+2,7
  7018  11B8  29BA               	goto	u4961
  7019  11B9  29BB               	goto	u4960
  7020  11BA                     u4961:
  7021  11BA  29C1               	goto	l778
  7022  11BB                     u4960:
  7023  11BB                     l2961:
  7024  11BB  3002               	movlw	2
  7025  11BC  022D               	subwf	___xxtofl@exp,w
  7026  11BD  1803               	skipnc
  7027  11BE  29C0               	goto	u4971
  7028  11BF  29C1               	goto	u4970
  7029  11C0                     u4971:
  7030  11C0  29AC               	goto	l2957
  7031  11C1                     u4970:
  7032  11C1                     l778:
  7033  11C1  182D               	btfsc	___xxtofl@exp,0
  7034  11C2  29C4               	goto	u4981
  7035  11C3  29C5               	goto	u4980
  7036  11C4                     u4981:
  7037  11C4  29CD               	goto	l779
  7038  11C5                     u4980:
  7039  11C5                     l2963:
  7040  11C5  30FF               	movlw	255
  7041  11C6  05AE               	andwf	___xxtofl@arg,f
  7042  11C7  30FF               	movlw	255
  7043  11C8  05AF               	andwf	___xxtofl@arg+1,f
  7044  11C9  307F               	movlw	127
  7045  11CA  05B0               	andwf	___xxtofl@arg+2,f
  7046  11CB  30FF               	movlw	255
  7047  11CC  05B1               	andwf	___xxtofl@arg+3,f
  7048  11CD                     l779:
  7049  11CD  1003               	clrc
  7050  11CE  0CAD               	rrf	___xxtofl@exp,f
  7051  11CF                     l2965:
  7052  11CF  082D               	movf	___xxtofl@exp,w
  7053  11D0  00A8               	movwf	??___xxtofl
  7054  11D1  01A9               	clrf	??___xxtofl+1
  7055  11D2  01AA               	clrf	??___xxtofl+2
  7056  11D3  01AB               	clrf	??___xxtofl+3
  7057  11D4  3018               	movlw	24
  7058  11D5                     u4995:
  7059  11D5  1003               	clrc
  7060  11D6  0DA8               	rlf	??___xxtofl,f
  7061  11D7  0DA9               	rlf	??___xxtofl+1,f
  7062  11D8  0DAA               	rlf	??___xxtofl+2,f
  7063  11D9  0DAB               	rlf	??___xxtofl+3,f
  7064  11DA                     u4990:
  7065  11DA  3EFF               	addlw	-1
  7066  11DB  1D03               	skipz
  7067  11DC  29D5               	goto	u4995
  7068  11DD  0828               	movf	??___xxtofl,w
  7069  11DE  04AE               	iorwf	___xxtofl@arg,f
  7070  11DF  0829               	movf	??___xxtofl+1,w
  7071  11E0  04AF               	iorwf	___xxtofl@arg+1,f
  7072  11E1  082A               	movf	??___xxtofl+2,w
  7073  11E2  04B0               	iorwf	___xxtofl@arg+2,f
  7074  11E3  082B               	movf	??___xxtofl+3,w
  7075  11E4  04B1               	iorwf	___xxtofl@arg+3,f
  7076  11E5                     l2967:
  7077  11E5  082C               	movf	___xxtofl@sign,w
  7078  11E6  1903               	btfsc	3,2
  7079  11E7  29E9               	goto	u5001
  7080  11E8  29EA               	goto	u5000
  7081  11E9                     u5001:
  7082  11E9  29EF               	goto	l2973
  7083  11EA                     u5000:
  7084  11EA                     l2969:
  7085  11EA  1FA7               	btfss	___xxtofl@val+3,7
  7086  11EB  29ED               	goto	u5011
  7087  11EC  29EE               	goto	u5010
  7088  11ED                     u5011:
  7089  11ED  29EF               	goto	l2973
  7090  11EE                     u5010:
  7091  11EE                     l2971:
  7092  11EE  17B1               	bsf	___xxtofl@arg+3,7
  7093  11EF                     l2973:
  7094  11EF  0831               	movf	___xxtofl@arg+3,w
  7095  11F0  00A7               	movwf	?___xxtofl+3
  7096  11F1  0830               	movf	___xxtofl@arg+2,w
  7097  11F2  00A6               	movwf	?___xxtofl+2
  7098  11F3  082F               	movf	___xxtofl@arg+1,w
  7099  11F4  00A5               	movwf	?___xxtofl+1
  7100  11F5  082E               	movf	___xxtofl@arg,w
  7101  11F6  00A4               	movwf	?___xxtofl
  7102  11F7                     l767:
  7103  11F7  0008               	return
  7104  11F8                     __end_of___xxtofl:
  7105                           
  7106                           	psect	text14
  7107  1BE1                     __ptext14:	
  7108 ;; *************** function ___wmul *****************
  7109 ;; Defined at:
  7110 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  multiplier      2    2[COMMON] unsigned int 
  7113 ;;  multiplicand    2    4[COMMON] unsigned int 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  product         2    6[COMMON] unsigned int 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  2    2[COMMON] unsigned int 
  7118 ;; Registers used:
  7119 ;;		wreg, status,2, status,0
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7125 ;;      Params:         4       0       0       0       0
  7126 ;;      Locals:         2       0       0       0       0
  7127 ;;      Temps:          0       0       0       0       0
  7128 ;;      Totals:         6       0       0       0       0
  7129 ;;Total ram usage:        6 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    1
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_sprintf
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function ___wmul
  7141  1BE1                     ___wmul:
  7142  1BE1                     l2793:	
  7143                           ;incstack = 0
  7144                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7145                           
  7146  1BE1  01F6               	clrf	___wmul@product
  7147  1BE2  01F7               	clrf	___wmul@product+1
  7148  1BE3                     l2795:
  7149  1BE3  1C72               	btfss	___wmul@multiplier,0
  7150  1BE4  2BE6               	goto	u4501
  7151  1BE5  2BE7               	goto	u4500
  7152  1BE6                     u4501:
  7153  1BE6  2BED               	goto	l298
  7154  1BE7                     u4500:
  7155  1BE7                     l2797:
  7156  1BE7  0874               	movf	___wmul@multiplicand,w
  7157  1BE8  07F6               	addwf	___wmul@product,f
  7158  1BE9  1803               	skipnc
  7159  1BEA  0AF7               	incf	___wmul@product+1,f
  7160  1BEB  0875               	movf	___wmul@multiplicand+1,w
  7161  1BEC  07F7               	addwf	___wmul@product+1,f
  7162  1BED                     l298:
  7163  1BED  3001               	movlw	1
  7164  1BEE                     u4515:
  7165  1BEE  1003               	clrc
  7166  1BEF  0DF4               	rlf	___wmul@multiplicand,f
  7167  1BF0  0DF5               	rlf	___wmul@multiplicand+1,f
  7168  1BF1  3EFF               	addlw	-1
  7169  1BF2  1D03               	skipz
  7170  1BF3  2BEE               	goto	u4515
  7171  1BF4                     l2799:
  7172  1BF4  3001               	movlw	1
  7173  1BF5                     u4525:
  7174  1BF5  1003               	clrc
  7175  1BF6  0CF3               	rrf	___wmul@multiplier+1,f
  7176  1BF7  0CF2               	rrf	___wmul@multiplier,f
  7177  1BF8  3EFF               	addlw	-1
  7178  1BF9  1D03               	skipz
  7179  1BFA  2BF5               	goto	u4525
  7180  1BFB                     l2801:
  7181  1BFB  0872               	movf	___wmul@multiplier,w
  7182  1BFC  0473               	iorwf	___wmul@multiplier+1,w
  7183  1BFD  1D03               	btfss	3,2
  7184  1BFE  2C00               	goto	u4531
  7185  1BFF  2C01               	goto	u4530
  7186  1C00                     u4531:
  7187  1C00  2BE3               	goto	l2795
  7188  1C01                     u4530:
  7189  1C01                     l2803:
  7190  1C01  0877               	movf	___wmul@product+1,w
  7191  1C02  00F3               	movwf	?___wmul+1
  7192  1C03  0876               	movf	___wmul@product,w
  7193  1C04  00F2               	movwf	?___wmul
  7194  1C05                     l300:
  7195  1C05  0008               	return
  7196  1C06                     __end_of___wmul:
  7197                           
  7198                           	psect	text15
  7199  1D92                     __ptext15:	
  7200 ;; *************** function ___llmod *****************
  7201 ;; Defined at:
  7202 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  divisor         4    2[COMMON] unsigned long 
  7205 ;;  dividend        4    6[COMMON] unsigned long 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  counter         1   11[COMMON] unsigned char 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  4    2[COMMON] unsigned long 
  7210 ;; Registers used:
  7211 ;;		wreg, status,2, status,0
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7217 ;;      Params:         8       0       0       0       0
  7218 ;;      Locals:         1       0       0       0       0
  7219 ;;      Temps:          1       0       0       0       0
  7220 ;;      Totals:        10       0       0       0       0
  7221 ;;Total ram usage:       10 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    1
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_sprintf
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function ___llmod
  7233  1D92                     ___llmod:
  7234  1D92                     l2907:	
  7235                           ;incstack = 0
  7236                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7237                           
  7238  1D92  0875               	movf	___llmod@divisor+3,w
  7239  1D93  0474               	iorwf	___llmod@divisor+2,w
  7240  1D94  0473               	iorwf	___llmod@divisor+1,w
  7241  1D95  0472               	iorwf	___llmod@divisor,w
  7242  1D96  1903               	skipnz
  7243  1D97  2D99               	goto	u4821
  7244  1D98  2D9A               	goto	u4820
  7245  1D99                     u4821:
  7246  1D99  2DDD               	goto	l2923
  7247  1D9A                     u4820:
  7248  1D9A                     l2909:
  7249  1D9A  01FB               	clrf	___llmod@counter
  7250  1D9B  0AFB               	incf	___llmod@counter,f
  7251  1D9C  2DAA               	goto	l2913
  7252  1D9D                     l2911:
  7253  1D9D  3001               	movlw	1
  7254  1D9E  00FA               	movwf	??___llmod
  7255  1D9F                     u4835:
  7256  1D9F  1003               	clrc
  7257  1DA0  0DF2               	rlf	___llmod@divisor,f
  7258  1DA1  0DF3               	rlf	___llmod@divisor+1,f
  7259  1DA2  0DF4               	rlf	___llmod@divisor+2,f
  7260  1DA3  0DF5               	rlf	___llmod@divisor+3,f
  7261  1DA4  0BFA               	decfsz	??___llmod,f
  7262  1DA5  2D9F               	goto	u4835
  7263  1DA6  3001               	movlw	1
  7264  1DA7  00FA               	movwf	??___llmod
  7265  1DA8  087A               	movf	??___llmod,w
  7266  1DA9  07FB               	addwf	___llmod@counter,f
  7267  1DAA                     l2913:
  7268  1DAA  1FF5               	btfss	___llmod@divisor+3,7
  7269  1DAB  2DAD               	goto	u4841
  7270  1DAC  2DAE               	goto	u4840
  7271  1DAD                     u4841:
  7272  1DAD  2D9D               	goto	l2911
  7273  1DAE                     u4840:
  7274  1DAE                     l2915:
  7275  1DAE  0875               	movf	___llmod@divisor+3,w
  7276  1DAF  0279               	subwf	___llmod@dividend+3,w
  7277  1DB0  1D03               	skipz
  7278  1DB1  2DBC               	goto	u4855
  7279  1DB2  0874               	movf	___llmod@divisor+2,w
  7280  1DB3  0278               	subwf	___llmod@dividend+2,w
  7281  1DB4  1D03               	skipz
  7282  1DB5  2DBC               	goto	u4855
  7283  1DB6  0873               	movf	___llmod@divisor+1,w
  7284  1DB7  0277               	subwf	___llmod@dividend+1,w
  7285  1DB8  1D03               	skipz
  7286  1DB9  2DBC               	goto	u4855
  7287  1DBA  0872               	movf	___llmod@divisor,w
  7288  1DBB  0276               	subwf	___llmod@dividend,w
  7289  1DBC                     u4855:
  7290  1DBC  1C03               	skipc
  7291  1DBD  2DBF               	goto	u4851
  7292  1DBE  2DC0               	goto	u4850
  7293  1DBF                     u4851:
  7294  1DBF  2DCE               	goto	l2919
  7295  1DC0                     u4850:
  7296  1DC0                     l2917:
  7297  1DC0  0872               	movf	___llmod@divisor,w
  7298  1DC1  02F6               	subwf	___llmod@dividend,f
  7299  1DC2  0873               	movf	___llmod@divisor+1,w
  7300  1DC3  1C03               	skipc
  7301  1DC4  0F73               	incfsz	___llmod@divisor+1,w
  7302  1DC5  02F7               	subwf	___llmod@dividend+1,f
  7303  1DC6  0874               	movf	___llmod@divisor+2,w
  7304  1DC7  1C03               	skipc
  7305  1DC8  0F74               	incfsz	___llmod@divisor+2,w
  7306  1DC9  02F8               	subwf	___llmod@dividend+2,f
  7307  1DCA  0875               	movf	___llmod@divisor+3,w
  7308  1DCB  1C03               	skipc
  7309  1DCC  0F75               	incfsz	___llmod@divisor+3,w
  7310  1DCD  02F9               	subwf	___llmod@dividend+3,f
  7311  1DCE                     l2919:
  7312  1DCE  3001               	movlw	1
  7313  1DCF                     u4865:
  7314  1DCF  1003               	clrc
  7315  1DD0  0CF5               	rrf	___llmod@divisor+3,f
  7316  1DD1  0CF4               	rrf	___llmod@divisor+2,f
  7317  1DD2  0CF3               	rrf	___llmod@divisor+1,f
  7318  1DD3  0CF2               	rrf	___llmod@divisor,f
  7319  1DD4  3EFF               	addlw	-1
  7320  1DD5  1D03               	skipz
  7321  1DD6  2DCF               	goto	u4865
  7322  1DD7                     l2921:
  7323  1DD7  3001               	movlw	1
  7324  1DD8  02FB               	subwf	___llmod@counter,f
  7325  1DD9  1D03               	btfss	3,2
  7326  1DDA  2DDC               	goto	u4871
  7327  1DDB  2DDD               	goto	u4870
  7328  1DDC                     u4871:
  7329  1DDC  2DAE               	goto	l2915
  7330  1DDD                     u4870:
  7331  1DDD                     l2923:
  7332  1DDD  0879               	movf	___llmod@dividend+3,w
  7333  1DDE  00F5               	movwf	?___llmod+3
  7334  1DDF  0878               	movf	___llmod@dividend+2,w
  7335  1DE0  00F4               	movwf	?___llmod+2
  7336  1DE1  0877               	movf	___llmod@dividend+1,w
  7337  1DE2  00F3               	movwf	?___llmod+1
  7338  1DE3  0876               	movf	___llmod@dividend,w
  7339  1DE4  00F2               	movwf	?___llmod
  7340  1DE5                     l554:
  7341  1DE5  0008               	return
  7342  1DE6                     __end_of___llmod:
  7343                           
  7344                           	psect	text16
  7345  1EF4                     __ptext16:	
  7346 ;; *************** function ___lldiv *****************
  7347 ;; Defined at:
  7348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  divisor         4    2[COMMON] unsigned long 
  7351 ;;  dividend        4    6[COMMON] unsigned long 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  quotient        4    0[BANK0 ] unsigned long 
  7354 ;;  counter         1    4[BANK0 ] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  4    2[COMMON] unsigned long 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7364 ;;      Params:         8       0       0       0       0
  7365 ;;      Locals:         0       5       0       0       0
  7366 ;;      Temps:          1       0       0       0       0
  7367 ;;      Totals:         9       5       0       0       0
  7368 ;;Total ram usage:       14 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    1
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_sprintf
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function ___lldiv
  7380  1EF4                     ___lldiv:
  7381  1EF4                     l2807:	
  7382                           ;incstack = 0
  7383                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7384                           
  7385  1EF4  3000               	movlw	0
  7386  1EF5  1283               	bcf	3,5	;RP0=0, select bank0
  7387  1EF6  1303               	bcf	3,6	;RP1=0, select bank0
  7388  1EF7  00A3               	movwf	___lldiv@quotient+3
  7389  1EF8  3000               	movlw	0
  7390  1EF9  00A2               	movwf	___lldiv@quotient+2
  7391  1EFA  3000               	movlw	0
  7392  1EFB  00A1               	movwf	___lldiv@quotient+1
  7393  1EFC  3000               	movlw	0
  7394  1EFD  00A0               	movwf	___lldiv@quotient
  7395  1EFE  0875               	movf	___lldiv@divisor+3,w
  7396  1EFF  0474               	iorwf	___lldiv@divisor+2,w
  7397  1F00  0473               	iorwf	___lldiv@divisor+1,w
  7398  1F01  0472               	iorwf	___lldiv@divisor,w
  7399  1F02  1903               	skipnz
  7400  1F03  2F05               	goto	u4541
  7401  1F04  2F06               	goto	u4540
  7402  1F05                     u4541:
  7403  1F05  2F53               	goto	l2827
  7404  1F06                     u4540:
  7405  1F06                     l2809:
  7406  1F06  01A4               	clrf	___lldiv@counter
  7407  1F07  0AA4               	incf	___lldiv@counter,f
  7408  1F08  2F16               	goto	l2813
  7409  1F09                     l2811:
  7410  1F09  3001               	movlw	1
  7411  1F0A  00FA               	movwf	??___lldiv
  7412  1F0B                     u4555:
  7413  1F0B  1003               	clrc
  7414  1F0C  0DF2               	rlf	___lldiv@divisor,f
  7415  1F0D  0DF3               	rlf	___lldiv@divisor+1,f
  7416  1F0E  0DF4               	rlf	___lldiv@divisor+2,f
  7417  1F0F  0DF5               	rlf	___lldiv@divisor+3,f
  7418  1F10  0BFA               	decfsz	??___lldiv,f
  7419  1F11  2F0B               	goto	u4555
  7420  1F12  3001               	movlw	1
  7421  1F13  00FA               	movwf	??___lldiv
  7422  1F14  087A               	movf	??___lldiv,w
  7423  1F15  07A4               	addwf	___lldiv@counter,f
  7424  1F16                     l2813:
  7425  1F16  1FF5               	btfss	___lldiv@divisor+3,7
  7426  1F17  2F19               	goto	u4561
  7427  1F18  2F1A               	goto	u4560
  7428  1F19                     u4561:
  7429  1F19  2F09               	goto	l2811
  7430  1F1A                     u4560:
  7431  1F1A                     l2815:
  7432  1F1A  3001               	movlw	1
  7433  1F1B  00FA               	movwf	??___lldiv
  7434  1F1C                     u4575:
  7435  1F1C  1003               	clrc
  7436  1F1D  0DA0               	rlf	___lldiv@quotient,f
  7437  1F1E  0DA1               	rlf	___lldiv@quotient+1,f
  7438  1F1F  0DA2               	rlf	___lldiv@quotient+2,f
  7439  1F20  0DA3               	rlf	___lldiv@quotient+3,f
  7440  1F21  0BFA               	decfsz	??___lldiv,f
  7441  1F22  2F1C               	goto	u4575
  7442  1F23                     l2817:
  7443  1F23  0875               	movf	___lldiv@divisor+3,w
  7444  1F24  0279               	subwf	___lldiv@dividend+3,w
  7445  1F25  1D03               	skipz
  7446  1F26  2F31               	goto	u4585
  7447  1F27  0874               	movf	___lldiv@divisor+2,w
  7448  1F28  0278               	subwf	___lldiv@dividend+2,w
  7449  1F29  1D03               	skipz
  7450  1F2A  2F31               	goto	u4585
  7451  1F2B  0873               	movf	___lldiv@divisor+1,w
  7452  1F2C  0277               	subwf	___lldiv@dividend+1,w
  7453  1F2D  1D03               	skipz
  7454  1F2E  2F31               	goto	u4585
  7455  1F2F  0872               	movf	___lldiv@divisor,w
  7456  1F30  0276               	subwf	___lldiv@dividend,w
  7457  1F31                     u4585:
  7458  1F31  1C03               	skipc
  7459  1F32  2F34               	goto	u4581
  7460  1F33  2F35               	goto	u4580
  7461  1F34                     u4581:
  7462  1F34  2F44               	goto	l2823
  7463  1F35                     u4580:
  7464  1F35                     l2819:
  7465  1F35  0872               	movf	___lldiv@divisor,w
  7466  1F36  02F6               	subwf	___lldiv@dividend,f
  7467  1F37  0873               	movf	___lldiv@divisor+1,w
  7468  1F38  1C03               	skipc
  7469  1F39  0F73               	incfsz	___lldiv@divisor+1,w
  7470  1F3A  02F7               	subwf	___lldiv@dividend+1,f
  7471  1F3B  0874               	movf	___lldiv@divisor+2,w
  7472  1F3C  1C03               	skipc
  7473  1F3D  0F74               	incfsz	___lldiv@divisor+2,w
  7474  1F3E  02F8               	subwf	___lldiv@dividend+2,f
  7475  1F3F  0875               	movf	___lldiv@divisor+3,w
  7476  1F40  1C03               	skipc
  7477  1F41  0F75               	incfsz	___lldiv@divisor+3,w
  7478  1F42  02F9               	subwf	___lldiv@dividend+3,f
  7479  1F43                     l2821:
  7480  1F43  1420               	bsf	___lldiv@quotient,0
  7481  1F44                     l2823:
  7482  1F44  3001               	movlw	1
  7483  1F45                     u4595:
  7484  1F45  1003               	clrc
  7485  1F46  0CF5               	rrf	___lldiv@divisor+3,f
  7486  1F47  0CF4               	rrf	___lldiv@divisor+2,f
  7487  1F48  0CF3               	rrf	___lldiv@divisor+1,f
  7488  1F49  0CF2               	rrf	___lldiv@divisor,f
  7489  1F4A  3EFF               	addlw	-1
  7490  1F4B  1D03               	skipz
  7491  1F4C  2F45               	goto	u4595
  7492  1F4D                     l2825:
  7493  1F4D  3001               	movlw	1
  7494  1F4E  02A4               	subwf	___lldiv@counter,f
  7495  1F4F  1D03               	btfss	3,2
  7496  1F50  2F52               	goto	u4601
  7497  1F51  2F53               	goto	u4600
  7498  1F52                     u4601:
  7499  1F52  2F1A               	goto	l2815
  7500  1F53                     u4600:
  7501  1F53                     l2827:
  7502  1F53  0823               	movf	___lldiv@quotient+3,w
  7503  1F54  00F5               	movwf	?___lldiv+3
  7504  1F55  0822               	movf	___lldiv@quotient+2,w
  7505  1F56  00F4               	movwf	?___lldiv+2
  7506  1F57  0821               	movf	___lldiv@quotient+1,w
  7507  1F58  00F3               	movwf	?___lldiv+1
  7508  1F59  0820               	movf	___lldiv@quotient,w
  7509  1F5A  00F2               	movwf	?___lldiv
  7510  1F5B                     l334:
  7511  1F5B  0008               	return
  7512  1F5C                     __end_of___lldiv:
  7513                           
  7514                           	psect	text17
  7515  0802                     __ptext17:	
  7516 ;; *************** function ___fltol *****************
  7517 ;; Defined at:
  7518 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  f1              4   63[BANK0 ] unsigned long 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  exp1            1   73[BANK0 ] unsigned char 
  7523 ;;  sign1           1   72[BANK0 ] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  4   63[BANK0 ] long 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7533 ;;      Params:         0       4       0       0       0
  7534 ;;      Locals:         0       2       0       0       0
  7535 ;;      Temps:          0       5       0       0       0
  7536 ;;      Totals:         0      11       0       0       0
  7537 ;;Total ram usage:       11 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    1
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_main
  7544 ;;		_sprintf
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function ___fltol
  7550  0802                     ___fltol:
  7551  0802                     l2871:	
  7552                           ;incstack = 0
  7553                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7554                           
  7555  0802  1003               	clrc
  7556  0803  1283               	bcf	3,5	;RP0=0, select bank0
  7557  0804  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0805  0D61               	rlf	___fltol@f1+2,w
  7559  0806  0D62               	rlf	___fltol@f1+3,w
  7560  0807  00E3               	movwf	??___fltol
  7561  0808  0863               	movf	??___fltol,w
  7562  0809  00E9               	movwf	___fltol@exp1
  7563  080A  0869               	movf	___fltol@exp1,w
  7564  080B  1D03               	btfss	3,2
  7565  080C  280E               	goto	u4721
  7566  080D  280F               	goto	u4720
  7567  080E                     u4721:
  7568  080E  2818               	goto	l2877
  7569  080F                     u4720:
  7570  080F                     l2873:
  7571  080F  3000               	movlw	0
  7572  0810  00E2               	movwf	?___fltol+3
  7573  0811  3000               	movlw	0
  7574  0812  00E1               	movwf	?___fltol+2
  7575  0813  3000               	movlw	0
  7576  0814  00E0               	movwf	?___fltol+1
  7577  0815  3000               	movlw	0
  7578  0816  00DF               	movwf	?___fltol
  7579  0817  287D               	goto	l501
  7580  0818                     l2877:
  7581  0818  085F               	movf	___fltol@f1,w
  7582  0819  00E3               	movwf	??___fltol
  7583  081A  0860               	movf	___fltol@f1+1,w
  7584  081B  00E4               	movwf	??___fltol+1
  7585  081C  0861               	movf	___fltol@f1+2,w
  7586  081D  00E5               	movwf	??___fltol+2
  7587  081E  0862               	movf	___fltol@f1+3,w
  7588  081F  00E6               	movwf	??___fltol+3
  7589  0820  301F               	movlw	31
  7590  0821                     u4735:
  7591  0821  1003               	clrc
  7592  0822  0CE6               	rrf	??___fltol+3,f
  7593  0823  0CE5               	rrf	??___fltol+2,f
  7594  0824  0CE4               	rrf	??___fltol+1,f
  7595  0825  0CE3               	rrf	??___fltol,f
  7596  0826                     u4730:
  7597  0826  3EFF               	addlw	-1
  7598  0827  1D03               	skipz
  7599  0828  2821               	goto	u4735
  7600  0829  0863               	movf	??___fltol,w
  7601  082A  00E7               	movwf	??___fltol+4
  7602  082B  0867               	movf	??___fltol+4,w
  7603  082C  00E8               	movwf	___fltol@sign1
  7604  082D                     l2879:
  7605  082D  17E1               	bsf	___fltol@f1+2,7
  7606  082E                     l2881:
  7607  082E  30FF               	movlw	255
  7608  082F  05DF               	andwf	___fltol@f1,f
  7609  0830  30FF               	movlw	255
  7610  0831  05E0               	andwf	___fltol@f1+1,f
  7611  0832  30FF               	movlw	255
  7612  0833  05E1               	andwf	___fltol@f1+2,f
  7613  0834  3000               	movlw	0
  7614  0835  05E2               	andwf	___fltol@f1+3,f
  7615  0836                     l2883:
  7616  0836  3096               	movlw	150
  7617  0837  02E9               	subwf	___fltol@exp1,f
  7618  0838                     l2885:
  7619  0838  1FE9               	btfss	___fltol@exp1,7
  7620  0839  283B               	goto	u4741
  7621  083A  283C               	goto	u4740
  7622  083B                     u4741:
  7623  083B  2856               	goto	l2895
  7624  083C                     u4740:
  7625  083C                     l2887:
  7626  083C  0869               	movf	___fltol@exp1,w
  7627  083D  3A80               	xorlw	128
  7628  083E  3E97               	addlw	151
  7629  083F  1803               	skipnc
  7630  0840  2842               	goto	u4751
  7631  0841  2843               	goto	u4750
  7632  0842                     u4751:
  7633  0842  2844               	goto	l2893
  7634  0843                     u4750:
  7635  0843  280F               	goto	l2873
  7636  0844                     l2893:
  7637  0844  3001               	movlw	1
  7638  0845                     u4765:
  7639  0845  1003               	clrc
  7640  0846  0CE2               	rrf	___fltol@f1+3,f
  7641  0847  0CE1               	rrf	___fltol@f1+2,f
  7642  0848  0CE0               	rrf	___fltol@f1+1,f
  7643  0849  0CDF               	rrf	___fltol@f1,f
  7644  084A  3EFF               	addlw	-1
  7645  084B  1D03               	skipz
  7646  084C  2845               	goto	u4765
  7647  084D  3001               	movlw	1
  7648  084E  00E3               	movwf	??___fltol
  7649  084F  0863               	movf	??___fltol,w
  7650  0850  07E9               	addwf	___fltol@exp1,f
  7651  0851  1D03               	btfss	3,2
  7652  0852  2854               	goto	u4771
  7653  0853  2855               	goto	u4770
  7654  0854                     u4771:
  7655  0854  2844               	goto	l2893
  7656  0855                     u4770:
  7657  0855  286D               	goto	l2903
  7658  0856                     l2895:
  7659  0856  3020               	movlw	32
  7660  0857  0269               	subwf	___fltol@exp1,w
  7661  0858  1C03               	skipc
  7662  0859  285B               	goto	u4781
  7663  085A  285C               	goto	u4780
  7664  085B                     u4781:
  7665  085B  2868               	goto	l508
  7666  085C                     u4780:
  7667  085C  280F               	goto	l2873
  7668  085D                     l2901:
  7669  085D  3001               	movlw	1
  7670  085E  00E3               	movwf	??___fltol
  7671  085F                     u4795:
  7672  085F  1003               	clrc
  7673  0860  0DDF               	rlf	___fltol@f1,f
  7674  0861  0DE0               	rlf	___fltol@f1+1,f
  7675  0862  0DE1               	rlf	___fltol@f1+2,f
  7676  0863  0DE2               	rlf	___fltol@f1+3,f
  7677  0864  0BE3               	decfsz	??___fltol,f
  7678  0865  285F               	goto	u4795
  7679  0866  3001               	movlw	1
  7680  0867  02E9               	subwf	___fltol@exp1,f
  7681  0868                     l508:
  7682  0868  0869               	movf	___fltol@exp1,w
  7683  0869  1D03               	btfss	3,2
  7684  086A  286C               	goto	u4801
  7685  086B  286D               	goto	u4800
  7686  086C                     u4801:
  7687  086C  285D               	goto	l2901
  7688  086D                     u4800:
  7689  086D                     l2903:
  7690  086D  0868               	movf	___fltol@sign1,w
  7691  086E  1903               	btfsc	3,2
  7692  086F  2871               	goto	u4811
  7693  0870  2872               	goto	u4810
  7694  0871                     u4811:
  7695  0871  287D               	goto	l511
  7696  0872                     u4810:
  7697  0872                     l2905:
  7698  0872  09DF               	comf	___fltol@f1,f
  7699  0873  09E0               	comf	___fltol@f1+1,f
  7700  0874  09E1               	comf	___fltol@f1+2,f
  7701  0875  09E2               	comf	___fltol@f1+3,f
  7702  0876  0ADF               	incf	___fltol@f1,f
  7703  0877  1903               	skipnz
  7704  0878  0AE0               	incf	___fltol@f1+1,f
  7705  0879  1903               	skipnz
  7706  087A  0AE1               	incf	___fltol@f1+2,f
  7707  087B  1903               	skipnz
  7708  087C  0AE2               	incf	___fltol@f1+3,f
  7709  087D                     l511:
  7710  087D                     l501:
  7711  087D  0008               	return
  7712  087E                     __end_of___fltol:
  7713                           
  7714                           	psect	text18
  7715  1D42                     __ptext18:	
  7716 ;; *************** function ___flsub *****************
  7717 ;; Defined at:
  7718 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  a               4    4[BANK1 ] long 
  7721 ;;  b               4    8[BANK1 ] long 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  4    4[BANK1 ] long 
  7726 ;; Registers used:
  7727 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7733 ;;      Params:         0       0       8       0       0
  7734 ;;      Locals:         0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0
  7736 ;;      Totals:         0       0       8       0       0
  7737 ;;Total ram usage:        8 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    2
  7740 ;; This function calls:
  7741 ;;		___fladd
  7742 ;; This function is called by:
  7743 ;;		_sprintf
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           
  7748                           ;psect for function ___flsub
  7749  1D42                     ___flsub:
  7750  1D42                     l2927:	
  7751                           ;incstack = 0
  7752                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7753                           
  7754  1D42  3080               	movlw	128
  7755  1D43  1683               	bsf	3,5	;RP0=1, select bank1
  7756  1D44  1303               	bcf	3,6	;RP1=0, select bank1
  7757  1D45  06A7               	xorwf	(___flsub@a+3)^(0+128),f
  7758  1D46                     l2929:
  7759  1D46  082B               	movf	(___flsub@b+3)^(0+128),w
  7760  1D47  1283               	bcf	3,5	;RP0=0, select bank0
  7761  1D48  1303               	bcf	3,6	;RP1=0, select bank0
  7762  1D49  00E3               	movwf	___fladd@b+3
  7763  1D4A  1683               	bsf	3,5	;RP0=1, select bank1
  7764  1D4B  1303               	bcf	3,6	;RP1=0, select bank1
  7765  1D4C  082A               	movf	(___flsub@b+2)^(0+128),w
  7766  1D4D  1283               	bcf	3,5	;RP0=0, select bank0
  7767  1D4E  1303               	bcf	3,6	;RP1=0, select bank0
  7768  1D4F  00E2               	movwf	___fladd@b+2
  7769  1D50  1683               	bsf	3,5	;RP0=1, select bank1
  7770  1D51  1303               	bcf	3,6	;RP1=0, select bank1
  7771  1D52  0829               	movf	(___flsub@b+1)^(0+128),w
  7772  1D53  1283               	bcf	3,5	;RP0=0, select bank0
  7773  1D54  1303               	bcf	3,6	;RP1=0, select bank0
  7774  1D55  00E1               	movwf	___fladd@b+1
  7775  1D56  1683               	bsf	3,5	;RP0=1, select bank1
  7776  1D57  1303               	bcf	3,6	;RP1=0, select bank1
  7777  1D58  0828               	movf	___flsub@b^(0+128),w
  7778  1D59  1283               	bcf	3,5	;RP0=0, select bank0
  7779  1D5A  1303               	bcf	3,6	;RP1=0, select bank0
  7780  1D5B  00E0               	movwf	___fladd@b
  7781  1D5C  1683               	bsf	3,5	;RP0=1, select bank1
  7782  1D5D  1303               	bcf	3,6	;RP1=0, select bank1
  7783  1D5E  0827               	movf	(___flsub@a+3)^(0+128),w
  7784  1D5F  1283               	bcf	3,5	;RP0=0, select bank0
  7785  1D60  1303               	bcf	3,6	;RP1=0, select bank0
  7786  1D61  00E7               	movwf	___fladd@a+3
  7787  1D62  1683               	bsf	3,5	;RP0=1, select bank1
  7788  1D63  1303               	bcf	3,6	;RP1=0, select bank1
  7789  1D64  0826               	movf	(___flsub@a+2)^(0+128),w
  7790  1D65  1283               	bcf	3,5	;RP0=0, select bank0
  7791  1D66  1303               	bcf	3,6	;RP1=0, select bank0
  7792  1D67  00E6               	movwf	___fladd@a+2
  7793  1D68  1683               	bsf	3,5	;RP0=1, select bank1
  7794  1D69  1303               	bcf	3,6	;RP1=0, select bank1
  7795  1D6A  0825               	movf	(___flsub@a+1)^(0+128),w
  7796  1D6B  1283               	bcf	3,5	;RP0=0, select bank0
  7797  1D6C  1303               	bcf	3,6	;RP1=0, select bank0
  7798  1D6D  00E5               	movwf	___fladd@a+1
  7799  1D6E  1683               	bsf	3,5	;RP0=1, select bank1
  7800  1D6F  1303               	bcf	3,6	;RP1=0, select bank1
  7801  1D70  0824               	movf	___flsub@a^(0+128),w
  7802  1D71  1283               	bcf	3,5	;RP0=0, select bank0
  7803  1D72  1303               	bcf	3,6	;RP1=0, select bank0
  7804  1D73  00E4               	movwf	___fladd@a
  7805  1D74  160A  118A  24C0  160A  158A  	fcall	___fladd
  7806  1D79  1283               	bcf	3,5	;RP0=0, select bank0
  7807  1D7A  1303               	bcf	3,6	;RP1=0, select bank0
  7808  1D7B  0863               	movf	?___fladd+3,w
  7809  1D7C  1683               	bsf	3,5	;RP0=1, select bank1
  7810  1D7D  1303               	bcf	3,6	;RP1=0, select bank1
  7811  1D7E  00A7               	movwf	(?___flsub+3)^(0+128)
  7812  1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  7813  1D80  1303               	bcf	3,6	;RP1=0, select bank0
  7814  1D81  0862               	movf	?___fladd+2,w
  7815  1D82  1683               	bsf	3,5	;RP0=1, select bank1
  7816  1D83  1303               	bcf	3,6	;RP1=0, select bank1
  7817  1D84  00A6               	movwf	(?___flsub+2)^(0+128)
  7818  1D85  1283               	bcf	3,5	;RP0=0, select bank0
  7819  1D86  1303               	bcf	3,6	;RP1=0, select bank0
  7820  1D87  0861               	movf	?___fladd+1,w
  7821  1D88  1683               	bsf	3,5	;RP0=1, select bank1
  7822  1D89  1303               	bcf	3,6	;RP1=0, select bank1
  7823  1D8A  00A5               	movwf	(?___flsub+1)^(0+128)
  7824  1D8B  1283               	bcf	3,5	;RP0=0, select bank0
  7825  1D8C  1303               	bcf	3,6	;RP1=0, select bank0
  7826  1D8D  0860               	movf	?___fladd,w
  7827  1D8E  1683               	bsf	3,5	;RP0=1, select bank1
  7828  1D8F  1303               	bcf	3,6	;RP1=0, select bank1
  7829  1D90  00A4               	movwf	?___flsub^(0+128)
  7830  1D91                     l671:
  7831  1D91  0008               	return
  7832  1D92                     __end_of___flsub:
  7833                           
  7834                           	psect	text19
  7835  14C0                     __ptext19:	
  7836 ;; *************** function ___fladd *****************
  7837 ;; Defined at:
  7838 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  b               4   64[BANK0 ] long 
  7841 ;;  a               4   68[BANK0 ] long 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  grs             1    3[BANK1 ] unsigned char 
  7844 ;;  bexp            1    2[BANK1 ] unsigned char 
  7845 ;;  aexp            1    1[BANK1 ] unsigned char 
  7846 ;;  signs           1    0[BANK1 ] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  4   64[BANK0 ] unsigned char 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, btemp+1
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7856 ;;      Params:         0       8       0       0       0
  7857 ;;      Locals:         0       0       4       0       0
  7858 ;;      Temps:          0       8       0       0       0
  7859 ;;      Totals:         0      16       4       0       0
  7860 ;;Total ram usage:       20 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:    1
  7863 ;; This function calls:
  7864 ;;		Nothing
  7865 ;; This function is called by:
  7866 ;;		_sprintf
  7867 ;;		___flsub
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           
  7872                           ;psect for function ___fladd
  7873  14C0                     ___fladd:
  7874  14C0                     l2255:	
  7875                           ;incstack = 0
  7876                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7877                           
  7878  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  7879  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  7880  14C2  0863               	movf	___fladd@b+3,w
  7881  14C3  3980               	andlw	128
  7882  14C4  00E8               	movwf	??___fladd
  7883  14C5  0868               	movf	??___fladd,w
  7884  14C6  1683               	bsf	3,5	;RP0=1, select bank1
  7885  14C7  1303               	bcf	3,6	;RP1=0, select bank1
  7886  14C8  00A0               	movwf	___fladd@signs^(0+128)
  7887  14C9                     l2257:
  7888  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  7889  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  7890  14CB  0863               	movf	___fladd@b+3,w
  7891  14CC  00E8               	movwf	??___fladd
  7892  14CD  0768               	addwf	??___fladd,w
  7893  14CE  00E9               	movwf	??___fladd+1
  7894  14CF  0869               	movf	??___fladd+1,w
  7895  14D0  1683               	bsf	3,5	;RP0=1, select bank1
  7896  14D1  1303               	bcf	3,6	;RP1=0, select bank1
  7897  14D2  00A2               	movwf	___fladd@bexp^(0+128)
  7898  14D3                     l2259:
  7899  14D3  1283               	bcf	3,5	;RP0=0, select bank0
  7900  14D4  1303               	bcf	3,6	;RP1=0, select bank0
  7901  14D5  1FE2               	btfss	___fladd@b+2,7
  7902  14D6  2CD8               	goto	u3131
  7903  14D7  2CD9               	goto	u3130
  7904  14D8                     u3131:
  7905  14D8  2CDC               	goto	l2263
  7906  14D9                     u3130:
  7907  14D9                     l2261:
  7908  14D9  1683               	bsf	3,5	;RP0=1, select bank1
  7909  14DA  1303               	bcf	3,6	;RP1=0, select bank1
  7910  14DB  1422               	bsf	___fladd@bexp^(0+128),0
  7911  14DC                     l2263:
  7912  14DC  1683               	bsf	3,5	;RP0=1, select bank1
  7913  14DD  1303               	bcf	3,6	;RP1=0, select bank1
  7914  14DE  0822               	movf	___fladd@bexp^(0+128),w
  7915  14DF  1903               	btfsc	3,2
  7916  14E0  2CE2               	goto	u3141
  7917  14E1  2CE3               	goto	u3140
  7918  14E2                     u3141:
  7919  14E2  2CF6               	goto	l2273
  7920  14E3                     u3140:
  7921  14E3                     l2265:
  7922  14E3  0A22               	incf	___fladd@bexp^(0+128),w
  7923  14E4  1D03               	btfss	3,2
  7924  14E5  2CE7               	goto	u3151
  7925  14E6  2CE8               	goto	u3150
  7926  14E7                     u3151:
  7927  14E7  2CF2               	goto	l2269
  7928  14E8                     u3150:
  7929  14E8                     l2267:
  7930  14E8  3000               	movlw	0
  7931  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  7932  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  7933  14EB  00E3               	movwf	___fladd@b+3
  7934  14EC  3000               	movlw	0
  7935  14ED  00E2               	movwf	___fladd@b+2
  7936  14EE  3000               	movlw	0
  7937  14EF  00E1               	movwf	___fladd@b+1
  7938  14F0  3000               	movlw	0
  7939  14F1  00E0               	movwf	___fladd@b
  7940  14F2                     l2269:
  7941  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  7942  14F3  17E2               	bsf	___fladd@b+2,7
  7943  14F4                     l2271:
  7944  14F4  01E3               	clrf	___fladd@b+3
  7945  14F5  2D00               	goto	l2275
  7946  14F6                     l2273:
  7947  14F6  3000               	movlw	0
  7948  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  7949  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  7950  14F9  00E3               	movwf	___fladd@b+3
  7951  14FA  3000               	movlw	0
  7952  14FB  00E2               	movwf	___fladd@b+2
  7953  14FC  3000               	movlw	0
  7954  14FD  00E1               	movwf	___fladd@b+1
  7955  14FE  3000               	movlw	0
  7956  14FF  00E0               	movwf	___fladd@b
  7957  1500                     l2275:
  7958  1500  0867               	movf	___fladd@a+3,w
  7959  1501  3980               	andlw	128
  7960  1502  00E8               	movwf	??___fladd
  7961  1503  0868               	movf	??___fladd,w
  7962  1504  1683               	bsf	3,5	;RP0=1, select bank1
  7963  1505  1303               	bcf	3,6	;RP1=0, select bank1
  7964  1506  00A1               	movwf	___fladd@aexp^(0+128)
  7965  1507                     l2277:
  7966  1507  0821               	movf	___fladd@aexp^(0+128),w
  7967  1508  0620               	xorwf	___fladd@signs^(0+128),w
  7968  1509  1903               	skipnz
  7969  150A  2D0C               	goto	u3161
  7970  150B  2D0D               	goto	u3160
  7971  150C                     u3161:
  7972  150C  2D0E               	goto	l2281
  7973  150D                     u3160:
  7974  150D                     l2279:
  7975  150D  1720               	bsf	___fladd@signs^(0+128),6
  7976  150E                     l2281:
  7977  150E  1283               	bcf	3,5	;RP0=0, select bank0
  7978  150F  1303               	bcf	3,6	;RP1=0, select bank0
  7979  1510  0867               	movf	___fladd@a+3,w
  7980  1511  00E8               	movwf	??___fladd
  7981  1512  0768               	addwf	??___fladd,w
  7982  1513  00E9               	movwf	??___fladd+1
  7983  1514  0869               	movf	??___fladd+1,w
  7984  1515  1683               	bsf	3,5	;RP0=1, select bank1
  7985  1516  1303               	bcf	3,6	;RP1=0, select bank1
  7986  1517  00A1               	movwf	___fladd@aexp^(0+128)
  7987  1518                     l2283:
  7988  1518  1283               	bcf	3,5	;RP0=0, select bank0
  7989  1519  1303               	bcf	3,6	;RP1=0, select bank0
  7990  151A  1FE6               	btfss	___fladd@a+2,7
  7991  151B  2D1D               	goto	u3171
  7992  151C  2D1E               	goto	u3170
  7993  151D                     u3171:
  7994  151D  2D21               	goto	l2287
  7995  151E                     u3170:
  7996  151E                     l2285:
  7997  151E  1683               	bsf	3,5	;RP0=1, select bank1
  7998  151F  1303               	bcf	3,6	;RP1=0, select bank1
  7999  1520  1421               	bsf	___fladd@aexp^(0+128),0
  8000  1521                     l2287:
  8001  1521  1683               	bsf	3,5	;RP0=1, select bank1
  8002  1522  1303               	bcf	3,6	;RP1=0, select bank1
  8003  1523  0821               	movf	___fladd@aexp^(0+128),w
  8004  1524  1903               	btfsc	3,2
  8005  1525  2D27               	goto	u3181
  8006  1526  2D28               	goto	u3180
  8007  1527                     u3181:
  8008  1527  2D3B               	goto	l2297
  8009  1528                     u3180:
  8010  1528                     l2289:
  8011  1528  0A21               	incf	___fladd@aexp^(0+128),w
  8012  1529  1D03               	btfss	3,2
  8013  152A  2D2C               	goto	u3191
  8014  152B  2D2D               	goto	u3190
  8015  152C                     u3191:
  8016  152C  2D37               	goto	l2293
  8017  152D                     u3190:
  8018  152D                     l2291:
  8019  152D  3000               	movlw	0
  8020  152E  1283               	bcf	3,5	;RP0=0, select bank0
  8021  152F  1303               	bcf	3,6	;RP1=0, select bank0
  8022  1530  00E7               	movwf	___fladd@a+3
  8023  1531  3000               	movlw	0
  8024  1532  00E6               	movwf	___fladd@a+2
  8025  1533  3000               	movlw	0
  8026  1534  00E5               	movwf	___fladd@a+1
  8027  1535  3000               	movlw	0
  8028  1536  00E4               	movwf	___fladd@a
  8029  1537                     l2293:
  8030  1537  1283               	bcf	3,5	;RP0=0, select bank0
  8031  1538  17E6               	bsf	___fladd@a+2,7
  8032  1539                     l2295:
  8033  1539  01E7               	clrf	___fladd@a+3
  8034  153A  2D45               	goto	l625
  8035  153B                     l2297:
  8036  153B  3000               	movlw	0
  8037  153C  1283               	bcf	3,5	;RP0=0, select bank0
  8038  153D  1303               	bcf	3,6	;RP1=0, select bank0
  8039  153E  00E7               	movwf	___fladd@a+3
  8040  153F  3000               	movlw	0
  8041  1540  00E6               	movwf	___fladd@a+2
  8042  1541  3000               	movlw	0
  8043  1542  00E5               	movwf	___fladd@a+1
  8044  1543  3000               	movlw	0
  8045  1544  00E4               	movwf	___fladd@a
  8046  1545                     l625:
  8047  1545  1683               	bsf	3,5	;RP0=1, select bank1
  8048  1546  1303               	bcf	3,6	;RP1=0, select bank1
  8049  1547  0822               	movf	___fladd@bexp^(0+128),w
  8050  1548  0221               	subwf	___fladd@aexp^(0+128),w
  8051  1549  1803               	skipnc
  8052  154A  2D4C               	goto	u3201
  8053  154B  2D4D               	goto	u3200
  8054  154C                     u3201:
  8055  154C  2DC3               	goto	l2333
  8056  154D                     u3200:
  8057  154D                     l2299:
  8058  154D  1F20               	btfss	___fladd@signs^(0+128),6
  8059  154E  2D50               	goto	u3211
  8060  154F  2D51               	goto	u3210
  8061  1550                     u3211:
  8062  1550  2D59               	goto	l2303
  8063  1551                     u3210:
  8064  1551                     l2301:
  8065  1551  3080               	movlw	128
  8066  1552  1283               	bcf	3,5	;RP0=0, select bank0
  8067  1553  1303               	bcf	3,6	;RP1=0, select bank0
  8068  1554  00E8               	movwf	??___fladd
  8069  1555  0868               	movf	??___fladd,w
  8070  1556  1683               	bsf	3,5	;RP0=1, select bank1
  8071  1557  1303               	bcf	3,6	;RP1=0, select bank1
  8072  1558  06A0               	xorwf	___fladd@signs^(0+128),f
  8073  1559                     l2303:
  8074  1559  0822               	movf	___fladd@bexp^(0+128),w
  8075  155A  1283               	bcf	3,5	;RP0=0, select bank0
  8076  155B  1303               	bcf	3,6	;RP1=0, select bank0
  8077  155C  00E8               	movwf	??___fladd
  8078  155D  0868               	movf	??___fladd,w
  8079  155E  1683               	bsf	3,5	;RP0=1, select bank1
  8080  155F  1303               	bcf	3,6	;RP1=0, select bank1
  8081  1560  00A3               	movwf	___fladd@grs^(0+128)
  8082  1561                     l2305:
  8083  1561  0821               	movf	___fladd@aexp^(0+128),w
  8084  1562  1283               	bcf	3,5	;RP0=0, select bank0
  8085  1563  1303               	bcf	3,6	;RP1=0, select bank0
  8086  1564  00E8               	movwf	??___fladd
  8087  1565  0868               	movf	??___fladd,w
  8088  1566  1683               	bsf	3,5	;RP0=1, select bank1
  8089  1567  1303               	bcf	3,6	;RP1=0, select bank1
  8090  1568  00A2               	movwf	___fladd@bexp^(0+128)
  8091  1569                     l2307:
  8092  1569  0823               	movf	___fladd@grs^(0+128),w
  8093  156A  1283               	bcf	3,5	;RP0=0, select bank0
  8094  156B  1303               	bcf	3,6	;RP1=0, select bank0
  8095  156C  00E8               	movwf	??___fladd
  8096  156D  0868               	movf	??___fladd,w
  8097  156E  1683               	bsf	3,5	;RP0=1, select bank1
  8098  156F  1303               	bcf	3,6	;RP1=0, select bank1
  8099  1570  00A1               	movwf	___fladd@aexp^(0+128)
  8100  1571                     l2309:
  8101  1571  1283               	bcf	3,5	;RP0=0, select bank0
  8102  1572  1303               	bcf	3,6	;RP1=0, select bank0
  8103  1573  0860               	movf	___fladd@b,w
  8104  1574  00E8               	movwf	??___fladd
  8105  1575  0868               	movf	??___fladd,w
  8106  1576  1683               	bsf	3,5	;RP0=1, select bank1
  8107  1577  1303               	bcf	3,6	;RP1=0, select bank1
  8108  1578  00A3               	movwf	___fladd@grs^(0+128)
  8109  1579                     l2311:
  8110  1579  1283               	bcf	3,5	;RP0=0, select bank0
  8111  157A  1303               	bcf	3,6	;RP1=0, select bank0
  8112  157B  0864               	movf	___fladd@a,w
  8113  157C  00E8               	movwf	??___fladd
  8114  157D  0868               	movf	??___fladd,w
  8115  157E  00E0               	movwf	___fladd@b
  8116  157F                     l2313:
  8117  157F  1683               	bsf	3,5	;RP0=1, select bank1
  8118  1580  1303               	bcf	3,6	;RP1=0, select bank1
  8119  1581  0823               	movf	___fladd@grs^(0+128),w
  8120  1582  1283               	bcf	3,5	;RP0=0, select bank0
  8121  1583  1303               	bcf	3,6	;RP1=0, select bank0
  8122  1584  00E8               	movwf	??___fladd
  8123  1585  0868               	movf	??___fladd,w
  8124  1586  00E4               	movwf	___fladd@a
  8125  1587                     l2315:
  8126  1587  0861               	movf	___fladd@b+1,w
  8127  1588  00E8               	movwf	??___fladd
  8128  1589  0868               	movf	??___fladd,w
  8129  158A  1683               	bsf	3,5	;RP0=1, select bank1
  8130  158B  1303               	bcf	3,6	;RP1=0, select bank1
  8131  158C  00A3               	movwf	___fladd@grs^(0+128)
  8132  158D                     l2317:
  8133  158D  1283               	bcf	3,5	;RP0=0, select bank0
  8134  158E  1303               	bcf	3,6	;RP1=0, select bank0
  8135  158F  0865               	movf	___fladd@a+1,w
  8136  1590  00E8               	movwf	??___fladd
  8137  1591  0868               	movf	??___fladd,w
  8138  1592  00E1               	movwf	___fladd@b+1
  8139  1593                     l2319:
  8140  1593  1683               	bsf	3,5	;RP0=1, select bank1
  8141  1594  1303               	bcf	3,6	;RP1=0, select bank1
  8142  1595  0823               	movf	___fladd@grs^(0+128),w
  8143  1596  1283               	bcf	3,5	;RP0=0, select bank0
  8144  1597  1303               	bcf	3,6	;RP1=0, select bank0
  8145  1598  00E8               	movwf	??___fladd
  8146  1599  0868               	movf	??___fladd,w
  8147  159A  00E5               	movwf	___fladd@a+1
  8148  159B                     l2321:
  8149  159B  0862               	movf	___fladd@b+2,w
  8150  159C  00E8               	movwf	??___fladd
  8151  159D  0868               	movf	??___fladd,w
  8152  159E  1683               	bsf	3,5	;RP0=1, select bank1
  8153  159F  1303               	bcf	3,6	;RP1=0, select bank1
  8154  15A0  00A3               	movwf	___fladd@grs^(0+128)
  8155  15A1                     l2323:
  8156  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  8157  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  8158  15A3  0866               	movf	___fladd@a+2,w
  8159  15A4  00E8               	movwf	??___fladd
  8160  15A5  0868               	movf	??___fladd,w
  8161  15A6  00E2               	movwf	___fladd@b+2
  8162  15A7                     l2325:
  8163  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  8164  15A8  1303               	bcf	3,6	;RP1=0, select bank1
  8165  15A9  0823               	movf	___fladd@grs^(0+128),w
  8166  15AA  1283               	bcf	3,5	;RP0=0, select bank0
  8167  15AB  1303               	bcf	3,6	;RP1=0, select bank0
  8168  15AC  00E8               	movwf	??___fladd
  8169  15AD  0868               	movf	??___fladd,w
  8170  15AE  00E6               	movwf	___fladd@a+2
  8171  15AF                     l2327:
  8172  15AF  0863               	movf	___fladd@b+3,w
  8173  15B0  00E8               	movwf	??___fladd
  8174  15B1  0868               	movf	??___fladd,w
  8175  15B2  1683               	bsf	3,5	;RP0=1, select bank1
  8176  15B3  1303               	bcf	3,6	;RP1=0, select bank1
  8177  15B4  00A3               	movwf	___fladd@grs^(0+128)
  8178  15B5                     l2329:
  8179  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  8180  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  8181  15B7  0867               	movf	___fladd@a+3,w
  8182  15B8  00E8               	movwf	??___fladd
  8183  15B9  0868               	movf	??___fladd,w
  8184  15BA  00E3               	movwf	___fladd@b+3
  8185  15BB                     l2331:
  8186  15BB  1683               	bsf	3,5	;RP0=1, select bank1
  8187  15BC  1303               	bcf	3,6	;RP1=0, select bank1
  8188  15BD  0823               	movf	___fladd@grs^(0+128),w
  8189  15BE  1283               	bcf	3,5	;RP0=0, select bank0
  8190  15BF  1303               	bcf	3,6	;RP1=0, select bank0
  8191  15C0  00E8               	movwf	??___fladd
  8192  15C1  0868               	movf	??___fladd,w
  8193  15C2  00E7               	movwf	___fladd@a+3
  8194  15C3                     l2333:
  8195  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  8196  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  8197  15C5  01A3               	clrf	___fladd@grs^(0+128)
  8198  15C6                     l2335:
  8199  15C6  0821               	movf	___fladd@aexp^(0+128),w
  8200  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  8201  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  8202  15C9  00E8               	movwf	??___fladd
  8203  15CA  01E9               	clrf	??___fladd+1
  8204  15CB  0869               	movf	??___fladd+1,w
  8205  15CC  00EB               	movwf	??___fladd+3
  8206  15CD  1683               	bsf	3,5	;RP0=1, select bank1
  8207  15CE  1303               	bcf	3,6	;RP1=0, select bank1
  8208  15CF  0822               	movf	___fladd@bexp^(0+128),w
  8209  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  8210  15D1  1303               	bcf	3,6	;RP1=0, select bank0
  8211  15D2  0268               	subwf	??___fladd,w
  8212  15D3  00EA               	movwf	??___fladd+2
  8213  15D4  1C03               	skipc
  8214  15D5  03EB               	decf	??___fladd+3,f
  8215  15D6  086B               	movf	??___fladd+3,w
  8216  15D7  3A80               	xorlw	128
  8217  15D8  00FF               	movwf	btemp+1
  8218  15D9  3080               	movlw	128
  8219  15DA  027F               	subwf	btemp+1,w
  8220  15DB  1D03               	skipz
  8221  15DC  2DDF               	goto	u3225
  8222  15DD  301A               	movlw	26
  8223  15DE  026A               	subwf	??___fladd+2,w
  8224  15DF                     u3225:
  8225  15DF  1C03               	skipc
  8226  15E0  2DE2               	goto	u3221
  8227  15E1  2DE3               	goto	u3220
  8228  15E2                     u3221:
  8229  15E2  2E35               	goto	l2351
  8230  15E3                     u3220:
  8231  15E3                     l2337:
  8232  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  8233  15E4  1303               	bcf	3,6	;RP1=0, select bank0
  8234  15E5  0863               	movf	___fladd@b+3,w
  8235  15E6  0462               	iorwf	___fladd@b+2,w
  8236  15E7  0461               	iorwf	___fladd@b+1,w
  8237  15E8  0460               	iorwf	___fladd@b,w
  8238  15E9  1D03               	skipz
  8239  15EA  2DEC               	goto	u3231
  8240  15EB  2DEE               	goto	u3230
  8241  15EC                     u3231:
  8242  15EC  3001               	movlw	1
  8243  15ED  2DEF               	goto	u3240
  8244  15EE                     u3230:
  8245  15EE  3000               	movlw	0
  8246  15EF                     u3240:
  8247  15EF  00E8               	movwf	??___fladd
  8248  15F0  0868               	movf	??___fladd,w
  8249  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  8250  15F2  1303               	bcf	3,6	;RP1=0, select bank1
  8251  15F3  00A3               	movwf	___fladd@grs^(0+128)
  8252  15F4  3000               	movlw	0
  8253  15F5  1283               	bcf	3,5	;RP0=0, select bank0
  8254  15F6  1303               	bcf	3,6	;RP1=0, select bank0
  8255  15F7  00E3               	movwf	___fladd@b+3
  8256  15F8  3000               	movlw	0
  8257  15F9  00E2               	movwf	___fladd@b+2
  8258  15FA  3000               	movlw	0
  8259  15FB  00E1               	movwf	___fladd@b+1
  8260  15FC  3000               	movlw	0
  8261  15FD  00E0               	movwf	___fladd@b
  8262  15FE  1683               	bsf	3,5	;RP0=1, select bank1
  8263  15FF  1303               	bcf	3,6	;RP1=0, select bank1
  8264  1600  0821               	movf	___fladd@aexp^(0+128),w
  8265  1601  1283               	bcf	3,5	;RP0=0, select bank0
  8266  1602  1303               	bcf	3,6	;RP1=0, select bank0
  8267  1603  00E8               	movwf	??___fladd
  8268  1604  0868               	movf	??___fladd,w
  8269  1605  1683               	bsf	3,5	;RP0=1, select bank1
  8270  1606  1303               	bcf	3,6	;RP1=0, select bank1
  8271  1607  00A2               	movwf	___fladd@bexp^(0+128)
  8272  1608  2E3D               	goto	l629
  8273  1609                     l631:
  8274  1609  1C23               	btfss	___fladd@grs^(0+128),0
  8275  160A  2E0C               	goto	u3251
  8276  160B  2E0D               	goto	u3250
  8277  160C                     u3251:
  8278  160C  2E1A               	goto	l2341
  8279  160D                     u3250:
  8280  160D                     l2339:
  8281  160D  0823               	movf	___fladd@grs^(0+128),w
  8282  160E  1283               	bcf	3,5	;RP0=0, select bank0
  8283  160F  1303               	bcf	3,6	;RP1=0, select bank0
  8284  1610  00E8               	movwf	??___fladd
  8285  1611  1003               	clrc
  8286  1612  0C68               	rrf	??___fladd,w
  8287  1613  3801               	iorlw	1
  8288  1614  00E9               	movwf	??___fladd+1
  8289  1615  0869               	movf	??___fladd+1,w
  8290  1616  1683               	bsf	3,5	;RP0=1, select bank1
  8291  1617  1303               	bcf	3,6	;RP1=0, select bank1
  8292  1618  00A3               	movwf	___fladd@grs^(0+128)
  8293  1619  2E1C               	goto	l2343
  8294  161A                     l2341:
  8295  161A  1003               	clrc
  8296  161B  0CA3               	rrf	___fladd@grs^(0+128),f
  8297  161C                     l2343:
  8298  161C  1283               	bcf	3,5	;RP0=0, select bank0
  8299  161D  1303               	bcf	3,6	;RP1=0, select bank0
  8300  161E  1C60               	btfss	___fladd@b,0
  8301  161F  2E21               	goto	u3261
  8302  1620  2E22               	goto	u3260
  8303  1621                     u3261:
  8304  1621  2E25               	goto	l2347
  8305  1622                     u3260:
  8306  1622                     l2345:
  8307  1622  1683               	bsf	3,5	;RP0=1, select bank1
  8308  1623  1303               	bcf	3,6	;RP1=0, select bank1
  8309  1624  17A3               	bsf	___fladd@grs^(0+128),7
  8310  1625                     l2347:
  8311  1625  3001               	movlw	1
  8312  1626  1283               	bcf	3,5	;RP0=0, select bank0
  8313  1627  00E8               	movwf	??___fladd
  8314  1628                     u3275:
  8315  1628  0D63               	rlf	___fladd@b+3,w
  8316  1629  0CE3               	rrf	___fladd@b+3,f
  8317  162A  0CE2               	rrf	___fladd@b+2,f
  8318  162B  0CE1               	rrf	___fladd@b+1,f
  8319  162C  0CE0               	rrf	___fladd@b,f
  8320  162D  0BE8               	decfsz	??___fladd& (0+127),f
  8321  162E  2E28               	goto	u3275
  8322  162F                     l2349:
  8323  162F  3001               	movlw	1
  8324  1630  00E8               	movwf	??___fladd
  8325  1631  0868               	movf	??___fladd,w
  8326  1632  1683               	bsf	3,5	;RP0=1, select bank1
  8327  1633  1303               	bcf	3,6	;RP1=0, select bank1
  8328  1634  07A2               	addwf	___fladd@bexp^(0+128),f
  8329  1635                     l2351:
  8330  1635  1683               	bsf	3,5	;RP0=1, select bank1
  8331  1636  1303               	bcf	3,6	;RP1=0, select bank1
  8332  1637  0821               	movf	___fladd@aexp^(0+128),w
  8333  1638  0222               	subwf	___fladd@bexp^(0+128),w
  8334  1639  1C03               	skipc
  8335  163A  2E3C               	goto	u3281
  8336  163B  2E3D               	goto	u3280
  8337  163C                     u3281:
  8338  163C  2E09               	goto	l631
  8339  163D                     u3280:
  8340  163D                     l629:
  8341  163D  1B20               	btfsc	___fladd@signs^(0+128),6
  8342  163E  2E40               	goto	u3291
  8343  163F  2E41               	goto	u3290
  8344  1640                     u3291:
  8345  1640  2E9D               	goto	l2377
  8346  1641                     u3290:
  8347  1641                     l2353:
  8348  1641  0822               	movf	___fladd@bexp^(0+128),w
  8349  1642  1D03               	btfss	3,2
  8350  1643  2E45               	goto	u3301
  8351  1644  2E46               	goto	u3300
  8352  1645                     u3301:
  8353  1645  2E51               	goto	l2359
  8354  1646                     u3300:
  8355  1646                     l2355:
  8356  1646  3000               	movlw	0
  8357  1647  1283               	bcf	3,5	;RP0=0, select bank0
  8358  1648  1303               	bcf	3,6	;RP1=0, select bank0
  8359  1649  00E3               	movwf	?___fladd+3
  8360  164A  3000               	movlw	0
  8361  164B  00E2               	movwf	?___fladd+2
  8362  164C  3000               	movlw	0
  8363  164D  00E1               	movwf	?___fladd+1
  8364  164E  3000               	movlw	0
  8365  164F  00E0               	movwf	?___fladd
  8366  1650  2FFF               	goto	l638
  8367  1651                     l2359:
  8368  1651  1283               	bcf	3,5	;RP0=0, select bank0
  8369  1652  1303               	bcf	3,6	;RP1=0, select bank0
  8370  1653  0864               	movf	___fladd@a,w
  8371  1654  07E0               	addwf	___fladd@b,f
  8372  1655  0865               	movf	___fladd@a+1,w
  8373  1656  1103               	clrz
  8374  1657  1803               	skipnc
  8375  1658  3E01               	addlw	1
  8376  1659  1903               	skipnz
  8377  165A  2E5C               	goto	u3311
  8378  165B  07E1               	addwf	___fladd@b+1,f
  8379  165C                     u3311:
  8380  165C  0866               	movf	___fladd@a+2,w
  8381  165D  1103               	clrz
  8382  165E  1803               	skipnc
  8383  165F  3E01               	addlw	1
  8384  1660  1903               	skipnz
  8385  1661  2E63               	goto	u3312
  8386  1662  07E2               	addwf	___fladd@b+2,f
  8387  1663                     u3312:
  8388  1663  0867               	movf	___fladd@a+3,w
  8389  1664  1103               	clrz
  8390  1665  1803               	skipnc
  8391  1666  3E01               	addlw	1
  8392  1667  1903               	skipnz
  8393  1668  2E6A               	goto	u3313
  8394  1669  07E3               	addwf	___fladd@b+3,f
  8395  166A                     u3313:
  8396  166A                     l2361:
  8397  166A  1C63               	btfss	___fladd@b+3,0
  8398  166B  2E6D               	goto	u3321
  8399  166C  2E6E               	goto	u3320
  8400  166D                     u3321:
  8401  166D  2F63               	goto	l2411
  8402  166E                     u3320:
  8403  166E                     l2363:
  8404  166E  1683               	bsf	3,5	;RP0=1, select bank1
  8405  166F  1303               	bcf	3,6	;RP1=0, select bank1
  8406  1670  1C23               	btfss	___fladd@grs^(0+128),0
  8407  1671  2E73               	goto	u3331
  8408  1672  2E74               	goto	u3330
  8409  1673                     u3331:
  8410  1673  2E81               	goto	l2367
  8411  1674                     u3330:
  8412  1674                     l2365:
  8413  1674  0823               	movf	___fladd@grs^(0+128),w
  8414  1675  1283               	bcf	3,5	;RP0=0, select bank0
  8415  1676  1303               	bcf	3,6	;RP1=0, select bank0
  8416  1677  00E8               	movwf	??___fladd
  8417  1678  1003               	clrc
  8418  1679  0C68               	rrf	??___fladd,w
  8419  167A  3801               	iorlw	1
  8420  167B  00E9               	movwf	??___fladd+1
  8421  167C  0869               	movf	??___fladd+1,w
  8422  167D  1683               	bsf	3,5	;RP0=1, select bank1
  8423  167E  1303               	bcf	3,6	;RP1=0, select bank1
  8424  167F  00A3               	movwf	___fladd@grs^(0+128)
  8425  1680  2E83               	goto	l2369
  8426  1681                     l2367:
  8427  1681  1003               	clrc
  8428  1682  0CA3               	rrf	___fladd@grs^(0+128),f
  8429  1683                     l2369:
  8430  1683  1283               	bcf	3,5	;RP0=0, select bank0
  8431  1684  1303               	bcf	3,6	;RP1=0, select bank0
  8432  1685  1C60               	btfss	___fladd@b,0
  8433  1686  2E88               	goto	u3341
  8434  1687  2E89               	goto	u3340
  8435  1688                     u3341:
  8436  1688  2E8C               	goto	l2373
  8437  1689                     u3340:
  8438  1689                     l2371:
  8439  1689  1683               	bsf	3,5	;RP0=1, select bank1
  8440  168A  1303               	bcf	3,6	;RP1=0, select bank1
  8441  168B  17A3               	bsf	___fladd@grs^(0+128),7
  8442  168C                     l2373:
  8443  168C  3001               	movlw	1
  8444  168D  1283               	bcf	3,5	;RP0=0, select bank0
  8445  168E  00E8               	movwf	??___fladd
  8446  168F                     u3355:
  8447  168F  0D63               	rlf	___fladd@b+3,w
  8448  1690  0CE3               	rrf	___fladd@b+3,f
  8449  1691  0CE2               	rrf	___fladd@b+2,f
  8450  1692  0CE1               	rrf	___fladd@b+1,f
  8451  1693  0CE0               	rrf	___fladd@b,f
  8452  1694  0BE8               	decfsz	??___fladd& (0+127),f
  8453  1695  2E8F               	goto	u3355
  8454  1696                     l2375:
  8455  1696  3001               	movlw	1
  8456  1697  00E8               	movwf	??___fladd
  8457  1698  0868               	movf	??___fladd,w
  8458  1699  1683               	bsf	3,5	;RP0=1, select bank1
  8459  169A  1303               	bcf	3,6	;RP1=0, select bank1
  8460  169B  07A2               	addwf	___fladd@bexp^(0+128),f
  8461  169C  2F63               	goto	l2411
  8462  169D                     l2377:
  8463  169D  1283               	bcf	3,5	;RP0=0, select bank0
  8464  169E  1303               	bcf	3,6	;RP1=0, select bank0
  8465  169F  0863               	movf	___fladd@b+3,w
  8466  16A0  3A80               	xorlw	128
  8467  16A1  00FF               	movwf	btemp+1
  8468  16A2  0867               	movf	___fladd@a+3,w
  8469  16A3  3A80               	xorlw	128
  8470  16A4  027F               	subwf	btemp+1,w
  8471  16A5  1D03               	skipz
  8472  16A6  2EB1               	goto	u3363
  8473  16A7  0866               	movf	___fladd@a+2,w
  8474  16A8  0262               	subwf	___fladd@b+2,w
  8475  16A9  1D03               	skipz
  8476  16AA  2EB1               	goto	u3363
  8477  16AB  0865               	movf	___fladd@a+1,w
  8478  16AC  0261               	subwf	___fladd@b+1,w
  8479  16AD  1D03               	skipz
  8480  16AE  2EB1               	goto	u3363
  8481  16AF  0864               	movf	___fladd@a,w
  8482  16B0  0260               	subwf	___fladd@b,w
  8483  16B1                     u3363:
  8484  16B1  1803               	skipnc
  8485  16B2  2EB4               	goto	u3361
  8486  16B3  2EB5               	goto	u3360
  8487  16B4                     u3361:
  8488  16B4  2F11               	goto	l2387
  8489  16B5                     u3360:
  8490  16B5                     l2379:
  8491  16B5  30FF               	movlw	255
  8492  16B6  00E8               	movwf	??___fladd
  8493  16B7  30FF               	movlw	255
  8494  16B8  00E9               	movwf	??___fladd+1
  8495  16B9  30FF               	movlw	255
  8496  16BA  00EA               	movwf	??___fladd+2
  8497  16BB  30FF               	movlw	255
  8498  16BC  00EB               	movwf	??___fladd+3
  8499  16BD  0864               	movf	___fladd@a,w
  8500  16BE  00EC               	movwf	??___fladd+4
  8501  16BF  0865               	movf	___fladd@a+1,w
  8502  16C0  00ED               	movwf	??___fladd+5
  8503  16C1  0866               	movf	___fladd@a+2,w
  8504  16C2  00EE               	movwf	??___fladd+6
  8505  16C3  0867               	movf	___fladd@a+3,w
  8506  16C4  00EF               	movwf	??___fladd+7
  8507  16C5  0860               	movf	___fladd@b,w
  8508  16C6  02EC               	subwf	??___fladd+4,f
  8509  16C7  0861               	movf	___fladd@b+1,w
  8510  16C8  1C03               	skipc
  8511  16C9  0F61               	incfsz	___fladd@b+1,w
  8512  16CA  2ECC               	goto	u3371
  8513  16CB  2ECD               	goto	u3372
  8514  16CC                     u3371:
  8515  16CC  02ED               	subwf	??___fladd+5,f
  8516  16CD                     u3372:
  8517  16CD  0862               	movf	___fladd@b+2,w
  8518  16CE  1C03               	skipc
  8519  16CF  0F62               	incfsz	___fladd@b+2,w
  8520  16D0  2ED2               	goto	u3373
  8521  16D1  2ED3               	goto	u3374
  8522  16D2                     u3373:
  8523  16D2  02EE               	subwf	??___fladd+6,f
  8524  16D3                     u3374:
  8525  16D3  0863               	movf	___fladd@b+3,w
  8526  16D4  1C03               	skipc
  8527  16D5  0F63               	incfsz	___fladd@b+3,w
  8528  16D6  2ED8               	goto	u3375
  8529  16D7  2ED9               	goto	u3376
  8530  16D8                     u3375:
  8531  16D8  02EF               	subwf	??___fladd+7,f
  8532  16D9                     u3376:
  8533  16D9  086C               	movf	??___fladd+4,w
  8534  16DA  07E8               	addwf	??___fladd,f
  8535  16DB  086D               	movf	??___fladd+5,w
  8536  16DC  1803               	skipnc
  8537  16DD  0F6D               	incfsz	??___fladd+5,w
  8538  16DE  2EE0               	goto	u3380
  8539  16DF  2EE1               	goto	u3381
  8540  16E0                     u3380:
  8541  16E0  07E9               	addwf	??___fladd+1,f
  8542  16E1                     u3381:
  8543  16E1  086E               	movf	??___fladd+6,w
  8544  16E2  1803               	skipnc
  8545  16E3  0F6E               	incfsz	??___fladd+6,w
  8546  16E4  2EE6               	goto	u3382
  8547  16E5  2EE7               	goto	u3383
  8548  16E6                     u3382:
  8549  16E6  07EA               	addwf	??___fladd+2,f
  8550  16E7                     u3383:
  8551  16E7  086F               	movf	??___fladd+7,w
  8552  16E8  1803               	skipnc
  8553  16E9  0A6F               	incf	??___fladd+7,w
  8554  16EA  07EB               	addwf	??___fladd+3,f
  8555  16EB  086B               	movf	??___fladd+3,w
  8556  16EC  00E3               	movwf	___fladd@b+3
  8557  16ED  086A               	movf	??___fladd+2,w
  8558  16EE  00E2               	movwf	___fladd@b+2
  8559  16EF  0869               	movf	??___fladd+1,w
  8560  16F0  00E1               	movwf	___fladd@b+1
  8561  16F1  0868               	movf	??___fladd,w
  8562  16F2  00E0               	movwf	___fladd@b
  8563  16F3                     l2381:
  8564  16F3  3080               	movlw	128
  8565  16F4  00E8               	movwf	??___fladd
  8566  16F5  0868               	movf	??___fladd,w
  8567  16F6  1683               	bsf	3,5	;RP0=1, select bank1
  8568  16F7  1303               	bcf	3,6	;RP1=0, select bank1
  8569  16F8  06A0               	xorwf	___fladd@signs^(0+128),f
  8570  16F9  09A3               	comf	___fladd@grs^(0+128),f
  8571  16FA  0AA3               	incf	___fladd@grs^(0+128),f
  8572  16FB                     l2383:
  8573  16FB  0823               	movf	___fladd@grs^(0+128),w
  8574  16FC  1D03               	btfss	3,2
  8575  16FD  2EFF               	goto	u3391
  8576  16FE  2F00               	goto	u3390
  8577  16FF                     u3391:
  8578  16FF  2F1F               	goto	l646
  8579  1700                     u3390:
  8580  1700                     l2385:
  8581  1700  3001               	movlw	1
  8582  1701  1283               	bcf	3,5	;RP0=0, select bank0
  8583  1702  1303               	bcf	3,6	;RP1=0, select bank0
  8584  1703  07E0               	addwf	___fladd@b,f
  8585  1704  3000               	movlw	0
  8586  1705  1803               	skipnc
  8587  1706  3001               	movlw	1
  8588  1707  07E1               	addwf	___fladd@b+1,f
  8589  1708  3000               	movlw	0
  8590  1709  1803               	skipnc
  8591  170A  3001               	movlw	1
  8592  170B  07E2               	addwf	___fladd@b+2,f
  8593  170C  3000               	movlw	0
  8594  170D  1803               	skipnc
  8595  170E  3001               	movlw	1
  8596  170F  07E3               	addwf	___fladd@b+3,f
  8597  1710  2F1F               	goto	l646
  8598  1711                     l2387:
  8599  1711  0864               	movf	___fladd@a,w
  8600  1712  02E0               	subwf	___fladd@b,f
  8601  1713  0865               	movf	___fladd@a+1,w
  8602  1714  1C03               	skipc
  8603  1715  0F65               	incfsz	___fladd@a+1,w
  8604  1716  02E1               	subwf	___fladd@b+1,f
  8605  1717  0866               	movf	___fladd@a+2,w
  8606  1718  1C03               	skipc
  8607  1719  0F66               	incfsz	___fladd@a+2,w
  8608  171A  02E2               	subwf	___fladd@b+2,f
  8609  171B  0867               	movf	___fladd@a+3,w
  8610  171C  1C03               	skipc
  8611  171D  0F67               	incfsz	___fladd@a+3,w
  8612  171E  02E3               	subwf	___fladd@b+3,f
  8613  171F                     l646:
  8614  171F  1283               	bcf	3,5	;RP0=0, select bank0
  8615  1720  0863               	movf	___fladd@b+3,w
  8616  1721  0462               	iorwf	___fladd@b+2,w
  8617  1722  0461               	iorwf	___fladd@b+1,w
  8618  1723  0460               	iorwf	___fladd@b,w
  8619  1724  1D03               	skipz
  8620  1725  2F27               	goto	u3401
  8621  1726  2F28               	goto	u3400
  8622  1727                     u3401:
  8623  1727  2F5E               	goto	l2409
  8624  1728                     u3400:
  8625  1728                     l2389:
  8626  1728  1683               	bsf	3,5	;RP0=1, select bank1
  8627  1729  1303               	bcf	3,6	;RP1=0, select bank1
  8628  172A  0823               	movf	___fladd@grs^(0+128),w
  8629  172B  1D03               	btfss	3,2
  8630  172C  2F2E               	goto	u3411
  8631  172D  2F2F               	goto	u3410
  8632  172E                     u3411:
  8633  172E  2F5E               	goto	l2409
  8634  172F                     u3410:
  8635  172F                     l2391:
  8636  172F  3000               	movlw	0
  8637  1730  1283               	bcf	3,5	;RP0=0, select bank0
  8638  1731  1303               	bcf	3,6	;RP1=0, select bank0
  8639  1732  00E3               	movwf	?___fladd+3
  8640  1733  3000               	movlw	0
  8641  1734  00E2               	movwf	?___fladd+2
  8642  1735  3000               	movlw	0
  8643  1736  00E1               	movwf	?___fladd+1
  8644  1737  3000               	movlw	0
  8645  1738  00E0               	movwf	?___fladd
  8646  1739  2FFF               	goto	l638
  8647  173A                     l2395:
  8648  173A  3001               	movlw	1
  8649  173B  00E8               	movwf	??___fladd
  8650  173C                     u3425:
  8651  173C  1003               	clrc
  8652  173D  0DE0               	rlf	___fladd@b,f
  8653  173E  0DE1               	rlf	___fladd@b+1,f
  8654  173F  0DE2               	rlf	___fladd@b+2,f
  8655  1740  0DE3               	rlf	___fladd@b+3,f
  8656  1741  0BE8               	decfsz	??___fladd,f
  8657  1742  2F3C               	goto	u3425
  8658  1743                     l2397:
  8659  1743  1683               	bsf	3,5	;RP0=1, select bank1
  8660  1744  1303               	bcf	3,6	;RP1=0, select bank1
  8661  1745  1FA3               	btfss	___fladd@grs^(0+128),7
  8662  1746  2F48               	goto	u3431
  8663  1747  2F49               	goto	u3430
  8664  1748                     u3431:
  8665  1748  2F4C               	goto	l650
  8666  1749                     u3430:
  8667  1749                     l2399:
  8668  1749  1283               	bcf	3,5	;RP0=0, select bank0
  8669  174A  1303               	bcf	3,6	;RP1=0, select bank0
  8670  174B  1460               	bsf	___fladd@b,0
  8671  174C                     l650:
  8672  174C  1683               	bsf	3,5	;RP0=1, select bank1
  8673  174D  1303               	bcf	3,6	;RP1=0, select bank1
  8674  174E  1C23               	btfss	___fladd@grs^(0+128),0
  8675  174F  2F51               	goto	u3441
  8676  1750  2F52               	goto	u3440
  8677  1751                     u3441:
  8678  1751  2F55               	goto	l2403
  8679  1752                     u3440:
  8680  1752                     l2401:
  8681  1752  1403               	setc
  8682  1753  0DA3               	rlf	___fladd@grs^(0+128),f
  8683  1754  2F57               	goto	l2405
  8684  1755                     l2403:
  8685  1755  1003               	clrc
  8686  1756  0DA3               	rlf	___fladd@grs^(0+128),f
  8687  1757                     l2405:
  8688  1757  0822               	movf	___fladd@bexp^(0+128),w
  8689  1758  1903               	btfsc	3,2
  8690  1759  2F5B               	goto	u3451
  8691  175A  2F5C               	goto	u3450
  8692  175B                     u3451:
  8693  175B  2F5E               	goto	l2409
  8694  175C                     u3450:
  8695  175C                     l2407:
  8696  175C  3001               	movlw	1
  8697  175D  02A2               	subwf	___fladd@bexp^(0+128),f
  8698  175E                     l2409:
  8699  175E  1283               	bcf	3,5	;RP0=0, select bank0
  8700  175F  1FE2               	btfss	___fladd@b+2,7
  8701  1760  2F62               	goto	u3461
  8702  1761  2F63               	goto	u3460
  8703  1762                     u3461:
  8704  1762  2F3A               	goto	l2395
  8705  1763                     u3460:
  8706  1763                     l2411:
  8707  1763  1683               	bsf	3,5	;RP0=1, select bank1
  8708  1764  1303               	bcf	3,6	;RP1=0, select bank1
  8709  1765  01A1               	clrf	___fladd@aexp^(0+128)
  8710  1766                     l2413:
  8711  1766  1FA3               	btfss	___fladd@grs^(0+128),7
  8712  1767  2F69               	goto	u3471
  8713  1768  2F6A               	goto	u3470
  8714  1769                     u3471:
  8715  1769  2F7C               	goto	l2421
  8716  176A                     u3470:
  8717  176A                     l2415:
  8718  176A  0823               	movf	___fladd@grs^(0+128),w
  8719  176B  397F               	andlw	127
  8720  176C  1903               	btfsc	3,2
  8721  176D  2F6F               	goto	u3481
  8722  176E  2F70               	goto	u3480
  8723  176F                     u3481:
  8724  176F  2F75               	goto	l656
  8725  1770                     u3480:
  8726  1770                     l2417:
  8727  1770  1683               	bsf	3,5	;RP0=1, select bank1
  8728  1771  1303               	bcf	3,6	;RP1=0, select bank1
  8729  1772  01A1               	clrf	___fladd@aexp^(0+128)
  8730  1773  0AA1               	incf	___fladd@aexp^(0+128),f
  8731  1774  2F7C               	goto	l2421
  8732  1775                     l656:
  8733  1775  1283               	bcf	3,5	;RP0=0, select bank0
  8734  1776  1303               	bcf	3,6	;RP1=0, select bank0
  8735  1777  1C60               	btfss	___fladd@b,0
  8736  1778  2F7A               	goto	u3491
  8737  1779  2F7B               	goto	u3490
  8738  177A                     u3491:
  8739  177A  2F7C               	goto	l2421
  8740  177B                     u3490:
  8741  177B  2F70               	goto	l2417
  8742  177C                     l2421:
  8743  177C  1683               	bsf	3,5	;RP0=1, select bank1
  8744  177D  1303               	bcf	3,6	;RP1=0, select bank1
  8745  177E  0821               	movf	___fladd@aexp^(0+128),w
  8746  177F  1903               	btfsc	3,2
  8747  1780  2F82               	goto	u3501
  8748  1781  2F83               	goto	u3500
  8749  1782                     u3501:
  8750  1782  2FBF               	goto	l659
  8751  1783                     u3500:
  8752  1783                     l2423:
  8753  1783  3001               	movlw	1
  8754  1784  1283               	bcf	3,5	;RP0=0, select bank0
  8755  1785  1303               	bcf	3,6	;RP1=0, select bank0
  8756  1786  07E0               	addwf	___fladd@b,f
  8757  1787  3000               	movlw	0
  8758  1788  1803               	skipnc
  8759  1789  3001               	movlw	1
  8760  178A  07E1               	addwf	___fladd@b+1,f
  8761  178B  3000               	movlw	0
  8762  178C  1803               	skipnc
  8763  178D  3001               	movlw	1
  8764  178E  07E2               	addwf	___fladd@b+2,f
  8765  178F  3000               	movlw	0
  8766  1790  1803               	skipnc
  8767  1791  3001               	movlw	1
  8768  1792  07E3               	addwf	___fladd@b+3,f
  8769  1793                     l2425:
  8770  1793  1C63               	btfss	___fladd@b+3,0
  8771  1794  2F96               	goto	u3511
  8772  1795  2F97               	goto	u3510
  8773  1796                     u3511:
  8774  1796  2FBF               	goto	l659
  8775  1797                     u3510:
  8776  1797                     l2427:
  8777  1797  0860               	movf	___fladd@b,w
  8778  1798  00E8               	movwf	??___fladd
  8779  1799  0861               	movf	___fladd@b+1,w
  8780  179A  00E9               	movwf	??___fladd+1
  8781  179B  0862               	movf	___fladd@b+2,w
  8782  179C  00EA               	movwf	??___fladd+2
  8783  179D  0863               	movf	___fladd@b+3,w
  8784  179E  00EB               	movwf	??___fladd+3
  8785  179F  3001               	movlw	1
  8786  17A0  00EC               	movwf	??___fladd+4
  8787  17A1                     u3525:
  8788  17A1  0D6B               	rlf	??___fladd+3,w
  8789  17A2  0CEB               	rrf	??___fladd+3,f
  8790  17A3  0CEA               	rrf	??___fladd+2,f
  8791  17A4  0CE9               	rrf	??___fladd+1,f
  8792  17A5  0CE8               	rrf	??___fladd,f
  8793  17A6                     u3520:
  8794  17A6  0BEC               	decfsz	??___fladd+4,f
  8795  17A7  2FA1               	goto	u3525
  8796  17A8  086B               	movf	??___fladd+3,w
  8797  17A9  00E3               	movwf	___fladd@b+3
  8798  17AA  086A               	movf	??___fladd+2,w
  8799  17AB  00E2               	movwf	___fladd@b+2
  8800  17AC  0869               	movf	??___fladd+1,w
  8801  17AD  00E1               	movwf	___fladd@b+1
  8802  17AE  0868               	movf	??___fladd,w
  8803  17AF  00E0               	movwf	___fladd@b
  8804  17B0  1683               	bsf	3,5	;RP0=1, select bank1
  8805  17B1  1303               	bcf	3,6	;RP1=0, select bank1
  8806  17B2  0A22               	incf	___fladd@bexp^(0+128),w
  8807  17B3  1903               	btfsc	3,2
  8808  17B4  2FB6               	goto	u3531
  8809  17B5  2FB7               	goto	u3530
  8810  17B6                     u3531:
  8811  17B6  2FBF               	goto	l659
  8812  17B7                     u3530:
  8813  17B7                     l2429:
  8814  17B7  3001               	movlw	1
  8815  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  8816  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  8817  17BA  00E8               	movwf	??___fladd
  8818  17BB  0868               	movf	??___fladd,w
  8819  17BC  1683               	bsf	3,5	;RP0=1, select bank1
  8820  17BD  1303               	bcf	3,6	;RP1=0, select bank1
  8821  17BE  07A2               	addwf	___fladd@bexp^(0+128),f
  8822  17BF                     l659:
  8823  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  8824  17C0  1303               	bcf	3,6	;RP1=0, select bank1
  8825  17C1  0A22               	incf	___fladd@bexp^(0+128),w
  8826  17C2  1903               	btfsc	3,2
  8827  17C3  2FC5               	goto	u3541
  8828  17C4  2FC6               	goto	u3540
  8829  17C5                     u3541:
  8830  17C5  2FCB               	goto	l2433
  8831  17C6                     u3540:
  8832  17C6                     l2431:
  8833  17C6  0822               	movf	___fladd@bexp^(0+128),w
  8834  17C7  1D03               	btfss	3,2
  8835  17C8  2FCA               	goto	u3551
  8836  17C9  2FCB               	goto	u3550
  8837  17CA                     u3551:
  8838  17CA  2FDD               	goto	l2439
  8839  17CB                     u3550:
  8840  17CB                     l2433:
  8841  17CB  3000               	movlw	0
  8842  17CC  1283               	bcf	3,5	;RP0=0, select bank0
  8843  17CD  1303               	bcf	3,6	;RP1=0, select bank0
  8844  17CE  00E3               	movwf	___fladd@b+3
  8845  17CF  3000               	movlw	0
  8846  17D0  00E2               	movwf	___fladd@b+2
  8847  17D1  3000               	movlw	0
  8848  17D2  00E1               	movwf	___fladd@b+1
  8849  17D3  3000               	movlw	0
  8850  17D4  00E0               	movwf	___fladd@b
  8851  17D5                     l2435:
  8852  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  8853  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  8854  17D7  0822               	movf	___fladd@bexp^(0+128),w
  8855  17D8  1D03               	btfss	3,2
  8856  17D9  2FDB               	goto	u3561
  8857  17DA  2FDC               	goto	u3560
  8858  17DB                     u3561:
  8859  17DB  2FDD               	goto	l2439
  8860  17DC                     u3560:
  8861  17DC                     l2437:
  8862  17DC  01A0               	clrf	___fladd@signs^(0+128)
  8863  17DD                     l2439:
  8864  17DD  1C22               	btfss	___fladd@bexp^(0+128),0
  8865  17DE  2FE0               	goto	u3571
  8866  17DF  2FE1               	goto	u3570
  8867  17E0                     u3571:
  8868  17E0  2FE5               	goto	l2443
  8869  17E1                     u3570:
  8870  17E1                     l2441:
  8871  17E1  1283               	bcf	3,5	;RP0=0, select bank0
  8872  17E2  1303               	bcf	3,6	;RP1=0, select bank0
  8873  17E3  17E2               	bsf	___fladd@b+2,7
  8874  17E4  2FEB               	goto	l667
  8875  17E5                     l2443:
  8876  17E5  307F               	movlw	127
  8877  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  8878  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  8879  17E8  00E8               	movwf	??___fladd
  8880  17E9  0868               	movf	??___fladd,w
  8881  17EA  05E2               	andwf	___fladd@b+2,f
  8882  17EB                     l667:
  8883  17EB  1683               	bsf	3,5	;RP0=1, select bank1
  8884  17EC  1303               	bcf	3,6	;RP1=0, select bank1
  8885  17ED  0822               	movf	___fladd@bexp^(0+128),w
  8886  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  8887  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  8888  17F0  00E8               	movwf	??___fladd
  8889  17F1  1003               	clrc
  8890  17F2  0C68               	rrf	??___fladd,w
  8891  17F3  00E9               	movwf	??___fladd+1
  8892  17F4  0869               	movf	??___fladd+1,w
  8893  17F5  00E3               	movwf	___fladd@b+3
  8894  17F6                     l2445:
  8895  17F6  1683               	bsf	3,5	;RP0=1, select bank1
  8896  17F7  1303               	bcf	3,6	;RP1=0, select bank1
  8897  17F8  1FA0               	btfss	___fladd@signs^(0+128),7
  8898  17F9  2FFB               	goto	u3581
  8899  17FA  2FFC               	goto	u3580
  8900  17FB                     u3581:
  8901  17FB  2FFF               	goto	l668
  8902  17FC                     u3580:
  8903  17FC                     l2447:
  8904  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  8905  17FD  1303               	bcf	3,6	;RP1=0, select bank0
  8906  17FE  17E3               	bsf	___fladd@b+3,7
  8907  17FF                     l668:
  8908  17FF                     l638:
  8909  17FF  0008               	return
  8910  1800                     __end_of___fladd:
  8911                           
  8912                           	psect	text20
  8913  1B5C                     __ptext20:	
  8914 ;; *************** function ___flneg *****************
  8915 ;; Defined at:
  8916 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  f1              4    2[COMMON] unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;		None
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  4    2[COMMON] unsigned char 
  8923 ;; Registers used:
  8924 ;;		wreg
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8930 ;;      Params:         4       0       0       0       0
  8931 ;;      Locals:         0       0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0
  8933 ;;      Totals:         4       0       0       0       0
  8934 ;;Total ram usage:        4 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    1
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_sprintf
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           
  8945                           ;psect for function ___flneg
  8946  1B5C                     ___flneg:
  8947  1B5C                     l2863:	
  8948                           ;incstack = 0
  8949                           ; Regs used in ___flneg: [wreg]
  8950                           
  8951  1B5C  0875               	movf	___flneg@f1+3,w
  8952  1B5D  0474               	iorwf	___flneg@f1+2,w
  8953  1B5E  0473               	iorwf	___flneg@f1+1,w
  8954  1B5F  0472               	iorwf	___flneg@f1,w
  8955  1B60  1903               	skipnz
  8956  1B61  2B63               	goto	u4711
  8957  1B62  2B64               	goto	u4710
  8958  1B63                     u4711:
  8959  1B63  2B66               	goto	l2867
  8960  1B64                     u4710:
  8961  1B64                     l2865:
  8962  1B64  3080               	movlw	128
  8963  1B65  06F5               	xorwf	___flneg@f1+3,f
  8964  1B66                     l2867:
  8965  1B66                     l497:
  8966  1B66  0008               	return
  8967  1B67                     __end_of___flneg:
  8968                           
  8969                           	psect	text21
  8970  1F5C                     __ptext21:	
  8971 ;; *************** function ___flge *****************
  8972 ;; Defined at:
  8973 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;  ff1             4    2[COMMON] unsigned char 
  8976 ;;  ff2             4    6[COMMON] unsigned char 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;		None               void
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8988 ;;      Params:         8       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0
  8990 ;;      Temps:          0       4       0       0       0
  8991 ;;      Totals:         8       4       0       0       0
  8992 ;;Total ram usage:       12 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    1
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_sprintf
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           
  9003                           ;psect for function ___flge
  9004  1F5C                     ___flge:
  9005  1F5C                     l2843:	
  9006                           ;incstack = 0
  9007                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9008                           
  9009  1F5C  3000               	movlw	0
  9010  1F5D  0572               	andwf	___flge@ff1,w
  9011  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  9012  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  9013  1F60  00A0               	movwf	??___flge
  9014  1F61  3000               	movlw	0
  9015  1F62  0573               	andwf	___flge@ff1+1,w
  9016  1F63  00A1               	movwf	??___flge+1
  9017  1F64  3080               	movlw	128
  9018  1F65  0574               	andwf	___flge@ff1+2,w
  9019  1F66  00A2               	movwf	??___flge+2
  9020  1F67  307F               	movlw	127
  9021  1F68  0575               	andwf	___flge@ff1+3,w
  9022  1F69  00A3               	movwf	??___flge+3
  9023  1F6A  0823               	movf	??___flge+3,w
  9024  1F6B  0422               	iorwf	??___flge+2,w
  9025  1F6C  0421               	iorwf	??___flge+1,w
  9026  1F6D  0420               	iorwf	??___flge,w
  9027  1F6E  1D03               	skipz
  9028  1F6F  2F71               	goto	u4641
  9029  1F70  2F72               	goto	u4640
  9030  1F71                     u4641:
  9031  1F71  2F7A               	goto	l489
  9032  1F72                     u4640:
  9033  1F72                     l2845:
  9034  1F72  3000               	movlw	0
  9035  1F73  00F5               	movwf	___flge@ff1+3
  9036  1F74  3000               	movlw	0
  9037  1F75  00F4               	movwf	___flge@ff1+2
  9038  1F76  3000               	movlw	0
  9039  1F77  00F3               	movwf	___flge@ff1+1
  9040  1F78  3000               	movlw	0
  9041  1F79  00F2               	movwf	___flge@ff1
  9042  1F7A                     l489:
  9043  1F7A  3000               	movlw	0
  9044  1F7B  0576               	andwf	___flge@ff2,w
  9045  1F7C  00A0               	movwf	??___flge
  9046  1F7D  3000               	movlw	0
  9047  1F7E  0577               	andwf	___flge@ff2+1,w
  9048  1F7F  00A1               	movwf	??___flge+1
  9049  1F80  3080               	movlw	128
  9050  1F81  0578               	andwf	___flge@ff2+2,w
  9051  1F82  00A2               	movwf	??___flge+2
  9052  1F83  307F               	movlw	127
  9053  1F84  0579               	andwf	___flge@ff2+3,w
  9054  1F85  00A3               	movwf	??___flge+3
  9055  1F86  0823               	movf	??___flge+3,w
  9056  1F87  0422               	iorwf	??___flge+2,w
  9057  1F88  0421               	iorwf	??___flge+1,w
  9058  1F89  0420               	iorwf	??___flge,w
  9059  1F8A  1D03               	skipz
  9060  1F8B  2F8D               	goto	u4651
  9061  1F8C  2F8E               	goto	u4650
  9062  1F8D                     u4651:
  9063  1F8D  2F96               	goto	l2849
  9064  1F8E                     u4650:
  9065  1F8E                     l2847:
  9066  1F8E  3000               	movlw	0
  9067  1F8F  00F9               	movwf	___flge@ff2+3
  9068  1F90  3000               	movlw	0
  9069  1F91  00F8               	movwf	___flge@ff2+2
  9070  1F92  3000               	movlw	0
  9071  1F93  00F7               	movwf	___flge@ff2+1
  9072  1F94  3000               	movlw	0
  9073  1F95  00F6               	movwf	___flge@ff2
  9074  1F96                     l2849:
  9075  1F96  1FF5               	btfss	___flge@ff1+3,7
  9076  1F97  2F99               	goto	u4661
  9077  1F98  2F9A               	goto	u4660
  9078  1F99                     u4661:
  9079  1F99  2FBE               	goto	l2853
  9080  1F9A                     u4660:
  9081  1F9A                     l2851:
  9082  1F9A  3000               	movlw	0
  9083  1F9B  00A0               	movwf	??___flge
  9084  1F9C  3000               	movlw	0
  9085  1F9D  00A1               	movwf	??___flge+1
  9086  1F9E  3000               	movlw	0
  9087  1F9F  00A2               	movwf	??___flge+2
  9088  1FA0  3080               	movlw	128
  9089  1FA1  00A3               	movwf	??___flge+3
  9090  1FA2  0872               	movf	___flge@ff1,w
  9091  1FA3  02A0               	subwf	??___flge,f
  9092  1FA4  0873               	movf	___flge@ff1+1,w
  9093  1FA5  1C03               	skipc
  9094  1FA6  0F73               	incfsz	___flge@ff1+1,w
  9095  1FA7  2FA9               	goto	u4671
  9096  1FA8  2FAA               	goto	u4672
  9097  1FA9                     u4671:
  9098  1FA9  02A1               	subwf	??___flge+1,f
  9099  1FAA                     u4672:
  9100  1FAA  0874               	movf	___flge@ff1+2,w
  9101  1FAB  1C03               	skipc
  9102  1FAC  0F74               	incfsz	___flge@ff1+2,w
  9103  1FAD  2FAF               	goto	u4673
  9104  1FAE  2FB0               	goto	u4674
  9105  1FAF                     u4673:
  9106  1FAF  02A2               	subwf	??___flge+2,f
  9107  1FB0                     u4674:
  9108  1FB0  0875               	movf	___flge@ff1+3,w
  9109  1FB1  1C03               	skipc
  9110  1FB2  0F75               	incfsz	___flge@ff1+3,w
  9111  1FB3  2FB5               	goto	u4675
  9112  1FB4  2FB6               	goto	u4676
  9113  1FB5                     u4675:
  9114  1FB5  02A3               	subwf	??___flge+3,f
  9115  1FB6                     u4676:
  9116  1FB6  0823               	movf	??___flge+3,w
  9117  1FB7  00F5               	movwf	___flge@ff1+3
  9118  1FB8  0822               	movf	??___flge+2,w
  9119  1FB9  00F4               	movwf	___flge@ff1+2
  9120  1FBA  0821               	movf	??___flge+1,w
  9121  1FBB  00F3               	movwf	___flge@ff1+1
  9122  1FBC  0820               	movf	??___flge,w
  9123  1FBD  00F2               	movwf	___flge@ff1
  9124  1FBE                     l2853:
  9125  1FBE  1FF9               	btfss	___flge@ff2+3,7
  9126  1FBF  2FC1               	goto	u4681
  9127  1FC0  2FC2               	goto	u4680
  9128  1FC1                     u4681:
  9129  1FC1  2FE6               	goto	l492
  9130  1FC2                     u4680:
  9131  1FC2                     l2855:
  9132  1FC2  3000               	movlw	0
  9133  1FC3  00A0               	movwf	??___flge
  9134  1FC4  3000               	movlw	0
  9135  1FC5  00A1               	movwf	??___flge+1
  9136  1FC6  3000               	movlw	0
  9137  1FC7  00A2               	movwf	??___flge+2
  9138  1FC8  3080               	movlw	128
  9139  1FC9  00A3               	movwf	??___flge+3
  9140  1FCA  0876               	movf	___flge@ff2,w
  9141  1FCB  02A0               	subwf	??___flge,f
  9142  1FCC  0877               	movf	___flge@ff2+1,w
  9143  1FCD  1C03               	skipc
  9144  1FCE  0F77               	incfsz	___flge@ff2+1,w
  9145  1FCF  2FD1               	goto	u4691
  9146  1FD0  2FD2               	goto	u4692
  9147  1FD1                     u4691:
  9148  1FD1  02A1               	subwf	??___flge+1,f
  9149  1FD2                     u4692:
  9150  1FD2  0878               	movf	___flge@ff2+2,w
  9151  1FD3  1C03               	skipc
  9152  1FD4  0F78               	incfsz	___flge@ff2+2,w
  9153  1FD5  2FD7               	goto	u4693
  9154  1FD6  2FD8               	goto	u4694
  9155  1FD7                     u4693:
  9156  1FD7  02A2               	subwf	??___flge+2,f
  9157  1FD8                     u4694:
  9158  1FD8  0879               	movf	___flge@ff2+3,w
  9159  1FD9  1C03               	skipc
  9160  1FDA  0F79               	incfsz	___flge@ff2+3,w
  9161  1FDB  2FDD               	goto	u4695
  9162  1FDC  2FDE               	goto	u4696
  9163  1FDD                     u4695:
  9164  1FDD  02A3               	subwf	??___flge+3,f
  9165  1FDE                     u4696:
  9166  1FDE  0823               	movf	??___flge+3,w
  9167  1FDF  00F9               	movwf	___flge@ff2+3
  9168  1FE0  0822               	movf	??___flge+2,w
  9169  1FE1  00F8               	movwf	___flge@ff2+2
  9170  1FE2  0821               	movf	??___flge+1,w
  9171  1FE3  00F7               	movwf	___flge@ff2+1
  9172  1FE4  0820               	movf	??___flge,w
  9173  1FE5  00F6               	movwf	___flge@ff2
  9174  1FE6                     l492:
  9175  1FE6  3080               	movlw	128
  9176  1FE7  06F5               	xorwf	___flge@ff1+3,f
  9177  1FE8  3080               	movlw	128
  9178  1FE9  06F9               	xorwf	___flge@ff2+3,f
  9179  1FEA  0879               	movf	___flge@ff2+3,w
  9180  1FEB  0275               	subwf	___flge@ff1+3,w
  9181  1FEC  1D03               	skipz
  9182  1FED  2FF8               	goto	u4705
  9183  1FEE  0878               	movf	___flge@ff2+2,w
  9184  1FEF  0274               	subwf	___flge@ff1+2,w
  9185  1FF0  1D03               	skipz
  9186  1FF1  2FF8               	goto	u4705
  9187  1FF2  0877               	movf	___flge@ff2+1,w
  9188  1FF3  0273               	subwf	___flge@ff1+1,w
  9189  1FF4  1D03               	skipz
  9190  1FF5  2FF8               	goto	u4705
  9191  1FF6  0876               	movf	___flge@ff2,w
  9192  1FF7  0272               	subwf	___flge@ff1,w
  9193  1FF8                     u4705:
  9194  1FF8  1803               	skipnc
  9195  1FF9  2FFB               	goto	u4701
  9196  1FFA  2FFC               	goto	u4700
  9197  1FFB                     u4701:
  9198  1FFB  2FFE               	goto	l2859
  9199  1FFC                     u4700:
  9200  1FFC                     l2857:
  9201  1FFC  1003               	clrc
  9202  1FFD  2FFF               	goto	l493
  9203  1FFE                     l2859:
  9204  1FFE  1403               	setc
  9205  1FFF                     l493:
  9206  1FFF  0008               	return
  9207  2000                     __end_of___flge:
  9208                           
  9209                           	psect	text22
  9210  1CF2                     __ptext22:	
  9211 ;; *************** function ___fleq *****************
  9212 ;; Defined at:
  9213 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  ff1             4    2[COMMON] unsigned char 
  9216 ;;  ff2             4    6[COMMON] unsigned char 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;		None               void
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, status,0
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9228 ;;      Params:         8       0       0       0       0
  9229 ;;      Locals:         0       0       0       0       0
  9230 ;;      Temps:          0       4       0       0       0
  9231 ;;      Totals:         8       4       0       0       0
  9232 ;;Total ram usage:       12 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_sprintf
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function ___fleq
  9244  1CF2                     ___fleq:
  9245  1CF2                     l2831:	
  9246                           ;incstack = 0
  9247                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9248                           
  9249  1CF2  3000               	movlw	0
  9250  1CF3  0572               	andwf	___fleq@ff1,w
  9251  1CF4  1283               	bcf	3,5	;RP0=0, select bank0
  9252  1CF5  1303               	bcf	3,6	;RP1=0, select bank0
  9253  1CF6  00A0               	movwf	??___fleq
  9254  1CF7  3000               	movlw	0
  9255  1CF8  0573               	andwf	___fleq@ff1+1,w
  9256  1CF9  00A1               	movwf	??___fleq+1
  9257  1CFA  3080               	movlw	128
  9258  1CFB  0574               	andwf	___fleq@ff1+2,w
  9259  1CFC  00A2               	movwf	??___fleq+2
  9260  1CFD  307F               	movlw	127
  9261  1CFE  0575               	andwf	___fleq@ff1+3,w
  9262  1CFF  00A3               	movwf	??___fleq+3
  9263  1D00  0823               	movf	??___fleq+3,w
  9264  1D01  0422               	iorwf	??___fleq+2,w
  9265  1D02  0421               	iorwf	??___fleq+1,w
  9266  1D03  0420               	iorwf	??___fleq,w
  9267  1D04  1D03               	skipz
  9268  1D05  2D07               	goto	u4611
  9269  1D06  2D08               	goto	u4610
  9270  1D07                     u4611:
  9271  1D07  2D10               	goto	l484
  9272  1D08                     u4610:
  9273  1D08                     l2833:
  9274  1D08  3000               	movlw	0
  9275  1D09  00F5               	movwf	___fleq@ff1+3
  9276  1D0A  3000               	movlw	0
  9277  1D0B  00F4               	movwf	___fleq@ff1+2
  9278  1D0C  3000               	movlw	0
  9279  1D0D  00F3               	movwf	___fleq@ff1+1
  9280  1D0E  3000               	movlw	0
  9281  1D0F  00F2               	movwf	___fleq@ff1
  9282  1D10                     l484:
  9283  1D10  3000               	movlw	0
  9284  1D11  0576               	andwf	___fleq@ff2,w
  9285  1D12  00A0               	movwf	??___fleq
  9286  1D13  3000               	movlw	0
  9287  1D14  0577               	andwf	___fleq@ff2+1,w
  9288  1D15  00A1               	movwf	??___fleq+1
  9289  1D16  3080               	movlw	128
  9290  1D17  0578               	andwf	___fleq@ff2+2,w
  9291  1D18  00A2               	movwf	??___fleq+2
  9292  1D19  307F               	movlw	127
  9293  1D1A  0579               	andwf	___fleq@ff2+3,w
  9294  1D1B  00A3               	movwf	??___fleq+3
  9295  1D1C  0823               	movf	??___fleq+3,w
  9296  1D1D  0422               	iorwf	??___fleq+2,w
  9297  1D1E  0421               	iorwf	??___fleq+1,w
  9298  1D1F  0420               	iorwf	??___fleq,w
  9299  1D20  1D03               	skipz
  9300  1D21  2D23               	goto	u4621
  9301  1D22  2D24               	goto	u4620
  9302  1D23                     u4621:
  9303  1D23  2D2C               	goto	l485
  9304  1D24                     u4620:
  9305  1D24                     l2835:
  9306  1D24  3000               	movlw	0
  9307  1D25  00F9               	movwf	___fleq@ff2+3
  9308  1D26  3000               	movlw	0
  9309  1D27  00F8               	movwf	___fleq@ff2+2
  9310  1D28  3000               	movlw	0
  9311  1D29  00F7               	movwf	___fleq@ff2+1
  9312  1D2A  3000               	movlw	0
  9313  1D2B  00F6               	movwf	___fleq@ff2
  9314  1D2C                     l485:
  9315  1D2C  0879               	movf	___fleq@ff2+3,w
  9316  1D2D  0675               	xorwf	___fleq@ff1+3,w
  9317  1D2E  1D03               	skipz
  9318  1D2F  2D3A               	goto	u4635
  9319  1D30  0878               	movf	___fleq@ff2+2,w
  9320  1D31  0674               	xorwf	___fleq@ff1+2,w
  9321  1D32  1D03               	skipz
  9322  1D33  2D3A               	goto	u4635
  9323  1D34  0877               	movf	___fleq@ff2+1,w
  9324  1D35  0673               	xorwf	___fleq@ff1+1,w
  9325  1D36  1D03               	skipz
  9326  1D37  2D3A               	goto	u4635
  9327  1D38  0876               	movf	___fleq@ff2,w
  9328  1D39  0672               	xorwf	___fleq@ff1,w
  9329  1D3A                     u4635:
  9330  1D3A  1903               	skipnz
  9331  1D3B  2D3D               	goto	u4631
  9332  1D3C  2D3E               	goto	u4630
  9333  1D3D                     u4631:
  9334  1D3D  2D40               	goto	l2839
  9335  1D3E                     u4630:
  9336  1D3E                     l2837:
  9337  1D3E  1003               	clrc
  9338  1D3F  2D41               	goto	l486
  9339  1D40                     l2839:
  9340  1D40  1403               	setc
  9341  1D41                     l486:
  9342  1D41  0008               	return
  9343  1D42                     __end_of___fleq:
  9344                           
  9345                           	psect	text23
  9346  1B86                     __ptext23:	
  9347 ;; *************** function _ReadADC *****************
  9348 ;; Defined at:
  9349 ;;		line 95 in file "main.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;		None
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  TempValue       2    4[COMMON] unsigned int 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  2    2[COMMON] unsigned int 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9363 ;;      Params:         2       0       0       0       0
  9364 ;;      Locals:         2       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0
  9366 ;;      Totals:         4       0       0       0       0
  9367 ;;Total ram usage:        4 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    1
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_main
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           
  9378                           ;psect for function _ReadADC
  9379  1B86                     _ReadADC:
  9380  1B86                     l3019:	
  9381                           ;incstack = 0
  9382                           ; Regs used in _ReadADC: [wreg+status,2]
  9383                           
  9384  1B86                     l3021:
  9385  1B86  1283               	bcf	3,5	;RP0=0, select bank0
  9386  1B87  1303               	bcf	3,6	;RP1=0, select bank0
  9387  1B88  151F               	bsf	31,2	;volatile
  9388  1B89                     l110:
  9389  1B89  191F               	btfsc	31,2	;volatile
  9390  1B8A  2B8C               	goto	u5091
  9391  1B8B  2B8D               	goto	u5090
  9392  1B8C                     u5091:
  9393  1B8C  2B89               	goto	l110
  9394  1B8D                     u5090:
  9395  1B8D                     l3023:
  9396  1B8D  081E               	movf	30,w	;volatile
  9397  1B8E  00F5               	movwf	ReadADC@TempValue+1
  9398  1B8F  1683               	bsf	3,5	;RP0=1, select bank1
  9399  1B90  1303               	bcf	3,6	;RP1=0, select bank1
  9400  1B91  081E               	movf	30,w	;volatile
  9401  1B92  00F4               	movwf	ReadADC@TempValue
  9402  1B93  0875               	movf	ReadADC@TempValue+1,w
  9403  1B94  00F3               	movwf	?_ReadADC+1
  9404  1B95  0874               	movf	ReadADC@TempValue,w
  9405  1B96  00F2               	movwf	?_ReadADC
  9406  1B97                     l113:
  9407  1B97  0008               	return
  9408  1B98                     __end_of_ReadADC:
  9409                           
  9410                           	psect	text24
  9411  1C66                     __ptext24:	
  9412 ;; *************** function _Lcd_Write_String *****************
  9413 ;; Defined at:
  9414 ;;		line 95 in file "./lcd.h"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  a               2    7[COMMON] PTR unsigned char 
  9417 ;;		 -> STR_3(2), STR_2(2), main@str(20), 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  i               2    0[BANK0 ] int 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9429 ;;      Params:         2       0       0       0       0
  9430 ;;      Locals:         0       2       0       0       0
  9431 ;;      Temps:          3       0       0       0       0
  9432 ;;      Totals:         5       2       0       0       0
  9433 ;;Total ram usage:        7 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    3
  9436 ;; This function calls:
  9437 ;;		_Lcd_Write_Char
  9438 ;; This function is called by:
  9439 ;;		_main
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           
  9444                           ;psect for function _Lcd_Write_String
  9445  1C66                     _Lcd_Write_String:
  9446  1C66                     l3009:	
  9447                           ;incstack = 0
  9448                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9449                           
  9450                           
  9451                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  9452  1C66  1283               	bcf	3,5	;RP0=0, select bank0
  9453  1C67  1303               	bcf	3,6	;RP1=0, select bank0
  9454  1C68  01A0               	clrf	Lcd_Write_String@i
  9455  1C69  01A1               	clrf	Lcd_Write_String@i+1
  9456  1C6A  2C8F               	goto	l3015
  9457  1C6B                     l3011:
  9458                           
  9459                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  9460  1C6B  0820               	movf	Lcd_Write_String@i,w
  9461  1C6C  0777               	addwf	Lcd_Write_String@a,w
  9462  1C6D  00FA               	movwf	??_Lcd_Write_String+1
  9463  1C6E  0878               	movf	Lcd_Write_String@a+1,w
  9464  1C6F  00F9               	movwf	??_Lcd_Write_String
  9465  1C70  1803               	skipnc
  9466  1C71  0AF9               	incf	??_Lcd_Write_String,f
  9467  1C72  1FA0               	btfss	Lcd_Write_String@i,7
  9468  1C73  2C75               	goto	u5060
  9469  1C74  03F9               	decf	??_Lcd_Write_String,f
  9470  1C75                     u5060:
  9471  1C75  0879               	movf	??_Lcd_Write_String,w
  9472  1C76  00FB               	movwf	??_Lcd_Write_String+2
  9473  1C77  087B               	movf	??_Lcd_Write_String+2,w
  9474  1C78  1283               	bcf	3,5	;RP0=0, select bank0
  9475  1C79  1303               	bcf	3,6	;RP1=0, select bank0
  9476  1C7A  00FF               	movwf	btemp+1
  9477  1C7B  087A               	movf	??_Lcd_Write_String+1,w
  9478  1C7C  0084               	movwf	4
  9479  1C7D  160A  118A  2000  160A  158A  	fcall	stringtab
  9480  1C82  160A  158A  242D  160A  158A  	fcall	_Lcd_Write_Char
  9481  1C87                     l3013:
  9482  1C87  3001               	movlw	1
  9483  1C88  1283               	bcf	3,5	;RP0=0, select bank0
  9484  1C89  1303               	bcf	3,6	;RP1=0, select bank0
  9485  1C8A  07A0               	addwf	Lcd_Write_String@i,f
  9486  1C8B  1803               	skipnc
  9487  1C8C  0AA1               	incf	Lcd_Write_String@i+1,f
  9488  1C8D  3000               	movlw	0
  9489  1C8E  07A1               	addwf	Lcd_Write_String@i+1,f
  9490  1C8F                     l3015:
  9491  1C8F  0820               	movf	Lcd_Write_String@i,w
  9492  1C90  0777               	addwf	Lcd_Write_String@a,w
  9493  1C91  00FA               	movwf	??_Lcd_Write_String+1
  9494  1C92  0878               	movf	Lcd_Write_String@a+1,w
  9495  1C93  00F9               	movwf	??_Lcd_Write_String
  9496  1C94  1803               	skipnc
  9497  1C95  0AF9               	incf	??_Lcd_Write_String,f
  9498  1C96  1FA0               	btfss	Lcd_Write_String@i,7
  9499  1C97  2C99               	goto	u5070
  9500  1C98  03F9               	decf	??_Lcd_Write_String,f
  9501  1C99                     u5070:
  9502  1C99  0879               	movf	??_Lcd_Write_String,w
  9503  1C9A  00FB               	movwf	??_Lcd_Write_String+2
  9504  1C9B  087B               	movf	??_Lcd_Write_String+2,w
  9505  1C9C  1283               	bcf	3,5	;RP0=0, select bank0
  9506  1C9D  1303               	bcf	3,6	;RP1=0, select bank0
  9507  1C9E  00FF               	movwf	btemp+1
  9508  1C9F  087A               	movf	??_Lcd_Write_String+1,w
  9509  1CA0  0084               	movwf	4
  9510  1CA1  160A  118A  2000  160A  158A  	fcall	stringtab
  9511  1CA6  3A00               	xorlw	0
  9512  1CA7  1D03               	skipz
  9513  1CA8  2CAA               	goto	u5081
  9514  1CA9  2CAB               	goto	u5080
  9515  1CAA                     u5081:
  9516  1CAA  2C6B               	goto	l3011
  9517  1CAB                     u5080:
  9518  1CAB                     l81:
  9519  1CAB  0008               	return
  9520  1CAC                     __end_of_Lcd_Write_String:
  9521                           
  9522                           	psect	text25
  9523  1C2D                     __ptext25:	
  9524 ;; *************** function _Lcd_Write_Char *****************
  9525 ;; Defined at:
  9526 ;;		line 79 in file "./lcd.h"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  a               1    wreg     unsigned char 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  a               1    6[COMMON] unsigned char 
  9531 ;;  y               1    5[COMMON] unsigned char 
  9532 ;;  temp            1    4[COMMON] unsigned char 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, status,2, status,0, pclath, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9542 ;;      Params:         0       0       0       0       0
  9543 ;;      Locals:         3       0       0       0       0
  9544 ;;      Temps:          1       0       0       0       0
  9545 ;;      Totals:         4       0       0       0       0
  9546 ;;Total ram usage:        4 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:    2
  9549 ;; This function calls:
  9550 ;;		_Lcd_Port
  9551 ;; This function is called by:
  9552 ;;		_Lcd_Write_String
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           
  9557                           ;psect for function _Lcd_Write_Char
  9558  1C2D                     _Lcd_Write_Char:
  9559                           
  9560                           ;incstack = 0
  9561                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9562                           ;Lcd_Write_Char@a stored from wreg
  9563  1C2D  00F6               	movwf	Lcd_Write_Char@a
  9564  1C2E                     l2599:
  9565                           
  9566                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  9567  1C2E  0876               	movf	Lcd_Write_Char@a,w
  9568  1C2F  390F               	andlw	15
  9569  1C30  00F3               	movwf	??_Lcd_Write_Char
  9570  1C31  0873               	movf	??_Lcd_Write_Char,w
  9571  1C32  00F4               	movwf	Lcd_Write_Char@temp
  9572                           
  9573                           ;./lcd.h: 83:    y = a&0xF0;
  9574  1C33  0876               	movf	Lcd_Write_Char@a,w
  9575  1C34  39F0               	andlw	240
  9576  1C35  00F3               	movwf	??_Lcd_Write_Char
  9577  1C36  0873               	movf	??_Lcd_Write_Char,w
  9578  1C37  00F5               	movwf	Lcd_Write_Char@y
  9579  1C38                     l2601:
  9580                           
  9581                           ;./lcd.h: 84:    RD2 = 1;
  9582  1C38  1283               	bcf	3,5	;RP0=0, select bank0
  9583  1C39  1303               	bcf	3,6	;RP1=0, select bank0
  9584  1C3A  1508               	bsf	8,2	;volatile
  9585  1C3B                     l2603:
  9586                           
  9587                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  9588  1C3B  0875               	movf	Lcd_Write_Char@y,w
  9589  1C3C  00F3               	movwf	??_Lcd_Write_Char
  9590  1C3D  3004               	movlw	4
  9591  1C3E                     u3965:
  9592  1C3E  1003               	clrc
  9593  1C3F  0CF3               	rrf	??_Lcd_Write_Char,f
  9594  1C40  3EFF               	addlw	-1
  9595  1C41  1D03               	skipz
  9596  1C42  2C3E               	goto	u3965
  9597  1C43  0873               	movf	??_Lcd_Write_Char,w
  9598  1C44  160A  158A  23BF  160A  158A  	fcall	_Lcd_Port
  9599  1C49                     l2605:
  9600                           
  9601                           ;./lcd.h: 86:    RD3 = 1;
  9602  1C49  1283               	bcf	3,5	;RP0=0, select bank0
  9603  1C4A  1303               	bcf	3,6	;RP1=0, select bank0
  9604  1C4B  1588               	bsf	8,3	;volatile
  9605  1C4C                     l2607:
  9606                           
  9607                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9608  1C4C  301A               	movlw	26
  9609  1C4D  00F3               	movwf	??_Lcd_Write_Char
  9610  1C4E                     u5507:
  9611  1C4E  0BF3               	decfsz	??_Lcd_Write_Char,f
  9612  1C4F  2C4E               	goto	u5507
  9613  1C50  0000               	nop
  9614  1C51                     l2609:
  9615                           
  9616                           ;./lcd.h: 88:    RD3 = 0;
  9617  1C51  1283               	bcf	3,5	;RP0=0, select bank0
  9618  1C52  1303               	bcf	3,6	;RP1=0, select bank0
  9619  1C53  1188               	bcf	8,3	;volatile
  9620  1C54                     l2611:
  9621                           
  9622                           ;./lcd.h: 89:    Lcd_Port(temp);
  9623  1C54  0874               	movf	Lcd_Write_Char@temp,w
  9624  1C55  160A  158A  23BF  160A  158A  	fcall	_Lcd_Port
  9625  1C5A                     l2613:
  9626                           
  9627                           ;./lcd.h: 90:    RD3 = 1;
  9628  1C5A  1283               	bcf	3,5	;RP0=0, select bank0
  9629  1C5B  1303               	bcf	3,6	;RP1=0, select bank0
  9630  1C5C  1588               	bsf	8,3	;volatile
  9631  1C5D                     l2615:
  9632                           
  9633                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9634  1C5D  301A               	movlw	26
  9635  1C5E  00F3               	movwf	??_Lcd_Write_Char
  9636  1C5F                     u5517:
  9637  1C5F  0BF3               	decfsz	??_Lcd_Write_Char,f
  9638  1C60  2C5F               	goto	u5517
  9639  1C61  0000               	nop
  9640  1C62                     l2617:
  9641                           
  9642                           ;./lcd.h: 92:    RD3 = 0;
  9643  1C62  1283               	bcf	3,5	;RP0=0, select bank0
  9644  1C63  1303               	bcf	3,6	;RP1=0, select bank0
  9645  1C64  1188               	bcf	8,3	;volatile
  9646  1C65                     l75:
  9647  1C65  0008               	return
  9648  1C66                     __end_of_Lcd_Write_Char:
  9649                           
  9650                           	psect	text26
  9651  1DE6                     __ptext26:	
  9652 ;; *************** function _Lcd_Set_Cursor *****************
  9653 ;; Defined at:
  9654 ;;		line 39 in file "./lcd.h"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  a               1    wreg     unsigned char 
  9657 ;;  b               1    6[COMMON] unsigned char 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  a               1    0[BANK0 ] unsigned char 
  9660 ;;  temp            1    3[BANK0 ] unsigned char 
  9661 ;;  y               1    2[BANK0 ] unsigned char 
  9662 ;;  z               1    1[BANK0 ] unsigned char 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      void 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2, status,0, pclath, cstack
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9672 ;;      Params:         1       0       0       0       0
  9673 ;;      Locals:         0       4       0       0       0
  9674 ;;      Temps:          2       0       0       0       0
  9675 ;;      Totals:         3       4       0       0       0
  9676 ;;Total ram usage:        7 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:    3
  9679 ;; This function calls:
  9680 ;;		_Lcd_Cmd
  9681 ;; This function is called by:
  9682 ;;		_main
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _Lcd_Set_Cursor
  9688  1DE6                     _Lcd_Set_Cursor:
  9689                           
  9690                           ;incstack = 0
  9691                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9692                           ;Lcd_Set_Cursor@a stored from wreg
  9693  1DE6  1283               	bcf	3,5	;RP0=0, select bank0
  9694  1DE7  1303               	bcf	3,6	;RP1=0, select bank0
  9695  1DE8  00A0               	movwf	Lcd_Set_Cursor@a
  9696  1DE9                     l2979:
  9697                           
  9698                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  9699  1DE9  0320               	decf	Lcd_Set_Cursor@a,w
  9700  1DEA  1D03               	btfss	3,2
  9701  1DEB  2DED               	goto	u5021
  9702  1DEC  2DEE               	goto	u5020
  9703  1DED                     u5021:
  9704  1DED  2E13               	goto	l2989
  9705  1DEE                     u5020:
  9706  1DEE                     l2981:
  9707                           
  9708                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  9709  1DEE  0876               	movf	Lcd_Set_Cursor@b,w
  9710  1DEF  3E7F               	addlw	127
  9711  1DF0  00F7               	movwf	??_Lcd_Set_Cursor
  9712  1DF1  0877               	movf	??_Lcd_Set_Cursor,w
  9713  1DF2  00A3               	movwf	Lcd_Set_Cursor@temp
  9714                           
  9715                           ;./lcd.h: 45:   z = temp>>4;
  9716  1DF3  0823               	movf	Lcd_Set_Cursor@temp,w
  9717  1DF4  00F7               	movwf	??_Lcd_Set_Cursor
  9718  1DF5  3004               	movlw	4
  9719  1DF6                     u5035:
  9720  1DF6  1003               	clrc
  9721  1DF7  0CF7               	rrf	??_Lcd_Set_Cursor,f
  9722  1DF8  3EFF               	addlw	-1
  9723  1DF9  1D03               	skipz
  9724  1DFA  2DF6               	goto	u5035
  9725  1DFB  0877               	movf	??_Lcd_Set_Cursor,w
  9726  1DFC  00F8               	movwf	??_Lcd_Set_Cursor+1
  9727  1DFD  0878               	movf	??_Lcd_Set_Cursor+1,w
  9728  1DFE  00A1               	movwf	Lcd_Set_Cursor@z
  9729  1DFF                     l2983:
  9730                           
  9731                           ;./lcd.h: 46:   y = temp & 0x0F;
  9732  1DFF  0823               	movf	Lcd_Set_Cursor@temp,w
  9733  1E00  390F               	andlw	15
  9734  1E01  00F7               	movwf	??_Lcd_Set_Cursor
  9735  1E02  0877               	movf	??_Lcd_Set_Cursor,w
  9736  1E03  00A2               	movwf	Lcd_Set_Cursor@y
  9737  1E04                     l2985:
  9738                           
  9739                           ;./lcd.h: 47:   Lcd_Cmd(z);
  9740  1E04  0821               	movf	Lcd_Set_Cursor@z,w
  9741  1E05  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9742  1E0A                     l2987:
  9743                           
  9744                           ;./lcd.h: 48:   Lcd_Cmd(y);
  9745  1E0A  1283               	bcf	3,5	;RP0=0, select bank0
  9746  1E0B  1303               	bcf	3,6	;RP1=0, select bank0
  9747  1E0C  0822               	movf	Lcd_Set_Cursor@y,w
  9748  1E0D  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9749                           
  9750                           ;./lcd.h: 49:  }
  9751  1E12  2E3D               	goto	l69
  9752  1E13                     l2989:
  9753  1E13  3002               	movlw	2
  9754  1E14  0620               	xorwf	Lcd_Set_Cursor@a,w
  9755  1E15  1D03               	btfss	3,2
  9756  1E16  2E18               	goto	u5041
  9757  1E17  2E19               	goto	u5040
  9758  1E18                     u5041:
  9759  1E18  2E3D               	goto	l69
  9760  1E19                     u5040:
  9761  1E19                     l2991:
  9762                           
  9763                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  9764  1E19  0876               	movf	Lcd_Set_Cursor@b,w
  9765  1E1A  3EBF               	addlw	191
  9766  1E1B  00F7               	movwf	??_Lcd_Set_Cursor
  9767  1E1C  0877               	movf	??_Lcd_Set_Cursor,w
  9768  1E1D  00A3               	movwf	Lcd_Set_Cursor@temp
  9769                           
  9770                           ;./lcd.h: 53:   z = temp>>4;
  9771  1E1E  0823               	movf	Lcd_Set_Cursor@temp,w
  9772  1E1F  00F7               	movwf	??_Lcd_Set_Cursor
  9773  1E20  3004               	movlw	4
  9774  1E21                     u5055:
  9775  1E21  1003               	clrc
  9776  1E22  0CF7               	rrf	??_Lcd_Set_Cursor,f
  9777  1E23  3EFF               	addlw	-1
  9778  1E24  1D03               	skipz
  9779  1E25  2E21               	goto	u5055
  9780  1E26  0877               	movf	??_Lcd_Set_Cursor,w
  9781  1E27  00F8               	movwf	??_Lcd_Set_Cursor+1
  9782  1E28  0878               	movf	??_Lcd_Set_Cursor+1,w
  9783  1E29  00A1               	movwf	Lcd_Set_Cursor@z
  9784  1E2A                     l2993:
  9785                           
  9786                           ;./lcd.h: 54:   y = temp & 0x0F;
  9787  1E2A  0823               	movf	Lcd_Set_Cursor@temp,w
  9788  1E2B  390F               	andlw	15
  9789  1E2C  00F7               	movwf	??_Lcd_Set_Cursor
  9790  1E2D  0877               	movf	??_Lcd_Set_Cursor,w
  9791  1E2E  00A2               	movwf	Lcd_Set_Cursor@y
  9792  1E2F                     l2995:
  9793                           
  9794                           ;./lcd.h: 55:   Lcd_Cmd(z);
  9795  1E2F  0821               	movf	Lcd_Set_Cursor@z,w
  9796  1E30  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9797  1E35                     l2997:
  9798                           
  9799                           ;./lcd.h: 56:   Lcd_Cmd(y);
  9800  1E35  1283               	bcf	3,5	;RP0=0, select bank0
  9801  1E36  1303               	bcf	3,6	;RP1=0, select bank0
  9802  1E37  0822               	movf	Lcd_Set_Cursor@y,w
  9803  1E38  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9804  1E3D                     l69:
  9805  1E3D  0008               	return
  9806  1E3E                     __end_of_Lcd_Set_Cursor:
  9807                           
  9808                           	psect	text27
  9809  1E97                     __ptext27:	
  9810 ;; *************** function _Lcd_Init *****************
  9811 ;; Defined at:
  9812 ;;		line 60 in file "./lcd.h"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0, pclath, cstack
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9826 ;;      Params:         0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0
  9828 ;;      Temps:          2       0       0       0       0
  9829 ;;      Totals:         2       0       0       0       0
  9830 ;;Total ram usage:        2 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    3
  9833 ;; This function calls:
  9834 ;;		_Lcd_Cmd
  9835 ;;		_Lcd_Port
  9836 ;; This function is called by:
  9837 ;;		_main
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           
  9842                           ;psect for function _Lcd_Init
  9843  1E97                     _Lcd_Init:
  9844  1E97                     l2999:	
  9845                           ;incstack = 0
  9846                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9847                           
  9848                           
  9849                           ;./lcd.h: 62:   Lcd_Port(0x00);
  9850  1E97  3000               	movlw	0
  9851  1E98  160A  158A  23BF  160A  158A  	fcall	_Lcd_Port
  9852  1E9D                     l3001:
  9853                           
  9854                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(8000000/4000.0)));
  9855  1E9D  3034               	movlw	52
  9856  1E9E  00F7               	movwf	??_Lcd_Init+1
  9857  1E9F  30F1               	movlw	241
  9858  1EA0  00F6               	movwf	??_Lcd_Init
  9859  1EA1                     u5527:
  9860  1EA1  0BF6               	decfsz	??_Lcd_Init,f
  9861  1EA2  2EA1               	goto	u5527
  9862  1EA3  0BF7               	decfsz	??_Lcd_Init+1,f
  9863  1EA4  2EA1               	goto	u5527
  9864  1EA5  2EA6               	nop2
  9865  1EA6                     l3003:
  9866                           
  9867                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  9868  1EA6  3003               	movlw	3
  9869  1EA7  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9870                           
  9871                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(8000000/4000.0)));
  9872  1EAC  300D               	movlw	13
  9873  1EAD  00F7               	movwf	??_Lcd_Init+1
  9874  1EAE  30FB               	movlw	251
  9875  1EAF  00F6               	movwf	??_Lcd_Init
  9876  1EB0                     u5537:
  9877  1EB0  0BF6               	decfsz	??_Lcd_Init,f
  9878  1EB1  2EB0               	goto	u5537
  9879  1EB2  0BF7               	decfsz	??_Lcd_Init+1,f
  9880  1EB3  2EB0               	goto	u5537
  9881  1EB4  2EB5               	nop2
  9882  1EB5                     l3005:
  9883                           
  9884                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  9885  1EB5  3003               	movlw	3
  9886  1EB6  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9887  1EBB                     l3007:
  9888                           
  9889                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(8000000/4000.0)));
  9890  1EBB  301D               	movlw	29
  9891  1EBC  00F7               	movwf	??_Lcd_Init+1
  9892  1EBD  3091               	movlw	145
  9893  1EBE  00F6               	movwf	??_Lcd_Init
  9894  1EBF                     u5547:
  9895  1EBF  0BF6               	decfsz	??_Lcd_Init,f
  9896  1EC0  2EBF               	goto	u5547
  9897  1EC1  0BF7               	decfsz	??_Lcd_Init+1,f
  9898  1EC2  2EBF               	goto	u5547
  9899                           
  9900                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  9901  1EC3  3003               	movlw	3
  9902  1EC4  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9903                           
  9904                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  9905  1EC9  3002               	movlw	2
  9906  1ECA  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9907                           
  9908                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  9909  1ECF  3002               	movlw	2
  9910  1ED0  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9911                           
  9912                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  9913  1ED5  3008               	movlw	8
  9914  1ED6  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9915                           
  9916                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  9917  1EDB  3000               	movlw	0
  9918  1EDC  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9919                           
  9920                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  9921  1EE1  300C               	movlw	12
  9922  1EE2  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9923                           
  9924                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  9925  1EE7  3000               	movlw	0
  9926  1EE8  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9927                           
  9928                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  9929  1EED  3006               	movlw	6
  9930  1EEE  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9931  1EF3                     l72:
  9932  1EF3  0008               	return
  9933  1EF4                     __end_of_Lcd_Init:
  9934                           
  9935                           	psect	text28
  9936  1B67                     __ptext28:	
  9937 ;; *************** function _Lcd_Clear *****************
  9938 ;; Defined at:
  9939 ;;		line 33 in file "./lcd.h"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  2   62[None  ] int 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9953 ;;      Params:         0       0       0       0       0
  9954 ;;      Locals:         0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0
  9956 ;;      Totals:         0       0       0       0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    3
  9960 ;; This function calls:
  9961 ;;		_Lcd_Cmd
  9962 ;; This function is called by:
  9963 ;;		_main
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           
  9968                           ;psect for function _Lcd_Clear
  9969  1B67                     _Lcd_Clear:
  9970  1B67                     l2977:	
  9971                           ;incstack = 0
  9972                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9973                           
  9974                           
  9975                           ;./lcd.h: 35:  Lcd_Cmd(0);
  9976  1B67  3000               	movlw	0
  9977  1B68  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9978                           
  9979                           ;./lcd.h: 36:  Lcd_Cmd(1);
  9980  1B6D  3001               	movlw	1
  9981  1B6E  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  9982  1B73                     l63:
  9983  1B73  0008               	return
  9984  1B74                     __end_of_Lcd_Clear:
  9985                           
  9986                           	psect	text29
  9987  10B9                     __ptext29:	
  9988 ;; *************** function _Lcd_Cmd *****************
  9989 ;; Defined at:
  9990 ;;		line 24 in file "./lcd.h"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  a               1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  a               1    5[COMMON] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      void 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0, pclath, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10004 ;;      Params:         0       0       0       0       0
 10005 ;;      Locals:         1       0       0       0       0
 10006 ;;      Temps:          2       0       0       0       0
 10007 ;;      Totals:         3       0       0       0       0
 10008 ;;Total ram usage:        3 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    2
 10011 ;; This function calls:
 10012 ;;		_Lcd_Port
 10013 ;; This function is called by:
 10014 ;;		_Lcd_Clear
 10015 ;;		_Lcd_Set_Cursor
 10016 ;;		_Lcd_Init
 10017 ;;		_Lcd_Shift_Right
 10018 ;;		_Lcd_Shift_Left
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           
 10023                           ;psect for function _Lcd_Cmd
 10024  10B9                     _Lcd_Cmd:
 10025                           
 10026                           ;incstack = 0
 10027                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10028                           ;Lcd_Cmd@a stored from wreg
 10029  10B9  00F5               	movwf	Lcd_Cmd@a
 10030  10BA                     l2589:
 10031                           
 10032                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD2 = 0;
 10033  10BA  1283               	bcf	3,5	;RP0=0, select bank0
 10034  10BB  1303               	bcf	3,6	;RP1=0, select bank0
 10035  10BC  1108               	bcf	8,2	;volatile
 10036  10BD                     l2591:
 10037                           
 10038                           ;./lcd.h: 27:  Lcd_Port(a);
 10039  10BD  0875               	movf	Lcd_Cmd@a,w
 10040  10BE  160A  158A  23BF  160A  118A  	fcall	_Lcd_Port
 10041  10C3                     l2593:
 10042                           
 10043                           ;./lcd.h: 28:  RD3 = 1;
 10044  10C3  1283               	bcf	3,5	;RP0=0, select bank0
 10045  10C4  1303               	bcf	3,6	;RP1=0, select bank0
 10046  10C5  1588               	bsf	8,3	;volatile
 10047  10C6                     l2595:
 10048                           
 10049                           ;./lcd.h: 29:         _delay((unsigned long)((4)*(8000000/4000.0)));
 10050  10C6  300B               	movlw	11
 10051  10C7  00F4               	movwf	??_Lcd_Cmd+1
 10052  10C8  3062               	movlw	98
 10053  10C9  00F3               	movwf	??_Lcd_Cmd
 10054  10CA                     u5557:
 10055  10CA  0BF3               	decfsz	??_Lcd_Cmd,f
 10056  10CB  28CA               	goto	u5557
 10057  10CC  0BF4               	decfsz	??_Lcd_Cmd+1,f
 10058  10CD  28CA               	goto	u5557
 10059  10CE  0000               	nop
 10060  10CF                     l2597:
 10061                           
 10062                           ;./lcd.h: 30:         RD3 = 0;
 10063  10CF  1283               	bcf	3,5	;RP0=0, select bank0
 10064  10D0  1303               	bcf	3,6	;RP1=0, select bank0
 10065  10D1  1188               	bcf	8,3	;volatile
 10066  10D2                     l60:
 10067  10D2  0008               	return
 10068  10D3                     __end_of_Lcd_Cmd:
 10069                           
 10070                           	psect	text30
 10071  1BBF                     __ptext30:	
 10072 ;; *************** function _Lcd_Port *****************
 10073 ;; Defined at:
 10074 ;;		line 2 in file "./lcd.h"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  a               1    wreg     unsigned char 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  a               1    2[COMMON] unsigned char 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		wreg
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10088 ;;      Params:         0       0       0       0       0
 10089 ;;      Locals:         1       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0
 10091 ;;      Totals:         1       0       0       0       0
 10092 ;;Total ram usage:        1 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; Hardware stack levels required when called:    1
 10095 ;; This function calls:
 10096 ;;		Nothing
 10097 ;; This function is called by:
 10098 ;;		_Lcd_Cmd
 10099 ;;		_Lcd_Init
 10100 ;;		_Lcd_Write_Char
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _Lcd_Port
 10106  1BBF                     _Lcd_Port:
 10107                           
 10108                           ;incstack = 0
 10109                           ; Regs used in _Lcd_Port: [wreg]
 10110                           ;Lcd_Port@a stored from wreg
 10111  1BBF  00F2               	movwf	Lcd_Port@a
 10112  1BC0                     l2115:
 10113                           
 10114                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
 10115  1BC0  1C72               	btfss	Lcd_Port@a,0
 10116  1BC1  2BC3               	goto	u2771
 10117  1BC2  2BC4               	goto	u2770
 10118  1BC3                     u2771:
 10119  1BC3  2BC8               	goto	l49
 10120  1BC4                     u2770:
 10121  1BC4                     l2117:
 10122                           
 10123                           ;./lcd.h: 5:   RD4 = 1;
 10124  1BC4  1283               	bcf	3,5	;RP0=0, select bank0
 10125  1BC5  1303               	bcf	3,6	;RP1=0, select bank0
 10126  1BC6  1608               	bsf	8,4	;volatile
 10127  1BC7  2BCB               	goto	l50
 10128  1BC8                     l49:	
 10129                           ;./lcd.h: 6:  else
 10130                           
 10131                           
 10132                           ;./lcd.h: 7:   RD4 = 0;
 10133  1BC8  1283               	bcf	3,5	;RP0=0, select bank0
 10134  1BC9  1303               	bcf	3,6	;RP1=0, select bank0
 10135  1BCA  1208               	bcf	8,4	;volatile
 10136  1BCB                     l50:
 10137                           
 10138                           ;./lcd.h: 9:  if(a & 2)
 10139  1BCB  1CF2               	btfss	Lcd_Port@a,1
 10140  1BCC  2BCE               	goto	u2781
 10141  1BCD  2BCF               	goto	u2780
 10142  1BCE                     u2781:
 10143  1BCE  2BD1               	goto	l51
 10144  1BCF                     u2780:
 10145  1BCF                     l2119:
 10146                           
 10147                           ;./lcd.h: 10:   RD5 = 1;
 10148  1BCF  1688               	bsf	8,5	;volatile
 10149  1BD0  2BD2               	goto	l52
 10150  1BD1                     l51:	
 10151                           ;./lcd.h: 11:  else
 10152                           
 10153                           
 10154                           ;./lcd.h: 12:   RD5 = 0;
 10155  1BD1  1288               	bcf	8,5	;volatile
 10156  1BD2                     l52:
 10157                           
 10158                           ;./lcd.h: 14:  if(a & 4)
 10159  1BD2  1D72               	btfss	Lcd_Port@a,2
 10160  1BD3  2BD5               	goto	u2791
 10161  1BD4  2BD6               	goto	u2790
 10162  1BD5                     u2791:
 10163  1BD5  2BD8               	goto	l53
 10164  1BD6                     u2790:
 10165  1BD6                     l2121:
 10166                           
 10167                           ;./lcd.h: 15:   RD6 = 1;
 10168  1BD6  1708               	bsf	8,6	;volatile
 10169  1BD7  2BD9               	goto	l54
 10170  1BD8                     l53:	
 10171                           ;./lcd.h: 16:  else
 10172                           
 10173                           
 10174                           ;./lcd.h: 17:   RD6 = 0;
 10175  1BD8  1308               	bcf	8,6	;volatile
 10176  1BD9                     l54:
 10177                           
 10178                           ;./lcd.h: 19:  if(a & 8)
 10179  1BD9  1DF2               	btfss	Lcd_Port@a,3
 10180  1BDA  2BDC               	goto	u2801
 10181  1BDB  2BDD               	goto	u2800
 10182  1BDC                     u2801:
 10183  1BDC  2BDF               	goto	l55
 10184  1BDD                     u2800:
 10185  1BDD                     l2123:
 10186                           
 10187                           ;./lcd.h: 20:   RD7 = 1;
 10188  1BDD  1788               	bsf	8,7	;volatile
 10189  1BDE  2BE0               	goto	l57
 10190  1BDF                     l55:	
 10191                           ;./lcd.h: 21:  else
 10192                           
 10193                           
 10194                           ;./lcd.h: 22:   RD7 = 0;
 10195  1BDF  1388               	bcf	8,7	;volatile
 10196  1BE0                     l57:
 10197  1BE0  0008               	return
 10198  1BE1                     __end_of_Lcd_Port:
 10199                           
 10200                           	psect	text31
 10201  1BAA                     __ptext31:	
 10202 ;; *************** function _ADCinit *****************
 10203 ;; Defined at:
 10204 ;;		line 81 in file "main.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		None
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10218 ;;      Params:         0       0       0       0       0
 10219 ;;      Locals:         0       0       0       0       0
 10220 ;;      Temps:          0       0       0       0       0
 10221 ;;      Totals:         0       0       0       0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    1
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_main
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _ADCinit
 10234  1BAA                     _ADCinit:
 10235  1BAA                     l3017:	
 10236                           ;incstack = 0
 10237                           ; Regs used in _ADCinit: []
 10238                           
 10239                           
 10240                           ;main.c: 84:     }
 10241  1BAA  1683               	bsf	3,5	;RP0=1, select bank1
 10242  1BAB  1303               	bcf	3,6	;RP1=0, select bank1
 10243  1BAC  131F               	bcf	31,6	;volatile
 10244  1BAD  1283               	bcf	3,5	;RP0=0, select bank0
 10245  1BAE  1303               	bcf	3,6	;RP1=0, select bank0
 10246  1BAF  139F               	bcf	31,7	;volatile
 10247  1BB0  171F               	bsf	31,6	;volatile
 10248  1BB1  129F               	bcf	31,5	;volatile
 10249  1BB2  121F               	bcf	31,4	;volatile
 10250  1BB3  119F               	bcf	31,3	;volatile
 10251  1BB4  1683               	bsf	3,5	;RP0=1, select bank1
 10252  1BB5  1303               	bcf	3,6	;RP1=0, select bank1
 10253  1BB6  179F               	bsf	31,7	;volatile
 10254  1BB7  159F               	bsf	31,3	;volatile
 10255  1BB8  151F               	bsf	31,2	;volatile
 10256  1BB9  149F               	bsf	31,1	;volatile
 10257  1BBA  101F               	bcf	31,0	;volatile
 10258  1BBB  1283               	bcf	3,5	;RP0=0, select bank0
 10259  1BBC  1303               	bcf	3,6	;RP1=0, select bank0
 10260  1BBD  141F               	bsf	31,0	;volatile
 10261  1BBE                     l107:
 10262  1BBE  0008               	return
 10263  1BBF                     __end_of_ADCinit:
 10264                           
 10265                           	psect	text32
 10266  1B74                     __ptext32:	
 10267 ;; *************** function _ISR *****************
 10268 ;; Defined at:
 10269 ;;		line 104 in file "main.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		wreg
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10283 ;;      Params:         0       0       0       0       0
 10284 ;;      Locals:         0       0       0       0       0
 10285 ;;      Temps:          2       0       0       0       0
 10286 ;;      Totals:         2       0       0       0       0
 10287 ;;Total ram usage:        2 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		Interrupt level 1
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           
 10297                           ;psect for function _ISR
 10298  1B74                     _ISR:
 10299  1B74                     i1l3287:
 10300  1B74  1C8B               	btfss	11,1	;volatile
 10301  1B75  2B77               	goto	u546_21
 10302  1B76  2B78               	goto	u546_20
 10303  1B77                     u546_21:
 10304  1B77  2B7F               	goto	i1l119
 10305  1B78                     u546_20:
 10306  1B78                     i1l3289:
 10307  1B78  3001               	movlw	1
 10308  1B79  1683               	bsf	3,5	;RP0=1, select bank1
 10309  1B7A  1303               	bcf	3,6	;RP1=0, select bank1
 10310  1B7B  00E7               	movwf	_ZC^(0+128)
 10311  1B7C  3000               	movlw	0
 10312  1B7D  00E8               	movwf	(_ZC^(0+128)+1)
 10313  1B7E                     i1l3291:
 10314  1B7E  108B               	bcf	11,1	;volatile
 10315  1B7F                     i1l119:
 10316  1B7F  0871               	movf	??_ISR+1,w
 10317  1B80  008A               	movwf	10
 10318  1B81  0E70               	swapf	??_ISR,w
 10319  1B82  0083               	movwf	3
 10320  1B83  0EFE               	swapf	btemp,f
 10321  1B84  0E7E               	swapf	btemp,w
 10322  1B85  0009               	retfie
 10323  1B86                     __end_of_ISR:
 10324  007E                     btemp	set	126	;btemp
 10325  007E                     wtemp0	set	126
 10326                           
 10327                           	psect	intentry
 10328  0004                     __pintentry:	
 10329                           ;incstack = 0
 10330                           ; Regs used in _ISR: [wreg]
 10331                           
 10332  0004                     interrupt_function:
 10333  007E                     saved_w	set	btemp
 10334  0004  00FE               	movwf	btemp
 10335  0005  0E03               	swapf	3,w
 10336  0006  00F0               	movwf	??_ISR
 10337  0007  080A               	movf	10,w
 10338  0008  00F1               	movwf	??_ISR+1
 10339  0009  160A  158A  2B74   	ljmp	_ISR
 10340                           
 10341                           	psect	config
 10342                           
 10343                           ;Config register CONFIG @ 0x2007
 10344                           ;	Oscillator Selection bits
 10345                           ;	FOSC = HS, HS oscillator
 10346                           ;	Watchdog Timer Enable bit
 10347                           ;	WDTE = OFF, WDT disabled
 10348                           ;	Power-up Timer Enable bit
 10349                           ;	PWRTE = OFF, PWRT disabled
 10350                           ;	Brown-out Reset Enable bit
 10351                           ;	BOREN = ON, BOR enabled
 10352                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10353                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10354                           ;	Data EEPROM Memory Code Protection bit
 10355                           ;	CPD = OFF, Data EEPROM code protection off
 10356                           ;	Flash Program Memory Write Enable bits
 10357                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10358                           ;	In-Circuit Debugger Mode bit
 10359                           ;	DEBUG = 0x1, unprogrammed default
 10360                           ;	Flash Program Memory Code Protection bit
 10361                           ;	CP = OFF, Code protection off
 10362  2007                     	org	8199
 10363  2007  3F7A               	dw	16250

Data Sizes:
    Strings     19
    Constant    144
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     80      80
    BANK1            80     71      77
    BANK3            96      0       4
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[2]), STR_2(CODE[2]), main@str(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->___lwdiv
    _sprintf->___llmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___xxtofl->___lwdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   39004
                                             47 BANK1     24    24      0
                            _ADCinit
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _ReadADC
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31258
                                             12 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             44 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             44 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             18 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              4 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              2 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             63 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              4 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             64 BANK0     16     8      8
                                              0 BANK1      4     4      0
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2      24
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     496
                                              7 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     456
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ReadADC
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
   ___lwdiv
     ___lwmod (ARG)
   ___xxtofl
     ___lwdiv (ARG)
       ___lwmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
         ___lwmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AD       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     47      4D       7       96.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       4       9        4.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AD      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 18 09:48:28 2021

                        pc 0002                         l50 1BCB                         l51 1BD1  
                       l52 1BD2                         l60 10D2                         l53 1BD8  
                       l54 1BD9                         l55 1BDF                         l63 1B73  
                       l72 1EF3                         l57 1BE0                         l49 1BC8  
                       l81 1CAB                         l75 1C65                         l69 1E3D  
                       _ZC 00E7               ___awdiv@sign 0025                         fsr 0004  
      ___wmul@multiplicand 0074        __Umul8_16@word_mpld 0078                        l110 1B89  
                      l113 1B97                        l107 1BBE                        l300 1C05  
                      l221 14BF                        l228 0FFF                        l501 087D  
                      l334 1F5B                        l511 087D                        l247 0092  
                      l280 04D8                        l273 0494                        l515 12B4  
                      l451 113B                        l508 0868                        l516 1226  
                      l604 1CF1                        l526 12A7                        l614 07F7  
                      l294 0686                        l631 1609                        l519 1277  
                      l472 08FE                        l464 1E96                        l288 063F  
                      l625 1545                        l721 0C9C                        l650 174C  
                      l554 1DE5                        l298 1BED                        l484 1D10  
                      l492 1FE6                        l468 093B                        l740 1C1A  
                      l485 1D2C                        l493 1FFF                        l629 163D  
                      l469 08A0                        l733 0C90                        l486 1D41  
                      l646 171F                        l638 17FF                        l742 1C2C  
                      l671 1D91                        l479 092E                        l727 0C08  
                      l656 1775                        l489 1F7A                        l497 1B66  
                      l667 17EB                        l659 17BF                        l771 11A5  
                      l668 17FF                        l765 1160                        l767 11F7  
                      l785 1BA9                        l778 11C1                        l779 11CD  
                      _GIE 005F                        _RD0 0040                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        _ISR 1B74  
                      fsr0 0004                        indf 0000               ___awmod@sign 0078  
          __end_of_ADCinit 1BBF               ___flmul@aexp 0044                _sprintf$900 00B6  
             ___flmul@bexp 0045               ___flmul@sign 003F               ___flmul@temp 004A  
             ___flmul@prod 0046                       ?_ISR 0070               ___fltol@exp1 0069  
                     l2101 1C07                       l2111 1C28                       l2103 1C09  
                     l2121 1BD6                       l3001 1E9D                       l2105 1C10  
                     l2201 1E8D                       l2123 1BDD                       l2115 1BC0  
                     l3003 1EA6                       l3011 1C6B                       l2107 1C14  
                     l2211 1CB6                       l2131 10DF                       l2203 1E92  
                     l2117 1BC4                       l3005 1EB5                       l3013 1C87  
                     l3021 1B86                       l2301 1551                       l2109 1C23  
                     l2221 1CD9                       l2213 1CB9                       l2141 10F0  
                     l2133 10E1                       l2125 10D3                       l3101 0206  
                     l2119 1BCF                       l3007 1EBB                       l3015 1C8F  
                     l3023 1B8D                       l2311 1579                       l2303 1559  
                     l2223 1CDF                       l2215 1CC0                       l2207 1CAC  
                     l2151 1108                       l2143 10F6                       l2135 10E5  
                     l2127 10D6                       l3111 028E                       l3103 0221  
                     l3031 002F                       l3017 1BAA                       l3009 1C66  
                     l2401 1752                       l2321 159B                       l2313 157F  
                     l2305 1561                       l2225 1CE0                       l2217 1CC4  
                     l2209 1CB0                       l2241 07D2                       l2233 07BE  
                     l2153 1119                       l2145 10F9                       l2161 112D  
                     l2137 10EA                       l2129 10DA                       l3201 0624  
                     l3121 0303                       l3113 02A9                       l3105 0229  
                     l3041 004A                       l3033 0036                       l3019 1B86  
                     l2403 1755                       l2411 1763                       l2331 15BB  
                     l2323 15A1                       l2315 1587                       l2307 1569  
                     l2227 1CE7                       l2219 1CC8                       l2243 07D6  
                     l2235 07C4                       l2251 07F3                       l2163 1132  
                     l2155 111F                       l2147 1100                       l2139 10EE  
                     l2171 1E3F                       l3211 064B                       l3123 030B  
                     l3115 02D0                       l3131 0351                       l3107 0238  
                     l3203 062B                       l3051 007D                       l3043 004E  
                     l3035 003B                       l3027 0024                       l2421 177C  
                     l2413 1766                       l2405 1757                       l2341 161A  
                     l2325 15A7                       l2317 158D                       l2309 1571  
                     l2333 15C3                       l2261 14D9                       l2501 09FF  
                     l2229 1CED                       l2245 07E0                       l2237 07C7  
                     l2165 1137                       l2157 1120                       l2149 1104  
                     l2181 1E53                       l2173 1E43                       l3213 065A  
                     l3205 0631                       l3133 0386                       l3125 0329  
                     l3117 02DF                       l3109 027F                       l3061 00B0  
                     l3045 0051                       l3053 008E                       l3037 003D  
                     l3029 0029                       l3221 0670                       l2431 17C6  
                     l2423 1783                       l2415 176A                       l2407 175C  
                     l2343 161C                       l2351 1635                       l2335 15C6  
                     l2327 15AF                       l2319 1593                       l2271 14F4  
                     l2263 14DC                       l2255 14C0                       l2511 0A7C  
                     l2503 0A2B                       l2247 07E6                       l2239 07CE  
                     l2159 1127                       l2191 1E6B                       l2183 1E59  
                     l2175 1E48                       l3215 065A                       l3207 0639  
                     l3151 0422                       l3143 03D5                       l3135 03D1  
                     l3119 02FA                       l3071 00D6                       l3063 00BC  
                     l3223 0682                       l3055 0090                       l3047 0066  
                     l3039 0049                       l2601 1C38                       l2441 17E1  
                     l2433 17CB                       l2425 1793                       l2417 1770  
                     l2409 175E                       l2361 166A                       l2353 1641  
                     l2345 1622                       l2337 15E3                       l2329 15B5  
                     l2281 150E                       l2265 14E3                       l2273 14F6  
                     l2257 14C9                       l2521 0AFC                       l2513 0A99  
                     l2505 0A47                       l2249 07ED                       l2193 1E75  
                     l2185 1E5C                       l2177 1E4A                       l2169 1E3E  
                     l3217 0668                       l3209 064A                       l3161 049C  
                     l3153 0429                       l3137 03D3                       l3129 0348  
                     l3081 0129                       l3073 00EF                       l3065 00C0  
                     l3049 0079                       l3241 068F                       l2611 1C54  
                     l2603 1C3B                       l2443 17E5                       l2435 17D5  
                     l2427 1797                       l2371 1689                       l2363 166E  
                     l2355 1646                       l2347 1625                       l2339 160D  
                     l2291 152D                       l2283 1518                       l2275 1500  
                     l2267 14E8                       l2259 14D3                       l2531 0BB4  
                     l2523 0B29                       l2515 0AA9                       l2507 0A63  
                     l2451 0943                       l2195 1E7B                       l2187 1E63  
                     l2179 1E4E                       l3171 04CB                       l3163 04A5  
                     l3155 042E                       l3147 040C                       l3091 0174  
                     l3083 0134                       l3075 0108                       l3067 00C4  
                     l3323 00A8                       l3059 0094                       l3251 069C  
                     l3243 0690                       l2613 1C5A                       l2605 1C49  
                     l2445 17F6                       l2437 17DC                       l2429 17B7  
                     l2381 16F3                       l2373 168C                       l2365 1674  
                     l2349 162F                       l2293 1537                       l2285 151E  
                     l2277 1507                       l2269 14F2                       l2701 1227  
                     l2541 0BD9                       l2533 0BBD                       l2525 0B39  
                     l2517 0AC6                       l2509 0A6C                       l2461 0958  
                     l2453 0949                       l2621 12BE                       l2197 1E82  
                     l2189 1E67                       l3181 04F1                       l3173 04D2  
                     l3165 04A9                       l3157 0469                       l3149 0416  
                     l3093 017A                       l3085 013A                       l3077 010C  
                     l3069 00D2                       l3261 06B4                       l3253 069D  
                     l3245 0695                       l3237 0687                       l2615 1C5D  
                     l2607 1C4C                       l2447 17FC                       l2439 17DD  
                     l2391 172F                       l2383 16FB                       l2375 1696  
                     l2367 1681                       l2359 1651                       l2295 1539  
                     l2287 1521                       l2279 150D                       l2711 1250  
                     l2703 122D                       l2551 0BF1                       l2543 0BE2  
                     l2535 0BCB                       l2527 0B66                       l2519 0ADF  
                     l2471 0975                       l2463 0960                       l2455 094D  
                     l2199 1E88                       l3191 05D0                       l3183 050F  
                     l3175 04E1                       l3167 04AF                       l3159 0488  
                     l3095 0199                       l3087 014D                       l3079 0110  
                     l3271 0717                       l3263 06C1                       l3255 06A0  
                     l3247 0698                       l3239 068C                       l2617 1C62  
                     l2609 1C51                       l2385 1700                       l2369 1683  
                     l2377 169D                       l2289 1528                       l2297 153B  
                     l2801 1BFB                       l2721 127B                       l2713 125E  
                     l2705 123C                       l2561 0C20                       l2553 0C05  
                     l2537 0BD4                       l2545 0BE8                       l2529 0B8C  
                     l2481 098C                       l2473 0979                       l2465 0962  
                     l2457 094E                       l2449 093C                       l2633 147C  
                     l2641 0CA6                       l3185 056A                       l3193 060B  
                     l3177 04E6                       l3169 04BC                       l3097 01E4  
                     l3089 0170                       l3281 079A                       l3273 0760  
                     l3265 06C4                       l3257 06A1                       l3249 0699  
                     l2395 173A                       l2379 16B5                       l2387 1711  
                     l2299 154D                       l2811 1F09                       l2803 1C01  
                     l2715 1268                       l2707 123E                       l2571 0C5B  
                     l2563 0C24                       l2547 0BEC                       l2539 0BD8  
                     l2483 098E                       l2475 097A                       l2467 096A  
                     l2459 0953                       l2627 13CB                       l2619 12B8  
                     l2651 0D9E                       l2643 0CAD                       l3195 0613  
                     l3187 05A5                       l3179 04ED                       l3099 01FD  
                     l3283 07A3                       l3275 0784                       l3259 06A9  
                     l3267 06C8                       l2397 1743                       l2389 1728  
                     l2901 085D                       l2821 1F43                       l2813 1F16  
                     l2741 087E                       l2717 1269                       l2709 1247  
                     l2581 0C88                       l2573 0C6A                       l2565 0C3D  
                     l2557 0C0D                       l2549 0BED                       l2493 09A9  
                     l2485 0996                       l2477 097F                       l2469 096F  
                     l2629 13D1                       l2661 0E5A                       l2637 0CA0  
                     l3197 061A                       l3189 05C4                       l3285 07AC  
                     l3277 0789                       l3269 06D3                       l2591 10BD  
                     l2831 1CF2                       l2399 1749                       l2903 086D  
                     l2823 1F44                       l2815 1F1A                       l2807 1EF4  
                     l2911 1D9D                       l2743 088B                       l2735 129C  
                     l2727 1283                       l2719 1271                       l2583 0C89  
                     l2575 0C74                       l2559 0C12                       l2567 0C43  
                     l2495 09B9                       l2487 099B                       l2479 0984  
                     l2655 0E26                       l2639 0CA4                       l3199 061E  
                     l3279 0791                       l2593 10C3                       l2833 1D08  
                     l2905 0872                       l2825 1F4D                       l2817 1F23  
                     l2809 1F06                       l2921 1DD7                       l2913 1DAA  
                     l2761 08C5                       l2753 08A1                       l2737 12AC  
                     l2729 1295                       l2585 0C94                       l2577 0C76  
                     l2569 0C50                       l2497 09C6                       l2489 09A0  
                     l2681 1BA0                       l2673 0FD3                       l2649 0D97  
                     l2595 10C6                       l2835 1D24                       l2851 1F9A  
                     l2843 1F5C                       l2819 1F35                       l2827 1F53  
                     l2915 1DAE                       l2923 1DDD                       l2907 1D92  
                     l2771 08F8                       l2763 08CE                       l2755 08A9  
                     l2747 0894                       l2691 120B                       l2579 0C84  
                     l2499 09E3                       l2683 1BA6                       l2667 0F44  
                     l2659 0E53                       l2597 10CF                       l2589 10BA  
                     l2837 1D3E                       l2853 1FBE                       l2845 1F72  
                     l2917 1DC0                       l2909 1D9A                       l2941 1168  
                     l2933 113F                       l2773 0902                       l2781 091C  
                     l2765 08E0                       l2757 08BA                       l2685 1BA8  
                     l2677 1B99                       l2669 0F4B                       l2599 1C2E  
                     l2839 1D40                       l2855 1FC2                       l2847 1F8E  
                     l2863 1B5C                       l2927 1D42                       l2871 0802  
                     l2919 1DCE                       l2951 118A                       l2935 1144  
                     l2767 08EE                       l2759 08BC                       l2695 1214  
                     l2679 1B9A                       l2857 1FFC                       l2849 1F96  
                     l2865 1B64                       l2929 1D46                       l2881 082E  
                     l2873 080F                       l2793 1BE1                       l2961 11BB  
                     l2953 118E                       l2945 1171                       l2937 1148  
                     l2769 08EF                       l2689 11F8                       l2859 1FFE  
                     l2867 1B66                       l2883 0836                       l2795 1BE3  
                     l2971 11EE                       l2963 11C5                       l2955 119C  
                     l2947 1176                       l2939 1158                       l2787 0923  
                     l2779 090A                       l2981 1DEE                       l2893 0844  
                     l2885 0838                       l2877 0818                       l2797 1BE7  
                     l2973 11EF                       l2965 11CF                       l2957 11AC  
                     l2949 1183                       l2789 0933                       l2991 1E19  
                     l2983 1DFF                       l2887 083C                       l2895 0856  
                     l2879 082D                       l2799 1BF4                       l2967 11E5  
                     l2959 11B7                       l2977 1B67                       l2993 1E2A  
                     l2985 1E04                       l2969 11EA                       l2995 1E2F  
                     l2987 1E0A                       l2979 1DE9                       l2997 1E35  
                     l2989 1E13                       l2999 1E97                       STR_1 10A0  
                     STR_2 10AF                       STR_3 10B1                       u3000 1CB6  
                     u3001 1CB5                       u3020 1CC8                       u3100 07E0  
                     u3021 1CC7                       u3101 07DF                       u3015 1CBA  
                     u3200 154D                       u3040 1CD9                       u3120 07F3  
                     u3201 154C                       u3041 1CD8                       u3121 07F2  
                     u3105 07DC                       u3210 1551                       u3130 14D9  
                     u4010 13D1                       u3211 1550                       u3131 14D8  
                     u3035 1CC9                       u3115 07E7                       u4011 13D0  
                     u3300 1646                       u3220 15E3                       u3140 14E3  
                     u3060 1CED                       u4100 0D9E                       u3301 1645  
                     u3221 15E2                       u3141 14E2                       u3061 1CEC  
                     u3045 1CD5                       u4005 138A                       u4101 0D9D  
                     u3230 15EE                       u3150 14E8                       u3070 07C4  
                     u3311 165C                       u3231 15EC                       u3151 14E7  
                     u3055 1CE1                       u3071 07C3                       u3400 1728  
                     u3320 166E                       u3312 1663                       u3240 15EF  
                     u3160 150D                       u5000 11EA                       u3401 1727  
                     u3321 166D                       u3313 166A                       u3225 15DF  
                     u3161 150C                       u5001 11E9                       u4025 13EE  
                     u3410 172F                       u3330 1674                       u3250 160D  
                     u3170 151E                       u5010 11EE                       u3090 07D6  
                     u4050 0CA4                       u3411 172E                       u3331 1673  
                     u3251 160C                       u3171 151D                       u5011 11ED  
                     u3091 07D5                       u4035 143B                       u4115 0DB1  
                     u4051 0CA3                       u5020 1DEE                       u3500 1783  
                     u3340 1689                       u3260 1622                       u3180 1528  
                     u4300 127B                       u4220 1BA0                       u4140 0E5A  
                     u4060 0CAD                       u5100 002F                       u5021 1DED  
                     u3501 1782                       u3341 1688                       u3261 1621  
                     u3181 1527                       u4301 127A                       u3085 07C8  
                     u4045 1487                       u4221 1B9F                       u4205 0F9A  
                     u4141 0E59                       u4125 0DED                       u4061 0CAC  
                     u5101 002E                       u3510 1797                       u3430 1749  
                     u3190 152D                       u4310 1282                       u4230 1BA6  
                     u5110 0049                       u3511 1796                       u3431 1748  
                     u3191 152C                       u4311 1281                       u4231 1BA5  
                     u4215 0FD6                       u4135 0E29                       u5111 0048  
                     u2800 1BDD                       u5040 1E19                       u3520 17A6  
                     u3440 1752                       u3360 16B5                       u3280 163D  
                     u4400 08E0                       u4240 120B                       u3600 0953  
                     u5200 0238                       u5120 008D                       u2801 1BDC  
                     u5041 1E18                       u3441 1751                       u3425 173C  
                     u3361 16B4                       u3281 163C                       u4401 08DF  
                     u4241 120A                       u3601 0952                       u5201 0237  
                     u5121 008C                       u3530 17B7                       u3450 175C  
                     u3290 1641                       u4330 1294                       u4250 1225  
                     u3610 0958                       u2810 10DA                       u5210 028E  
                     u5130 00BC                       u5035 1DF6                       u3531 17B6  
                     u3451 175B                       u3371 16CC                       u3363 16B1  
                     u3355 168F                       u3291 1640                       u3275 1628  
                     u4331 1293                       u4251 1224                       u3611 0957  
                     u2811 10D9                       u4155 0E7C                       u4075 0CCF  
                     u5211 028D                       u5131 00BB                       u5060 1C75  
                     u3540 17C6                       u3460 1763                       u3380 16E0  
                     u3372 16CD                       u4500 1BE7                       u4420 08FE  
                     u4340 129B                       u2740 1C14                       u3620 0979  
                     u2900 1132                       u2820 10E5                       u4180 0F4B  
                     u5220 02A9                       u5140 00C0                       u3541 17C5  
                     u3525 17A1                       u3461 1762                       u3381 16E1  
                     u3373 16D2                       u4501 1BE6                       u4421 08FD  
                     u4405 08DC                       u4341 129A                       u4325 1284  
                     u2741 1C13                       u3701 0A55                       u3621 0978  
                     u2901 1131                       u2821 10E4                       u4181 0F4A  
                     u4165 0EB8                       u4085 0D0B                       u5221 02A8  
                     u5205 0234                       u5141 00BF                       u5070 1C99  
                     u3550 17CB                       u3470 176A                       u3390 1700  
                     u3382 16E6                       u3374 16D3                       u4430 0902  
                     u4270 125E                       u3702 0A5C                       u3630 097F  
                     u2830 10F6                       u2910 1E43                       u5310 049B  
                     u5230 02D0                       u5150 00EF                       u5055 1E21  
                     u3551 17CA                       u3471 1769                       u3391 16FF  
                     u3383 16E7                       u3375 16D8                       u4431 0901  
                     u4415 08F1                       u4271 125D                       u3703 0A63  
                     u3631 097E                       u2831 10F5                       u2911 1E42  
                     u4175 0F03                       u4095 0D56                       u5311 049A  
                     u5231 02CF                       u5215 028A                       u5151 00EE  
                     u5080 1CAB                       u3560 17DC                       u3480 1770  
                     u3376 16D9                       u4600 1F53                       u4440 0909  
                     u4360 12AC                       u2760 1C28                       u3800 0B9A  
                     u3640 0984                       u2920 1E4E                       u5400 0639  
                     u5320 04BC                       u5240 02DF                       u5160 0129  
                     u5081 1CAA                       u3561 17DB                       u3481 176F  
                     u4601 1F52                       u4441 0908                       u4361 12AB  
                     u4265 1249                       u2761 1C27                       u3721 0A8B  
                     u3641 0983                       u2921 1E4D                       u5401 0638  
                     u5321 04BB                       u5305 0431                       u5241 02DE  
                     u5161 0128                       u2770 1BC4                       u5090 1B8D  
                     u4610 1D08                       u3570 17E1                       u3490 177B  
                     u4530 1C01                       u4370 088B                       u4290 1277  
                     u3722 0A92                       u3650 099B                       u2850 1108  
                     u2930 1E59                       u5410 064A                       u5330 04CB  
                     u5250 02FA                       u5170 0174                       u2771 1BC3  
                     u5091 1B8C                       u4611 1D07                       u3571 17E0  
                     u3491 177A                       u4531 1C00                       u4515 1BEE  
                     u4371 088A                       u4355 129E                       u4291 1276  
                     u4275 125A                       u2755 1C1B                       u3811 0BA6  
                     u3731 0AB8                       u3723 0A99                       u3715 0A65  
                     u3651 099A                       u2851 1107                       u2931 1E58  
                     u4195 0F5E                       u5411 0649                       u5331 04CA  
                     u5251 02F9                       u5171 0173                       u2780 1BCF  
                     u4620 1D24                       u4700 1FFC                       u3580 17FC  
                     u4540 1F06                       u4460 091B                       u4380 089F  
                     u3900 0C12                       u3812 0BAD                       u3732 0ABF  
                     u3660 09A0                       u5420 065A                       u5340 04E6  
                     u5180 01FD                       u2781 1BCE                       u4621 1D23  
                     u4701 1FFB                       u3581 17FB                       u4541 1F05  
                     u4525 1BF5                       u4461 091A                       u4381 089E  
                     u4285 126A                       u3901 0C11                       u3813 0BB4  
                     u3805 0B95                       u3733 0AC6                       u3661 099F  
                     u2845 10FA                       u5421 0659                       u5341 04E5  
                     u5325 04B8                       u5245 02DB                       u5181 01FC  
                     _INTE 005C                       u2790 1BD6                       u4630 1D3E  
                     u4710 1B64                       u4470 0922                       u3910 0C24  
                     u3590 094D                       u2870 1119                       u2950 1E6B  
                     u5430 0668                       u5270 040B                       u5190 0221  
                     _INTF 0059                       u2791 1BD5                       u4631 1D3D  
                     u4711 1B63                       u4471 0921                       u4455 090B  
                     u3911 0C23                       u3751 0AEE                       u3671 09F1  
                     u3591 094C                       u2871 1118                       u2951 1E6A  
                     u5431 0667                       u5415 0646                       u5335 04C7  
                     u5271 040A                       u5191 0220                       u4640 1F72  
                     u4800 086D                       u4720 080F                       u4560 1F1A  
                     u3920 0C33                       u3840 0BD8                       u3752 0AF5  
                     u3672 09F8                       u2960 1E75                       u5440 0682  
                     u5280 0416                       u4705 1FF8                       u4641 1F71  
                     u4801 086C                       u4721 080E                       u4561 1F19  
                     u3841 0BD7                       u3825 0BB6                       u3761 0B1B  
                     u3753 0AFC                       u3745 0AC8                       u3681 0A0D  
                     u3673 09FF                       u2865 1109                       u2961 1E74  
                     u2945 1E5D                       u5441 0681                       u5425 0656  
                     u5281 0415                       u5265 03D8                       u4650 1F8E  
                     u4810 0872                       u4730 0826                       u4490 0933  
                     u3930 0C50                       u3762 0B22                       u3682 0A14  
                     u2890 112D                       u5370 0612                       u5290 0422  
                     u5450 06A9                       u5507 1C4E                       u4635 1D3A  
                     u4651 1F8D                       u4811 0871                       u4555 1F0B  
                     u4491 0932                       u4395 08C7                       u3931 0C4F  
                     u3835 0BCD                       u3771 0B48                       u3763 0B29  
                     u3691 0A39                       u3683 0A1B                       u2891 112C  
                     u2875 1115                       u5371 0611                       u5355 056D  
                     u5291 0421                       u5275 0407                       u5451 06A8  
                     u4660 1F9A                       u4740 083C                       u4580 1F35  
                     u4820 1D9A                       u4900 1168                       u3940 0C6A  
                     u3860 0BEC                       u3780 0B72                       u3772 0B4F  
                     u3692 0A40                       u2980 1E88                       u5380 062A  
                     u5517 1C5F                       u4661 1F99                       u4741 083B  
                     u4581 1F34                       u4821 1D99                       u4901 1167  
                     u4485 0925                       u3941 0C69                       u3925 0C2E  
                     u3861 0BEB                       u3773 0B56                       u3693 0A47  
                     u2885 1121                       u2981 1E87                       u2965 1E71  
                     u5381 0629                       u5365 05D3                       u4750 0843  
                     u3950 0C88                       u3870 0BF1                       u2990 1E8D  
                     u5390 0631                       u5527 1EA1                       u4671 1FA9  
                     u4751 0842                       u4735 0821                       u4575 1F1C  
                     u3951 0C87                       u3935 0C4C                       u3871 0BF0  
                     u3855 0BDB                       u3791 0B7E                       u2991 1E8C  
                     u2975 1E7C                       u5391 0630                       u4680 1FC2  
                     u4672 1FAA                       u4840 1DAE                       u4920 1189  
                     u3880 0C05                       u3792 0B85                       u5537 1EB0  
                     u4681 1FC1                       u4673 1FAF                       u4585 1F31  
                     u4841 1DAD                       u4921 1188                       u3945 0C66  
                     u3881 0C04                       u3793 0B8C                       u3785 0B6D  
                     u4674 1FB0                       u4770 0855                       u4850 1DC0  
                     u3890 0C0C                       u3970 12BE                       u5547 1EBF  
                     u4691 1FD1                       u4675 1FB5                       u4771 0854  
                     u4595 1F45                       u4851 1DBF                       u4835 1D9F  
                     u4915 117B                       u3891 0C0B                       u3971 12BD  
                     u4692 1FD2                       u4676 1FB6                       u4780 085C  
                     u4940 11AB                       u5557 10CA                       u3965 1C3E  
                     u4693 1FD7                       u4781 085B                       u4765 0845  
                     u4941 11AA                       u5477 06AF                       u4694 1FD8  
                     u4870 1DDD                       u4695 1FDD                       u4871 1DDC  
                     u4855 1DBC                       u4935 119D                       u5487 06BD  
                     u4696 1FDE                       u4960 11BB                       u4880 1144  
                     u4865 1DCF                       u4961 11BA                       u4881 1143  
                     u3985 12DB                       u5497 07B4                       u4970 11C1  
                     u4890 1148                       u4795 085F                       u4971 11C0  
                     u4955 11B0                       u4891 1147                       u3995 1335  
                     u4980 11C5                       u4981 11C4                       u4990 11DA  
                     u4995 11D5          ?_Lcd_Write_String 0077                       _main 0687  
                     _temp 0190                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0079            __end_of_Lcd_Cmd 10D3            __end_of_ReadADC 1B98  
                    ??_ISR 0070              ___fltol@sign1 0068            __end_of___fladd 1800  
                    ?_main 0070            __end_of___awdiv 113C            __end_of___flneg 1B67  
          __end_of___awmod 1E97            __end_of___flmul 0C9D            __end_of___flsub 1D92  
          __end_of___fltol 087E            __end_of___lldiv 1F5C            ___awdiv@divisor 0020  
          __end_of___llmod 1DE6            __end_of___lwdiv 1CF2                      i1l119 1B7F  
          __end_of___lwmod 07F8            ___awdiv@counter 0024    __size_of_Lcd_Set_Cursor 0058  
                    _TRISD 0088            __end_of_dpowers 10A0                      _scale 0C9D  
          __end_of_isdigit 1BAA                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0687           __end_of_Lcd_Init 1EF4  
         __end_of_Lcd_Port 1BE1            __initialization 000F               __end_of_main 07BE  
                ??_ADCinit 0072                     ??_main 00CF         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0076                     ?_scale 004C  
                   _ADRESH 001E                     _ADRESL 009E           ___awdiv@dividend 0022  
                   i1l3291 1B7E                     i1l3287 1B74                     i1l3289 1B78  
                   _INTEDG 040E                     u546_20 1B78                     u546_21 1B77  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0039                     _TRISA0 0428  
                   _TRISB0 0430                     _TRISD0 0440           __end_of___xxtofl 11F8  
                ??_ReadADC 0074           __end_of__powers_ 1044                     ___flge 1F5C  
                   ___fleq 1CF2                  ??___fladd 0068                     ___wmul 1BE1  
                ??___awdiv 0079                  ??___flneg 0076                  ??___awmod 0076  
                ??___flmul 003A                  ??___flsub 007C                  ??___fltol 0063  
                ??___lldiv 007A                  ??___llmod 007A                  ??___lwdiv 0020  
                ??___lwmod 0076                     _fround 12B5           ___awdiv@quotient 0026  
          ___awmod@divisor 0072            ___awmod@counter 0077                  ??_isdigit 0072  
       __size_of__Umul8_16 0027                     saved_w 007E                  ??_sprintf 00B1  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022  
          Lcd_Set_Cursor@z 0021                 ___flge@ff1 0072                 ___flge@ff2 0076  
             ___xxtofl@arg 002E               ___xxtofl@exp 002D               ___xxtofl@val 0024  
               ___fleq@ff1 0072                 ___fleq@ff2 0076    __end_of__initialization 001D  
               ___flneg@f1 0072          __end_of_Lcd_Clear 1B74                 ___fltol@f1 005F  
           __pcstackCOMMON 0070              __end_of_scale 1000             _Lcd_Set_Cursor 1DE6  
               __div_to_l_ 087E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0050  
          __div_to_l_@quot 0020                 __pbssBANK1 00E7                 __pbssBANK3 0190  
            __div_to_l_@f1 0072              __div_to_l_@f2 0076          __end_of__Umul8_16 1C2D  
               __pmaintext 0687                    ?___flge 0072                    ?___fleq 0072  
                  ?___wmul 0072                 __pintentry 0004                    ?_fround 004C  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 1E3E                    _ADCinit 1BAA  
                ?___xxtofl 0024                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
               __stringtab 1000             _Lcd_Write_Char 1C2D                    _Lcd_Cmd 10B9  
                  _ReadADC 1B86          __end_of__npowers_ 1078            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 14C0                    ___awdiv 10D3  
                  ___flneg 1B5C                    ___awmod 1E3E                    ___flmul 093C  
                  ___flsub 1D42                    ___fltol 0802                    ___lldiv 1EF4  
          __size_of___wmul 0025                    ___llmod 1D92                    ___lwdiv 1CAC  
               _fround$897 005B                 _fround$898 0057                    ___lwmod 07BE  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0076                    __ptext1 0021  
                  __ptext2 0C9D                    __ptext3 1E3E                    __ptext4 10D3  
                  __ptext5 1B98                    __ptext6 12B5                    __ptext7 07BE  
                  __ptext8 1CAC                    __ptext9 093C               __size_of_ISR 0012  
              ?__div_to_l_ 0072                    _dpowers 1078                    _isdigit 1B98  
               ??___xxtofl 0028           ___awmod@dividend 0074                    _sprintf 0021  
                  main@str 00D3                    _voltage 00E9     __end_of_Lcd_Write_Char 1C66  
     end_of_initialization 001D            ___lldiv@divisor 0072            ___lldiv@counter 0024  
                Lcd_Port@a 0072             __tdiv_to_l_@f1 0072             __tdiv_to_l_@f2 0076  
            ??__tdiv_to_l_ 0020                ___fladd@grs 00A3              ___xxtofl@sign 002C  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0020  
              ___flmul@grs 0040        __size_of__div_to_l_ 00BE           ReadADC@TempValue 0074  
                _Lcd_Clear 1B67             __end_of___flge 2000             __end_of___fleq 1D42  
           __end_of___wmul 1C06           _Lcd_Write_String 1C66             __end_of_fround 14C0  
      start_initialization 000F                __end_of_ISR 1B86        __end_of__tdiv_to_l_ 12B5  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022            ___llmod@divisor 0072  
          ___llmod@counter 007B                 ?_Lcd_Clear 0070                   ??___flge 0020  
                 ??___fleq 0020                   ??___wmul 0076                  __Umul8_16 1C06  
          Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075                   ??_fround 0050  
                 ?_ADCinit 0070              sprintf@tmpval 00C3                  ___fladd@a 0064  
                ___fladd@b 0060                 fround@prec 005F                  ___flmul@a 0036  
                ___flmul@b 0032                  ___flsub@a 00A4                  ___flsub@b 00A8  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 00BB  
              sprintf@eexp 00C1                sprintf@fval 00CA                sprintf@prec 00C8  
                 ?_ReadADC 0072           ___lwdiv@dividend 007A           ??_Lcd_Set_Cursor 0077  
                 ?___fladd 0060                   ?___awdiv 0020                   ?___flneg 0072  
                 ?___awmod 0072                   ?___flmul 0032                   ?___flsub 00A4  
                 ?___fltol 005F                   ?___lldiv 0072                   ?___llmod 0072  
                __npowers_ 1044                 ?__Umul8_16 0072                   ?___lwdiv 0078  
                 ?___lwmod 0072                  __pstrings 1000                __tdiv_to_l_ 11F8  
             ??__div_to_l_ 007A                   ?_isdigit 0070                  _scale$899 005A  
         ___lwdiv@quotient 0021                   _ADCvalue 00EB                   ?_sprintf 00AC  
           __size_of_scale 0363          interrupt_function 0004             ___wmul@product 0076  
                 Lcd_Cmd@a 0075         __end_of__div_to_l_ 093C                ??_Lcd_Clear 0076  
               _ADCON0bits 001F                __stringbase 100F                 _ADCON1bits 009F  
        ___wmul@multiplier 0072           __size_of_ADCinit 0015           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 1E97                   _Lcd_Port 1BBF   __end_of_Lcd_Write_String 1CAC  
         __size_of_Lcd_Cmd 001A           __size_of_ReadADC 0012                ??__Umul8_16 0074  
         __size_of___fladd 0340           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0054  
         __size_of___lwdiv 0046           __size_of___lwmod 003A         __end_of__stringtab 1010  
              _isdigit$708 0072                 sprintf@val 00BD                   ___xxtofl 113C  
         __size_of_isdigit 0012            ___lwdiv@divisor 0078            ___lwdiv@counter 0023  
                 __ptext10 1C06                   __ptext11 11F8                   __ptext20 1B5C  
                 __ptext12 087E                   __ptext21 1F5C                   __ptext13 113C  
                 __ptext30 1BBF                   __ptext22 1CF2                   __ptext14 1BE1  
                 __ptext31 1BAA                   __ptext23 1B86                   __ptext15 1D92  
                 __ptext32 1B74                   __ptext24 1C66                   __ptext16 1EF4  
                 __ptext25 1C2D                   __ptext17 0802                   __ptext26 1DE6  
                 __ptext18 1D42                   __ptext27 1E97                   __ptext19 14C0  
                 __ptext28 1B67                   __ptext29 10B9                   __powers_ 1010  
         __size_of_sprintf 0666              __size_of_main 0137                   isdigit@c 0073  
                 scale@scl 005E         Lcd_Write_Char@temp 0074                   intlevel1 0000  
                sprintf@ap 00BA           __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028  
                sprintf@sp 00C7           __tdiv_to_l_@quot 0024           ___lwmod@dividend 0074  
         ___lldiv@dividend 0076                  stringcode 100A         Lcd_Set_Cursor@temp 0023  
             ?__tdiv_to_l_ 0072     __Umul8_16@multiplicand 0072                   sprintf@c 00CE  
                 sprintf@f 00AC           ___lldiv@quotient 0020            ___lwmod@divisor 0072  
          ___lwmod@counter 0077                   stringdir 100A                   stringtab 1000  
            ___fladd@signs 00A0               ___fladd@aexp 00A1               ___fladd@bexp 00A2  
     __Umul8_16@multiplier 007A          __Umul8_16@product 0076  
