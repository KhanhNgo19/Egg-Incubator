

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 28 16:02:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187                           
   188                           	psect	idataBANK0
   189  0F3D                     __pidataBANK0:
   190                           
   191                           ;initializer for _setPoint
   192  0F3D  3425               	retlw	37
   193  0F3E  3400               	retlw	0
   194                           
   195                           	psect	strings
   196  0800                     __pstrings:
   197  0800                     stringtab:
   198  0800                     __stringtab:
   199  0800                     stringcode:	
   200                           ;	String table - string pointers are 1 byte each
   201                           
   202  0800                     stringdir:
   203  0800  3008               	movlw	high stringdir
   204  0801  008A               	movwf	10
   205  0802  0804               	movf	4,w
   206  0803  0A84               	incf	4,f
   207  0804  0782               	addwf	2,f
   208  0805                     __stringbase:
   209  0805  3400               	retlw	0
   210  0806                     __end_of__stringtab:
   211  0806                     _dpowers:
   212  0806  3401               	retlw	1
   213  0807  3400               	retlw	0
   214  0808  340A               	retlw	10
   215  0809  3400               	retlw	0
   216  080A  3464               	retlw	100
   217  080B  3400               	retlw	0
   218  080C  34E8               	retlw	232
   219  080D  3403               	retlw	3
   220  080E  3410               	retlw	16
   221  080F  3427               	retlw	39
   222  0810                     __end_of_dpowers:
   223  001E                     _ADRESH	set	30
   224  001F                     _ADCON0bits	set	31
   225  0059                     _INTF	set	89
   226  0035                     _RB5	set	53
   227  0034                     _RB4	set	52
   228  0058                     _RBIF	set	88
   229  005B                     _RBIE	set	91
   230  005C                     _INTE	set	92
   231  005F                     _GIE	set	95
   232  0040                     _RD0	set	64
   233  0043                     _RD3	set	67
   234  0042                     _RD2	set	66
   235  0047                     _RD7	set	71
   236  0046                     _RD6	set	70
   237  0045                     _RD5	set	69
   238  0044                     _RD4	set	68
   239  009E                     _ADRESL	set	158
   240  009F                     _ADCON1bits	set	159
   241  0088                     _TRISD	set	136
   242  040E                     _INTEDG	set	1038
   243  0440                     _TRISD0	set	1088
   244  0430                     _TRISB0	set	1072
   245  0428                     _TRISA0	set	1064
   246  0810                     STR_1:
   247  0810  3453               	retlw	83	;'S'
   248  0811  3465               	retlw	101	;'e'
   249  0812  3474               	retlw	116	;'t'
   250  0813  3420               	retlw	32	;' '
   251  0814  3420               	retlw	32	;' '
   252  0815  343D               	retlw	61	;'='
   253  0816  3420               	retlw	32	;' '
   254  0817  3425               	retlw	37	;'%'
   255  0818  3464               	retlw	100	;'d'
   256  0819  3420               	retlw	32	;' '
   257  081A  3400               	retlw	0
   258  081B                     STR_2:
   259  081B  3452               	retlw	82	;'R'
   260  081C  3465               	retlw	101	;'e'
   261  081D  3461               	retlw	97	;'a'
   262  081E  346C               	retlw	108	;'l'
   263  081F  3420               	retlw	32	;' '
   264  0820  343D               	retlw	61	;'='
   265  0821  3420               	retlw	32	;' '
   266  0822  3425               	retlw	37	;'%'
   267  0823  3464               	retlw	100	;'d'
   268  0824  3420               	retlw	32	;' '
   269  0825  3400               	retlw	0
   270                           
   271                           	psect	cinit
   272  000F                     start_initialization:	
   273                           ; #config settings
   274                           
   275  000F                     __initialization:
   276                           
   277                           ; Initialize objects allocated to BANK0
   278  000F  120A  158A  273D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   279  0014  00E7               	movwf	__pdataBANK0& (0+127)
   280  0015  120A  158A  273E  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   281  001A  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   282                           
   283                           ; Clear objects allocated to BANK0
   284  001B  01E1               	clrf	__pbssBANK0& (0+127)
   285  001C  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   286  001D  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   287  001E  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   288  001F  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   289  0020  01E6               	clrf	(__pbssBANK0+5)& (0+127)
   290  0021                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293  0021                     __end_of__initialization:
   294  0021  0183               	clrf	3
   295  0022  120A  118A  2C70   	ljmp	_main	;jump to C main() function
   296                           
   297                           	psect	bssBANK0
   298  0061                     __pbssBANK0:
   299  0061                     _voltage:
   300  0061                     	ds	2
   301  0063                     _temp:
   302  0063                     	ds	2
   303  0065                     _ADCvalue:
   304  0065                     	ds	2
   305                           
   306                           	psect	dataBANK0
   307  0067                     __pdataBANK0:
   308  0067                     _setPoint:
   309  0067                     	ds	2
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_ADCinit:
   314  0070                     ?_Lcd_Port:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_Lcd_Cmd:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_Lcd_Init:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_Lcd_Write_Char:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_Lcd_Write_String:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_ISR:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ??_ISR:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_Lcd_Clear:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 2 bytes @ 0x0
   340                           
   341                           
   342                           ; 2 bytes @ 0x0
   343  0070                     	ds	2
   344  0072                     ??_ADCinit:
   345  0072                     ??_Lcd_Port:	
   346                           ; 1 bytes @ 0x2
   347                           
   348  0072                     ?_ReadADC:	
   349                           ; 1 bytes @ 0x2
   350                           
   351  0072                     ?__Umul8_16:	
   352                           ; 2 bytes @ 0x2
   353                           
   354  0072                     ?___lwdiv:	
   355                           ; 2 bytes @ 0x2
   356                           
   357  0072                     ?___xxtofl:	
   358                           ; 2 bytes @ 0x2
   359                           
   360  0072                     Lcd_Port@a:	
   361                           ; 4 bytes @ 0x2
   362                           
   363  0072                     __Umul8_16@multiplicand:	
   364                           ; 1 bytes @ 0x2
   365                           
   366  0072                     ___lwdiv@divisor:	
   367                           ; 1 bytes @ 0x2
   368                           
   369  0072                     ___xxtofl@val:	
   370                           ; 2 bytes @ 0x2
   371                           
   372                           
   373                           ; 4 bytes @ 0x2
   374  0072                     	ds	1
   375  0073                     ??_Lcd_Cmd:
   376  0073                     ??_Lcd_Write_Char:	
   377                           ; 1 bytes @ 0x3
   378                           
   379                           
   380                           ; 1 bytes @ 0x3
   381  0073                     	ds	1
   382  0074                     ??_ReadADC:
   383  0074                     ??__Umul8_16:	
   384                           ; 1 bytes @ 0x4
   385                           
   386  0074                     Lcd_Write_Char@temp:	
   387                           ; 1 bytes @ 0x4
   388                           
   389  0074                     ReadADC@TempValue:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0074                     ___lwdiv@dividend:	
   393                           ; 2 bytes @ 0x4
   394                           
   395                           
   396                           ; 2 bytes @ 0x4
   397  0074                     	ds	1
   398  0075                     Lcd_Cmd@a:
   399  0075                     Lcd_Write_Char@y:	
   400                           ; 1 bytes @ 0x5
   401                           
   402                           
   403                           ; 1 bytes @ 0x5
   404  0075                     	ds	1
   405  0076                     ??_Lcd_Clear:
   406  0076                     ?_Lcd_Set_Cursor:	
   407                           ; 1 bytes @ 0x6
   408                           
   409  0076                     ??_Lcd_Init:	
   410                           ; 1 bytes @ 0x6
   411                           
   412  0076                     ??___lwdiv:	
   413                           ; 1 bytes @ 0x6
   414                           
   415  0076                     ??___xxtofl:	
   416                           ; 1 bytes @ 0x6
   417                           
   418  0076                     Lcd_Set_Cursor@b:	
   419                           ; 1 bytes @ 0x6
   420                           
   421  0076                     Lcd_Write_Char@a:	
   422                           ; 1 bytes @ 0x6
   423                           
   424  0076                     __Umul8_16@product:	
   425                           ; 1 bytes @ 0x6
   426                           
   427                           
   428                           ; 2 bytes @ 0x6
   429  0076                     	ds	1
   430  0077                     ??_Lcd_Set_Cursor:
   431  0077                     ??_Lcd_Write_String:	
   432                           ; 1 bytes @ 0x7
   433                           
   434  0077                     ___lwdiv@quotient:	
   435                           ; 1 bytes @ 0x7
   436                           
   437                           
   438                           ; 2 bytes @ 0x7
   439  0077                     	ds	1
   440  0078                     Lcd_Write_String@i:
   441  0078                     __Umul8_16@word_mpld:	
   442                           ; 2 bytes @ 0x8
   443                           
   444                           
   445                           ; 2 bytes @ 0x8
   446  0078                     	ds	1
   447  0079                     ___lwdiv@counter:
   448                           
   449                           ; 1 bytes @ 0x9
   450  0079                     	ds	1
   451  007A                     ??___lwmod:
   452  007A                     Lcd_Write_String@a:	
   453                           ; 1 bytes @ 0xA
   454                           
   455  007A                     __Umul8_16@multiplier:	
   456                           ; 1 bytes @ 0xA
   457                           
   458                           
   459                           ; 1 bytes @ 0xA
   460  007A                     	ds	1
   461  007B                     ___lwmod@counter:
   462                           
   463                           ; 1 bytes @ 0xB
   464  007B                     	ds	1
   465                           
   466                           	psect	cstackBANK0
   467  0020                     __pcstackBANK0:
   468  0020                     ?___lwmod:
   469  0020                     Lcd_Set_Cursor@a:	
   470                           ; 2 bytes @ 0x0
   471                           
   472  0020                     ___xxtofl@sign:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0020                     ___lwmod@divisor:	
   476                           ; 1 bytes @ 0x0
   477                           
   478                           
   479                           ; 2 bytes @ 0x0
   480  0020                     	ds	1
   481  0021                     Lcd_Set_Cursor@z:
   482  0021                     ___xxtofl@exp:	
   483                           ; 1 bytes @ 0x1
   484                           
   485                           
   486                           ; 1 bytes @ 0x1
   487  0021                     	ds	1
   488  0022                     Lcd_Set_Cursor@y:
   489  0022                     ___lwmod@dividend:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  0022                     ___xxtofl@arg:	
   493                           ; 2 bytes @ 0x2
   494                           
   495                           
   496                           ; 4 bytes @ 0x2
   497  0022                     	ds	1
   498  0023                     Lcd_Set_Cursor@temp:
   499                           
   500                           ; 1 bytes @ 0x3
   501  0023                     	ds	1
   502  0024                     ?_sprintf:
   503  0024                     sprintf@f:	
   504                           ; 2 bytes @ 0x4
   505                           
   506                           
   507                           ; 1 bytes @ 0x4
   508  0024                     	ds	2
   509  0026                     ?___flmul:
   510  0026                     ___flmul@b:	
   511                           ; 4 bytes @ 0x6
   512                           
   513                           
   514                           ; 4 bytes @ 0x6
   515  0026                     	ds	1
   516  0027                     ??_sprintf:
   517                           
   518                           ; 1 bytes @ 0x7
   519  0027                     	ds	3
   520  002A                     sprintf@ap:
   521  002A                     ___flmul@a:	
   522                           ; 1 bytes @ 0xA
   523                           
   524                           
   525                           ; 4 bytes @ 0xA
   526  002A                     	ds	1
   527  002B                     sprintf@flag:
   528                           
   529                           ; 1 bytes @ 0xB
   530  002B                     	ds	1
   531  002C                     sprintf@prec:
   532                           
   533                           ; 1 bytes @ 0xC
   534  002C                     	ds	1
   535  002D                     sprintf@val:
   536                           
   537                           ; 2 bytes @ 0xD
   538  002D                     	ds	1
   539  002E                     ??___flmul:
   540                           
   541                           ; 1 bytes @ 0xE
   542  002E                     	ds	1
   543  002F                     sprintf@sp:
   544                           
   545                           ; 1 bytes @ 0xF
   546  002F                     	ds	1
   547  0030                     sprintf@c:
   548                           
   549                           ; 1 bytes @ 0x10
   550  0030                     	ds	3
   551  0033                     ___flmul@sign:
   552                           
   553                           ; 1 bytes @ 0x13
   554  0033                     	ds	1
   555  0034                     ___flmul@grs:
   556                           
   557                           ; 4 bytes @ 0x14
   558  0034                     	ds	4
   559  0038                     ___flmul@aexp:
   560                           
   561                           ; 1 bytes @ 0x18
   562  0038                     	ds	1
   563  0039                     ___flmul@bexp:
   564                           
   565                           ; 1 bytes @ 0x19
   566  0039                     	ds	1
   567  003A                     ___flmul@prod:
   568                           
   569                           ; 4 bytes @ 0x1A
   570  003A                     	ds	4
   571  003E                     ___flmul@temp:
   572                           
   573                           ; 2 bytes @ 0x1E
   574  003E                     	ds	2
   575  0040                     ?___fltol:
   576  0040                     ___fltol@f1:	
   577                           ; 4 bytes @ 0x20
   578                           
   579                           
   580                           ; 4 bytes @ 0x20
   581  0040                     	ds	4
   582  0044                     ??___fltol:
   583                           
   584                           ; 1 bytes @ 0x24
   585  0044                     	ds	5
   586  0049                     ___fltol@sign1:
   587                           
   588                           ; 1 bytes @ 0x29
   589  0049                     	ds	1
   590  004A                     ___fltol@exp1:
   591                           
   592                           ; 1 bytes @ 0x2A
   593  004A                     	ds	1
   594  004B                     ??_main:
   595                           
   596                           ; 1 bytes @ 0x2B
   597  004B                     	ds	2
   598  004D                     main@str:
   599                           
   600                           ; 20 bytes @ 0x2D
   601  004D                     	ds	20
   602                           
   603                           	psect	maintext
   604  0470                     __pmaintext:	
   605 ;;
   606 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   607 ;;
   608 ;; *************** function _main *****************
   609 ;; Defined at:
   610 ;;		line 32 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  str            20   45[BANK0 ] unsigned char [20]
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2  107[None  ] int 
   617 ;; Registers used:
   618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : B00/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0      20       0       0       0
   626 ;;      Temps:          0       2       0       0       0
   627 ;;      Totals:         0      22       0       0       0
   628 ;;Total ram usage:       22 bytes
   629 ;; Hardware stack levels required when called:    4
   630 ;; This function calls:
   631 ;;		_ADCinit
   632 ;;		_Lcd_Clear
   633 ;;		_Lcd_Init
   634 ;;		_Lcd_Set_Cursor
   635 ;;		_Lcd_Write_String
   636 ;;		_ReadADC
   637 ;;		___flmul
   638 ;;		___fltol
   639 ;;		___lwdiv
   640 ;;		___xxtofl
   641 ;;		_sprintf
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _main
   649  0470                     _main:
   650  0470                     l1709:	
   651                           ;incstack = 0
   652                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   653                           
   654                           
   655                           ;main.c: 34:         voltage = 5000.0f / 1023 * ADCvalue;;main.c: 37:         Lcd_Clear(
      +                          );
   656  0470  120A  158A  275E  120A  118A  	fcall	_ADCinit
   657  0475                     l1711:
   658                           
   659                           ;main.c: 38:         sprintf(str, "Set  = %d ", setPoint);
   660  0475  1683               	bsf	3,5	;RP0=1, select bank1
   661  0476  1303               	bcf	3,6	;RP1=0, select bank1
   662  0477  1405               	bsf	5,0	;volatile
   663  0478                     l1713:
   664                           
   665                           ;main.c: 41:         _delay((unsigned long)((10)*(4000000/4000.0)));
   666  0478  0188               	clrf	8	;volatile
   667  0479                     l1715:
   668                           
   669                           ;main.c: 42: 
   670  0479  120A  118A  2672  120A  118A  	fcall	_Lcd_Init
   671  047E                     l1717:
   672                           
   673                           ;main.c: 45:         Lcd_Write_String(str);
   674  047E  1683               	bsf	3,5	;RP0=1, select bank1
   675  047F  1303               	bcf	3,6	;RP1=0, select bank1
   676  0480  1406               	bsf	6,0	;volatile
   677  0481                     l1719:
   678                           
   679                           ;main.c: 46:         _delay((unsigned long)((10)*(4000000/4000.0)));
   680  0481  1008               	bcf	8,0	;volatile
   681  0482                     l1721:
   682                           
   683                           ;main.c: 47:     }
   684  0482  1283               	bcf	3,5	;RP0=0, select bank0
   685  0483  1303               	bcf	3,6	;RP1=0, select bank0
   686  0484  1008               	bcf	8,0	;volatile
   687  0485                     l1723:
   688                           
   689                           ;main.c: 50: 
   690  0485  178B               	bsf	11,7	;volatile
   691  0486                     l1725:
   692                           
   693                           ;main.c: 51: void ADCinit (void)
   694  0486  1683               	bsf	3,5	;RP0=1, select bank1
   695  0487  1303               	bcf	3,6	;RP1=0, select bank1
   696  0488  1701               	bsf	1,6	;volatile
   697  0489                     l1727:
   698                           
   699                           ;main.c: 52: {
   700  0489  160B               	bsf	11,4	;volatile
   701  048A                     l1729:
   702                           
   703                           ;main.c: 53: 
   704  048A  158B               	bsf	11,3	;volatile
   705  048B                     l1731:
   706                           
   707                           ;main.c: 56:     ADCON0bits.CHS2 = 0, ADCON0bits.CHS1 = 0, ADCON0bits.CHS0 = 0;;main.c: 
      +                          57: 
   708  048B  120A  158A  274C  120A  118A  	fcall	_ReadADC
   709  0490  0873               	movf	?_ReadADC+1,w
   710  0491  1283               	bcf	3,5	;RP0=0, select bank0
   711  0492  1303               	bcf	3,6	;RP1=0, select bank0
   712  0493  00E6               	movwf	_ADCvalue+1
   713  0494  0872               	movf	?_ReadADC,w
   714  0495  00E5               	movwf	_ADCvalue
   715  0496                     l1733:
   716                           
   717                           ;main.c: 58:     ADCON1bits.ADFM = 1;
   718  0496  0865               	movf	_ADCvalue,w
   719  0497  00F2               	movwf	___xxtofl@val
   720  0498  0866               	movf	_ADCvalue+1,w
   721  0499  00F3               	movwf	___xxtofl@val+1
   722  049A  01F4               	clrf	___xxtofl@val+2
   723  049B  01F5               	clrf	___xxtofl@val+3
   724  049C  3000               	movlw	0
   725  049D  120A  118A  253A  120A  118A  	fcall	___xxtofl
   726  04A2  0875               	movf	?___xxtofl+3,w
   727  04A3  1283               	bcf	3,5	;RP0=0, select bank0
   728  04A4  1303               	bcf	3,6	;RP1=0, select bank0
   729  04A5  00AD               	movwf	___flmul@a+3
   730  04A6  0874               	movf	?___xxtofl+2,w
   731  04A7  00AC               	movwf	___flmul@a+2
   732  04A8  0873               	movf	?___xxtofl+1,w
   733  04A9  00AB               	movwf	___flmul@a+1
   734  04AA  0872               	movf	?___xxtofl,w
   735  04AB  00AA               	movwf	___flmul@a
   736  04AC  3040               	movlw	64
   737  04AD  00A9               	movwf	___flmul@b+3
   738  04AE  309C               	movlw	156
   739  04AF  00A8               	movwf	___flmul@b+2
   740  04B0  3067               	movlw	103
   741  04B1  00A7               	movwf	___flmul@b+1
   742  04B2  301A               	movlw	26
   743  04B3  00A6               	movwf	___flmul@b
   744  04B4  120A  118A  2025  120A  118A  	fcall	___flmul
   745  04B9  1283               	bcf	3,5	;RP0=0, select bank0
   746  04BA  1303               	bcf	3,6	;RP1=0, select bank0
   747  04BB  0829               	movf	?___flmul+3,w
   748  04BC  00C3               	movwf	___fltol@f1+3
   749  04BD  0828               	movf	?___flmul+2,w
   750  04BE  00C2               	movwf	___fltol@f1+2
   751  04BF  0827               	movf	?___flmul+1,w
   752  04C0  00C1               	movwf	___fltol@f1+1
   753  04C1  0826               	movf	?___flmul,w
   754  04C2  00C0               	movwf	___fltol@f1
   755  04C3  120A  118A  25F6  120A  118A  	fcall	___fltol
   756  04C8  1283               	bcf	3,5	;RP0=0, select bank0
   757  04C9  1303               	bcf	3,6	;RP1=0, select bank0
   758  04CA  0841               	movf	?___fltol+1,w
   759  04CB  00E2               	movwf	_voltage+1
   760  04CC  0840               	movf	?___fltol,w
   761  04CD  00E1               	movwf	_voltage
   762  04CE                     l1735:
   763                           
   764                           ;main.c: 59: 
   765  04CE  300A               	movlw	10
   766  04CF  00F2               	movwf	___lwdiv@divisor
   767  04D0  3000               	movlw	0
   768  04D1  00F3               	movwf	___lwdiv@divisor+1
   769  04D2  0862               	movf	_voltage+1,w
   770  04D3  00F5               	movwf	___lwdiv@dividend+1
   771  04D4  0861               	movf	_voltage,w
   772  04D5  00F4               	movwf	___lwdiv@dividend
   773  04D6  120A  118A  2727  120A  118A  	fcall	___lwdiv
   774  04DB  0873               	movf	?___lwdiv+1,w
   775  04DC  1283               	bcf	3,5	;RP0=0, select bank0
   776  04DD  1303               	bcf	3,6	;RP1=0, select bank0
   777  04DE  00E4               	movwf	_temp+1
   778  04DF  0872               	movf	?___lwdiv,w
   779  04E0  00E3               	movwf	_temp
   780  04E1                     l1737:
   781                           
   782                           ;main.c: 61: 
   783  04E1  120A  158A  273F  120A  118A  	fcall	_Lcd_Clear
   784  04E6                     l1739:
   785                           
   786                           ;main.c: 62:     ADCON0bits.ADON = 1;
   787  04E6  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   788  04E7  1283               	bcf	3,5	;RP0=0, select bank0
   789  04E8  1303               	bcf	3,6	;RP1=0, select bank0
   790  04E9  00CB               	movwf	??_main
   791  04EA  084B               	movf	??_main,w
   792  04EB  00A4               	movwf	sprintf@f
   793  04EC  0868               	movf	_setPoint+1,w
   794  04ED  00A6               	movwf	?_sprintf+2
   795  04EE  0867               	movf	_setPoint,w
   796  04EF  00A5               	movwf	?_sprintf+1
   797  04F0  304D               	movlw	(low (main@str| 0))& (0+255)
   798  04F1  120A  118A  2386  120A  118A  	fcall	_sprintf
   799  04F6                     l1741:
   800                           
   801                           ;main.c: 63: }
   802  04F6  01F6               	clrf	Lcd_Set_Cursor@b
   803  04F7  0AF6               	incf	Lcd_Set_Cursor@b,f
   804  04F8  3001               	movlw	1
   805  04F9  120A  118A  26CF  120A  118A  	fcall	_Lcd_Set_Cursor
   806  04FE                     l1743:
   807                           
   808                           ;main.c: 64: 
   809  04FE  304D               	movlw	(low (main@str| 0))& (0+255)
   810  04FF  120A  158A  278D  120A  118A  	fcall	_Lcd_Write_String
   811  0504                     l1745:
   812                           
   813                           ;main.c: 65: unsigned int ReadADC (void)
   814  0504  300D               	movlw	13
   815  0505  1283               	bcf	3,5	;RP0=0, select bank0
   816  0506  1303               	bcf	3,6	;RP1=0, select bank0
   817  0507  00CC               	movwf	??_main+1
   818  0508  30FB               	movlw	251
   819  0509  00CB               	movwf	??_main
   820  050A                     u1997:
   821  050A  0BCB               	decfsz	??_main,f
   822  050B  2D0A               	goto	u1997
   823  050C  0BCC               	decfsz	??_main+1,f
   824  050D  2D0A               	goto	u1997
   825  050E                     l1747:
   826                           
   827                           ;main.c: 67:     unsigned int TempValue = 0;
   828  050E  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   829  050F  1283               	bcf	3,5	;RP0=0, select bank0
   830  0510  1303               	bcf	3,6	;RP1=0, select bank0
   831  0511  00CB               	movwf	??_main
   832  0512  084B               	movf	??_main,w
   833  0513  00A4               	movwf	sprintf@f
   834  0514  0864               	movf	_temp+1,w
   835  0515  00A6               	movwf	?_sprintf+2
   836  0516  0863               	movf	_temp,w
   837  0517  00A5               	movwf	?_sprintf+1
   838  0518  304D               	movlw	(low (main@str| 0))& (0+255)
   839  0519  120A  118A  2386  120A  118A  	fcall	_sprintf
   840  051E                     l1749:
   841                           
   842                           ;main.c: 68:     ADCON0bits.GO_nDONE = 1;
   843  051E  01F6               	clrf	Lcd_Set_Cursor@b
   844  051F  0AF6               	incf	Lcd_Set_Cursor@b,f
   845  0520  3002               	movlw	2
   846  0521  120A  118A  26CF  120A  118A  	fcall	_Lcd_Set_Cursor
   847  0526                     l1751:
   848                           
   849                           ;main.c: 69:     while(ADCON0bits.GO_nDONE);
   850  0526  304D               	movlw	(low (main@str| 0))& (0+255)
   851  0527  120A  158A  278D  120A  118A  	fcall	_Lcd_Write_String
   852  052C                     l1753:
   853                           
   854                           ;main.c: 70:     TempValue = ADRESH*256 + ADRESL;
   855  052C  300D               	movlw	13
   856  052D  1283               	bcf	3,5	;RP0=0, select bank0
   857  052E  1303               	bcf	3,6	;RP1=0, select bank0
   858  052F  00CC               	movwf	??_main+1
   859  0530  30FB               	movlw	251
   860  0531  00CB               	movwf	??_main
   861  0532                     u2007:
   862  0532  0BCB               	decfsz	??_main,f
   863  0533  2D32               	goto	u2007
   864  0534  0BCC               	decfsz	??_main+1,f
   865  0535  2D32               	goto	u2007
   866  0536  2C8B               	goto	l1731
   867  0537  120A  118A  280C   	ljmp	start
   868  053A                     __end_of_main:
   869                           
   870                           	psect	text1
   871  0386                     __ptext1:	
   872 ;; *************** function _sprintf *****************
   873 ;; Defined at:
   874 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  sp              1    wreg     PTR unsigned char 
   877 ;;		 -> main@str(20), 
   878 ;;  f               1    4[BANK0 ] PTR const unsigned char 
   879 ;;		 -> STR_2(11), STR_1(11), 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  sp              1   15[BANK0 ] PTR unsigned char 
   882 ;;		 -> main@str(20), 
   883 ;;  tmpval          4    0        struct .
   884 ;;  val             2   13[BANK0 ] unsigned int 
   885 ;;  cp              2    0        PTR const unsigned char 
   886 ;;  len             2    0        unsigned int 
   887 ;;  c               1   16[BANK0 ] unsigned char 
   888 ;;  prec            1   12[BANK0 ] char 
   889 ;;  flag            1   11[BANK0 ] unsigned char 
   890 ;;  ap              1   10[BANK0 ] PTR void [1]
   891 ;;		 -> ?_sprintf(2), 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  2    4[BANK0 ] int 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       3       0       0       0
   902 ;;      Locals:         0       7       0       0       0
   903 ;;      Temps:          0       3       0       0       0
   904 ;;      Totals:         0      13       0       0       0
   905 ;;Total ram usage:       13 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    2
   908 ;; This function calls:
   909 ;;		___lwdiv
   910 ;;		___lwmod
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _sprintf
   918  0386                     _sprintf:
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   922                           ;sprintf@sp stored from wreg
   923  0386  1283               	bcf	3,5	;RP0=0, select bank0
   924  0387  1303               	bcf	3,6	;RP1=0, select bank0
   925  0388  00AF               	movwf	sprintf@sp
   926  0389                     l1423:
   927                           
   928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   929  0389  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   930  038A  00A7               	movwf	??_sprintf
   931  038B  0827               	movf	??_sprintf,w
   932  038C  00AA               	movwf	sprintf@ap
   933                           
   934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   935  038D  2C59               	goto	l1475
   936  038E                     l1425:
   937                           
   938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   939  038E  3025               	movlw	37
   940  038F  0630               	xorwf	sprintf@c,w
   941  0390  1903               	btfsc	3,2
   942  0391  2B93               	goto	u1271
   943  0392  2B94               	goto	u1270
   944  0393                     u1271:
   945  0393  2BA0               	goto	l1431
   946  0394                     u1270:
   947  0394                     l1427:
   948                           
   949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   950  0394  0830               	movf	sprintf@c,w
   951  0395  00A7               	movwf	??_sprintf
   952  0396  082F               	movf	sprintf@sp,w
   953  0397  0084               	movwf	4
   954  0398  0827               	movf	??_sprintf,w
   955  0399  1383               	bcf	3,7	;select IRP bank0
   956  039A  0080               	movwf	0
   957  039B                     l1429:
   958  039B  3001               	movlw	1
   959  039C  00A7               	movwf	??_sprintf
   960  039D  0827               	movf	??_sprintf,w
   961  039E  07AF               	addwf	sprintf@sp,f
   962                           
   963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   964  039F  2C59               	goto	l1475
   965  03A0                     l1431:
   966                           
   967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   968  03A0  01AB               	clrf	sprintf@flag
   969  03A1                     l1435:	
   970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   971                           
   972  03A1  3001               	movlw	1
   973  03A2  07A4               	addwf	sprintf@f,f
   974  03A3  30FF               	movlw	-1
   975  03A4  0724               	addwf	sprintf@f,w
   976  03A5  0084               	movwf	4
   977  03A6  120A  158A  2000  120A  118A  	fcall	stringdir
   978  03AB  00B0               	movwf	sprintf@c
   979  03AC  00A7               	movwf	??_sprintf
   980  03AD  01A8               	clrf	??_sprintf+1
   981                           
   982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   983                           ; Switch size 1, requested type "simple"
   984                           ; Number of cases is 1, Range of values is 0 to 0
   985                           ; switch strategies available:
   986                           ; Name         Instructions Cycles
   987                           ; simple_byte            4     3 (average)
   988                           ; direct_byte           11     8 (fixed)
   989                           ; jumptable            260     6 (fixed)
   990                           ;	Chosen strategy is simple_byte
   991  03AE  0828               	movf	??_sprintf+1,w
   992  03AF  3A00               	xorlw	0	; case 0
   993  03B0  1903               	skipnz
   994  03B1  2BB3               	goto	l1793
   995  03B2  2C59               	goto	l1475
   996  03B3                     l1793:
   997                           
   998                           ; Switch size 1, requested type "simple"
   999                           ; Number of cases is 3, Range of values is 0 to 105
  1000                           ; switch strategies available:
  1001                           ; Name         Instructions Cycles
  1002                           ; simple_byte           10     6 (average)
  1003                           ; jumptable            260     6 (fixed)
  1004                           ;	Chosen strategy is simple_byte
  1005  03B3  0827               	movf	??_sprintf,w
  1006  03B4  3A00               	xorlw	0	; case 0
  1007  03B5  1903               	skipnz
  1008  03B6  2C6B               	goto	l1477
  1009  03B7  3A64               	xorlw	100	; case 100
  1010  03B8  1903               	skipnz
  1011  03B9  2BBE               	goto	l1437
  1012  03BA  3A0D               	xorlw	13	; case 105
  1013  03BB  1903               	skipnz
  1014  03BC  2BBE               	goto	l1437
  1015  03BD  2C59               	goto	l1475
  1016  03BE                     l1437:
  1017                           
  1018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1019  03BE  082A               	movf	sprintf@ap,w
  1020  03BF  0084               	movwf	4
  1021  03C0  1383               	bcf	3,7	;select IRP bank0
  1022  03C1  0800               	movf	0,w
  1023  03C2  00AD               	movwf	sprintf@val
  1024  03C3  0A84               	incf	4,f
  1025  03C4  0800               	movf	0,w
  1026  03C5  00AE               	movwf	sprintf@val+1
  1027  03C6                     l1439:
  1028  03C6  3002               	movlw	2
  1029  03C7  00A7               	movwf	??_sprintf
  1030  03C8  0827               	movf	??_sprintf,w
  1031  03C9  07AA               	addwf	sprintf@ap,f
  1032  03CA                     l1441:
  1033                           
  1034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1035  03CA  1FAE               	btfss	sprintf@val+1,7
  1036  03CB  2BCD               	goto	u1281
  1037  03CC  2BCE               	goto	u1280
  1038  03CD                     u1281:
  1039  03CD  2BD7               	goto	l1447
  1040  03CE                     u1280:
  1041  03CE                     l1443:
  1042                           
  1043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1044  03CE  3003               	movlw	3
  1045  03CF  00A7               	movwf	??_sprintf
  1046  03D0  0827               	movf	??_sprintf,w
  1047  03D1  04AB               	iorwf	sprintf@flag,f
  1048  03D2                     l1445:
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1051  03D2  09AD               	comf	sprintf@val,f
  1052  03D3  09AE               	comf	sprintf@val+1,f
  1053  03D4  0AAD               	incf	sprintf@val,f
  1054  03D5  1903               	skipnz
  1055  03D6  0AAE               	incf	sprintf@val+1,f
  1056  03D7                     l1447:
  1057                           
  1058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1059  03D7  01B0               	clrf	sprintf@c
  1060  03D8  0AB0               	incf	sprintf@c,f
  1061  03D9                     l1453:
  1062                           
  1063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1064  03D9  0830               	movf	sprintf@c,w
  1065  03DA  00A7               	movwf	??_sprintf
  1066  03DB  0727               	addwf	??_sprintf,w
  1067  03DC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1068  03DD  0084               	movwf	4
  1069  03DE  120A  158A  2000  120A  118A  	fcall	stringdir
  1070  03E3  00A8               	movwf	??_sprintf+1
  1071  03E4  120A  158A  2000  120A  118A  	fcall	stringdir
  1072  03E9  00A9               	movwf	??_sprintf+2
  1073  03EA  0829               	movf	??_sprintf+2,w
  1074  03EB  022E               	subwf	sprintf@val+1,w
  1075  03EC  1D03               	skipz
  1076  03ED  2BF0               	goto	u1295
  1077  03EE  0828               	movf	??_sprintf+1,w
  1078  03EF  022D               	subwf	sprintf@val,w
  1079  03F0                     u1295:
  1080  03F0  1803               	skipnc
  1081  03F1  2BF3               	goto	u1291
  1082  03F2  2BF4               	goto	u1290
  1083  03F3                     u1291:
  1084  03F3  2BF5               	goto	l1457
  1085  03F4                     u1290:
  1086  03F4  2BFF               	goto	l1459
  1087  03F5                     l1457:
  1088  03F5  3001               	movlw	1
  1089  03F6  00A7               	movwf	??_sprintf
  1090  03F7  0827               	movf	??_sprintf,w
  1091  03F8  07B0               	addwf	sprintf@c,f
  1092  03F9  3005               	movlw	5
  1093  03FA  0630               	xorwf	sprintf@c,w
  1094  03FB  1D03               	btfss	3,2
  1095  03FC  2BFE               	goto	u1301
  1096  03FD  2BFF               	goto	u1300
  1097  03FE                     u1301:
  1098  03FE  2BD9               	goto	l1453
  1099  03FF                     u1300:
  1100  03FF                     l1459:
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1103  03FF  082B               	movf	sprintf@flag,w
  1104  0400  3903               	andlw	3
  1105  0401  1903               	btfsc	3,2
  1106  0402  2C04               	goto	u1311
  1107  0403  2C05               	goto	u1310
  1108  0404                     u1311:
  1109  0404  2C10               	goto	l1465
  1110  0405                     u1310:
  1111  0405                     l1461:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1114  0405  302D               	movlw	45
  1115  0406  00A7               	movwf	??_sprintf
  1116  0407  082F               	movf	sprintf@sp,w
  1117  0408  0084               	movwf	4
  1118  0409  0827               	movf	??_sprintf,w
  1119  040A  1383               	bcf	3,7	;select IRP bank0
  1120  040B  0080               	movwf	0
  1121  040C                     l1463:
  1122  040C  3001               	movlw	1
  1123  040D  00A7               	movwf	??_sprintf
  1124  040E  0827               	movf	??_sprintf,w
  1125  040F  07AF               	addwf	sprintf@sp,f
  1126  0410                     l1465:
  1127                           
  1128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1129  0410  0830               	movf	sprintf@c,w
  1130  0411  00A7               	movwf	??_sprintf
  1131  0412  0827               	movf	??_sprintf,w
  1132  0413  00AC               	movwf	sprintf@prec
  1133                           
  1134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1135  0414  2C50               	goto	l1473
  1136  0415                     l1467:
  1137                           
  1138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1139  0415  300A               	movlw	10
  1140  0416  00A0               	movwf	___lwmod@divisor
  1141  0417  3000               	movlw	0
  1142  0418  00A1               	movwf	___lwmod@divisor+1
  1143  0419  082C               	movf	sprintf@prec,w
  1144  041A  00A7               	movwf	??_sprintf
  1145  041B  0727               	addwf	??_sprintf,w
  1146  041C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1147  041D  0084               	movwf	4
  1148  041E  120A  158A  2000  120A  118A  	fcall	stringdir
  1149  0423  00F2               	movwf	___lwdiv@divisor
  1150  0424  120A  158A  2000  120A  118A  	fcall	stringdir
  1151  0429  00F3               	movwf	___lwdiv@divisor+1
  1152  042A  082E               	movf	sprintf@val+1,w
  1153  042B  00F5               	movwf	___lwdiv@dividend+1
  1154  042C  082D               	movf	sprintf@val,w
  1155  042D  00F4               	movwf	___lwdiv@dividend
  1156  042E  120A  118A  2727  120A  118A  	fcall	___lwdiv
  1157  0433  0873               	movf	?___lwdiv+1,w
  1158  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0436  00A3               	movwf	___lwmod@dividend+1
  1161  0437  0872               	movf	?___lwdiv,w
  1162  0438  00A2               	movwf	___lwmod@dividend
  1163  0439  120A  118A  276B  120A  118A  	fcall	___lwmod
  1164  043E  1283               	bcf	3,5	;RP0=0, select bank0
  1165  043F  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0440  0820               	movf	?___lwmod,w
  1167  0441  3E30               	addlw	48
  1168  0442  00A8               	movwf	??_sprintf+1
  1169  0443  0828               	movf	??_sprintf+1,w
  1170  0444  00B0               	movwf	sprintf@c
  1171  0445                     l1469:
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1174  0445  0830               	movf	sprintf@c,w
  1175  0446  00A7               	movwf	??_sprintf
  1176  0447  082F               	movf	sprintf@sp,w
  1177  0448  0084               	movwf	4
  1178  0449  0827               	movf	??_sprintf,w
  1179  044A  1383               	bcf	3,7	;select IRP bank0
  1180  044B  0080               	movwf	0
  1181  044C                     l1471:
  1182  044C  3001               	movlw	1
  1183  044D  00A7               	movwf	??_sprintf
  1184  044E  0827               	movf	??_sprintf,w
  1185  044F  07AF               	addwf	sprintf@sp,f
  1186  0450                     l1473:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1189  0450  30FF               	movlw	255
  1190  0451  00A7               	movwf	??_sprintf
  1191  0452  0827               	movf	??_sprintf,w
  1192  0453  07AC               	addwf	sprintf@prec,f
  1193  0454  0A2C               	incf	sprintf@prec,w
  1194  0455  1D03               	btfss	3,2
  1195  0456  2C58               	goto	u1321
  1196  0457  2C59               	goto	u1320
  1197  0458                     u1321:
  1198  0458  2C15               	goto	l1467
  1199  0459                     u1320:
  1200  0459                     l1475:
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1203  0459  3001               	movlw	1
  1204  045A  07A4               	addwf	sprintf@f,f
  1205  045B  30FF               	movlw	-1
  1206  045C  0724               	addwf	sprintf@f,w
  1207  045D  0084               	movwf	4
  1208  045E  120A  158A  2000  120A  118A  	fcall	stringdir
  1209  0463  00A7               	movwf	??_sprintf
  1210  0464  0827               	movf	??_sprintf,w
  1211  0465  00B0               	movwf	sprintf@c
  1212  0466  0830               	movf	sprintf@c,w
  1213  0467  1D03               	btfss	3,2
  1214  0468  2C6A               	goto	u1331
  1215  0469  2C6B               	goto	u1330
  1216  046A                     u1331:
  1217  046A  2B8E               	goto	l1425
  1218  046B                     u1330:
  1219  046B                     l1477:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1222  046B  082F               	movf	sprintf@sp,w
  1223  046C  0084               	movwf	4
  1224  046D  1383               	bcf	3,7	;select IRP bank0
  1225  046E  0180               	clrf	0
  1226  046F                     l239:
  1227  046F  0008               	return
  1228  0470                     __end_of_sprintf:
  1229                           
  1230                           	psect	text2
  1231  076B                     __ptext2:	
  1232 ;; *************** function ___lwmod *****************
  1233 ;; Defined at:
  1234 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  divisor         2    0[BANK0 ] unsigned int 
  1237 ;;  dividend        2    2[BANK0 ] unsigned int 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  counter         1   11[COMMON] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2    0[BANK0 ] unsigned int 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       4       0       0       0
  1250 ;;      Locals:         1       0       0       0       0
  1251 ;;      Temps:          1       0       0       0       0
  1252 ;;      Totals:         2       4       0       0       0
  1253 ;;Total ram usage:        6 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_sprintf
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function ___lwmod
  1265  076B                     ___lwmod:
  1266  076B                     l1337:	
  1267                           ;incstack = 0
  1268                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1269                           
  1270  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1271  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1272  076D  0820               	movf	___lwmod@divisor,w
  1273  076E  0421               	iorwf	___lwmod@divisor+1,w
  1274  076F  1903               	btfsc	3,2
  1275  0770  2F72               	goto	u1121
  1276  0771  2F73               	goto	u1120
  1277  0772                     u1121:
  1278  0772  2FA2               	goto	l1355
  1279  0773                     u1120:
  1280  0773                     l1339:
  1281  0773  01FB               	clrf	___lwmod@counter
  1282  0774  0AFB               	incf	___lwmod@counter,f
  1283  0775  2F81               	goto	l1345
  1284  0776                     l1341:
  1285  0776  3001               	movlw	1
  1286  0777                     u1135:
  1287  0777  1003               	clrc
  1288  0778  0DA0               	rlf	___lwmod@divisor,f
  1289  0779  0DA1               	rlf	___lwmod@divisor+1,f
  1290  077A  3EFF               	addlw	-1
  1291  077B  1D03               	skipz
  1292  077C  2F77               	goto	u1135
  1293  077D                     l1343:
  1294  077D  3001               	movlw	1
  1295  077E  00FA               	movwf	??___lwmod
  1296  077F  087A               	movf	??___lwmod,w
  1297  0780  07FB               	addwf	___lwmod@counter,f
  1298  0781                     l1345:
  1299  0781  1FA1               	btfss	___lwmod@divisor+1,7
  1300  0782  2F84               	goto	u1141
  1301  0783  2F85               	goto	u1140
  1302  0784                     u1141:
  1303  0784  2F76               	goto	l1341
  1304  0785                     u1140:
  1305  0785                     l1347:
  1306  0785  0821               	movf	___lwmod@divisor+1,w
  1307  0786  0223               	subwf	___lwmod@dividend+1,w
  1308  0787  1D03               	skipz
  1309  0788  2F8B               	goto	u1155
  1310  0789  0820               	movf	___lwmod@divisor,w
  1311  078A  0222               	subwf	___lwmod@dividend,w
  1312  078B                     u1155:
  1313  078B  1C03               	skipc
  1314  078C  2F8E               	goto	u1151
  1315  078D  2F8F               	goto	u1150
  1316  078E                     u1151:
  1317  078E  2F95               	goto	l1351
  1318  078F                     u1150:
  1319  078F                     l1349:
  1320  078F  0820               	movf	___lwmod@divisor,w
  1321  0790  02A2               	subwf	___lwmod@dividend,f
  1322  0791  0821               	movf	___lwmod@divisor+1,w
  1323  0792  1C03               	skipc
  1324  0793  03A3               	decf	___lwmod@dividend+1,f
  1325  0794  02A3               	subwf	___lwmod@dividend+1,f
  1326  0795                     l1351:
  1327  0795  3001               	movlw	1
  1328  0796                     u1165:
  1329  0796  1003               	clrc
  1330  0797  0CA1               	rrf	___lwmod@divisor+1,f
  1331  0798  0CA0               	rrf	___lwmod@divisor,f
  1332  0799  3EFF               	addlw	-1
  1333  079A  1D03               	skipz
  1334  079B  2F96               	goto	u1165
  1335  079C                     l1353:
  1336  079C  3001               	movlw	1
  1337  079D  02FB               	subwf	___lwmod@counter,f
  1338  079E  1D03               	btfss	3,2
  1339  079F  2FA1               	goto	u1171
  1340  07A0  2FA2               	goto	u1170
  1341  07A1                     u1171:
  1342  07A1  2F85               	goto	l1347
  1343  07A2                     u1170:
  1344  07A2                     l1355:
  1345  07A2  0823               	movf	___lwmod@dividend+1,w
  1346  07A3  00A1               	movwf	?___lwmod+1
  1347  07A4  0822               	movf	___lwmod@dividend,w
  1348  07A5  00A0               	movwf	?___lwmod
  1349  07A6                     l525:
  1350  07A6  0008               	return
  1351  07A7                     __end_of___lwmod:
  1352                           
  1353                           	psect	text3
  1354  0727                     __ptext3:	
  1355 ;; *************** function ___lwdiv *****************
  1356 ;; Defined at:
  1357 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  divisor         2    2[COMMON] unsigned int 
  1360 ;;  dividend        2    4[COMMON] unsigned int 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  quotient        2    7[COMMON] unsigned int 
  1363 ;;  counter         1    9[COMMON] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2    2[COMMON] unsigned int 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         4       0       0       0       0
  1374 ;;      Locals:         3       0       0       0       0
  1375 ;;      Temps:          1       0       0       0       0
  1376 ;;      Totals:         8       0       0       0       0
  1377 ;;Total ram usage:        8 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;;		_sprintf
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function ___lwdiv
  1390  0727                     ___lwdiv:
  1391  0727                     l1311:	
  1392                           ;incstack = 0
  1393                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1394                           
  1395  0727  01F7               	clrf	___lwdiv@quotient
  1396  0728  01F8               	clrf	___lwdiv@quotient+1
  1397  0729                     l1313:
  1398  0729  0872               	movf	___lwdiv@divisor,w
  1399  072A  0473               	iorwf	___lwdiv@divisor+1,w
  1400  072B  1903               	btfsc	3,2
  1401  072C  2F2E               	goto	u1051
  1402  072D  2F2F               	goto	u1050
  1403  072E                     u1051:
  1404  072E  2F66               	goto	l1333
  1405  072F                     u1050:
  1406  072F                     l1315:
  1407  072F  01F9               	clrf	___lwdiv@counter
  1408  0730  0AF9               	incf	___lwdiv@counter,f
  1409  0731  2F3D               	goto	l1321
  1410  0732                     l1317:
  1411  0732  3001               	movlw	1
  1412  0733                     u1065:
  1413  0733  1003               	clrc
  1414  0734  0DF2               	rlf	___lwdiv@divisor,f
  1415  0735  0DF3               	rlf	___lwdiv@divisor+1,f
  1416  0736  3EFF               	addlw	-1
  1417  0737  1D03               	skipz
  1418  0738  2F33               	goto	u1065
  1419  0739                     l1319:
  1420  0739  3001               	movlw	1
  1421  073A  00F6               	movwf	??___lwdiv
  1422  073B  0876               	movf	??___lwdiv,w
  1423  073C  07F9               	addwf	___lwdiv@counter,f
  1424  073D                     l1321:
  1425  073D  1FF3               	btfss	___lwdiv@divisor+1,7
  1426  073E  2F40               	goto	u1071
  1427  073F  2F41               	goto	u1070
  1428  0740                     u1071:
  1429  0740  2F32               	goto	l1317
  1430  0741                     u1070:
  1431  0741                     l1323:
  1432  0741  3001               	movlw	1
  1433  0742                     u1085:
  1434  0742  1003               	clrc
  1435  0743  0DF7               	rlf	___lwdiv@quotient,f
  1436  0744  0DF8               	rlf	___lwdiv@quotient+1,f
  1437  0745  3EFF               	addlw	-1
  1438  0746  1D03               	skipz
  1439  0747  2F42               	goto	u1085
  1440  0748  0873               	movf	___lwdiv@divisor+1,w
  1441  0749  0275               	subwf	___lwdiv@dividend+1,w
  1442  074A  1D03               	skipz
  1443  074B  2F4E               	goto	u1095
  1444  074C  0872               	movf	___lwdiv@divisor,w
  1445  074D  0274               	subwf	___lwdiv@dividend,w
  1446  074E                     u1095:
  1447  074E  1C03               	skipc
  1448  074F  2F51               	goto	u1091
  1449  0750  2F52               	goto	u1090
  1450  0751                     u1091:
  1451  0751  2F59               	goto	l1329
  1452  0752                     u1090:
  1453  0752                     l1325:
  1454  0752  0872               	movf	___lwdiv@divisor,w
  1455  0753  02F4               	subwf	___lwdiv@dividend,f
  1456  0754  0873               	movf	___lwdiv@divisor+1,w
  1457  0755  1C03               	skipc
  1458  0756  03F5               	decf	___lwdiv@dividend+1,f
  1459  0757  02F5               	subwf	___lwdiv@dividend+1,f
  1460  0758                     l1327:
  1461  0758  1477               	bsf	___lwdiv@quotient,0
  1462  0759                     l1329:
  1463  0759  3001               	movlw	1
  1464  075A                     u1105:
  1465  075A  1003               	clrc
  1466  075B  0CF3               	rrf	___lwdiv@divisor+1,f
  1467  075C  0CF2               	rrf	___lwdiv@divisor,f
  1468  075D  3EFF               	addlw	-1
  1469  075E  1D03               	skipz
  1470  075F  2F5A               	goto	u1105
  1471  0760                     l1331:
  1472  0760  3001               	movlw	1
  1473  0761  02F9               	subwf	___lwdiv@counter,f
  1474  0762  1D03               	btfss	3,2
  1475  0763  2F65               	goto	u1111
  1476  0764  2F66               	goto	u1110
  1477  0765                     u1111:
  1478  0765  2F41               	goto	l1323
  1479  0766                     u1110:
  1480  0766                     l1333:
  1481  0766  0878               	movf	___lwdiv@quotient+1,w
  1482  0767  00F3               	movwf	?___lwdiv+1
  1483  0768  0877               	movf	___lwdiv@quotient,w
  1484  0769  00F2               	movwf	?___lwdiv
  1485  076A                     l515:
  1486  076A  0008               	return
  1487  076B                     __end_of___lwdiv:
  1488                           
  1489                           	psect	text4
  1490  053A                     __ptext4:	
  1491 ;; *************** function ___xxtofl *****************
  1492 ;; Defined at:
  1493 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  sign            1    wreg     unsigned char 
  1496 ;;  val             4    2[COMMON] long 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  sign            1    0[BANK0 ] unsigned char 
  1499 ;;  arg             4    2[BANK0 ] unsigned long 
  1500 ;;  exp             1    1[BANK0 ] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  4    2[COMMON] unsigned char 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         4       0       0       0       0
  1511 ;;      Locals:         0       6       0       0       0
  1512 ;;      Temps:          4       0       0       0       0
  1513 ;;      Totals:         8       6       0       0       0
  1514 ;;Total ram usage:       14 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function ___xxtofl
  1526  053A                     ___xxtofl:
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1530                           ;___xxtofl@sign stored from wreg
  1531  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1532  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1533  053C  00A0               	movwf	___xxtofl@sign
  1534  053D                     l1661:
  1535  053D  0820               	movf	___xxtofl@sign,w
  1536  053E  1903               	btfsc	3,2
  1537  053F  2D41               	goto	u1811
  1538  0540  2D42               	goto	u1810
  1539  0541                     u1811:
  1540  0541  2D56               	goto	l1667
  1541  0542                     u1810:
  1542  0542                     l1663:
  1543  0542  1FF5               	btfss	___xxtofl@val+3,7
  1544  0543  2D45               	goto	u1821
  1545  0544  2D46               	goto	u1820
  1546  0545                     u1821:
  1547  0545  2D56               	goto	l1667
  1548  0546                     u1820:
  1549  0546                     l1665:
  1550  0546  0972               	comf	___xxtofl@val,w
  1551  0547  00A2               	movwf	___xxtofl@arg
  1552  0548  0973               	comf	___xxtofl@val+1,w
  1553  0549  00A3               	movwf	___xxtofl@arg+1
  1554  054A  0974               	comf	___xxtofl@val+2,w
  1555  054B  00A4               	movwf	___xxtofl@arg+2
  1556  054C  0975               	comf	___xxtofl@val+3,w
  1557  054D  00A5               	movwf	___xxtofl@arg+3
  1558  054E  0AA2               	incf	___xxtofl@arg,f
  1559  054F  1903               	skipnz
  1560  0550  0AA3               	incf	___xxtofl@arg+1,f
  1561  0551  1903               	skipnz
  1562  0552  0AA4               	incf	___xxtofl@arg+2,f
  1563  0553  1903               	skipnz
  1564  0554  0AA5               	incf	___xxtofl@arg+3,f
  1565  0555  2D5E               	goto	l676
  1566  0556                     l1667:
  1567  0556  0875               	movf	___xxtofl@val+3,w
  1568  0557  00A5               	movwf	___xxtofl@arg+3
  1569  0558  0874               	movf	___xxtofl@val+2,w
  1570  0559  00A4               	movwf	___xxtofl@arg+2
  1571  055A  0873               	movf	___xxtofl@val+1,w
  1572  055B  00A3               	movwf	___xxtofl@arg+1
  1573  055C  0872               	movf	___xxtofl@val,w
  1574  055D  00A2               	movwf	___xxtofl@arg
  1575  055E                     l676:
  1576  055E  0875               	movf	___xxtofl@val+3,w
  1577  055F  0474               	iorwf	___xxtofl@val+2,w
  1578  0560  0473               	iorwf	___xxtofl@val+1,w
  1579  0561  0472               	iorwf	___xxtofl@val,w
  1580  0562  1D03               	skipz
  1581  0563  2D65               	goto	u1831
  1582  0564  2D66               	goto	u1830
  1583  0565                     u1831:
  1584  0565  2D6F               	goto	l1673
  1585  0566                     u1830:
  1586  0566                     l1669:
  1587  0566  3000               	movlw	0
  1588  0567  00F5               	movwf	?___xxtofl+3
  1589  0568  3000               	movlw	0
  1590  0569  00F4               	movwf	?___xxtofl+2
  1591  056A  3000               	movlw	0
  1592  056B  00F3               	movwf	?___xxtofl+1
  1593  056C  3000               	movlw	0
  1594  056D  00F2               	movwf	?___xxtofl
  1595  056E  2DF5               	goto	l678
  1596  056F                     l1673:
  1597  056F  3096               	movlw	150
  1598  0570  00F6               	movwf	??___xxtofl
  1599  0571  0876               	movf	??___xxtofl,w
  1600  0572  00A1               	movwf	___xxtofl@exp
  1601  0573  2D81               	goto	l1677
  1602  0574                     l1675:
  1603  0574  3001               	movlw	1
  1604  0575  00F6               	movwf	??___xxtofl
  1605  0576  0876               	movf	??___xxtofl,w
  1606  0577  07A1               	addwf	___xxtofl@exp,f
  1607  0578  3001               	movlw	1
  1608  0579                     u1845:
  1609  0579  1003               	clrc
  1610  057A  0CA5               	rrf	___xxtofl@arg+3,f
  1611  057B  0CA4               	rrf	___xxtofl@arg+2,f
  1612  057C  0CA3               	rrf	___xxtofl@arg+1,f
  1613  057D  0CA2               	rrf	___xxtofl@arg,f
  1614  057E  3EFF               	addlw	-1
  1615  057F  1D03               	skipz
  1616  0580  2D79               	goto	u1845
  1617  0581                     l1677:
  1618  0581  30FE               	movlw	254
  1619  0582  0525               	andwf	___xxtofl@arg+3,w
  1620  0583  1D03               	btfss	3,2
  1621  0584  2D86               	goto	u1851
  1622  0585  2D87               	goto	u1850
  1623  0586                     u1851:
  1624  0586  2D74               	goto	l1675
  1625  0587                     u1850:
  1626  0587  2DA3               	goto	l682
  1627  0588                     l1679:
  1628  0588  3001               	movlw	1
  1629  0589  00F6               	movwf	??___xxtofl
  1630  058A  0876               	movf	??___xxtofl,w
  1631  058B  07A1               	addwf	___xxtofl@exp,f
  1632  058C                     l1681:
  1633  058C  3001               	movlw	1
  1634  058D  07A2               	addwf	___xxtofl@arg,f
  1635  058E  3000               	movlw	0
  1636  058F  1803               	skipnc
  1637  0590  3001               	movlw	1
  1638  0591  07A3               	addwf	___xxtofl@arg+1,f
  1639  0592  3000               	movlw	0
  1640  0593  1803               	skipnc
  1641  0594  3001               	movlw	1
  1642  0595  07A4               	addwf	___xxtofl@arg+2,f
  1643  0596  3000               	movlw	0
  1644  0597  1803               	skipnc
  1645  0598  3001               	movlw	1
  1646  0599  07A5               	addwf	___xxtofl@arg+3,f
  1647  059A                     l1683:
  1648  059A  3001               	movlw	1
  1649  059B                     u1865:
  1650  059B  1003               	clrc
  1651  059C  0CA5               	rrf	___xxtofl@arg+3,f
  1652  059D  0CA4               	rrf	___xxtofl@arg+2,f
  1653  059E  0CA3               	rrf	___xxtofl@arg+1,f
  1654  059F  0CA2               	rrf	___xxtofl@arg,f
  1655  05A0  3EFF               	addlw	-1
  1656  05A1  1D03               	skipz
  1657  05A2  2D9B               	goto	u1865
  1658  05A3                     l682:
  1659  05A3  30FF               	movlw	255
  1660  05A4  0525               	andwf	___xxtofl@arg+3,w
  1661  05A5  1D03               	btfss	3,2
  1662  05A6  2DA8               	goto	u1871
  1663  05A7  2DA9               	goto	u1870
  1664  05A8                     u1871:
  1665  05A8  2D88               	goto	l1679
  1666  05A9                     u1870:
  1667  05A9  2DB5               	goto	l1687
  1668  05AA                     l1685:
  1669  05AA  3001               	movlw	1
  1670  05AB  02A1               	subwf	___xxtofl@exp,f
  1671  05AC  3001               	movlw	1
  1672  05AD  00F6               	movwf	??___xxtofl
  1673  05AE                     u1885:
  1674  05AE  1003               	clrc
  1675  05AF  0DA2               	rlf	___xxtofl@arg,f
  1676  05B0  0DA3               	rlf	___xxtofl@arg+1,f
  1677  05B1  0DA4               	rlf	___xxtofl@arg+2,f
  1678  05B2  0DA5               	rlf	___xxtofl@arg+3,f
  1679  05B3  0BF6               	decfsz	??___xxtofl,f
  1680  05B4  2DAE               	goto	u1885
  1681  05B5                     l1687:
  1682  05B5  1BA4               	btfsc	___xxtofl@arg+2,7
  1683  05B6  2DB8               	goto	u1891
  1684  05B7  2DB9               	goto	u1890
  1685  05B8                     u1891:
  1686  05B8  2DBF               	goto	l689
  1687  05B9                     u1890:
  1688  05B9                     l1689:
  1689  05B9  3002               	movlw	2
  1690  05BA  0221               	subwf	___xxtofl@exp,w
  1691  05BB  1803               	skipnc
  1692  05BC  2DBE               	goto	u1901
  1693  05BD  2DBF               	goto	u1900
  1694  05BE                     u1901:
  1695  05BE  2DAA               	goto	l1685
  1696  05BF                     u1900:
  1697  05BF                     l689:
  1698  05BF  1821               	btfsc	___xxtofl@exp,0
  1699  05C0  2DC2               	goto	u1911
  1700  05C1  2DC3               	goto	u1910
  1701  05C2                     u1911:
  1702  05C2  2DCB               	goto	l690
  1703  05C3                     u1910:
  1704  05C3                     l1691:
  1705  05C3  30FF               	movlw	255
  1706  05C4  05A2               	andwf	___xxtofl@arg,f
  1707  05C5  30FF               	movlw	255
  1708  05C6  05A3               	andwf	___xxtofl@arg+1,f
  1709  05C7  307F               	movlw	127
  1710  05C8  05A4               	andwf	___xxtofl@arg+2,f
  1711  05C9  30FF               	movlw	255
  1712  05CA  05A5               	andwf	___xxtofl@arg+3,f
  1713  05CB                     l690:
  1714  05CB  1003               	clrc
  1715  05CC  0CA1               	rrf	___xxtofl@exp,f
  1716  05CD                     l1693:
  1717  05CD  0821               	movf	___xxtofl@exp,w
  1718  05CE  00F6               	movwf	??___xxtofl
  1719  05CF  01F7               	clrf	??___xxtofl+1
  1720  05D0  01F8               	clrf	??___xxtofl+2
  1721  05D1  01F9               	clrf	??___xxtofl+3
  1722  05D2  3018               	movlw	24
  1723  05D3                     u1925:
  1724  05D3  1003               	clrc
  1725  05D4  0DF6               	rlf	??___xxtofl,f
  1726  05D5  0DF7               	rlf	??___xxtofl+1,f
  1727  05D6  0DF8               	rlf	??___xxtofl+2,f
  1728  05D7  0DF9               	rlf	??___xxtofl+3,f
  1729  05D8                     u1920:
  1730  05D8  3EFF               	addlw	-1
  1731  05D9  1D03               	skipz
  1732  05DA  2DD3               	goto	u1925
  1733  05DB  0876               	movf	??___xxtofl,w
  1734  05DC  04A2               	iorwf	___xxtofl@arg,f
  1735  05DD  0877               	movf	??___xxtofl+1,w
  1736  05DE  04A3               	iorwf	___xxtofl@arg+1,f
  1737  05DF  0878               	movf	??___xxtofl+2,w
  1738  05E0  04A4               	iorwf	___xxtofl@arg+2,f
  1739  05E1  0879               	movf	??___xxtofl+3,w
  1740  05E2  04A5               	iorwf	___xxtofl@arg+3,f
  1741  05E3                     l1695:
  1742  05E3  0820               	movf	___xxtofl@sign,w
  1743  05E4  1903               	btfsc	3,2
  1744  05E5  2DE7               	goto	u1931
  1745  05E6  2DE8               	goto	u1930
  1746  05E7                     u1931:
  1747  05E7  2DED               	goto	l1701
  1748  05E8                     u1930:
  1749  05E8                     l1697:
  1750  05E8  1FF5               	btfss	___xxtofl@val+3,7
  1751  05E9  2DEB               	goto	u1941
  1752  05EA  2DEC               	goto	u1940
  1753  05EB                     u1941:
  1754  05EB  2DED               	goto	l1701
  1755  05EC                     u1940:
  1756  05EC                     l1699:
  1757  05EC  17A5               	bsf	___xxtofl@arg+3,7
  1758  05ED                     l1701:
  1759  05ED  0825               	movf	___xxtofl@arg+3,w
  1760  05EE  00F5               	movwf	?___xxtofl+3
  1761  05EF  0824               	movf	___xxtofl@arg+2,w
  1762  05F0  00F4               	movwf	?___xxtofl+2
  1763  05F1  0823               	movf	___xxtofl@arg+1,w
  1764  05F2  00F3               	movwf	?___xxtofl+1
  1765  05F3  0822               	movf	___xxtofl@arg,w
  1766  05F4  00F2               	movwf	?___xxtofl
  1767  05F5                     l678:
  1768  05F5  0008               	return
  1769  05F6                     __end_of___xxtofl:
  1770                           
  1771                           	psect	text5
  1772  05F6                     __ptext5:	
  1773 ;; *************** function ___fltol *****************
  1774 ;; Defined at:
  1775 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  f1              4   32[BANK0 ] unsigned char 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  exp1            1   42[BANK0 ] unsigned char 
  1780 ;;  sign1           1   41[BANK0 ] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  4   32[BANK0 ] long 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       4       0       0       0
  1791 ;;      Locals:         0       2       0       0       0
  1792 ;;      Temps:          0       5       0       0       0
  1793 ;;      Totals:         0      11       0       0       0
  1794 ;;Total ram usage:       11 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function ___fltol
  1806  05F6                     ___fltol:
  1807  05F6                     l1485:	
  1808                           ;incstack = 0
  1809                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1810                           
  1811  05F6  1003               	clrc
  1812  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1813  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1814  05F9  0D42               	rlf	___fltol@f1+2,w
  1815  05FA  0D43               	rlf	___fltol@f1+3,w
  1816  05FB  00C4               	movwf	??___fltol
  1817  05FC  0844               	movf	??___fltol,w
  1818  05FD  00CA               	movwf	___fltol@exp1
  1819  05FE  084A               	movf	___fltol@exp1,w
  1820  05FF  1D03               	btfss	3,2
  1821  0600  2E02               	goto	u1341
  1822  0601  2E03               	goto	u1340
  1823  0602                     u1341:
  1824  0602  2E0C               	goto	l1491
  1825  0603                     u1340:
  1826  0603                     l1487:
  1827  0603  3000               	movlw	0
  1828  0604  00C3               	movwf	?___fltol+3
  1829  0605  3000               	movlw	0
  1830  0606  00C2               	movwf	?___fltol+2
  1831  0607  3000               	movlw	0
  1832  0608  00C1               	movwf	?___fltol+1
  1833  0609  3000               	movlw	0
  1834  060A  00C0               	movwf	?___fltol
  1835  060B  2E71               	goto	l429
  1836  060C                     l1491:
  1837  060C  0840               	movf	___fltol@f1,w
  1838  060D  00C4               	movwf	??___fltol
  1839  060E  0841               	movf	___fltol@f1+1,w
  1840  060F  00C5               	movwf	??___fltol+1
  1841  0610  0842               	movf	___fltol@f1+2,w
  1842  0611  00C6               	movwf	??___fltol+2
  1843  0612  0843               	movf	___fltol@f1+3,w
  1844  0613  00C7               	movwf	??___fltol+3
  1845  0614  301F               	movlw	31
  1846  0615                     u1355:
  1847  0615  1003               	clrc
  1848  0616  0CC7               	rrf	??___fltol+3,f
  1849  0617  0CC6               	rrf	??___fltol+2,f
  1850  0618  0CC5               	rrf	??___fltol+1,f
  1851  0619  0CC4               	rrf	??___fltol,f
  1852  061A                     u1350:
  1853  061A  3EFF               	addlw	-1
  1854  061B  1D03               	skipz
  1855  061C  2E15               	goto	u1355
  1856  061D  0844               	movf	??___fltol,w
  1857  061E  00C8               	movwf	??___fltol+4
  1858  061F  0848               	movf	??___fltol+4,w
  1859  0620  00C9               	movwf	___fltol@sign1
  1860  0621                     l1493:
  1861  0621  17C2               	bsf	___fltol@f1+2,7
  1862  0622                     l1495:
  1863  0622  30FF               	movlw	255
  1864  0623  05C0               	andwf	___fltol@f1,f
  1865  0624  30FF               	movlw	255
  1866  0625  05C1               	andwf	___fltol@f1+1,f
  1867  0626  30FF               	movlw	255
  1868  0627  05C2               	andwf	___fltol@f1+2,f
  1869  0628  3000               	movlw	0
  1870  0629  05C3               	andwf	___fltol@f1+3,f
  1871  062A                     l1497:
  1872  062A  3096               	movlw	150
  1873  062B  02CA               	subwf	___fltol@exp1,f
  1874  062C                     l1499:
  1875  062C  1FCA               	btfss	___fltol@exp1,7
  1876  062D  2E2F               	goto	u1361
  1877  062E  2E30               	goto	u1360
  1878  062F                     u1361:
  1879  062F  2E4A               	goto	l1509
  1880  0630                     u1360:
  1881  0630                     l1501:
  1882  0630  084A               	movf	___fltol@exp1,w
  1883  0631  3A80               	xorlw	128
  1884  0632  3E97               	addlw	151
  1885  0633  1803               	skipnc
  1886  0634  2E36               	goto	u1371
  1887  0635  2E37               	goto	u1370
  1888  0636                     u1371:
  1889  0636  2E38               	goto	l1507
  1890  0637                     u1370:
  1891  0637  2E03               	goto	l1487
  1892  0638                     l1507:
  1893  0638  3001               	movlw	1
  1894  0639                     u1385:
  1895  0639  1003               	clrc
  1896  063A  0CC3               	rrf	___fltol@f1+3,f
  1897  063B  0CC2               	rrf	___fltol@f1+2,f
  1898  063C  0CC1               	rrf	___fltol@f1+1,f
  1899  063D  0CC0               	rrf	___fltol@f1,f
  1900  063E  3EFF               	addlw	-1
  1901  063F  1D03               	skipz
  1902  0640  2E39               	goto	u1385
  1903  0641  3001               	movlw	1
  1904  0642  00C4               	movwf	??___fltol
  1905  0643  0844               	movf	??___fltol,w
  1906  0644  07CA               	addwf	___fltol@exp1,f
  1907  0645  1D03               	btfss	3,2
  1908  0646  2E48               	goto	u1391
  1909  0647  2E49               	goto	u1390
  1910  0648                     u1391:
  1911  0648  2E38               	goto	l1507
  1912  0649                     u1390:
  1913  0649  2E61               	goto	l1517
  1914  064A                     l1509:
  1915  064A  3020               	movlw	32
  1916  064B  024A               	subwf	___fltol@exp1,w
  1917  064C  1C03               	skipc
  1918  064D  2E4F               	goto	u1401
  1919  064E  2E50               	goto	u1400
  1920  064F                     u1401:
  1921  064F  2E5C               	goto	l436
  1922  0650                     u1400:
  1923  0650  2E03               	goto	l1487
  1924  0651                     l1515:
  1925  0651  3001               	movlw	1
  1926  0652  00C4               	movwf	??___fltol
  1927  0653                     u1415:
  1928  0653  1003               	clrc
  1929  0654  0DC0               	rlf	___fltol@f1,f
  1930  0655  0DC1               	rlf	___fltol@f1+1,f
  1931  0656  0DC2               	rlf	___fltol@f1+2,f
  1932  0657  0DC3               	rlf	___fltol@f1+3,f
  1933  0658  0BC4               	decfsz	??___fltol,f
  1934  0659  2E53               	goto	u1415
  1935  065A  3001               	movlw	1
  1936  065B  02CA               	subwf	___fltol@exp1,f
  1937  065C                     l436:
  1938  065C  084A               	movf	___fltol@exp1,w
  1939  065D  1D03               	btfss	3,2
  1940  065E  2E60               	goto	u1421
  1941  065F  2E61               	goto	u1420
  1942  0660                     u1421:
  1943  0660  2E51               	goto	l1515
  1944  0661                     u1420:
  1945  0661                     l1517:
  1946  0661  0849               	movf	___fltol@sign1,w
  1947  0662  1903               	btfsc	3,2
  1948  0663  2E65               	goto	u1431
  1949  0664  2E66               	goto	u1430
  1950  0665                     u1431:
  1951  0665  2E71               	goto	l439
  1952  0666                     u1430:
  1953  0666                     l1519:
  1954  0666  09C0               	comf	___fltol@f1,f
  1955  0667  09C1               	comf	___fltol@f1+1,f
  1956  0668  09C2               	comf	___fltol@f1+2,f
  1957  0669  09C3               	comf	___fltol@f1+3,f
  1958  066A  0AC0               	incf	___fltol@f1,f
  1959  066B  1903               	skipnz
  1960  066C  0AC1               	incf	___fltol@f1+1,f
  1961  066D  1903               	skipnz
  1962  066E  0AC2               	incf	___fltol@f1+2,f
  1963  066F  1903               	skipnz
  1964  0670  0AC3               	incf	___fltol@f1+3,f
  1965  0671                     l439:
  1966  0671                     l429:
  1967  0671  0008               	return
  1968  0672                     __end_of___fltol:
  1969                           
  1970                           	psect	text6
  1971  0025                     __ptext6:	
  1972 ;; *************** function ___flmul *****************
  1973 ;; Defined at:
  1974 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  b               4    6[BANK0 ] long 
  1977 ;;  a               4   10[BANK0 ] long 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  prod            4   26[BANK0 ] struct .
  1980 ;;  grs             4   20[BANK0 ] unsigned long 
  1981 ;;  temp            2   30[BANK0 ] struct .
  1982 ;;  bexp            1   25[BANK0 ] unsigned char 
  1983 ;;  aexp            1   24[BANK0 ] unsigned char 
  1984 ;;  sign            1   19[BANK0 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  4    6[BANK0 ] unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         0       8       0       0       0
  1995 ;;      Locals:         0      13       0       0       0
  1996 ;;      Temps:          0       5       0       0       0
  1997 ;;      Totals:         0      26       0       0       0
  1998 ;;Total ram usage:       26 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    2
  2001 ;; This function calls:
  2002 ;;		__Umul8_16
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function ___flmul
  2010  0025                     ___flmul:
  2011  0025                     l1521:	
  2012                           ;incstack = 0
  2013                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2014                           
  2015  0025  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0026  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0027  0829               	movf	___flmul@b+3,w
  2018  0028  3980               	andlw	128
  2019  0029  00AE               	movwf	??___flmul
  2020  002A  082E               	movf	??___flmul,w
  2021  002B  00B3               	movwf	___flmul@sign
  2022  002C                     l1523:
  2023  002C  0829               	movf	___flmul@b+3,w
  2024  002D  00AE               	movwf	??___flmul
  2025  002E  072E               	addwf	??___flmul,w
  2026  002F  00AF               	movwf	??___flmul+1
  2027  0030  082F               	movf	??___flmul+1,w
  2028  0031  00B9               	movwf	___flmul@bexp
  2029  0032                     l1525:
  2030  0032  1FA8               	btfss	___flmul@b+2,7
  2031  0033  2835               	goto	u1441
  2032  0034  2836               	goto	u1440
  2033  0035                     u1441:
  2034  0035  2837               	goto	l1529
  2035  0036                     u1440:
  2036  0036                     l1527:
  2037  0036  1439               	bsf	___flmul@bexp,0
  2038  0037                     l1529:
  2039  0037  0839               	movf	___flmul@bexp,w
  2040  0038  1903               	btfsc	3,2
  2041  0039  283B               	goto	u1451
  2042  003A  283C               	goto	u1450
  2043  003B                     u1451:
  2044  003B  284B               	goto	l1537
  2045  003C                     u1450:
  2046  003C                     l1531:
  2047  003C  0A39               	incf	___flmul@bexp,w
  2048  003D  1D03               	btfss	3,2
  2049  003E  2840               	goto	u1461
  2050  003F  2841               	goto	u1460
  2051  0040                     u1461:
  2052  0040  2849               	goto	l1535
  2053  0041                     u1460:
  2054  0041                     l1533:
  2055  0041  3000               	movlw	0
  2056  0042  00A9               	movwf	___flmul@b+3
  2057  0043  3000               	movlw	0
  2058  0044  00A8               	movwf	___flmul@b+2
  2059  0045  3000               	movlw	0
  2060  0046  00A7               	movwf	___flmul@b+1
  2061  0047  3000               	movlw	0
  2062  0048  00A6               	movwf	___flmul@b
  2063  0049                     l1535:
  2064  0049  17A8               	bsf	___flmul@b+2,7
  2065  004A  2853               	goto	l1539
  2066  004B                     l1537:
  2067  004B  3000               	movlw	0
  2068  004C  00A9               	movwf	___flmul@b+3
  2069  004D  3000               	movlw	0
  2070  004E  00A8               	movwf	___flmul@b+2
  2071  004F  3000               	movlw	0
  2072  0050  00A7               	movwf	___flmul@b+1
  2073  0051  3000               	movlw	0
  2074  0052  00A6               	movwf	___flmul@b
  2075  0053                     l1539:
  2076  0053  082D               	movf	___flmul@a+3,w
  2077  0054  3980               	andlw	128
  2078  0055  00AE               	movwf	??___flmul
  2079  0056  082E               	movf	??___flmul,w
  2080  0057  06B3               	xorwf	___flmul@sign,f
  2081  0058                     l1541:
  2082  0058  082D               	movf	___flmul@a+3,w
  2083  0059  00AE               	movwf	??___flmul
  2084  005A  072E               	addwf	??___flmul,w
  2085  005B  00AF               	movwf	??___flmul+1
  2086  005C  082F               	movf	??___flmul+1,w
  2087  005D  00B8               	movwf	___flmul@aexp
  2088  005E                     l1543:
  2089  005E  1FAC               	btfss	___flmul@a+2,7
  2090  005F  2861               	goto	u1471
  2091  0060  2862               	goto	u1470
  2092  0061                     u1471:
  2093  0061  2863               	goto	l1547
  2094  0062                     u1470:
  2095  0062                     l1545:
  2096  0062  1438               	bsf	___flmul@aexp,0
  2097  0063                     l1547:
  2098  0063  0838               	movf	___flmul@aexp,w
  2099  0064  1903               	btfsc	3,2
  2100  0065  2867               	goto	u1481
  2101  0066  2868               	goto	u1480
  2102  0067                     u1481:
  2103  0067  2877               	goto	l1555
  2104  0068                     u1480:
  2105  0068                     l1549:
  2106  0068  0A38               	incf	___flmul@aexp,w
  2107  0069  1D03               	btfss	3,2
  2108  006A  286C               	goto	u1491
  2109  006B  286D               	goto	u1490
  2110  006C                     u1491:
  2111  006C  2875               	goto	l1553
  2112  006D                     u1490:
  2113  006D                     l1551:
  2114  006D  3000               	movlw	0
  2115  006E  00AD               	movwf	___flmul@a+3
  2116  006F  3000               	movlw	0
  2117  0070  00AC               	movwf	___flmul@a+2
  2118  0071  3000               	movlw	0
  2119  0072  00AB               	movwf	___flmul@a+1
  2120  0073  3000               	movlw	0
  2121  0074  00AA               	movwf	___flmul@a
  2122  0075                     l1553:
  2123  0075  17AC               	bsf	___flmul@a+2,7
  2124  0076  287F               	goto	l1557
  2125  0077                     l1555:
  2126  0077  3000               	movlw	0
  2127  0078  00AD               	movwf	___flmul@a+3
  2128  0079  3000               	movlw	0
  2129  007A  00AC               	movwf	___flmul@a+2
  2130  007B  3000               	movlw	0
  2131  007C  00AB               	movwf	___flmul@a+1
  2132  007D  3000               	movlw	0
  2133  007E  00AA               	movwf	___flmul@a
  2134  007F                     l1557:
  2135  007F  0838               	movf	___flmul@aexp,w
  2136  0080  1903               	btfsc	3,2
  2137  0081  2883               	goto	u1501
  2138  0082  2884               	goto	u1500
  2139  0083                     u1501:
  2140  0083  2889               	goto	l1561
  2141  0084                     u1500:
  2142  0084                     l1559:
  2143  0084  0839               	movf	___flmul@bexp,w
  2144  0085  1D03               	btfss	3,2
  2145  0086  2888               	goto	u1511
  2146  0087  2889               	goto	u1510
  2147  0088                     u1511:
  2148  0088  2892               	goto	l1565
  2149  0089                     u1510:
  2150  0089                     l1561:
  2151  0089  3000               	movlw	0
  2152  008A  00A9               	movwf	?___flmul+3
  2153  008B  3000               	movlw	0
  2154  008C  00A8               	movwf	?___flmul+2
  2155  008D  3000               	movlw	0
  2156  008E  00A7               	movwf	?___flmul+1
  2157  008F  3000               	movlw	0
  2158  0090  00A6               	movwf	?___flmul
  2159  0091  2B85               	goto	l632
  2160  0092                     l1565:
  2161  0092  0826               	movf	___flmul@b,w
  2162  0093  00AE               	movwf	??___flmul
  2163  0094  082E               	movf	??___flmul,w
  2164  0095  00F2               	movwf	__Umul8_16@multiplicand
  2165  0096  082C               	movf	___flmul@a+2,w
  2166  0097  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2167  009C  0873               	movf	?__Umul8_16+1,w
  2168  009D  1283               	bcf	3,5	;RP0=0, select bank0
  2169  009E  1303               	bcf	3,6	;RP1=0, select bank0
  2170  009F  00BF               	movwf	___flmul@temp+1
  2171  00A0  0872               	movf	?__Umul8_16,w
  2172  00A1  00BE               	movwf	___flmul@temp
  2173  00A2                     l1567:
  2174  00A2  083E               	movf	___flmul@temp,w
  2175  00A3  00AE               	movwf	??___flmul
  2176  00A4  01AF               	clrf	??___flmul+1
  2177  00A5  01B0               	clrf	??___flmul+2
  2178  00A6  01B1               	clrf	??___flmul+3
  2179  00A7  0831               	movf	??___flmul+3,w
  2180  00A8  00B7               	movwf	___flmul@grs+3
  2181  00A9  0830               	movf	??___flmul+2,w
  2182  00AA  00B6               	movwf	___flmul@grs+2
  2183  00AB  082F               	movf	??___flmul+1,w
  2184  00AC  00B5               	movwf	___flmul@grs+1
  2185  00AD  082E               	movf	??___flmul,w
  2186  00AE  00B4               	movwf	___flmul@grs
  2187  00AF                     l1569:
  2188  00AF  083F               	movf	___flmul@temp+1,w
  2189  00B0  00AE               	movwf	??___flmul
  2190  00B1  01AF               	clrf	??___flmul+1
  2191  00B2  01B0               	clrf	??___flmul+2
  2192  00B3  01B1               	clrf	??___flmul+3
  2193  00B4  0831               	movf	??___flmul+3,w
  2194  00B5  00BD               	movwf	___flmul@prod+3
  2195  00B6  0830               	movf	??___flmul+2,w
  2196  00B7  00BC               	movwf	___flmul@prod+2
  2197  00B8  082F               	movf	??___flmul+1,w
  2198  00B9  00BB               	movwf	___flmul@prod+1
  2199  00BA  082E               	movf	??___flmul,w
  2200  00BB  00BA               	movwf	___flmul@prod
  2201  00BC  0827               	movf	___flmul@b+1,w
  2202  00BD  00AE               	movwf	??___flmul
  2203  00BE  082E               	movf	??___flmul,w
  2204  00BF  00F2               	movwf	__Umul8_16@multiplicand
  2205  00C0  082B               	movf	___flmul@a+1,w
  2206  00C1  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2207  00C6  0873               	movf	?__Umul8_16+1,w
  2208  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2209  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2210  00C9  00BF               	movwf	___flmul@temp+1
  2211  00CA  0872               	movf	?__Umul8_16,w
  2212  00CB  00BE               	movwf	___flmul@temp
  2213  00CC                     l1571:
  2214  00CC  083E               	movf	___flmul@temp,w
  2215  00CD  00AE               	movwf	??___flmul
  2216  00CE  01AF               	clrf	??___flmul+1
  2217  00CF  01B0               	clrf	??___flmul+2
  2218  00D0  01B1               	clrf	??___flmul+3
  2219  00D1  082E               	movf	??___flmul,w
  2220  00D2  07B4               	addwf	___flmul@grs,f
  2221  00D3  082F               	movf	??___flmul+1,w
  2222  00D4  1103               	clrz
  2223  00D5  1803               	skipnc
  2224  00D6  3E01               	addlw	1
  2225  00D7  1903               	skipnz
  2226  00D8  28DA               	goto	u1521
  2227  00D9  07B5               	addwf	___flmul@grs+1,f
  2228  00DA                     u1521:
  2229  00DA  0830               	movf	??___flmul+2,w
  2230  00DB  1103               	clrz
  2231  00DC  1803               	skipnc
  2232  00DD  3E01               	addlw	1
  2233  00DE  1903               	skipnz
  2234  00DF  28E1               	goto	u1522
  2235  00E0  07B6               	addwf	___flmul@grs+2,f
  2236  00E1                     u1522:
  2237  00E1  0831               	movf	??___flmul+3,w
  2238  00E2  1103               	clrz
  2239  00E3  1803               	skipnc
  2240  00E4  3E01               	addlw	1
  2241  00E5  1903               	skipnz
  2242  00E6  28E8               	goto	u1523
  2243  00E7  07B7               	addwf	___flmul@grs+3,f
  2244  00E8                     u1523:
  2245  00E8                     l1573:
  2246  00E8  083F               	movf	___flmul@temp+1,w
  2247  00E9  00AE               	movwf	??___flmul
  2248  00EA  01AF               	clrf	??___flmul+1
  2249  00EB  01B0               	clrf	??___flmul+2
  2250  00EC  01B1               	clrf	??___flmul+3
  2251  00ED  082E               	movf	??___flmul,w
  2252  00EE  07BA               	addwf	___flmul@prod,f
  2253  00EF  082F               	movf	??___flmul+1,w
  2254  00F0  1103               	clrz
  2255  00F1  1803               	skipnc
  2256  00F2  3E01               	addlw	1
  2257  00F3  1903               	skipnz
  2258  00F4  28F6               	goto	u1531
  2259  00F5  07BB               	addwf	___flmul@prod+1,f
  2260  00F6                     u1531:
  2261  00F6  0830               	movf	??___flmul+2,w
  2262  00F7  1103               	clrz
  2263  00F8  1803               	skipnc
  2264  00F9  3E01               	addlw	1
  2265  00FA  1903               	skipnz
  2266  00FB  28FD               	goto	u1532
  2267  00FC  07BC               	addwf	___flmul@prod+2,f
  2268  00FD                     u1532:
  2269  00FD  0831               	movf	??___flmul+3,w
  2270  00FE  1103               	clrz
  2271  00FF  1803               	skipnc
  2272  0100  3E01               	addlw	1
  2273  0101  1903               	skipnz
  2274  0102  2904               	goto	u1533
  2275  0103  07BD               	addwf	___flmul@prod+3,f
  2276  0104                     u1533:
  2277  0104  0828               	movf	___flmul@b+2,w
  2278  0105  00AE               	movwf	??___flmul
  2279  0106  082E               	movf	??___flmul,w
  2280  0107  00F2               	movwf	__Umul8_16@multiplicand
  2281  0108  082A               	movf	___flmul@a,w
  2282  0109  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2283  010E  0873               	movf	?__Umul8_16+1,w
  2284  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0111  00BF               	movwf	___flmul@temp+1
  2287  0112  0872               	movf	?__Umul8_16,w
  2288  0113  00BE               	movwf	___flmul@temp
  2289  0114                     l1575:
  2290  0114  083E               	movf	___flmul@temp,w
  2291  0115  00AE               	movwf	??___flmul
  2292  0116  01AF               	clrf	??___flmul+1
  2293  0117  01B0               	clrf	??___flmul+2
  2294  0118  01B1               	clrf	??___flmul+3
  2295  0119  082E               	movf	??___flmul,w
  2296  011A  07B4               	addwf	___flmul@grs,f
  2297  011B  082F               	movf	??___flmul+1,w
  2298  011C  1103               	clrz
  2299  011D  1803               	skipnc
  2300  011E  3E01               	addlw	1
  2301  011F  1903               	skipnz
  2302  0120  2922               	goto	u1541
  2303  0121  07B5               	addwf	___flmul@grs+1,f
  2304  0122                     u1541:
  2305  0122  0830               	movf	??___flmul+2,w
  2306  0123  1103               	clrz
  2307  0124  1803               	skipnc
  2308  0125  3E01               	addlw	1
  2309  0126  1903               	skipnz
  2310  0127  2929               	goto	u1542
  2311  0128  07B6               	addwf	___flmul@grs+2,f
  2312  0129                     u1542:
  2313  0129  0831               	movf	??___flmul+3,w
  2314  012A  1103               	clrz
  2315  012B  1803               	skipnc
  2316  012C  3E01               	addlw	1
  2317  012D  1903               	skipnz
  2318  012E  2930               	goto	u1543
  2319  012F  07B7               	addwf	___flmul@grs+3,f
  2320  0130                     u1543:
  2321  0130                     l1577:
  2322  0130  083F               	movf	___flmul@temp+1,w
  2323  0131  00AE               	movwf	??___flmul
  2324  0132  01AF               	clrf	??___flmul+1
  2325  0133  01B0               	clrf	??___flmul+2
  2326  0134  01B1               	clrf	??___flmul+3
  2327  0135  082E               	movf	??___flmul,w
  2328  0136  07BA               	addwf	___flmul@prod,f
  2329  0137  082F               	movf	??___flmul+1,w
  2330  0138  1103               	clrz
  2331  0139  1803               	skipnc
  2332  013A  3E01               	addlw	1
  2333  013B  1903               	skipnz
  2334  013C  293E               	goto	u1551
  2335  013D  07BB               	addwf	___flmul@prod+1,f
  2336  013E                     u1551:
  2337  013E  0830               	movf	??___flmul+2,w
  2338  013F  1103               	clrz
  2339  0140  1803               	skipnc
  2340  0141  3E01               	addlw	1
  2341  0142  1903               	skipnz
  2342  0143  2945               	goto	u1552
  2343  0144  07BC               	addwf	___flmul@prod+2,f
  2344  0145                     u1552:
  2345  0145  0831               	movf	??___flmul+3,w
  2346  0146  1103               	clrz
  2347  0147  1803               	skipnc
  2348  0148  3E01               	addlw	1
  2349  0149  1903               	skipnz
  2350  014A  294C               	goto	u1553
  2351  014B  07BD               	addwf	___flmul@prod+3,f
  2352  014C                     u1553:
  2353  014C                     l1579:
  2354  014C  3008               	movlw	8
  2355  014D  00AE               	movwf	??___flmul
  2356  014E                     u1565:
  2357  014E  1003               	clrc
  2358  014F  0DB4               	rlf	___flmul@grs,f
  2359  0150  0DB5               	rlf	___flmul@grs+1,f
  2360  0151  0DB6               	rlf	___flmul@grs+2,f
  2361  0152  0DB7               	rlf	___flmul@grs+3,f
  2362  0153  0BAE               	decfsz	??___flmul,f
  2363  0154  294E               	goto	u1565
  2364  0155                     l1581:
  2365  0155  0827               	movf	___flmul@b+1,w
  2366  0156  00AE               	movwf	??___flmul
  2367  0157  082E               	movf	??___flmul,w
  2368  0158  00F2               	movwf	__Umul8_16@multiplicand
  2369  0159  082A               	movf	___flmul@a,w
  2370  015A  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2371  015F  0873               	movf	?__Umul8_16+1,w
  2372  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0162  00BF               	movwf	___flmul@temp+1
  2375  0163  0872               	movf	?__Umul8_16,w
  2376  0164  00BE               	movwf	___flmul@temp
  2377  0165                     l1583:
  2378  0165  083E               	movf	___flmul@temp,w
  2379  0166  00AE               	movwf	??___flmul
  2380  0167  083F               	movf	___flmul@temp+1,w
  2381  0168  00AF               	movwf	??___flmul+1
  2382  0169  01B0               	clrf	??___flmul+2
  2383  016A  01B1               	clrf	??___flmul+3
  2384  016B  082E               	movf	??___flmul,w
  2385  016C  07B4               	addwf	___flmul@grs,f
  2386  016D  082F               	movf	??___flmul+1,w
  2387  016E  1103               	clrz
  2388  016F  1803               	skipnc
  2389  0170  3E01               	addlw	1
  2390  0171  1903               	skipnz
  2391  0172  2974               	goto	u1571
  2392  0173  07B5               	addwf	___flmul@grs+1,f
  2393  0174                     u1571:
  2394  0174  0830               	movf	??___flmul+2,w
  2395  0175  1103               	clrz
  2396  0176  1803               	skipnc
  2397  0177  3E01               	addlw	1
  2398  0178  1903               	skipnz
  2399  0179  297B               	goto	u1572
  2400  017A  07B6               	addwf	___flmul@grs+2,f
  2401  017B                     u1572:
  2402  017B  0831               	movf	??___flmul+3,w
  2403  017C  1103               	clrz
  2404  017D  1803               	skipnc
  2405  017E  3E01               	addlw	1
  2406  017F  1903               	skipnz
  2407  0180  2982               	goto	u1573
  2408  0181  07B7               	addwf	___flmul@grs+3,f
  2409  0182                     u1573:
  2410  0182                     l1585:
  2411  0182  0826               	movf	___flmul@b,w
  2412  0183  00AE               	movwf	??___flmul
  2413  0184  082E               	movf	??___flmul,w
  2414  0185  00F2               	movwf	__Umul8_16@multiplicand
  2415  0186  082B               	movf	___flmul@a+1,w
  2416  0187  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2417  018C  0873               	movf	?__Umul8_16+1,w
  2418  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2419  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2420  018F  00BF               	movwf	___flmul@temp+1
  2421  0190  0872               	movf	?__Umul8_16,w
  2422  0191  00BE               	movwf	___flmul@temp
  2423  0192                     l1587:
  2424  0192  083E               	movf	___flmul@temp,w
  2425  0193  00AE               	movwf	??___flmul
  2426  0194  083F               	movf	___flmul@temp+1,w
  2427  0195  00AF               	movwf	??___flmul+1
  2428  0196  01B0               	clrf	??___flmul+2
  2429  0197  01B1               	clrf	??___flmul+3
  2430  0198  082E               	movf	??___flmul,w
  2431  0199  07B4               	addwf	___flmul@grs,f
  2432  019A  082F               	movf	??___flmul+1,w
  2433  019B  1103               	clrz
  2434  019C  1803               	skipnc
  2435  019D  3E01               	addlw	1
  2436  019E  1903               	skipnz
  2437  019F  29A1               	goto	u1581
  2438  01A0  07B5               	addwf	___flmul@grs+1,f
  2439  01A1                     u1581:
  2440  01A1  0830               	movf	??___flmul+2,w
  2441  01A2  1103               	clrz
  2442  01A3  1803               	skipnc
  2443  01A4  3E01               	addlw	1
  2444  01A5  1903               	skipnz
  2445  01A6  29A8               	goto	u1582
  2446  01A7  07B6               	addwf	___flmul@grs+2,f
  2447  01A8                     u1582:
  2448  01A8  0831               	movf	??___flmul+3,w
  2449  01A9  1103               	clrz
  2450  01AA  1803               	skipnc
  2451  01AB  3E01               	addlw	1
  2452  01AC  1903               	skipnz
  2453  01AD  29AF               	goto	u1583
  2454  01AE  07B7               	addwf	___flmul@grs+3,f
  2455  01AF                     u1583:
  2456  01AF                     l1589:
  2457  01AF  3008               	movlw	8
  2458  01B0  00AE               	movwf	??___flmul
  2459  01B1                     u1595:
  2460  01B1  1003               	clrc
  2461  01B2  0DB4               	rlf	___flmul@grs,f
  2462  01B3  0DB5               	rlf	___flmul@grs+1,f
  2463  01B4  0DB6               	rlf	___flmul@grs+2,f
  2464  01B5  0DB7               	rlf	___flmul@grs+3,f
  2465  01B6  0BAE               	decfsz	??___flmul,f
  2466  01B7  29B1               	goto	u1595
  2467  01B8  0826               	movf	___flmul@b,w
  2468  01B9  00AE               	movwf	??___flmul
  2469  01BA  082E               	movf	??___flmul,w
  2470  01BB  00F2               	movwf	__Umul8_16@multiplicand
  2471  01BC  082A               	movf	___flmul@a,w
  2472  01BD  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2473  01C2  0873               	movf	?__Umul8_16+1,w
  2474  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2475  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2476  01C5  00BF               	movwf	___flmul@temp+1
  2477  01C6  0872               	movf	?__Umul8_16,w
  2478  01C7  00BE               	movwf	___flmul@temp
  2479  01C8                     l1591:
  2480  01C8  083E               	movf	___flmul@temp,w
  2481  01C9  00AE               	movwf	??___flmul
  2482  01CA  083F               	movf	___flmul@temp+1,w
  2483  01CB  00AF               	movwf	??___flmul+1
  2484  01CC  01B0               	clrf	??___flmul+2
  2485  01CD  01B1               	clrf	??___flmul+3
  2486  01CE  082E               	movf	??___flmul,w
  2487  01CF  07B4               	addwf	___flmul@grs,f
  2488  01D0  082F               	movf	??___flmul+1,w
  2489  01D1  1103               	clrz
  2490  01D2  1803               	skipnc
  2491  01D3  3E01               	addlw	1
  2492  01D4  1903               	skipnz
  2493  01D5  29D7               	goto	u1601
  2494  01D6  07B5               	addwf	___flmul@grs+1,f
  2495  01D7                     u1601:
  2496  01D7  0830               	movf	??___flmul+2,w
  2497  01D8  1103               	clrz
  2498  01D9  1803               	skipnc
  2499  01DA  3E01               	addlw	1
  2500  01DB  1903               	skipnz
  2501  01DC  29DE               	goto	u1602
  2502  01DD  07B6               	addwf	___flmul@grs+2,f
  2503  01DE                     u1602:
  2504  01DE  0831               	movf	??___flmul+3,w
  2505  01DF  1103               	clrz
  2506  01E0  1803               	skipnc
  2507  01E1  3E01               	addlw	1
  2508  01E2  1903               	skipnz
  2509  01E3  29E5               	goto	u1603
  2510  01E4  07B7               	addwf	___flmul@grs+3,f
  2511  01E5                     u1603:
  2512  01E5                     l1593:
  2513  01E5  0827               	movf	___flmul@b+1,w
  2514  01E6  00AE               	movwf	??___flmul
  2515  01E7  082E               	movf	??___flmul,w
  2516  01E8  00F2               	movwf	__Umul8_16@multiplicand
  2517  01E9  082C               	movf	___flmul@a+2,w
  2518  01EA  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2519  01EF  0873               	movf	?__Umul8_16+1,w
  2520  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2521  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2522  01F2  00BF               	movwf	___flmul@temp+1
  2523  01F3  0872               	movf	?__Umul8_16,w
  2524  01F4  00BE               	movwf	___flmul@temp
  2525  01F5  083E               	movf	___flmul@temp,w
  2526  01F6  00AE               	movwf	??___flmul
  2527  01F7  083F               	movf	___flmul@temp+1,w
  2528  01F8  00AF               	movwf	??___flmul+1
  2529  01F9  01B0               	clrf	??___flmul+2
  2530  01FA  01B1               	clrf	??___flmul+3
  2531  01FB  082E               	movf	??___flmul,w
  2532  01FC  07BA               	addwf	___flmul@prod,f
  2533  01FD  082F               	movf	??___flmul+1,w
  2534  01FE  1103               	clrz
  2535  01FF  1803               	skipnc
  2536  0200  3E01               	addlw	1
  2537  0201  1903               	skipnz
  2538  0202  2A04               	goto	u1611
  2539  0203  07BB               	addwf	___flmul@prod+1,f
  2540  0204                     u1611:
  2541  0204  0830               	movf	??___flmul+2,w
  2542  0205  1103               	clrz
  2543  0206  1803               	skipnc
  2544  0207  3E01               	addlw	1
  2545  0208  1903               	skipnz
  2546  0209  2A0B               	goto	u1612
  2547  020A  07BC               	addwf	___flmul@prod+2,f
  2548  020B                     u1612:
  2549  020B  0831               	movf	??___flmul+3,w
  2550  020C  1103               	clrz
  2551  020D  1803               	skipnc
  2552  020E  3E01               	addlw	1
  2553  020F  1903               	skipnz
  2554  0210  2A12               	goto	u1613
  2555  0211  07BD               	addwf	___flmul@prod+3,f
  2556  0212                     u1613:
  2557  0212                     l1595:
  2558  0212  0828               	movf	___flmul@b+2,w
  2559  0213  00AE               	movwf	??___flmul
  2560  0214  082E               	movf	??___flmul,w
  2561  0215  00F2               	movwf	__Umul8_16@multiplicand
  2562  0216  082B               	movf	___flmul@a+1,w
  2563  0217  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2564  021C  0873               	movf	?__Umul8_16+1,w
  2565  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2566  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2567  021F  00BF               	movwf	___flmul@temp+1
  2568  0220  0872               	movf	?__Umul8_16,w
  2569  0221  00BE               	movwf	___flmul@temp
  2570  0222                     l1597:
  2571  0222  083E               	movf	___flmul@temp,w
  2572  0223  00AE               	movwf	??___flmul
  2573  0224  083F               	movf	___flmul@temp+1,w
  2574  0225  00AF               	movwf	??___flmul+1
  2575  0226  01B0               	clrf	??___flmul+2
  2576  0227  01B1               	clrf	??___flmul+3
  2577  0228  082E               	movf	??___flmul,w
  2578  0229  07BA               	addwf	___flmul@prod,f
  2579  022A  082F               	movf	??___flmul+1,w
  2580  022B  1103               	clrz
  2581  022C  1803               	skipnc
  2582  022D  3E01               	addlw	1
  2583  022E  1903               	skipnz
  2584  022F  2A31               	goto	u1621
  2585  0230  07BB               	addwf	___flmul@prod+1,f
  2586  0231                     u1621:
  2587  0231  0830               	movf	??___flmul+2,w
  2588  0232  1103               	clrz
  2589  0233  1803               	skipnc
  2590  0234  3E01               	addlw	1
  2591  0235  1903               	skipnz
  2592  0236  2A38               	goto	u1622
  2593  0237  07BC               	addwf	___flmul@prod+2,f
  2594  0238                     u1622:
  2595  0238  0831               	movf	??___flmul+3,w
  2596  0239  1103               	clrz
  2597  023A  1803               	skipnc
  2598  023B  3E01               	addlw	1
  2599  023C  1903               	skipnz
  2600  023D  2A3F               	goto	u1623
  2601  023E  07BD               	addwf	___flmul@prod+3,f
  2602  023F                     u1623:
  2603  023F  0828               	movf	___flmul@b+2,w
  2604  0240  00AE               	movwf	??___flmul
  2605  0241  082E               	movf	??___flmul,w
  2606  0242  00F2               	movwf	__Umul8_16@multiplicand
  2607  0243  082C               	movf	___flmul@a+2,w
  2608  0244  120A  158A  27AE  120A  118A  	fcall	__Umul8_16
  2609  0249  0873               	movf	?__Umul8_16+1,w
  2610  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2611  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2612  024C  00BF               	movwf	___flmul@temp+1
  2613  024D  0872               	movf	?__Umul8_16,w
  2614  024E  00BE               	movwf	___flmul@temp
  2615  024F                     l1599:
  2616  024F  083E               	movf	___flmul@temp,w
  2617  0250  00AE               	movwf	??___flmul
  2618  0251  083F               	movf	___flmul@temp+1,w
  2619  0252  00AF               	movwf	??___flmul+1
  2620  0253  01B0               	clrf	??___flmul+2
  2621  0254  01B1               	clrf	??___flmul+3
  2622  0255  3008               	movlw	8
  2623  0256                     u1635:
  2624  0256  1003               	clrc
  2625  0257  0DAE               	rlf	??___flmul,f
  2626  0258  0DAF               	rlf	??___flmul+1,f
  2627  0259  0DB0               	rlf	??___flmul+2,f
  2628  025A  0DB1               	rlf	??___flmul+3,f
  2629  025B                     u1630:
  2630  025B  3EFF               	addlw	-1
  2631  025C  1D03               	skipz
  2632  025D  2A56               	goto	u1635
  2633  025E  082E               	movf	??___flmul,w
  2634  025F  07BA               	addwf	___flmul@prod,f
  2635  0260  082F               	movf	??___flmul+1,w
  2636  0261  1103               	clrz
  2637  0262  1803               	skipnc
  2638  0263  3E01               	addlw	1
  2639  0264  1903               	skipnz
  2640  0265  2A67               	goto	u1641
  2641  0266  07BB               	addwf	___flmul@prod+1,f
  2642  0267                     u1641:
  2643  0267  0830               	movf	??___flmul+2,w
  2644  0268  1103               	clrz
  2645  0269  1803               	skipnc
  2646  026A  3E01               	addlw	1
  2647  026B  1903               	skipnz
  2648  026C  2A6E               	goto	u1642
  2649  026D  07BC               	addwf	___flmul@prod+2,f
  2650  026E                     u1642:
  2651  026E  0831               	movf	??___flmul+3,w
  2652  026F  1103               	clrz
  2653  0270  1803               	skipnc
  2654  0271  3E01               	addlw	1
  2655  0272  1903               	skipnz
  2656  0273  2A75               	goto	u1643
  2657  0274  07BD               	addwf	___flmul@prod+3,f
  2658  0275                     u1643:
  2659  0275                     l1601:
  2660  0275  0834               	movf	___flmul@grs,w
  2661  0276  00AE               	movwf	??___flmul
  2662  0277  0835               	movf	___flmul@grs+1,w
  2663  0278  00AF               	movwf	??___flmul+1
  2664  0279  0836               	movf	___flmul@grs+2,w
  2665  027A  00B0               	movwf	??___flmul+2
  2666  027B  0837               	movf	___flmul@grs+3,w
  2667  027C  00B1               	movwf	??___flmul+3
  2668  027D  3018               	movlw	24
  2669  027E                     u1655:
  2670  027E  1003               	clrc
  2671  027F  0CB1               	rrf	??___flmul+3,f
  2672  0280  0CB0               	rrf	??___flmul+2,f
  2673  0281  0CAF               	rrf	??___flmul+1,f
  2674  0282  0CAE               	rrf	??___flmul,f
  2675  0283                     u1650:
  2676  0283  3EFF               	addlw	-1
  2677  0284  1D03               	skipz
  2678  0285  2A7E               	goto	u1655
  2679  0286  082E               	movf	??___flmul,w
  2680  0287  07BA               	addwf	___flmul@prod,f
  2681  0288  082F               	movf	??___flmul+1,w
  2682  0289  1103               	clrz
  2683  028A  1803               	skipnc
  2684  028B  3E01               	addlw	1
  2685  028C  1903               	skipnz
  2686  028D  2A8F               	goto	u1661
  2687  028E  07BB               	addwf	___flmul@prod+1,f
  2688  028F                     u1661:
  2689  028F  0830               	movf	??___flmul+2,w
  2690  0290  1103               	clrz
  2691  0291  1803               	skipnc
  2692  0292  3E01               	addlw	1
  2693  0293  1903               	skipnz
  2694  0294  2A96               	goto	u1662
  2695  0295  07BC               	addwf	___flmul@prod+2,f
  2696  0296                     u1662:
  2697  0296  0831               	movf	??___flmul+3,w
  2698  0297  1103               	clrz
  2699  0298  1803               	skipnc
  2700  0299  3E01               	addlw	1
  2701  029A  1903               	skipnz
  2702  029B  2A9D               	goto	u1663
  2703  029C  07BD               	addwf	___flmul@prod+3,f
  2704  029D                     u1663:
  2705  029D                     l1603:
  2706  029D  3008               	movlw	8
  2707  029E  00AE               	movwf	??___flmul
  2708  029F                     u1675:
  2709  029F  1003               	clrc
  2710  02A0  0DB4               	rlf	___flmul@grs,f
  2711  02A1  0DB5               	rlf	___flmul@grs+1,f
  2712  02A2  0DB6               	rlf	___flmul@grs+2,f
  2713  02A3  0DB7               	rlf	___flmul@grs+3,f
  2714  02A4  0BAE               	decfsz	??___flmul,f
  2715  02A5  2A9F               	goto	u1675
  2716  02A6                     l1605:
  2717  02A6  0839               	movf	___flmul@bexp,w
  2718  02A7  0738               	addwf	___flmul@aexp,w
  2719  02A8  00AE               	movwf	??___flmul
  2720  02A9  01AF               	clrf	??___flmul+1
  2721  02AA  0DAF               	rlf	??___flmul+1,f
  2722  02AB  082E               	movf	??___flmul,w
  2723  02AC  3E82               	addlw	130
  2724  02AD  00BE               	movwf	___flmul@temp
  2725  02AE  082F               	movf	??___flmul+1,w
  2726  02AF  1803               	skipnc
  2727  02B0  3E01               	addlw	1
  2728  02B1  3EFF               	addlw	255
  2729  02B2  00BF               	movwf	___flmul@temp+1
  2730  02B3  2AD1               	goto	l1617
  2731  02B4                     l1607:
  2732  02B4  3001               	movlw	1
  2733  02B5  00AE               	movwf	??___flmul
  2734  02B6                     u1685:
  2735  02B6  1003               	clrc
  2736  02B7  0DBA               	rlf	___flmul@prod,f
  2737  02B8  0DBB               	rlf	___flmul@prod+1,f
  2738  02B9  0DBC               	rlf	___flmul@prod+2,f
  2739  02BA  0DBD               	rlf	___flmul@prod+3,f
  2740  02BB  0BAE               	decfsz	??___flmul,f
  2741  02BC  2AB6               	goto	u1685
  2742  02BD                     l1609:
  2743  02BD  1FB7               	btfss	___flmul@grs+3,7
  2744  02BE  2AC0               	goto	u1691
  2745  02BF  2AC1               	goto	u1690
  2746  02C0                     u1691:
  2747  02C0  2AC2               	goto	l1613
  2748  02C1                     u1690:
  2749  02C1                     l1611:
  2750  02C1  143A               	bsf	___flmul@prod,0
  2751  02C2                     l1613:
  2752  02C2  3001               	movlw	1
  2753  02C3  00AE               	movwf	??___flmul
  2754  02C4                     u1705:
  2755  02C4  1003               	clrc
  2756  02C5  0DB4               	rlf	___flmul@grs,f
  2757  02C6  0DB5               	rlf	___flmul@grs+1,f
  2758  02C7  0DB6               	rlf	___flmul@grs+2,f
  2759  02C8  0DB7               	rlf	___flmul@grs+3,f
  2760  02C9  0BAE               	decfsz	??___flmul,f
  2761  02CA  2AC4               	goto	u1705
  2762  02CB                     l1615:
  2763  02CB  30FF               	movlw	255
  2764  02CC  07BE               	addwf	___flmul@temp,f
  2765  02CD  1803               	skipnc
  2766  02CE  0ABF               	incf	___flmul@temp+1,f
  2767  02CF  30FF               	movlw	255
  2768  02D0  07BF               	addwf	___flmul@temp+1,f
  2769  02D1                     l1617:
  2770  02D1  1FBC               	btfss	___flmul@prod+2,7
  2771  02D2  2AD4               	goto	u1711
  2772  02D3  2AD5               	goto	u1710
  2773  02D4                     u1711:
  2774  02D4  2AB4               	goto	l1607
  2775  02D5                     u1710:
  2776  02D5                     l1619:
  2777  02D5  01B8               	clrf	___flmul@aexp
  2778  02D6                     l1621:
  2779  02D6  1FB7               	btfss	___flmul@grs+3,7
  2780  02D7  2AD9               	goto	u1721
  2781  02D8  2ADA               	goto	u1720
  2782  02D9                     u1721:
  2783  02D9  2AF6               	goto	l1629
  2784  02DA                     u1720:
  2785  02DA                     l1623:
  2786  02DA  30FF               	movlw	255
  2787  02DB  0534               	andwf	___flmul@grs,w
  2788  02DC  00AE               	movwf	??___flmul
  2789  02DD  30FF               	movlw	255
  2790  02DE  0535               	andwf	___flmul@grs+1,w
  2791  02DF  00AF               	movwf	??___flmul+1
  2792  02E0  30FF               	movlw	255
  2793  02E1  0536               	andwf	___flmul@grs+2,w
  2794  02E2  00B0               	movwf	??___flmul+2
  2795  02E3  307F               	movlw	127
  2796  02E4  0537               	andwf	___flmul@grs+3,w
  2797  02E5  00B1               	movwf	??___flmul+3
  2798  02E6  0831               	movf	??___flmul+3,w
  2799  02E7  0430               	iorwf	??___flmul+2,w
  2800  02E8  042F               	iorwf	??___flmul+1,w
  2801  02E9  042E               	iorwf	??___flmul,w
  2802  02EA  1903               	skipnz
  2803  02EB  2AED               	goto	u1731
  2804  02EC  2AEE               	goto	u1730
  2805  02ED                     u1731:
  2806  02ED  2AF1               	goto	l638
  2807  02EE                     u1730:
  2808  02EE                     l1625:
  2809  02EE  01B8               	clrf	___flmul@aexp
  2810  02EF  0AB8               	incf	___flmul@aexp,f
  2811  02F0  2AF6               	goto	l1629
  2812  02F1                     l638:
  2813  02F1  1C3A               	btfss	___flmul@prod,0
  2814  02F2  2AF4               	goto	u1741
  2815  02F3  2AF5               	goto	u1740
  2816  02F4                     u1741:
  2817  02F4  2AF6               	goto	l1629
  2818  02F5                     u1740:
  2819  02F5  2AEE               	goto	l1625
  2820  02F6                     l1629:
  2821  02F6  0838               	movf	___flmul@aexp,w
  2822  02F7  1903               	btfsc	3,2
  2823  02F8  2AFA               	goto	u1751
  2824  02F9  2AFB               	goto	u1750
  2825  02FA                     u1751:
  2826  02FA  2B2C               	goto	l1639
  2827  02FB                     u1750:
  2828  02FB                     l1631:
  2829  02FB  3001               	movlw	1
  2830  02FC  07BA               	addwf	___flmul@prod,f
  2831  02FD  3000               	movlw	0
  2832  02FE  1803               	skipnc
  2833  02FF  3001               	movlw	1
  2834  0300  07BB               	addwf	___flmul@prod+1,f
  2835  0301  3000               	movlw	0
  2836  0302  1803               	skipnc
  2837  0303  3001               	movlw	1
  2838  0304  07BC               	addwf	___flmul@prod+2,f
  2839  0305  3000               	movlw	0
  2840  0306  1803               	skipnc
  2841  0307  3001               	movlw	1
  2842  0308  07BD               	addwf	___flmul@prod+3,f
  2843  0309                     l1633:
  2844  0309  1C3D               	btfss	___flmul@prod+3,0
  2845  030A  2B0C               	goto	u1761
  2846  030B  2B0D               	goto	u1760
  2847  030C                     u1761:
  2848  030C  2B2C               	goto	l1639
  2849  030D                     u1760:
  2850  030D                     l1635:
  2851  030D  083A               	movf	___flmul@prod,w
  2852  030E  00AE               	movwf	??___flmul
  2853  030F  083B               	movf	___flmul@prod+1,w
  2854  0310  00AF               	movwf	??___flmul+1
  2855  0311  083C               	movf	___flmul@prod+2,w
  2856  0312  00B0               	movwf	??___flmul+2
  2857  0313  083D               	movf	___flmul@prod+3,w
  2858  0314  00B1               	movwf	??___flmul+3
  2859  0315  3001               	movlw	1
  2860  0316  00B2               	movwf	??___flmul+4
  2861  0317                     u1775:
  2862  0317  0D31               	rlf	??___flmul+3,w
  2863  0318  0CB1               	rrf	??___flmul+3,f
  2864  0319  0CB0               	rrf	??___flmul+2,f
  2865  031A  0CAF               	rrf	??___flmul+1,f
  2866  031B  0CAE               	rrf	??___flmul,f
  2867  031C                     u1770:
  2868  031C  0BB2               	decfsz	??___flmul+4,f
  2869  031D  2B17               	goto	u1775
  2870  031E  0831               	movf	??___flmul+3,w
  2871  031F  00BD               	movwf	___flmul@prod+3
  2872  0320  0830               	movf	??___flmul+2,w
  2873  0321  00BC               	movwf	___flmul@prod+2
  2874  0322  082F               	movf	??___flmul+1,w
  2875  0323  00BB               	movwf	___flmul@prod+1
  2876  0324  082E               	movf	??___flmul,w
  2877  0325  00BA               	movwf	___flmul@prod
  2878  0326                     l1637:
  2879  0326  3001               	movlw	1
  2880  0327  07BE               	addwf	___flmul@temp,f
  2881  0328  1803               	skipnc
  2882  0329  0ABF               	incf	___flmul@temp+1,f
  2883  032A  3000               	movlw	0
  2884  032B  07BF               	addwf	___flmul@temp+1,f
  2885  032C                     l1639:
  2886  032C  083F               	movf	___flmul@temp+1,w
  2887  032D  3A80               	xorlw	128
  2888  032E  00FF               	movwf	btemp+1
  2889  032F  3080               	movlw	128
  2890  0330  027F               	subwf	btemp+1,w
  2891  0331  1D03               	skipz
  2892  0332  2B35               	goto	u1785
  2893  0333  30FF               	movlw	255
  2894  0334  023E               	subwf	___flmul@temp,w
  2895  0335                     u1785:
  2896  0335  1C03               	skipc
  2897  0336  2B38               	goto	u1781
  2898  0337  2B39               	goto	u1780
  2899  0338                     u1781:
  2900  0338  2B44               	goto	l1643
  2901  0339                     u1780:
  2902  0339                     l1641:
  2903  0339  307F               	movlw	127
  2904  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2905  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2906  033C  00BD               	movwf	___flmul@prod+3
  2907  033D  3080               	movlw	128
  2908  033E  00BC               	movwf	___flmul@prod+2
  2909  033F  3000               	movlw	0
  2910  0340  00BB               	movwf	___flmul@prod+1
  2911  0341  3000               	movlw	0
  2912  0342  00BA               	movwf	___flmul@prod
  2913  0343  2B79               	goto	l644
  2914  0344                     l1643:
  2915  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0346  083F               	movf	___flmul@temp+1,w
  2918  0347  3A80               	xorlw	128
  2919  0348  00FF               	movwf	btemp+1
  2920  0349  3080               	movlw	128
  2921  034A  027F               	subwf	btemp+1,w
  2922  034B  1D03               	skipz
  2923  034C  2B4F               	goto	u1795
  2924  034D  3001               	movlw	1
  2925  034E  023E               	subwf	___flmul@temp,w
  2926  034F                     u1795:
  2927  034F  1803               	skipnc
  2928  0350  2B52               	goto	u1791
  2929  0351  2B53               	goto	u1790
  2930  0352                     u1791:
  2931  0352  2B5F               	goto	l1649
  2932  0353                     u1790:
  2933  0353                     l1645:
  2934  0353  3000               	movlw	0
  2935  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0356  00BD               	movwf	___flmul@prod+3
  2938  0357  3000               	movlw	0
  2939  0358  00BC               	movwf	___flmul@prod+2
  2940  0359  3000               	movlw	0
  2941  035A  00BB               	movwf	___flmul@prod+1
  2942  035B  3000               	movlw	0
  2943  035C  00BA               	movwf	___flmul@prod
  2944  035D                     l1647:
  2945  035D  01B3               	clrf	___flmul@sign
  2946  035E  2B79               	goto	l644
  2947  035F                     l1649:
  2948  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0361  083E               	movf	___flmul@temp,w
  2951  0362  00AE               	movwf	??___flmul
  2952  0363  082E               	movf	??___flmul,w
  2953  0364  00B9               	movwf	___flmul@bexp
  2954  0365  30FF               	movlw	255
  2955  0366  05BA               	andwf	___flmul@prod,f
  2956  0367  30FF               	movlw	255
  2957  0368  05BB               	andwf	___flmul@prod+1,f
  2958  0369  307F               	movlw	127
  2959  036A  05BC               	andwf	___flmul@prod+2,f
  2960  036B  3000               	movlw	0
  2961  036C  05BD               	andwf	___flmul@prod+3,f
  2962  036D                     l1651:
  2963  036D  1C39               	btfss	___flmul@bexp,0
  2964  036E  2B70               	goto	u1801
  2965  036F  2B71               	goto	u1800
  2966  0370                     u1801:
  2967  0370  2B72               	goto	l1655
  2968  0371                     u1800:
  2969  0371                     l1653:
  2970  0371  17BC               	bsf	___flmul@prod+2,7
  2971  0372                     l1655:
  2972  0372  0839               	movf	___flmul@bexp,w
  2973  0373  00AE               	movwf	??___flmul
  2974  0374  1003               	clrc
  2975  0375  0C2E               	rrf	??___flmul,w
  2976  0376  00AF               	movwf	??___flmul+1
  2977  0377  082F               	movf	??___flmul+1,w
  2978  0378  00BD               	movwf	___flmul@prod+3
  2979  0379                     l644:
  2980  0379  0833               	movf	___flmul@sign,w
  2981  037A  00AE               	movwf	??___flmul
  2982  037B  082E               	movf	??___flmul,w
  2983  037C  04BD               	iorwf	___flmul@prod+3,f
  2984  037D                     l1657:
  2985  037D  083D               	movf	___flmul@prod+3,w
  2986  037E  00A9               	movwf	?___flmul+3
  2987  037F  083C               	movf	___flmul@prod+2,w
  2988  0380  00A8               	movwf	?___flmul+2
  2989  0381  083B               	movf	___flmul@prod+1,w
  2990  0382  00A7               	movwf	?___flmul+1
  2991  0383  083A               	movf	___flmul@prod,w
  2992  0384  00A6               	movwf	?___flmul
  2993  0385                     l632:
  2994  0385  0008               	return
  2995  0386                     __end_of___flmul:
  2996                           
  2997                           	psect	text7
  2998  0FAE                     __ptext7:	
  2999 ;; *************** function __Umul8_16 *****************
  3000 ;; Defined at:
  3001 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  multiplier      1    wreg     unsigned char 
  3004 ;;  multiplicand    1    2[COMMON] unsigned char 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  multiplier      1   10[COMMON] unsigned char 
  3007 ;;  word_mpld       2    8[COMMON] unsigned int 
  3008 ;;  product         2    6[COMMON] unsigned int 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  2    2[COMMON] unsigned int 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         2       0       0       0       0
  3019 ;;      Locals:         5       0       0       0       0
  3020 ;;      Temps:          2       0       0       0       0
  3021 ;;      Totals:         9       0       0       0       0
  3022 ;;Total ram usage:        9 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		___flmul
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function __Umul8_16
  3034  0FAE                     __Umul8_16:
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3038                           ;__Umul8_16@multiplier stored from wreg
  3039  0FAE  00FA               	movwf	__Umul8_16@multiplier
  3040  0FAF                     l1359:
  3041  0FAF  01F6               	clrf	__Umul8_16@product
  3042  0FB0  01F7               	clrf	__Umul8_16@product+1
  3043  0FB1                     l1361:
  3044  0FB1  0872               	movf	__Umul8_16@multiplicand,w
  3045  0FB2  00F4               	movwf	??__Umul8_16
  3046  0FB3  01F5               	clrf	??__Umul8_16+1
  3047  0FB4  0874               	movf	??__Umul8_16,w
  3048  0FB5  00F8               	movwf	__Umul8_16@word_mpld
  3049  0FB6  0875               	movf	??__Umul8_16+1,w
  3050  0FB7  00F9               	movwf	__Umul8_16@word_mpld+1
  3051  0FB8                     l1363:
  3052  0FB8  1C7A               	btfss	__Umul8_16@multiplier,0
  3053  0FB9  2FBB               	goto	u1181
  3054  0FBA  2FBC               	goto	u1180
  3055  0FBB                     u1181:
  3056  0FBB  2FC2               	goto	l651
  3057  0FBC                     u1180:
  3058  0FBC                     l1365:
  3059  0FBC  0878               	movf	__Umul8_16@word_mpld,w
  3060  0FBD  07F6               	addwf	__Umul8_16@product,f
  3061  0FBE  1803               	skipnc
  3062  0FBF  0AF7               	incf	__Umul8_16@product+1,f
  3063  0FC0  0879               	movf	__Umul8_16@word_mpld+1,w
  3064  0FC1  07F7               	addwf	__Umul8_16@product+1,f
  3065  0FC2                     l651:
  3066  0FC2  3001               	movlw	1
  3067  0FC3                     u1195:
  3068  0FC3  1003               	clrc
  3069  0FC4  0DF8               	rlf	__Umul8_16@word_mpld,f
  3070  0FC5  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  3071  0FC6  3EFF               	addlw	-1
  3072  0FC7  1D03               	skipz
  3073  0FC8  2FC3               	goto	u1195
  3074  0FC9  1003               	clrc
  3075  0FCA  0CFA               	rrf	__Umul8_16@multiplier,f
  3076  0FCB                     l1367:
  3077  0FCB  087A               	movf	__Umul8_16@multiplier,w
  3078  0FCC  1D03               	btfss	3,2
  3079  0FCD  2FCF               	goto	u1201
  3080  0FCE  2FD0               	goto	u1200
  3081  0FCF                     u1201:
  3082  0FCF  2FB8               	goto	l1363
  3083  0FD0                     u1200:
  3084  0FD0                     l1369:
  3085  0FD0  0877               	movf	__Umul8_16@product+1,w
  3086  0FD1  00F3               	movwf	?__Umul8_16+1
  3087  0FD2  0876               	movf	__Umul8_16@product,w
  3088  0FD3  00F2               	movwf	?__Umul8_16
  3089  0FD4                     l653:
  3090  0FD4  0008               	return
  3091  0FD5                     __end_of__Umul8_16:
  3092                           
  3093                           	psect	text8
  3094  0F4C                     __ptext8:	
  3095 ;; *************** function _ReadADC *****************
  3096 ;; Defined at:
  3097 ;;		line 89 in file "main.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  TempValue       2    4[COMMON] unsigned int 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2    2[COMMON] unsigned int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         2       0       0       0       0
  3112 ;;      Locals:         2       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0
  3114 ;;      Totals:         4       0       0       0       0
  3115 ;;Total ram usage:        4 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    1
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _ReadADC
  3127  0F4C                     _ReadADC:
  3128  0F4C                     l1415:	
  3129                           ;incstack = 0
  3130                           ; Regs used in _ReadADC: [wreg+status,2]
  3131                           
  3132  0F4C                     l1417:
  3133  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0F4E  151F               	bsf	31,2	;volatile
  3136  0F4F                     l117:
  3137  0F4F  191F               	btfsc	31,2	;volatile
  3138  0F50  2F52               	goto	u1261
  3139  0F51  2F53               	goto	u1260
  3140  0F52                     u1261:
  3141  0F52  2F4F               	goto	l117
  3142  0F53                     u1260:
  3143  0F53                     l1419:
  3144  0F53  081E               	movf	30,w	;volatile
  3145  0F54  00F5               	movwf	ReadADC@TempValue+1
  3146  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  3147  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  3148  0F57  081E               	movf	30,w	;volatile
  3149  0F58  00F4               	movwf	ReadADC@TempValue
  3150  0F59  0875               	movf	ReadADC@TempValue+1,w
  3151  0F5A  00F3               	movwf	?_ReadADC+1
  3152  0F5B  0874               	movf	ReadADC@TempValue,w
  3153  0F5C  00F2               	movwf	?_ReadADC
  3154  0F5D                     l120:
  3155  0F5D  0008               	return
  3156  0F5E                     __end_of_ReadADC:
  3157                           
  3158                           	psect	text9
  3159  0F8D                     __ptext9:	
  3160 ;; *************** function _Lcd_Write_String *****************
  3161 ;; Defined at:
  3162 ;;		line 95 in file "./lcd.h"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  a               1    wreg     PTR unsigned char 
  3165 ;;		 -> main@str(20), 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  a               1   10[COMMON] PTR unsigned char 
  3168 ;;		 -> main@str(20), 
  3169 ;;  i               2    8[COMMON] int 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       0       0       0       0
  3180 ;;      Locals:         3       0       0       0       0
  3181 ;;      Temps:          1       0       0       0       0
  3182 ;;      Totals:         4       0       0       0       0
  3183 ;;Total ram usage:        4 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    3
  3186 ;; This function calls:
  3187 ;;		_Lcd_Write_Char
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _Lcd_Write_String
  3195  0F8D                     _Lcd_Write_String:
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3199                           ;Lcd_Write_String@a stored from wreg
  3200  0F8D  00FA               	movwf	Lcd_Write_String@a
  3201  0F8E                     l1405:
  3202                           
  3203                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  3204  0F8E  01F8               	clrf	Lcd_Write_String@i
  3205  0F8F  01F9               	clrf	Lcd_Write_String@i+1
  3206  0F90  2FA2               	goto	l1411
  3207  0F91                     l1407:
  3208                           
  3209                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  3210  0F91  0878               	movf	Lcd_Write_String@i,w
  3211  0F92  077A               	addwf	Lcd_Write_String@a,w
  3212  0F93  00F7               	movwf	??_Lcd_Write_String
  3213  0F94  0877               	movf	??_Lcd_Write_String,w
  3214  0F95  0084               	movwf	4
  3215  0F96  0800               	movf	0,w
  3216  0F97  120A  118A  27A7  120A  158A  	fcall	_Lcd_Write_Char
  3217  0F9C                     l1409:
  3218  0F9C  3001               	movlw	1
  3219  0F9D  07F8               	addwf	Lcd_Write_String@i,f
  3220  0F9E  1803               	skipnc
  3221  0F9F  0AF9               	incf	Lcd_Write_String@i+1,f
  3222  0FA0  3000               	movlw	0
  3223  0FA1  07F9               	addwf	Lcd_Write_String@i+1,f
  3224  0FA2                     l1411:
  3225  0FA2  0878               	movf	Lcd_Write_String@i,w
  3226  0FA3  077A               	addwf	Lcd_Write_String@a,w
  3227  0FA4  00F7               	movwf	??_Lcd_Write_String
  3228  0FA5  0877               	movf	??_Lcd_Write_String,w
  3229  0FA6  0084               	movwf	4
  3230  0FA7  1383               	bcf	3,7	;select IRP bank0
  3231  0FA8  0800               	movf	0,w
  3232  0FA9  1D03               	btfss	3,2
  3233  0FAA  2FAC               	goto	u1251
  3234  0FAB  2FAD               	goto	u1250
  3235  0FAC                     u1251:
  3236  0FAC  2F91               	goto	l1407
  3237  0FAD                     u1250:
  3238  0FAD                     l89:
  3239  0FAD  0008               	return
  3240  0FAE                     __end_of_Lcd_Write_String:
  3241                           
  3242                           	psect	text10
  3243  07A7                     __ptext10:	
  3244 ;; *************** function _Lcd_Write_Char *****************
  3245 ;; Defined at:
  3246 ;;		line 79 in file "./lcd.h"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  a               1    wreg     unsigned char 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  a               1    6[COMMON] unsigned char 
  3251 ;;  y               1    5[COMMON] unsigned char 
  3252 ;;  temp            1    4[COMMON] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0, pclath, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         0       0       0       0       0
  3263 ;;      Locals:         3       0       0       0       0
  3264 ;;      Temps:          1       0       0       0       0
  3265 ;;      Totals:         4       0       0       0       0
  3266 ;;Total ram usage:        4 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    2
  3269 ;; This function calls:
  3270 ;;		_Lcd_Port
  3271 ;; This function is called by:
  3272 ;;		_Lcd_Write_String
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function _Lcd_Write_Char
  3278  07A7                     _Lcd_Write_Char:
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3282                           ;Lcd_Write_Char@a stored from wreg
  3283  07A7  00F6               	movwf	Lcd_Write_Char@a
  3284  07A8                     l1291:
  3285                           
  3286                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  3287  07A8  0876               	movf	Lcd_Write_Char@a,w
  3288  07A9  390F               	andlw	15
  3289  07AA  00F3               	movwf	??_Lcd_Write_Char
  3290  07AB  0873               	movf	??_Lcd_Write_Char,w
  3291  07AC  00F4               	movwf	Lcd_Write_Char@temp
  3292                           
  3293                           ;./lcd.h: 83:    y = a&0xF0;
  3294  07AD  0876               	movf	Lcd_Write_Char@a,w
  3295  07AE  39F0               	andlw	240
  3296  07AF  00F3               	movwf	??_Lcd_Write_Char
  3297  07B0  0873               	movf	??_Lcd_Write_Char,w
  3298  07B1  00F5               	movwf	Lcd_Write_Char@y
  3299  07B2                     l1293:
  3300                           
  3301                           ;./lcd.h: 84:    RD2 = 1;
  3302  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  3303  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  3304  07B4  1508               	bsf	8,2	;volatile
  3305  07B5                     l1295:
  3306                           
  3307                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  3308  07B5  0875               	movf	Lcd_Write_Char@y,w
  3309  07B6  00F3               	movwf	??_Lcd_Write_Char
  3310  07B7  3004               	movlw	4
  3311  07B8                     u1045:
  3312  07B8  1003               	clrc
  3313  07B9  0CF3               	rrf	??_Lcd_Write_Char,f
  3314  07BA  3EFF               	addlw	-1
  3315  07BB  1D03               	skipz
  3316  07BC  2FB8               	goto	u1045
  3317  07BD  0873               	movf	??_Lcd_Write_Char,w
  3318  07BE  120A  118A  27DE  120A  118A  	fcall	_Lcd_Port
  3319  07C3                     l1297:
  3320                           
  3321                           ;./lcd.h: 86:    RD3 = 1;
  3322  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3323  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3324  07C5  1588               	bsf	8,3	;volatile
  3325  07C6                     l1299:
  3326                           
  3327                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3328  07C6  300D               	movlw	13
  3329  07C7  00F3               	movwf	??_Lcd_Write_Char
  3330  07C8                     u2017:
  3331  07C8  0BF3               	decfsz	??_Lcd_Write_Char,f
  3332  07C9  2FC8               	goto	u2017
  3333  07CA                     l1301:
  3334                           
  3335                           ;./lcd.h: 88:    RD3 = 0;
  3336  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  3337  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  3338  07CC  1188               	bcf	8,3	;volatile
  3339  07CD                     l1303:
  3340                           
  3341                           ;./lcd.h: 89:    Lcd_Port(temp);
  3342  07CD  0874               	movf	Lcd_Write_Char@temp,w
  3343  07CE  120A  118A  27DE  120A  118A  	fcall	_Lcd_Port
  3344  07D3                     l1305:
  3345                           
  3346                           ;./lcd.h: 90:    RD3 = 1;
  3347  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3348  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  3349  07D5  1588               	bsf	8,3	;volatile
  3350  07D6                     l1307:
  3351                           
  3352                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3353  07D6  300D               	movlw	13
  3354  07D7  00F3               	movwf	??_Lcd_Write_Char
  3355  07D8                     u2027:
  3356  07D8  0BF3               	decfsz	??_Lcd_Write_Char,f
  3357  07D9  2FD8               	goto	u2027
  3358  07DA                     l1309:
  3359                           
  3360                           ;./lcd.h: 92:    RD3 = 0;
  3361  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  3362  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  3363  07DC  1188               	bcf	8,3	;volatile
  3364  07DD                     l83:
  3365  07DD  0008               	return
  3366  07DE                     __end_of_Lcd_Write_Char:
  3367                           
  3368                           	psect	text11
  3369  06CF                     __ptext11:	
  3370 ;; *************** function _Lcd_Set_Cursor *****************
  3371 ;; Defined at:
  3372 ;;		line 39 in file "./lcd.h"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  a               1    wreg     unsigned char 
  3375 ;;  b               1    6[COMMON] unsigned char 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  a               1    0[BANK0 ] unsigned char 
  3378 ;;  temp            1    3[BANK0 ] unsigned char 
  3379 ;;  y               1    2[BANK0 ] unsigned char 
  3380 ;;  z               1    1[BANK0 ] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3390 ;;      Params:         1       0       0       0       0
  3391 ;;      Locals:         0       4       0       0       0
  3392 ;;      Temps:          2       0       0       0       0
  3393 ;;      Totals:         3       4       0       0       0
  3394 ;;Total ram usage:        7 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    3
  3397 ;; This function calls:
  3398 ;;		_Lcd_Cmd
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _Lcd_Set_Cursor
  3406  06CF                     _Lcd_Set_Cursor:
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3410                           ;Lcd_Set_Cursor@a stored from wreg
  3411  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3412  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3413  06D1  00A0               	movwf	Lcd_Set_Cursor@a
  3414  06D2                     l1375:
  3415                           
  3416                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  3417  06D2  0320               	decf	Lcd_Set_Cursor@a,w
  3418  06D3  1D03               	btfss	3,2
  3419  06D4  2ED6               	goto	u1211
  3420  06D5  2ED7               	goto	u1210
  3421  06D6                     u1211:
  3422  06D6  2EFC               	goto	l1385
  3423  06D7                     u1210:
  3424  06D7                     l1377:
  3425                           
  3426                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  3427  06D7  0876               	movf	Lcd_Set_Cursor@b,w
  3428  06D8  3E7F               	addlw	127
  3429  06D9  00F7               	movwf	??_Lcd_Set_Cursor
  3430  06DA  0877               	movf	??_Lcd_Set_Cursor,w
  3431  06DB  00A3               	movwf	Lcd_Set_Cursor@temp
  3432                           
  3433                           ;./lcd.h: 45:   z = temp>>4;
  3434  06DC  0823               	movf	Lcd_Set_Cursor@temp,w
  3435  06DD  00F7               	movwf	??_Lcd_Set_Cursor
  3436  06DE  3004               	movlw	4
  3437  06DF                     u1225:
  3438  06DF  1003               	clrc
  3439  06E0  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3440  06E1  3EFF               	addlw	-1
  3441  06E2  1D03               	skipz
  3442  06E3  2EDF               	goto	u1225
  3443  06E4  0877               	movf	??_Lcd_Set_Cursor,w
  3444  06E5  00F8               	movwf	??_Lcd_Set_Cursor+1
  3445  06E6  0878               	movf	??_Lcd_Set_Cursor+1,w
  3446  06E7  00A1               	movwf	Lcd_Set_Cursor@z
  3447  06E8                     l1379:
  3448                           
  3449                           ;./lcd.h: 46:   y = temp & 0x0F;
  3450  06E8  0823               	movf	Lcd_Set_Cursor@temp,w
  3451  06E9  390F               	andlw	15
  3452  06EA  00F7               	movwf	??_Lcd_Set_Cursor
  3453  06EB  0877               	movf	??_Lcd_Set_Cursor,w
  3454  06EC  00A2               	movwf	Lcd_Set_Cursor@y
  3455  06ED                     l1381:
  3456                           
  3457                           ;./lcd.h: 47:   Lcd_Cmd(z);
  3458  06ED  0821               	movf	Lcd_Set_Cursor@z,w
  3459  06EE  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3460  06F3                     l1383:
  3461                           
  3462                           ;./lcd.h: 48:   Lcd_Cmd(y);
  3463  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3464  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  3465  06F5  0822               	movf	Lcd_Set_Cursor@y,w
  3466  06F6  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3467                           
  3468                           ;./lcd.h: 49:  }
  3469  06FB  2F26               	goto	l77
  3470  06FC                     l1385:
  3471  06FC  3002               	movlw	2
  3472  06FD  0620               	xorwf	Lcd_Set_Cursor@a,w
  3473  06FE  1D03               	btfss	3,2
  3474  06FF  2F01               	goto	u1231
  3475  0700  2F02               	goto	u1230
  3476  0701                     u1231:
  3477  0701  2F26               	goto	l77
  3478  0702                     u1230:
  3479  0702                     l1387:
  3480                           
  3481                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  3482  0702  0876               	movf	Lcd_Set_Cursor@b,w
  3483  0703  3EBF               	addlw	191
  3484  0704  00F7               	movwf	??_Lcd_Set_Cursor
  3485  0705  0877               	movf	??_Lcd_Set_Cursor,w
  3486  0706  00A3               	movwf	Lcd_Set_Cursor@temp
  3487                           
  3488                           ;./lcd.h: 53:   z = temp>>4;
  3489  0707  0823               	movf	Lcd_Set_Cursor@temp,w
  3490  0708  00F7               	movwf	??_Lcd_Set_Cursor
  3491  0709  3004               	movlw	4
  3492  070A                     u1245:
  3493  070A  1003               	clrc
  3494  070B  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3495  070C  3EFF               	addlw	-1
  3496  070D  1D03               	skipz
  3497  070E  2F0A               	goto	u1245
  3498  070F  0877               	movf	??_Lcd_Set_Cursor,w
  3499  0710  00F8               	movwf	??_Lcd_Set_Cursor+1
  3500  0711  0878               	movf	??_Lcd_Set_Cursor+1,w
  3501  0712  00A1               	movwf	Lcd_Set_Cursor@z
  3502  0713                     l1389:
  3503                           
  3504                           ;./lcd.h: 54:   y = temp & 0x0F;
  3505  0713  0823               	movf	Lcd_Set_Cursor@temp,w
  3506  0714  390F               	andlw	15
  3507  0715  00F7               	movwf	??_Lcd_Set_Cursor
  3508  0716  0877               	movf	??_Lcd_Set_Cursor,w
  3509  0717  00A2               	movwf	Lcd_Set_Cursor@y
  3510  0718                     l1391:
  3511                           
  3512                           ;./lcd.h: 55:   Lcd_Cmd(z);
  3513  0718  0821               	movf	Lcd_Set_Cursor@z,w
  3514  0719  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3515  071E                     l1393:
  3516                           
  3517                           ;./lcd.h: 56:   Lcd_Cmd(y);
  3518  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3519  071F  1303               	bcf	3,6	;RP1=0, select bank0
  3520  0720  0822               	movf	Lcd_Set_Cursor@y,w
  3521  0721  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3522  0726                     l77:
  3523  0726  0008               	return
  3524  0727                     __end_of_Lcd_Set_Cursor:
  3525                           
  3526                           	psect	text12
  3527  0672                     __ptext12:	
  3528 ;; *************** function _Lcd_Init *****************
  3529 ;; Defined at:
  3530 ;;		line 60 in file "./lcd.h"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0, pclath, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3544 ;;      Params:         0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0
  3546 ;;      Temps:          2       0       0       0       0
  3547 ;;      Totals:         2       0       0       0       0
  3548 ;;Total ram usage:        2 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    3
  3551 ;; This function calls:
  3552 ;;		_Lcd_Cmd
  3553 ;;		_Lcd_Port
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function _Lcd_Init
  3561  0672                     _Lcd_Init:
  3562  0672                     l1395:	
  3563                           ;incstack = 0
  3564                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3565                           
  3566                           
  3567                           ;./lcd.h: 62:   Lcd_Port(0x00);
  3568  0672  3000               	movlw	0
  3569  0673  120A  118A  27DE  120A  118A  	fcall	_Lcd_Port
  3570  0678                     l1397:
  3571                           
  3572                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3573  0678  301A               	movlw	26
  3574  0679  00F7               	movwf	??_Lcd_Init+1
  3575  067A  30F8               	movlw	248
  3576  067B  00F6               	movwf	??_Lcd_Init
  3577  067C                     u2037:
  3578  067C  0BF6               	decfsz	??_Lcd_Init,f
  3579  067D  2E7C               	goto	u2037
  3580  067E  0BF7               	decfsz	??_Lcd_Init+1,f
  3581  067F  2E7C               	goto	u2037
  3582  0680  0000               	nop
  3583  0681                     l1399:
  3584                           
  3585                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  3586  0681  3003               	movlw	3
  3587  0682  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3588                           
  3589                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3590  0687  3007               	movlw	7
  3591  0688  00F7               	movwf	??_Lcd_Init+1
  3592  0689  307D               	movlw	125
  3593  068A  00F6               	movwf	??_Lcd_Init
  3594  068B                     u2047:
  3595  068B  0BF6               	decfsz	??_Lcd_Init,f
  3596  068C  2E8B               	goto	u2047
  3597  068D  0BF7               	decfsz	??_Lcd_Init+1,f
  3598  068E  2E8B               	goto	u2047
  3599  068F                     l1401:
  3600                           
  3601                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3602  068F  3003               	movlw	3
  3603  0690  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3604  0695                     l1403:
  3605                           
  3606                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3607  0695  300F               	movlw	15
  3608  0696  00F7               	movwf	??_Lcd_Init+1
  3609  0697  3047               	movlw	71
  3610  0698  00F6               	movwf	??_Lcd_Init
  3611  0699                     u2057:
  3612  0699  0BF6               	decfsz	??_Lcd_Init,f
  3613  069A  2E99               	goto	u2057
  3614  069B  0BF7               	decfsz	??_Lcd_Init+1,f
  3615  069C  2E99               	goto	u2057
  3616  069D  2E9E               	nop2
  3617                           
  3618                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3619  069E  3003               	movlw	3
  3620  069F  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3621                           
  3622                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  3623  06A4  3002               	movlw	2
  3624  06A5  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3625                           
  3626                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  3627  06AA  3002               	movlw	2
  3628  06AB  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3629                           
  3630                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  3631  06B0  3008               	movlw	8
  3632  06B1  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3633                           
  3634                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  3635  06B6  3000               	movlw	0
  3636  06B7  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3637                           
  3638                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  3639  06BC  300C               	movlw	12
  3640  06BD  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3641                           
  3642                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3643  06C2  3000               	movlw	0
  3644  06C3  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3645                           
  3646                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  3647  06C8  3006               	movlw	6
  3648  06C9  120A  158A  2773  120A  118A  	fcall	_Lcd_Cmd
  3649  06CE                     l80:
  3650  06CE  0008               	return
  3651  06CF                     __end_of_Lcd_Init:
  3652                           
  3653                           	psect	text13
  3654  0F3F                     __ptext13:	
  3655 ;; *************** function _Lcd_Clear *****************
  3656 ;; Defined at:
  3657 ;;		line 33 in file "./lcd.h"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  2   70[None  ] int 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3671 ;;      Params:         0       0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0
  3674 ;;      Totals:         0       0       0       0       0
  3675 ;;Total ram usage:        0 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    3
  3678 ;; This function calls:
  3679 ;;		_Lcd_Cmd
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _Lcd_Clear
  3687  0F3F                     _Lcd_Clear:
  3688  0F3F                     l1373:	
  3689                           ;incstack = 0
  3690                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3691                           
  3692                           
  3693                           ;./lcd.h: 35:  Lcd_Cmd(0);
  3694  0F3F  3000               	movlw	0
  3695  0F40  120A  158A  2773  120A  158A  	fcall	_Lcd_Cmd
  3696                           
  3697                           ;./lcd.h: 36:  Lcd_Cmd(1);
  3698  0F45  3001               	movlw	1
  3699  0F46  120A  158A  2773  120A  158A  	fcall	_Lcd_Cmd
  3700  0F4B                     l71:
  3701  0F4B  0008               	return
  3702  0F4C                     __end_of_Lcd_Clear:
  3703                           
  3704                           	psect	text14
  3705  0F73                     __ptext14:	
  3706 ;; *************** function _Lcd_Cmd *****************
  3707 ;; Defined at:
  3708 ;;		line 24 in file "./lcd.h"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  a               1    wreg     unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  a               1    5[COMMON] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         1       0       0       0       0
  3724 ;;      Temps:          2       0       0       0       0
  3725 ;;      Totals:         3       0       0       0       0
  3726 ;;Total ram usage:        3 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    2
  3729 ;; This function calls:
  3730 ;;		_Lcd_Port
  3731 ;; This function is called by:
  3732 ;;		_Lcd_Clear
  3733 ;;		_Lcd_Set_Cursor
  3734 ;;		_Lcd_Init
  3735 ;;		_Lcd_Shift_Right
  3736 ;;		_Lcd_Shift_Left
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           
  3741                           ;psect for function _Lcd_Cmd
  3742  0F73                     _Lcd_Cmd:
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3746                           ;Lcd_Cmd@a stored from wreg
  3747  0F73  00F5               	movwf	Lcd_Cmd@a
  3748  0F74                     l1281:
  3749                           
  3750                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD2 = 0;
  3751  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0F76  1108               	bcf	8,2	;volatile
  3754  0F77                     l1283:
  3755                           
  3756                           ;./lcd.h: 27:  Lcd_Port(a);
  3757  0F77  0875               	movf	Lcd_Cmd@a,w
  3758  0F78  120A  118A  27DE  120A  158A  	fcall	_Lcd_Port
  3759  0F7D                     l1285:
  3760                           
  3761                           ;./lcd.h: 28:  RD3 = 1;
  3762  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0F7F  1588               	bsf	8,3	;volatile
  3765  0F80                     l1287:
  3766                           
  3767                           ;./lcd.h: 29:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3768  0F80  3006               	movlw	6
  3769  0F81  00F4               	movwf	??_Lcd_Cmd+1
  3770  0F82  3030               	movlw	48
  3771  0F83  00F3               	movwf	??_Lcd_Cmd
  3772  0F84                     u2067:
  3773  0F84  0BF3               	decfsz	??_Lcd_Cmd,f
  3774  0F85  2F84               	goto	u2067
  3775  0F86  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3776  0F87  2F84               	goto	u2067
  3777  0F88  0000               	nop
  3778  0F89                     l1289:
  3779                           
  3780                           ;./lcd.h: 30:         RD3 = 0;
  3781  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3782  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3783  0F8B  1188               	bcf	8,3	;volatile
  3784  0F8C                     l68:
  3785  0F8C  0008               	return
  3786  0F8D                     __end_of_Lcd_Cmd:
  3787                           
  3788                           	psect	text15
  3789  07DE                     __ptext15:	
  3790 ;; *************** function _Lcd_Port *****************
  3791 ;; Defined at:
  3792 ;;		line 2 in file "./lcd.h"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  a               1    wreg     unsigned char 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  a               1    2[COMMON] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3806 ;;      Params:         0       0       0       0       0
  3807 ;;      Locals:         1       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0
  3809 ;;      Totals:         1       0       0       0       0
  3810 ;;Total ram usage:        1 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_Lcd_Cmd
  3817 ;;		_Lcd_Init
  3818 ;;		_Lcd_Write_Char
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _Lcd_Port
  3824  07DE                     _Lcd_Port:
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in _Lcd_Port: [wreg]
  3828                           ;Lcd_Port@a stored from wreg
  3829  07DE  00F2               	movwf	Lcd_Port@a
  3830  07DF                     l1271:
  3831                           
  3832                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
  3833  07DF  1C72               	btfss	Lcd_Port@a,0
  3834  07E0  2FE2               	goto	u1001
  3835  07E1  2FE3               	goto	u1000
  3836  07E2                     u1001:
  3837  07E2  2FE7               	goto	l57
  3838  07E3                     u1000:
  3839  07E3                     l1273:
  3840                           
  3841                           ;./lcd.h: 5:   RD4 = 1;
  3842  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  3843  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  3844  07E5  1608               	bsf	8,4	;volatile
  3845  07E6  2FEA               	goto	l58
  3846  07E7                     l57:	
  3847                           ;./lcd.h: 6:  else
  3848                           
  3849                           
  3850                           ;./lcd.h: 7:   RD4 = 0;
  3851  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  3852  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  3853  07E9  1208               	bcf	8,4	;volatile
  3854  07EA                     l58:
  3855                           
  3856                           ;./lcd.h: 9:  if(a & 2)
  3857  07EA  1CF2               	btfss	Lcd_Port@a,1
  3858  07EB  2FED               	goto	u1011
  3859  07EC  2FEE               	goto	u1010
  3860  07ED                     u1011:
  3861  07ED  2FF0               	goto	l59
  3862  07EE                     u1010:
  3863  07EE                     l1275:
  3864                           
  3865                           ;./lcd.h: 10:   RD5 = 1;
  3866  07EE  1688               	bsf	8,5	;volatile
  3867  07EF  2FF1               	goto	l60
  3868  07F0                     l59:	
  3869                           ;./lcd.h: 11:  else
  3870                           
  3871                           
  3872                           ;./lcd.h: 12:   RD5 = 0;
  3873  07F0  1288               	bcf	8,5	;volatile
  3874  07F1                     l60:
  3875                           
  3876                           ;./lcd.h: 14:  if(a & 4)
  3877  07F1  1D72               	btfss	Lcd_Port@a,2
  3878  07F2  2FF4               	goto	u1021
  3879  07F3  2FF5               	goto	u1020
  3880  07F4                     u1021:
  3881  07F4  2FF7               	goto	l61
  3882  07F5                     u1020:
  3883  07F5                     l1277:
  3884                           
  3885                           ;./lcd.h: 15:   RD6 = 1;
  3886  07F5  1708               	bsf	8,6	;volatile
  3887  07F6  2FF8               	goto	l62
  3888  07F7                     l61:	
  3889                           ;./lcd.h: 16:  else
  3890                           
  3891                           
  3892                           ;./lcd.h: 17:   RD6 = 0;
  3893  07F7  1308               	bcf	8,6	;volatile
  3894  07F8                     l62:
  3895                           
  3896                           ;./lcd.h: 19:  if(a & 8)
  3897  07F8  1DF2               	btfss	Lcd_Port@a,3
  3898  07F9  2FFB               	goto	u1031
  3899  07FA  2FFC               	goto	u1030
  3900  07FB                     u1031:
  3901  07FB  2FFE               	goto	l63
  3902  07FC                     u1030:
  3903  07FC                     l1279:
  3904                           
  3905                           ;./lcd.h: 20:   RD7 = 1;
  3906  07FC  1788               	bsf	8,7	;volatile
  3907  07FD  2FFF               	goto	l65
  3908  07FE                     l63:	
  3909                           ;./lcd.h: 21:  else
  3910                           
  3911                           
  3912                           ;./lcd.h: 22:   RD7 = 0;
  3913  07FE  1388               	bcf	8,7	;volatile
  3914  07FF                     l65:
  3915  07FF  0008               	return
  3916  0800                     __end_of_Lcd_Port:
  3917                           
  3918                           	psect	text16
  3919  0F5E                     __ptext16:	
  3920 ;; *************** function _ADCinit *****************
  3921 ;; Defined at:
  3922 ;;		line 75 in file "main.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		None
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3936 ;;      Params:         0       0       0       0       0
  3937 ;;      Locals:         0       0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0
  3939 ;;      Totals:         0       0       0       0       0
  3940 ;;Total ram usage:        0 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    1
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           
  3951                           ;psect for function _ADCinit
  3952  0F5E                     _ADCinit:
  3953  0F5E                     l1413:	
  3954                           ;incstack = 0
  3955                           ; Regs used in _ADCinit: []
  3956                           
  3957                           
  3958                           ;main.c: 78:         if(RB4 == 1)
  3959  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  3960  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  3961  0F60  131F               	bcf	31,6	;volatile
  3962  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0F63  139F               	bcf	31,7	;volatile
  3965  0F64  171F               	bsf	31,6	;volatile
  3966                           
  3967                           ;main.c: 80:         if(RB5 == 1)
  3968  0F65  129F               	bcf	31,5	;volatile
  3969  0F66  121F               	bcf	31,4	;volatile
  3970  0F67  119F               	bcf	31,3	;volatile
  3971                           
  3972                           ;main.c: 82:         RBIF = 0;
  3973  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  3974  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  3975  0F6A  179F               	bsf	31,7	;volatile
  3976                           
  3977                           ;main.c: 84: 
  3978  0F6B  159F               	bsf	31,3	;volatile
  3979  0F6C  151F               	bsf	31,2	;volatile
  3980  0F6D  149F               	bsf	31,1	;volatile
  3981  0F6E  101F               	bcf	31,0	;volatile
  3982                           
  3983                           ;main.c: 86:     {
  3984  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0F71  141F               	bsf	31,0	;volatile
  3987  0F72                     l114:
  3988  0F72  0008               	return
  3989  0F73                     __end_of_ADCinit:
  3990                           
  3991                           	psect	text17
  3992  0FD5                     __ptext17:	
  3993 ;; *************** function _ISR *****************
  3994 ;; Defined at:
  3995 ;;		line 98 in file "main.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0
  4011 ;;      Temps:          2       0       0       0       0
  4012 ;;      Totals:         2       0       0       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		Interrupt level 1
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           
  4023                           ;psect for function _ISR
  4024  0FD5                     _ISR:
  4025  0FD5                     i1l1755:
  4026  0FD5  1C0B               	btfss	11,0	;volatile
  4027  0FD6  2FD8               	goto	u195_21
  4028  0FD7  2FD9               	goto	u195_20
  4029  0FD8                     u195_21:
  4030  0FD8  2FF0               	goto	i1l1767
  4031  0FD9                     u195_20:
  4032  0FD9                     i1l1757:
  4033  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0FDB  1E06               	btfss	6,4	;volatile
  4036  0FDC  2FDE               	goto	u196_21
  4037  0FDD  2FDF               	goto	u196_20
  4038  0FDE                     u196_21:
  4039  0FDE  2FE5               	goto	i1l1761
  4040  0FDF                     u196_20:
  4041  0FDF                     i1l1759:
  4042  0FDF  3001               	movlw	1
  4043  0FE0  07E7               	addwf	_setPoint,f
  4044  0FE1  1803               	skipnc
  4045  0FE2  0AE8               	incf	_setPoint+1,f
  4046  0FE3  3000               	movlw	0
  4047  0FE4  07E8               	addwf	_setPoint+1,f
  4048  0FE5                     i1l1761:
  4049  0FE5  1E86               	btfss	6,5	;volatile
  4050  0FE6  2FE8               	goto	u197_21
  4051  0FE7  2FE9               	goto	u197_20
  4052  0FE8                     u197_21:
  4053  0FE8  2FEF               	goto	i1l1765
  4054  0FE9                     u197_20:
  4055  0FE9                     i1l1763:
  4056  0FE9  3001               	movlw	1
  4057  0FEA  02E7               	subwf	_setPoint,f
  4058  0FEB  3000               	movlw	0
  4059  0FEC  1C03               	skipc
  4060  0FED  03E8               	decf	_setPoint+1,f
  4061  0FEE  02E8               	subwf	_setPoint+1,f
  4062  0FEF                     i1l1765:
  4063  0FEF  100B               	bcf	11,0	;volatile
  4064  0FF0                     i1l1767:
  4065  0FF0  1C8B               	btfss	11,1	;volatile
  4066  0FF1  2FF3               	goto	u198_21
  4067  0FF2  2FF4               	goto	u198_20
  4068  0FF3                     u198_21:
  4069  0FF3  2FF9               	goto	i1l129
  4070  0FF4                     u198_20:
  4071  0FF4                     i1l1769:
  4072  0FF4  3001               	movlw	1
  4073  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0FF7  0688               	xorwf	8,f
  4076  0FF8                     i1l1771:
  4077  0FF8  108B               	bcf	11,1	;volatile
  4078  0FF9                     i1l129:
  4079  0FF9  0871               	movf	??_ISR+1,w
  4080  0FFA  008A               	movwf	10
  4081  0FFB  0E70               	swapf	??_ISR,w
  4082  0FFC  0083               	movwf	3
  4083  0FFD  0EFE               	swapf	btemp,f
  4084  0FFE  0E7E               	swapf	btemp,w
  4085  0FFF  0009               	retfie
  4086  1000                     __end_of_ISR:
  4087  007E                     btemp	set	126	;btemp
  4088  007E                     wtemp0	set	126
  4089                           
  4090                           	psect	intentry
  4091  0004                     __pintentry:	
  4092                           ;incstack = 0
  4093                           ; Regs used in _ISR: [wreg]
  4094                           
  4095  0004                     interrupt_function:
  4096  007E                     saved_w	set	btemp
  4097  0004  00FE               	movwf	btemp
  4098  0005  0E03               	swapf	3,w
  4099  0006  00F0               	movwf	??_ISR
  4100  0007  080A               	movf	10,w
  4101  0008  00F1               	movwf	??_ISR+1
  4102  0009  120A  158A  2FD5   	ljmp	_ISR
  4103                           
  4104                           	psect	config
  4105                           
  4106                           ;Config register CONFIG @ 0x2007
  4107                           ;	Oscillator Selection bits
  4108                           ;	FOSC = XT, XT oscillator
  4109                           ;	Watchdog Timer Enable bit
  4110                           ;	WDTE = OFF, WDT disabled
  4111                           ;	Power-up Timer Enable bit
  4112                           ;	PWRTE = ON, PWRT enabled
  4113                           ;	Brown-out Reset Enable bit
  4114                           ;	BOREN = ON, BOR enabled
  4115                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4116                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4117                           ;	Data EEPROM Memory Code Protection bit
  4118                           ;	CPD = OFF, Data EEPROM code protection off
  4119                           ;	Flash Program Memory Write Enable bits
  4120                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4121                           ;	In-Circuit Debugger Mode bit
  4122                           ;	DEBUG = 0x1, unprogrammed default
  4123                           ;	Flash Program Memory Code Protection bit
  4124                           ;	CP = OFF, Code protection off
  4125  2007                     	org	8199
  4126  2007  3F71               	dw	16241

Data Sizes:
    Strings     22
    Constant    10
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     65      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    6354
                                             43 BANK0     22    22      0
                            _ADCinit
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _ReadADC
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1472
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             32 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2      24
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              7 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ReadADC
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      49       5       91.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      55      12        0.0%
ABS                  0      0      55       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 28 16:02:19 2021

                        pc 0002                         l60 07F1                         l61 07F7  
                       l62 07F8                         l63 07FE                         l71 0F4B  
                       l80 06CE                         l65 07FF                         l57 07E7  
                       l58 07EA                         l59 07F0                         l83 07DD  
                       l68 0F8C                         l77 0726                         l89 0FAD  
                       fsr 0004        __Umul8_16@word_mpld 0078                        l120 0F5D  
                      l114 0F72                        l117 0F4F                        l239 046F  
                      l515 076A                        l436 065C                        l429 0671  
                      l525 07A6                        l439 0671                        l632 0385  
                      l651 0FC2                        l644 0379                        l653 0FD4  
                      l638 02F1                        l690 05CB                        l682 05A3  
                      l676 055E                        l678 05F5                        l689 05BF  
                      _GIE 005F                        _RD0 0040                        _RB4 0034  
                      _RB5 0035                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _ISR 0FD5                        fsr0 0004  
                      indf 0000            __end_of_ADCinit 0F73               ___flmul@aexp 0038  
             ___flmul@bexp 0039               ___flmul@sign 0033               ___flmul@temp 003E  
             ___flmul@prod 003A                       ?_ISR 0070               ___fltol@exp1 004A  
                     l1301 07CA                       l1303 07CD                       l1311 0727  
                     l1401 068F                       l1305 07D3                       l1321 073D  
                     l1313 0729                       l1403 0695                       l1307 07D6  
                     l1411 0FA2                       l1331 0760                       l1323 0741  
                     l1315 072F                       l1413 0F5E                       l1309 07DA  
                     l1405 0F8E                       l1501 0630                       l1325 0752  
                     l1317 0732                       l1333 0766                       l1341 0776  
                     l1271 07DF                       l1407 0F91                       l1415 0F4C  
                     l1327 0758                       l1319 0739                       l1351 0795  
                     l1343 077D                       l1431 03A0                       l1423 0389  
                     l1273 07E3                       l1281 0F74                       l1409 0F9C  
                     l1417 0F4C                       l1361 0FB1                       l1601 0275  
                     l1521 0025                       l1329 0759                       l1353 079C  
                     l1345 0781                       l1337 076B                       l1441 03CA  
                     l1425 038E                       l1275 07EE                       l1283 0F77  
                     l1291 07A8                       l1419 0F53                       l1363 0FB8  
                     l1611 02C1                       l1603 029D                       l1531 003C  
                     l1523 002C                       l1515 0651                       l1507 0638  
                     l1347 0785                       l1339 0773                       l1355 07A2  
                     l1443 03CE                       l1435 03A1                       l1427 0394  
                     l1277 07F5                       l1285 0F7D                       l1373 0F3F  
                     l1381 06ED                       l1293 07B2                       l1365 0FBC  
                     l1621 02D6                       l1613 02C2                       l1605 02A6  
                     l1541 0058                       l1533 0041                       l1525 0032  
                     l1517 0661                       l1509 064A                       l1701 05ED  
                     l1349 078F                       l1461 0405                       l1453 03D9  
                     l1445 03D2                       l1437 03BE                       l1429 039B  
                     l1279 07FC                       l1287 0F80                       l1391 0718  
                     l1383 06F3                       l1375 06D2                       l1295 07B5  
                     l1367 0FCB                       l1359 0FAF                       l1631 02FB  
                     l1623 02DA                       l1615 02CB                       l1607 02B4  
                     l1551 006D                       l1543 005E                       l1535 0049  
                     l1527 0036                       l1519 0666                       l1471 044C  
                     l1463 040C                       l1447 03D7                       l1439 03C6  
                     l1711 0475                       l1289 0F89                       l1393 071E  
                     l1377 06D7                       l1385 06FC                       l1297 07C3  
                     l1369 0FD0                       l1641 0339                       l1633 0309  
                     l1625 02EE                       l1609 02BD                       l1617 02D1  
                     l1561 0089                       l1553 0075                       l1545 0062  
                     l1537 004B                       l1529 0037                       l1473 0450  
                     l1465 0410                       l1457 03F5                       l1721 0482  
                     l1713 0478                       l1395 0672                       l1387 0702  
                     l1379 06E8                       l1299 07C6                       l1651 036D  
                     l1643 0344                       l1635 030D                       l1619 02D5  
                     l1571 00CC                       l1555 0077                       l1547 0063  
                     l1539 0053                       l1491 060C                       l1467 0415  
                     l1459 03FF                       l1475 0459                       l1731 048B  
                     l1723 0485                       l1715 0479                       l1397 0678  
                     l1389 0713                       l1653 0371                       l1645 0353  
                     l1637 0326                       l1629 02F6                       l1581 0155  
                     l1573 00E8                       l1565 0092                       l1557 007F  
                     l1549 0068                       l1493 0621                       l1485 05F6  
                     l1661 053D                       l1469 0445                       l1477 046B  
                     l1741 04F6                       l1733 0496                       l1725 0486  
                     l1717 047E                       l1709 0470                       l1399 0681  
                     l1655 0372                       l1647 035D                       l1639 032C  
                     l1591 01C8                       l1583 0165                       l1575 0114  
                     l1567 00A2                       l1559 0084                       l1495 0622  
                     l1487 0603                       l1663 0542                       l1751 0526  
                     l1743 04FE                       l1735 04CE                       l1727 0489  
                     l1719 0481                       l1657 037D                       l1649 035F  
                     l1593 01E5                       l1585 0182                       l1577 0130  
                     l1569 00AF                       l1497 062A                       l1681 058C  
                     l1673 056F                       l1665 0546                       l1753 052C  
                     l1745 0504                       l1737 04E1                       l1729 048A  
                     l1595 0212                       l1587 0192                       l1579 014C  
                     l1499 062C                       l1691 05C3                       l1683 059A  
                     l1675 0574                       l1667 0556                       l1747 050E  
                     l1739 04E6                       l1597 0222                       l1589 01AF  
                     l1693 05CD                       l1685 05AA                       l1677 0581  
                     l1669 0566                       l1749 051E                       l1599 024F  
                     l1695 05E3                       l1687 05B5                       l1679 0588  
                     l1697 05E8                       l1689 05B9                       l1793 03B3  
                     l1699 05EC                       STR_1 0810                       STR_2 081B  
                     u1000 07E3                       u1001 07E2                       u1010 07EE  
                     u1011 07ED                       u1020 07F5                       u1021 07F4  
                     u1030 07FC                       u1110 0766                       u1031 07FB  
                     u1111 0765                       u1200 0FD0                       u1120 0773  
                     u1201 0FCF                       u1105 075A                       u1121 0772  
                     u1210 06D7                       u1050 072F                       u1211 06D6  
                     u1051 072E                       u1140 0785                       u1300 03FF  
                     u1045 07B8                       u1141 0784                       u1301 03FE  
                     u1230 0702                       u1070 0741                       u1150 078F  
                     u1310 0405                       u1231 0701                       u1071 0740  
                     u1151 078E                       u1135 0777                       u1311 0404  
                     u2007 0532                       u1400 0650                       u1320 0459  
                     u1225 06DF                       u2017 07C8                       u1401 064F  
                     u1065 0733                       u1321 0458                       u1250 0FAD  
                     u1090 0752                       u1170 07A2                       u1330 046B  
                     u2027 07D8                       u1251 0FAC                       u1091 0751  
                     u1171 07A1                       u1155 078B                       u1331 046A  
                     u1260 0F53                       u1180 0FBC                       u1500 0084  
                     u1420 0661                       u1340 0603                       u2037 067C  
                     u1245 070A                       u1261 0F52                       u1181 0FBB  
                     u1501 0083                       u1421 0660                       u1341 0602  
                     u1085 0742                       u1165 0796                       u1510 0089  
                     u1430 0666                       u1350 061A                       u1270 0394  
                     u2047 068B                       u1511 0088                       u1431 0665  
                     u1415 0653                       u1095 074E                       u1271 0393  
                     u1440 0036                       u1360 0630                       u1280 03CE  
                     u2057 0699                       u1601 01D7                       u1521 00DA  
                     u1441 0035                       u1361 062F                       u1281 03CD  
                     u1602 01DE                       u1522 00E1                       u1450 003C  
                     u1370 0637                       u1290 03F4                       u2067 0F84  
                     u1195 0FC3                       u1611 0204                       u1603 01E5  
                     u1531 00F6                       u1523 00E8                       u1451 003B  
                     u1371 0636                       u1355 0615                       u1291 03F3  
                     u1612 020B                       u1532 00FD                       u1460 0041  
                     u1621 0231                       u1613 0212                       u1541 0122  
                     u1533 0104                       u1461 0040                       u1710 02D5  
                     u1630 025B                       u1622 0238                       u1542 0129  
                     u1470 0062                       u1390 0649                       u1711 02D4  
                     u1623 023F                       u1551 013E                       u1543 0130  
                     u1471 0061                       u1391 0648                       u1295 03F0  
                     u1800 0371                       u1720 02DA                       u1552 0145  
                     u1480 0068                       u1801 0370                       u1721 02D9  
                     u1705 02C4                       u1641 0267                       u1553 014C  
                     u1481 0067                       u1385 0639                       u1730 02EE  
                     u1650 0283                       u1642 026E                       u1490 006D  
                     u1810 0542                       u1731 02ED                       u1643 0275  
                     u1635 0256                       u1571 0174                       u1491 006C  
                     u1811 0541                       u1740 02F5                       u1572 017B  
                     u1900 05BF                       u1820 0546                       u1741 02F4  
                     u1661 028F                       u1581 01A1                       u1573 0182  
                     u1565 014E                       u1901 05BE                       u1821 0545  
                     u1750 02FB                       u1662 0296                       u1582 01A8  
                     u1910 05C3                       u1830 0566                       u1751 02FA  
                     u1663 029D                       u1655 027E                       u1583 01AF  
                     u1911 05C2                       u1831 0565                       u1760 030D  
                     u1920 05D8                       u1761 030C                       u1770 031C  
                     u1690 02C1                       u1930 05E8                       u1850 0587  
                     u1691 02C0                       u1675 029F                       u1595 01B1  
                     u1931 05E7                       u1851 0586                       u1780 0339  
                     u1940 05EC                       u1781 0338                       u1685 02B6  
                     u1941 05EB                       u1925 05D3                       u1845 0579  
                     u1790 0353                       u1870 05A9                       u1791 0352  
                     u1775 0317                       u1871 05A8                       u1785 0335  
                     u1865 059B                       u1890 05B9                       u1795 034F  
                     u1891 05B8                       u1885 05AE                       _INTE 005C  
                     _INTF 0059                       _RBIE 005B                       _RBIF 0058  
                     u1997 050A          ?_Lcd_Write_String 0070                       _main 0470  
                     _temp 0063                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 0F8D            __end_of_ReadADC 0F5E  
                    ??_ISR 0070              ___fltol@sign1 0049                      ?_main 0070  
          __end_of___flmul 0386            __end_of___fltol 0672            __end_of___lwdiv 076B  
                    i1l129 0FF9            __end_of___lwmod 07A7    __size_of_Lcd_Set_Cursor 0058  
                    _TRISD 0088            __end_of_dpowers 0810                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0470  
         __end_of_Lcd_Init 06CF           __end_of_Lcd_Port 0800            __initialization 000F  
             __end_of_main 053A                  ??_ADCinit 0072                     ??_main 004B  
       __size_of_Lcd_Clear 000D                     _ADRESH 001E                     _ADRESL 009E  
                   i1l1761 0FE5                     i1l1771 0FF8                     i1l1763 0FE9  
                   i1l1755 0FD5                     i1l1765 0FEF                     i1l1757 0FD9  
                   i1l1759 0FDF                     i1l1767 0FF0                     i1l1769 0FF4  
                   _INTEDG 040E                     u195_20 0FD9                     u195_21 0FD8  
                   u196_20 0FDF                     u196_21 0FDE                     u197_20 0FE9  
                   u197_21 0FE8                     u198_20 0FF4                     u198_21 0FF3  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0037                     _TRISA0 0428  
                   _TRISB0 0430                     _TRISD0 0440           __end_of___xxtofl 05F6  
                ??_ReadADC 0074                  ??___flmul 002E                  ??___fltol 0044  
                ??___lwdiv 0076                  ??___lwmod 007A         __size_of__Umul8_16 0027  
                   saved_w 007E                  ??_sprintf 0027            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0072  
  __end_of__initialization 0021          __end_of_Lcd_Clear 0F4C                 ___fltol@f1 0040  
           __pcstackCOMMON 0070               __pidataBANK0 0F3D             _Lcd_Set_Cursor 06CF  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0061  
        __end_of__Umul8_16 0FD5                 __pmaintext 0470                 __pintentry 0004  
__size_of_Lcd_Write_String 0021     __end_of_Lcd_Set_Cursor 0727                    _ADCinit 0F5E  
                ?___xxtofl 0072                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
               __stringtab 0800             _Lcd_Write_Char 07A7                    _Lcd_Cmd 0F73  
                  _ReadADC 0F4C                    ___flmul 0025                    ___fltol 05F6  
                  ___lwdiv 0727                    ___lwmod 076B            ?_Lcd_Set_Cursor 0076  
                  __ptext1 0386                    __ptext2 076B                    __ptext3 0727  
                  __ptext4 053A                    __ptext5 05F6                    __ptext6 0025  
                  __ptext7 0FAE                    __ptext8 0F4C                    __ptext9 0F8D  
             __size_of_ISR 002B                    _dpowers 0806                 ??___xxtofl 0076  
                  _sprintf 0386                    main@str 004D                    _voltage 0061  
   __end_of_Lcd_Write_Char 07DE       end_of_initialization 0021                  Lcd_Port@a 0072  
            ___xxtofl@sign 0020            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 007A  
        Lcd_Write_String@i 0078                ___flmul@grs 0034           ReadADC@TempValue 0074  
                _Lcd_Clear 0F3F           _Lcd_Write_String 0F8D        start_initialization 000F  
              __end_of_ISR 1000          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
               ?_Lcd_Clear 0070                  __Umul8_16 0FAE                __pdataBANK0 0067  
          Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075                   ?_ADCinit 0070  
                ___flmul@a 002A                  ___flmul@b 0026                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
              sprintf@flag 002B                sprintf@prec 002C                   ?_ReadADC 0072  
         ___lwdiv@dividend 0074           ??_Lcd_Set_Cursor 0077                   ?___flmul 0026  
                 ?___fltol 0040                 ?__Umul8_16 0072                   ?___lwdiv 0072  
                 ?___lwmod 0020                  __pstrings 0800           ___lwdiv@quotient 0077  
                 _ADCvalue 0065                   ?_sprintf 0024          interrupt_function 0004  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F           __size_of_ADCinit 0015  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 0672                   _Lcd_Port 07DE  
 __end_of_Lcd_Write_String 0FAE           __size_of_Lcd_Cmd 001A           __size_of_ReadADC 0012  
              ??__Umul8_16 0074           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lwdiv 0044           __size_of___lwmod 003C         __end_of__stringtab 0806  
               sprintf@val 002D                   ___xxtofl 053A            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079                   __ptext10 07A7                   __ptext11 06CF  
                 __ptext12 0672                   __ptext13 0F3F                   __ptext14 0F73  
                 __ptext15 07DE                   __ptext16 0F5E                   __ptext17 0FD5  
         __size_of_sprintf 00EA              __size_of_main 00CA                   _setPoint 0067  
       Lcd_Write_Char@temp 0074                   intlevel1 0000                  sprintf@ap 002A  
                sprintf@sp 002F           ___lwmod@dividend 0022                  stringcode 0800  
       Lcd_Set_Cursor@temp 0023     __Umul8_16@multiplicand 0072                   sprintf@c 0030  
                 sprintf@f 0024            ___lwmod@divisor 0020            ___lwmod@counter 007B  
                 stringdir 0800                   stringtab 0800       __Umul8_16@multiplier 007A  
        __Umul8_16@product 0076  
