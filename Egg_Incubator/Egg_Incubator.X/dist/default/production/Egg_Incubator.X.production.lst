

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 28 20:06:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194                           
   195                           	psect	idataBANK0
   196  07FC                     __pidataBANK0:
   197                           
   198                           ;initializer for _setPoint
   199  07FC  3425               	retlw	37
   200  07FD  3400               	retlw	0
   201                           
   202                           	psect	idataBANK1
   203  07F4                     __pidataBANK1:
   204                           
   205                           ;initializer for _kd
   206  07F4  3401               	retlw	1
   207  07F5  3400               	retlw	0
   208                           
   209                           ;initializer for _ki
   210  07F6  3407               	retlw	7
   211  07F7  3400               	retlw	0
   212                           
   213                           ;initializer for _kp
   214  07F8  34CB               	retlw	203
   215  07F9  3400               	retlw	0
   216                           
   217                           ;initializer for _max_delay
   218  07FA  3428               	retlw	40
   219  07FB  3423               	retlw	35
   220                           
   221                           	psect	strings
   222  0800                     __pstrings:
   223  0800                     stringtab:
   224  0800                     __stringtab:
   225  0800                     stringcode:	
   226                           ;	String table - string pointers are 1 byte each
   227                           
   228  0800                     stringdir:
   229  0800  3008               	movlw	high stringdir
   230  0801  008A               	movwf	10
   231  0802  0804               	movf	4,w
   232  0803  0A84               	incf	4,f
   233  0804  0782               	addwf	2,f
   234  0805                     __stringbase:
   235  0805  3400               	retlw	0
   236  0806                     __end_of__stringtab:
   237  0806                     _dpowers:
   238  0806  3401               	retlw	1
   239  0807  3400               	retlw	0
   240  0808  340A               	retlw	10
   241  0809  3400               	retlw	0
   242  080A  3464               	retlw	100
   243  080B  3400               	retlw	0
   244  080C  34E8               	retlw	232
   245  080D  3403               	retlw	3
   246  080E  3410               	retlw	16
   247  080F  3427               	retlw	39
   248  0810                     __end_of_dpowers:
   249  000E                     _TMR1	set	14
   250  001E                     _ADRESH	set	30
   251  001F                     _ADCON0bits	set	31
   252  0059                     _INTF	set	89
   253  0035                     _RB5	set	53
   254  0034                     _RB4	set	52
   255  0058                     _RBIF	set	88
   256  005E                     _PEIE	set	94
   257  0060                     _TMR1IF	set	96
   258  005B                     _RBIE	set	91
   259  005C                     _INTE	set	92
   260  005F                     _GIE	set	95
   261  0080                     _TMR1ON	set	128
   262  0085                     _T1CKPS1	set	133
   263  0084                     _T1CKPS0	set	132
   264  0081                     _TMR1CS	set	129
   265  0040                     _RD0	set	64
   266  0043                     _RD3	set	67
   267  0042                     _RD2	set	66
   268  0047                     _RD7	set	71
   269  0046                     _RD6	set	70
   270  0045                     _RD5	set	69
   271  0044                     _RD4	set	68
   272  009E                     _ADRESL	set	158
   273  009F                     _ADCON1bits	set	159
   274  0088                     _TRISD	set	136
   275  0460                     _TMR1IE	set	1120
   276  040E                     _INTEDG	set	1038
   277  0440                     _TRISD0	set	1088
   278  0430                     _TRISB0	set	1072
   279  0428                     _TRISA0	set	1064
   280  0810                     STR_1:
   281  0810  3453               	retlw	83	;'S'
   282  0811  3465               	retlw	101	;'e'
   283  0812  3474               	retlw	116	;'t'
   284  0813  3420               	retlw	32	;' '
   285  0814  3420               	retlw	32	;' '
   286  0815  343D               	retlw	61	;'='
   287  0816  3420               	retlw	32	;' '
   288  0817  3425               	retlw	37	;'%'
   289  0818  3464               	retlw	100	;'d'
   290  0819  3420               	retlw	32	;' '
   291  081A  3400               	retlw	0
   292  081B                     STR_2:
   293  081B  3452               	retlw	82	;'R'
   294  081C  3465               	retlw	101	;'e'
   295  081D  3461               	retlw	97	;'a'
   296  081E  346C               	retlw	108	;'l'
   297  081F  3420               	retlw	32	;' '
   298  0820  343D               	retlw	61	;'='
   299  0821  3420               	retlw	32	;' '
   300  0822  3425               	retlw	37	;'%'
   301  0823  3464               	retlw	100	;'d'
   302  0824  3420               	retlw	32	;' '
   303  0825  3400               	retlw	0
   304                           
   305                           	psect	cinit
   306  000F                     start_initialization:	
   307                           ; #config settings
   308                           
   309  000F                     __initialization:
   310                           
   311                           ; Initialize objects allocated to BANK1
   312  000F  1383               	bcf	3,7	;select IRP bank0
   313  0010  30B0               	movlw	low (__pdataBANK1+8)
   314  0011  00FD               	movwf	btemp+-1
   315  0012  3007               	movlw	high __pidataBANK1
   316  0013  00FE               	movwf	btemp
   317  0014  30F4               	movlw	low __pidataBANK1
   318  0015  00FF               	movwf	btemp+1
   319  0016  30A8               	movlw	low __pdataBANK1
   320  0017  0084               	movwf	4
   321  0018  120A  158A  2614  120A  118A  	fcall	init_ram0
   322                           
   323                           ; Initialize objects allocated to BANK0
   324  001D  120A  118A  27FC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   325  0022  00EE               	movwf	__pdataBANK0& (0+127)
   326  0023  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   327  0028  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   328                           
   329                           ; Clear objects allocated to BANK1
   330  0029  1683               	bsf	3,5	;RP0=1, select bank1
   331  002A  1303               	bcf	3,6	;RP1=0, select bank1
   332  002B  01A0               	clrf	__pbssBANK1& (0+127)
   333  002C  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   334  002D  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   335  002E  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   336  002F  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   337  0030  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   338  0031  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   339  0032  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   340                           
   341                           ; Clear objects allocated to BANK0
   342  0033  1283               	bcf	3,5	;RP0=0, select bank0
   343  0034  1303               	bcf	3,6	;RP1=0, select bank0
   344  0035  01E8               	clrf	__pbssBANK0& (0+127)
   345  0036  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   346  0037  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   347  0038  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   348  0039  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   349  003A  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   350                           
   351                           ; Clear objects allocated to COMMON
   352  003B  01F7               	clrf	__pbssCOMMON& (0+127)
   353  003C  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   354  003D  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   355  003E  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   356  003F  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   357  0040  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   358  0041                     end_of_initialization:	
   359                           ;End of C runtime variable initialization code
   360                           
   361  0041                     __end_of__initialization:
   362  0041  0183               	clrf	3
   363  0042  120A  118A  2BA6   	ljmp	_main	;jump to C main() function
   364                           
   365                           	psect	bssCOMMON
   366  0077                     __pbssCOMMON:
   367  0077                     _PID_i:
   368  0077                     	ds	2
   369  0079                     _voltage:
   370  0079                     	ds	2
   371  007B                     _ADCvalue:
   372  007B                     	ds	2
   373                           
   374                           	psect	bssBANK0
   375  0068                     __pbssBANK0:
   376  0068                     _PID_value:
   377  0068                     	ds	2
   378  006A                     _PID_error:
   379  006A                     	ds	2
   380  006C                     _temp:
   381  006C                     	ds	2
   382                           
   383                           	psect	dataBANK0
   384  006E                     __pdataBANK0:
   385  006E                     _setPoint:
   386  006E                     	ds	2
   387                           
   388                           	psect	bssBANK1
   389  00A0                     __pbssBANK1:
   390  00A0                     _cnt:
   391  00A0                     	ds	2
   392  00A2                     _PID_d:
   393  00A2                     	ds	2
   394  00A4                     _PID_p:
   395  00A4                     	ds	2
   396  00A6                     _previous_error:
   397  00A6                     	ds	2
   398                           
   399                           	psect	dataBANK1
   400  00A8                     __pdataBANK1:
   401  00A8                     _kd:
   402  00A8                     	ds	2
   403  00AA                     _ki:
   404  00AA                     	ds	2
   405  00AC                     _kp:
   406  00AC                     	ds	2
   407  00AE                     _max_delay:
   408  00AE                     	ds	2
   409                           
   410                           	psect	inittext
   411  0E10                     init_fetch0:	
   412                           ;	Called with low address in FSR and high address in W
   413                           
   414  0E10  087E               	movf	btemp,w
   415  0E11  008A               	movwf	10
   416  0E12  087F               	movf	btemp+1,w
   417  0E13  0082               	movwf	2
   418  0E14                     init_ram0:	
   419                           ;Called with:
   420                           ;	high address of idata address in btemp 
   421                           ;	low address of idata address in btemp+1 
   422                           ;	low address of data in FSR
   423                           ;	high address + 1 of data in btemp-1
   424                           
   425  0E14  120A  158A  2610  120A  158A  	fcall	init_fetch0
   426  0E19  0080               	movwf	0
   427  0E1A  0A84               	incf	4,f
   428  0E1B  0804               	movf	4,w
   429  0E1C  067D               	xorwf	btemp+-1,w
   430  0E1D  1903               	btfsc	3,2
   431  0E1E  3400               	retlw	0
   432  0E1F  0AFF               	incf	btemp+1,f
   433  0E20  1903               	btfsc	3,2
   434  0E21  0AFE               	incf	btemp,f
   435  0E22  2E14               	goto	init_ram0
   436                           
   437                           	psect	cstackCOMMON
   438  0070                     __pcstackCOMMON:
   439  0070                     ?_init_ADC:
   440  0070                     ?_delay_us:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_Lcd_Port:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_Lcd_Cmd:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_Lcd_Init:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_Lcd_Write_Char:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_Lcd_Write_String:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_ISR:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_Lcd_Clear:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_main:	
   465                           ; 2 bytes @ 0x0
   466                           
   467  0070                     delay_us@uTime:	
   468                           ; 2 bytes @ 0x0
   469                           
   470                           
   471                           ; 2 bytes @ 0x0
   472  0070                     	ds	2
   473  0072                     ??_delay_us:
   474  0072                     delay_us@i:	
   475                           ; 1 bytes @ 0x2
   476                           
   477                           
   478                           ; 2 bytes @ 0x2
   479  0072                     	ds	2
   480  0074                     ??_ISR:
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	3
   484                           
   485                           	psect	cstackBANK0
   486  0020                     __pcstackBANK0:
   487  0020                     ??_init_ADC:
   488  0020                     ??_Lcd_Port:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0020                     ?_ReadADC:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0020                     ?__Umul8_16:	
   495                           ; 2 bytes @ 0x0
   496                           
   497  0020                     ?___wmul:	
   498                           ; 2 bytes @ 0x0
   499                           
   500  0020                     ?___lwdiv:	
   501                           ; 2 bytes @ 0x0
   502                           
   503  0020                     ?___xxtofl:	
   504                           ; 2 bytes @ 0x0
   505                           
   506  0020                     Lcd_Port@a:	
   507                           ; 4 bytes @ 0x0
   508                           
   509  0020                     __Umul8_16@multiplicand:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0020                     ___wmul@multiplier:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0020                     ___lwdiv@divisor:	
   516                           ; 2 bytes @ 0x0
   517                           
   518  0020                     ___xxtofl@val:	
   519                           ; 2 bytes @ 0x0
   520                           
   521                           
   522                           ; 4 bytes @ 0x0
   523  0020                     	ds	1
   524  0021                     ??_Lcd_Cmd:
   525  0021                     ??_Lcd_Write_Char:	
   526                           ; 1 bytes @ 0x1
   527                           
   528                           
   529                           ; 1 bytes @ 0x1
   530  0021                     	ds	1
   531  0022                     ??_ReadADC:
   532  0022                     ??__Umul8_16:	
   533                           ; 1 bytes @ 0x2
   534                           
   535  0022                     Lcd_Write_Char@temp:	
   536                           ; 1 bytes @ 0x2
   537                           
   538  0022                     ReadADC@TempValue:	
   539                           ; 1 bytes @ 0x2
   540                           
   541  0022                     ___wmul@multiplicand:	
   542                           ; 2 bytes @ 0x2
   543                           
   544  0022                     ___lwdiv@dividend:	
   545                           ; 2 bytes @ 0x2
   546                           
   547                           
   548                           ; 2 bytes @ 0x2
   549  0022                     	ds	1
   550  0023                     Lcd_Cmd@a:
   551  0023                     Lcd_Write_Char@y:	
   552                           ; 1 bytes @ 0x3
   553                           
   554                           
   555                           ; 1 bytes @ 0x3
   556  0023                     	ds	1
   557  0024                     ??_Lcd_Clear:
   558  0024                     ?_Lcd_Set_Cursor:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0024                     ??_Lcd_Init:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0024                     ??___wmul:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0024                     ??___lwdiv:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0024                     ??___xxtofl:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0024                     Lcd_Set_Cursor@b:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0024                     Lcd_Write_Char@a:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0024                     ___wmul@product:	
   580                           ; 1 bytes @ 0x4
   581                           
   582  0024                     __Umul8_16@product:	
   583                           ; 2 bytes @ 0x4
   584                           
   585                           
   586                           ; 2 bytes @ 0x4
   587  0024                     	ds	1
   588  0025                     ??_Lcd_Set_Cursor:
   589  0025                     ??_Lcd_Write_String:	
   590                           ; 1 bytes @ 0x5
   591                           
   592  0025                     ___lwdiv@quotient:	
   593                           ; 1 bytes @ 0x5
   594                           
   595                           
   596                           ; 2 bytes @ 0x5
   597  0025                     	ds	1
   598  0026                     Lcd_Write_String@i:
   599  0026                     __Umul8_16@word_mpld:	
   600                           ; 2 bytes @ 0x6
   601                           
   602                           
   603                           ; 2 bytes @ 0x6
   604  0026                     	ds	1
   605  0027                     Lcd_Set_Cursor@a:
   606  0027                     ___lwdiv@counter:	
   607                           ; 1 bytes @ 0x7
   608                           
   609                           
   610                           ; 1 bytes @ 0x7
   611  0027                     	ds	1
   612  0028                     ?___lwmod:
   613  0028                     Lcd_Set_Cursor@z:	
   614                           ; 2 bytes @ 0x8
   615                           
   616  0028                     Lcd_Write_String@a:	
   617                           ; 1 bytes @ 0x8
   618                           
   619  0028                     __Umul8_16@multiplier:	
   620                           ; 1 bytes @ 0x8
   621                           
   622  0028                     ___xxtofl@sign:	
   623                           ; 1 bytes @ 0x8
   624                           
   625  0028                     ___lwmod@divisor:	
   626                           ; 1 bytes @ 0x8
   627                           
   628                           
   629                           ; 2 bytes @ 0x8
   630  0028                     	ds	1
   631  0029                     Lcd_Set_Cursor@y:
   632  0029                     ___xxtofl@exp:	
   633                           ; 1 bytes @ 0x9
   634                           
   635                           
   636                           ; 1 bytes @ 0x9
   637  0029                     	ds	1
   638  002A                     Lcd_Set_Cursor@temp:
   639  002A                     ___lwmod@dividend:	
   640                           ; 1 bytes @ 0xA
   641                           
   642  002A                     ___xxtofl@arg:	
   643                           ; 2 bytes @ 0xA
   644                           
   645                           
   646                           ; 4 bytes @ 0xA
   647  002A                     	ds	2
   648  002C                     ??___lwmod:
   649                           
   650                           ; 1 bytes @ 0xC
   651  002C                     	ds	1
   652  002D                     ___lwmod@counter:
   653                           
   654                           ; 1 bytes @ 0xD
   655  002D                     	ds	1
   656  002E                     ?_sprintf:
   657  002E                     ?___flmul:	
   658                           ; 2 bytes @ 0xE
   659                           
   660  002E                     sprintf@f:	
   661                           ; 4 bytes @ 0xE
   662                           
   663  002E                     ___flmul@b:	
   664                           ; 1 bytes @ 0xE
   665                           
   666                           
   667                           ; 4 bytes @ 0xE
   668  002E                     	ds	3
   669  0031                     ??_sprintf:
   670                           
   671                           ; 1 bytes @ 0x11
   672  0031                     	ds	1
   673  0032                     ___flmul@a:
   674                           
   675                           ; 4 bytes @ 0x12
   676  0032                     	ds	2
   677  0034                     sprintf@ap:
   678                           
   679                           ; 1 bytes @ 0x14
   680  0034                     	ds	1
   681  0035                     sprintf@flag:
   682                           
   683                           ; 1 bytes @ 0x15
   684  0035                     	ds	1
   685  0036                     ??___flmul:
   686  0036                     sprintf@prec:	
   687                           ; 1 bytes @ 0x16
   688                           
   689                           
   690                           ; 1 bytes @ 0x16
   691  0036                     	ds	1
   692  0037                     sprintf@val:
   693                           
   694                           ; 2 bytes @ 0x17
   695  0037                     	ds	2
   696  0039                     sprintf@sp:
   697                           
   698                           ; 1 bytes @ 0x19
   699  0039                     	ds	1
   700  003A                     sprintf@c:
   701                           
   702                           ; 1 bytes @ 0x1A
   703  003A                     	ds	1
   704  003B                     ___flmul@sign:
   705                           
   706                           ; 1 bytes @ 0x1B
   707  003B                     	ds	1
   708  003C                     ___flmul@grs:
   709                           
   710                           ; 4 bytes @ 0x1C
   711  003C                     	ds	4
   712  0040                     ___flmul@aexp:
   713                           
   714                           ; 1 bytes @ 0x20
   715  0040                     	ds	1
   716  0041                     ___flmul@bexp:
   717                           
   718                           ; 1 bytes @ 0x21
   719  0041                     	ds	1
   720  0042                     ___flmul@prod:
   721                           
   722                           ; 4 bytes @ 0x22
   723  0042                     	ds	4
   724  0046                     ___flmul@temp:
   725                           
   726                           ; 2 bytes @ 0x26
   727  0046                     	ds	2
   728  0048                     ?___fltol:
   729  0048                     ___fltol@f1:	
   730                           ; 4 bytes @ 0x28
   731                           
   732                           
   733                           ; 4 bytes @ 0x28
   734  0048                     	ds	4
   735  004C                     ??___fltol:
   736                           
   737                           ; 1 bytes @ 0x2C
   738  004C                     	ds	5
   739  0051                     ___fltol@sign1:
   740                           
   741                           ; 1 bytes @ 0x31
   742  0051                     	ds	1
   743  0052                     ___fltol@exp1:
   744                           
   745                           ; 1 bytes @ 0x32
   746  0052                     	ds	1
   747  0053                     ??_main:
   748                           
   749                           ; 1 bytes @ 0x33
   750  0053                     	ds	1
   751  0054                     main@str:
   752                           
   753                           ; 20 bytes @ 0x34
   754  0054                     	ds	20
   755                           
   756                           	psect	maintext
   757  03A6                     __pmaintext:	
   758 ;;
   759 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   760 ;;
   761 ;; *************** function _main *****************
   762 ;; Defined at:
   763 ;;		line 48 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  str            20   52[BANK0 ] unsigned char [20]
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2  147[None  ] int 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : B00/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       0       0       0       0
   778 ;;      Locals:         0      20       0       0       0
   779 ;;      Temps:          0       1       0       0       0
   780 ;;      Totals:         0      21       0       0       0
   781 ;;Total ram usage:       21 bytes
   782 ;; Hardware stack levels required when called:    5
   783 ;; This function calls:
   784 ;;		_Lcd_Clear
   785 ;;		_Lcd_Init
   786 ;;		_Lcd_Set_Cursor
   787 ;;		_Lcd_Write_String
   788 ;;		_ReadADC
   789 ;;		___flmul
   790 ;;		___fltol
   791 ;;		___lwdiv
   792 ;;		___wmul
   793 ;;		___xxtofl
   794 ;;		_init_ADC
   795 ;;		_sprintf
   796 ;; This function is called by:
   797 ;;		Startup code after reset
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _main
   803  03A6                     _main:
   804  03A6                     l2084:	
   805                           ;incstack = 0
   806                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   807                           
   808                           
   809                           ;main.c: 50:     GIE = 1;;main.c: 50:     GIE = 1;;main.c: 53:     RBIE = 1;;main.c: 53:
      +                               RBIE = 1;
   810  03A6  120A  158A  264C  120A  118A  	fcall	_init_ADC
   811  03AB                     l2086:
   812                           
   813                           ;main.c: 54:     TMR1IE = 1;;main.c: 54:     TMR1IE = 1;
   814  03AB  1683               	bsf	3,5	;RP0=1, select bank1
   815  03AC  1303               	bcf	3,6	;RP1=0, select bank1
   816  03AD  1405               	bsf	5,0	;volatile
   817  03AE                     l2088:
   818                           
   819                           ;main.c: 57: ;main.c: 57: 
   820  03AE  0188               	clrf	8	;volatile
   821  03AF                     l2090:
   822                           
   823                           ;main.c: 58:     while(1);main.c: 58:     while(1)
   824  03AF  120A  118A  270E  120A  118A  	fcall	_Lcd_Init
   825  03B4                     l2092:
   826                           
   827                           ;main.c: 61:         {;main.c: 61:         {
   828  03B4  1683               	bsf	3,5	;RP0=1, select bank1
   829  03B5  1303               	bcf	3,6	;RP1=0, select bank1
   830  03B6  1406               	bsf	6,0	;volatile
   831  03B7                     l2094:
   832                           
   833                           ;main.c: 62:             cnt = 0;;main.c: 62:             cnt = 0;
   834  03B7  1008               	bcf	8,0	;volatile
   835  03B8                     l2096:
   836                           
   837                           ;main.c: 63:             ADCvalue = ReadADC();;main.c: 63:             ADCvalue = ReadAD
      +                          C();
   838  03B8  1283               	bcf	3,5	;RP0=0, select bank0
   839  03B9  1303               	bcf	3,6	;RP1=0, select bank0
   840  03BA  1008               	bcf	8,0	;volatile
   841  03BB                     l2098:
   842                           
   843                           ;main.c: 66: ;main.c: 66: 
   844  03BB  018E               	clrf	14	;volatile
   845  03BC  018F               	clrf	15	;volatile
   846  03BD                     l2100:
   847                           
   848                           ;main.c: 67:             PID_error = setPoint - temp;;main.c: 67:             PID_error 
      +                          = setPoint - temp;
   849  03BD  1090               	bcf	16,1	;volatile
   850  03BE                     l2102:
   851                           
   852                           ;main.c: 68:             if(PID_error > 30);main.c: 68:             if(PID_error > 30)
   853  03BE  1210               	bcf	16,4	;volatile
   854  03BF                     l2104:
   855                           
   856                           ;main.c: 69:                 PID_i = 0;;main.c: 69:                 PID_i = 0;
   857  03BF  1290               	bcf	16,5	;volatile
   858  03C0                     l2106:
   859                           
   860                           ;main.c: 70:             PID_p = kp * PID_error;;main.c: 70:             PID_p = kp * PI
      +                          D_error;
   861  03C0  1410               	bsf	16,0	;volatile
   862  03C1                     l2108:
   863                           
   864                           ;main.c: 74: ;main.c: 74: 
   865  03C1  178B               	bsf	11,7	;volatile
   866  03C2                     l2110:
   867                           
   868                           ;main.c: 75: ;main.c: 75: 
   869  03C2  1683               	bsf	3,5	;RP0=1, select bank1
   870  03C3  1303               	bcf	3,6	;RP1=0, select bank1
   871  03C4  1701               	bsf	1,6	;volatile
   872  03C5                     l2112:
   873                           
   874                           ;main.c: 76: ;main.c: 76: 
   875  03C5  160B               	bsf	11,4	;volatile
   876  03C6                     l2114:
   877                           
   878                           ;main.c: 77: ;main.c: 77: 
   879  03C6  158B               	bsf	11,3	;volatile
   880  03C7                     l2116:
   881                           
   882                           ;main.c: 78: ;main.c: 78: 
   883  03C7  140C               	bsf	12,0	;volatile
   884  03C8                     l2118:
   885                           
   886                           ;main.c: 79:             PID_value = PID_p + PID_i + PID_d;;main.c: 79:             PID_
      +                          value = PID_p + PID_i + PID_d;
   887  03C8  1283               	bcf	3,5	;RP0=0, select bank0
   888  03C9  1303               	bcf	3,6	;RP1=0, select bank0
   889  03CA  100C               	bcf	12,0	;volatile
   890  03CB                     l2120:
   891                           
   892                           ;main.c: 80:             previous_error = PID_error;;main.c: 80:             previous_er
      +                          ror = PID_error;
   893  03CB  170B               	bsf	11,6	;volatile
   894  03CC                     l2122:
   895                           
   896                           ;main.c: 83:             if(PID_value < 0);main.c: 83:             if(PID_value < 0);mai
      +                          n.c: 84:                 PID_value = 0;;main.c: 84:                 PID_value = 0;
   897  03CC  1683               	bsf	3,5	;RP0=1, select bank1
   898  03CD  1303               	bcf	3,6	;RP1=0, select bank1
   899  03CE  0821               	movf	(_cnt+1)^(0+128),w
   900  03CF  3A80               	xorlw	128
   901  03D0  00FF               	movwf	btemp+1
   902  03D1  3080               	movlw	128
   903  03D2  027F               	subwf	btemp+1,w
   904  03D3  1D03               	skipz
   905  03D4  2BD7               	goto	u2325
   906  03D5  3004               	movlw	4
   907  03D6  0220               	subwf	_cnt^(0+128),w
   908  03D7                     u2325:
   909  03D7  1C03               	skipc
   910  03D8  2BDA               	goto	u2321
   911  03D9  2BDB               	goto	u2320
   912  03DA                     u2321:
   913  03DA  2BCC               	goto	l2122
   914  03DB                     u2320:
   915  03DB                     l2124:
   916                           
   917                           ;main.c: 85:             if(PID_value > 8600);main.c: 85:             if(PID_value > 860
      +                          0);main.c: 86:                 PID_value = 8600;;main.c: 86:                 PID_value =
      +                           8600;
   918  03DB  1683               	bsf	3,5	;RP0=1, select bank1
   919  03DC  1303               	bcf	3,6	;RP1=0, select bank1
   920  03DD  01A0               	clrf	_cnt^(0+128)
   921  03DE  01A1               	clrf	(_cnt+1)^(0+128)
   922  03DF                     l2126:
   923                           
   924                           ;main.c: 87: ;main.c: 87: 
   925  03DF  120A  158A  2623  120A  118A  	fcall	_ReadADC
   926  03E4  1283               	bcf	3,5	;RP0=0, select bank0
   927  03E5  1303               	bcf	3,6	;RP1=0, select bank0
   928  03E6  0821               	movf	?_ReadADC+1,w
   929  03E7  00FC               	movwf	_ADCvalue+1
   930  03E8  0820               	movf	?_ReadADC,w
   931  03E9  00FB               	movwf	_ADCvalue
   932  03EA                     l2128:
   933                           
   934                           ;main.c: 88:             Lcd_Clear();;main.c: 88:             Lcd_Clear();
   935  03EA  087B               	movf	_ADCvalue,w
   936  03EB  00A0               	movwf	___xxtofl@val
   937  03EC  087C               	movf	_ADCvalue+1,w
   938  03ED  00A1               	movwf	___xxtofl@val+1
   939  03EE  01A2               	clrf	___xxtofl@val+2
   940  03EF  01A3               	clrf	___xxtofl@val+3
   941  03F0  3000               	movlw	0
   942  03F1  120A  118A  25D6  120A  118A  	fcall	___xxtofl
   943  03F6  1283               	bcf	3,5	;RP0=0, select bank0
   944  03F7  1303               	bcf	3,6	;RP1=0, select bank0
   945  03F8  0823               	movf	?___xxtofl+3,w
   946  03F9  00B5               	movwf	___flmul@a+3
   947  03FA  0822               	movf	?___xxtofl+2,w
   948  03FB  00B4               	movwf	___flmul@a+2
   949  03FC  0821               	movf	?___xxtofl+1,w
   950  03FD  00B3               	movwf	___flmul@a+1
   951  03FE  0820               	movf	?___xxtofl,w
   952  03FF  00B2               	movwf	___flmul@a
   953  0400  3040               	movlw	64
   954  0401  00B1               	movwf	___flmul@b+3
   955  0402  309C               	movlw	156
   956  0403  00B0               	movwf	___flmul@b+2
   957  0404  3067               	movlw	103
   958  0405  00AF               	movwf	___flmul@b+1
   959  0406  301A               	movlw	26
   960  0407  00AE               	movwf	___flmul@b
   961  0408  120A  118A  2045  120A  118A  	fcall	___flmul
   962  040D  1283               	bcf	3,5	;RP0=0, select bank0
   963  040E  1303               	bcf	3,6	;RP1=0, select bank0
   964  040F  0831               	movf	?___flmul+3,w
   965  0410  00CB               	movwf	___fltol@f1+3
   966  0411  0830               	movf	?___flmul+2,w
   967  0412  00CA               	movwf	___fltol@f1+2
   968  0413  082F               	movf	?___flmul+1,w
   969  0414  00C9               	movwf	___fltol@f1+1
   970  0415  082E               	movf	?___flmul,w
   971  0416  00C8               	movwf	___fltol@f1
   972  0417  120A  118A  2692  120A  118A  	fcall	___fltol
   973  041C  1283               	bcf	3,5	;RP0=0, select bank0
   974  041D  1303               	bcf	3,6	;RP1=0, select bank0
   975  041E  0849               	movf	?___fltol+1,w
   976  041F  00FA               	movwf	_voltage+1
   977  0420  0848               	movf	?___fltol,w
   978  0421  00F9               	movwf	_voltage
   979  0422                     l2130:
   980                           
   981                           ;main.c: 89:             sprintf(str, "Set  = %d ", setPoint);;main.c: 89:             s
      +                          printf(str, "Set  = %d ", setPoint);
   982  0422  300A               	movlw	10
   983  0423  00A0               	movwf	___lwdiv@divisor
   984  0424  3000               	movlw	0
   985  0425  00A1               	movwf	___lwdiv@divisor+1
   986  0426  087A               	movf	_voltage+1,w
   987  0427  00A3               	movwf	___lwdiv@dividend+1
   988  0428  0879               	movf	_voltage,w
   989  0429  00A2               	movwf	___lwdiv@dividend
   990  042A  120A  158A  2762  120A  118A  	fcall	___lwdiv
   991  042F  1283               	bcf	3,5	;RP0=0, select bank0
   992  0430  1303               	bcf	3,6	;RP1=0, select bank0
   993  0431  0821               	movf	?___lwdiv+1,w
   994  0432  00ED               	movwf	_temp+1
   995  0433  0820               	movf	?___lwdiv,w
   996  0434  00EC               	movwf	_temp
   997  0435                     l2132:
   998                           
   999                           ;main.c: 91:             Lcd_Write_String(str);;main.c: 91:             Lcd_Write_String
      +                          (str);
  1000  0435  086C               	movf	_temp,w
  1001  0436  026E               	subwf	_setPoint,w
  1002  0437  00EA               	movwf	_PID_error
  1003  0438  086D               	movf	_temp+1,w
  1004  0439  1C03               	skipc
  1005  043A  0A6D               	incf	_temp+1,w
  1006  043B  026F               	subwf	_setPoint+1,w
  1007  043C  00EB               	movwf	_PID_error+1
  1008  043D                     l2134:
  1009                           
  1010                           ;main.c: 92: ;main.c: 92: 
  1011  043D  3000               	movlw	0
  1012  043E  026B               	subwf	_PID_error+1,w
  1013  043F  301F               	movlw	31
  1014  0440  1903               	skipnz
  1015  0441  026A               	subwf	_PID_error,w
  1016  0442  1C03               	skipc
  1017  0443  2C45               	goto	u2331
  1018  0444  2C46               	goto	u2330
  1019  0445                     u2331:
  1020  0445  2C48               	goto	l2138
  1021  0446                     u2330:
  1022  0446                     l2136:
  1023                           
  1024                           ;main.c: 93: ;main.c: 93: 
  1025  0446  01F7               	clrf	_PID_i
  1026  0447  01F8               	clrf	_PID_i+1
  1027  0448                     l2138:
  1028                           
  1029                           ;main.c: 94:             sprintf(str, "Real = %d ", temp);;main.c: 94:             sprin
      +                          tf(str, "Real = %d ", temp);
  1030  0448  086B               	movf	_PID_error+1,w
  1031  0449  00A1               	movwf	___wmul@multiplier+1
  1032  044A  086A               	movf	_PID_error,w
  1033  044B  00A0               	movwf	___wmul@multiplier
  1034  044C  30CB               	movlw	203
  1035  044D  00A2               	movwf	___wmul@multiplicand
  1036  044E  3000               	movlw	0
  1037  044F  00A3               	movwf	___wmul@multiplicand+1
  1038  0450  120A  158A  26C2  120A  118A  	fcall	___wmul
  1039  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0457  0821               	movf	?___wmul+1,w
  1042  0458  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0459  1303               	bcf	3,6	;RP1=0, select bank1
  1044  045A  00A5               	movwf	(_PID_p+1)^(0+128)
  1045  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1046  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1047  045D  0820               	movf	?___wmul,w
  1048  045E  1683               	bsf	3,5	;RP0=1, select bank1
  1049  045F  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0460  00A4               	movwf	_PID_p^(0+128)
  1051  0461                     l2140:
  1052                           
  1053                           ;main.c: 95:             Lcd_Set_Cursor(2,1);;main.c: 95:             Lcd_Set_Cursor(2,1
      +                          );
  1054  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0463  086B               	movf	_PID_error+1,w
  1057  0464  00A1               	movwf	___wmul@multiplier+1
  1058  0465  086A               	movf	_PID_error,w
  1059  0466  00A0               	movwf	___wmul@multiplier
  1060  0467  3007               	movlw	7
  1061  0468  00A2               	movwf	___wmul@multiplicand
  1062  0469  3000               	movlw	0
  1063  046A  00A3               	movwf	___wmul@multiplicand+1
  1064  046B  120A  158A  26C2  120A  118A  	fcall	___wmul
  1065  0470  0877               	movf	_PID_i,w
  1066  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0473  0720               	addwf	?___wmul,w
  1069  0474  00F7               	movwf	_PID_i
  1070  0475  0878               	movf	_PID_i+1,w
  1071  0476  1803               	skipnc
  1072  0477  0A78               	incf	_PID_i+1,w
  1073  0478  0721               	addwf	?___wmul+1,w
  1074  0479  00F8               	movwf	_PID_i+1
  1075  047A                     l2142:
  1076                           
  1077                           ;main.c: 103: void init_ADC (void);main.c: 103: void init_ADC (void)
  1078  047A  0877               	movf	_PID_i,w
  1079  047B  1683               	bsf	3,5	;RP0=1, select bank1
  1080  047C  1303               	bcf	3,6	;RP1=0, select bank1
  1081  047D  0724               	addwf	_PID_p^(0+128),w
  1082  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1083  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0480  00E8               	movwf	_PID_value
  1085  0481  0878               	movf	_PID_i+1,w
  1086  0482  1803               	skipnc
  1087  0483  0A78               	incf	_PID_i+1,w
  1088  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0486  0725               	addwf	(_PID_p+1)^(0+128),w
  1091  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0489  00E9               	movwf	_PID_value+1
  1094  048A                     l2144:
  1095                           
  1096                           ;main.c: 104: {;main.c: 104: {
  1097  048A  086B               	movf	_PID_error+1,w
  1098  048B  1683               	bsf	3,5	;RP0=1, select bank1
  1099  048C  1303               	bcf	3,6	;RP1=0, select bank1
  1100  048D  00A7               	movwf	(_previous_error+1)^(0+128)
  1101  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1102  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0490  086A               	movf	_PID_error,w
  1104  0491  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0492  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0493  00A6               	movwf	_previous_error^(0+128)
  1107  0494                     l2148:	
  1108                           ;main.c: 107: ;main.c: 107: 
  1109                           
  1110                           
  1111                           ;main.c: 109: ;main.c: 109: 
  1112  0494  3021               	movlw	33
  1113  0495  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0496  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0497  0269               	subwf	_PID_value+1,w
  1116  0498  3099               	movlw	153
  1117  0499  1903               	skipnz
  1118  049A  0268               	subwf	_PID_value,w
  1119  049B  1C03               	skipc
  1120  049C  2C9E               	goto	u2341
  1121  049D  2C9F               	goto	u2340
  1122  049E                     u2341:
  1123  049E  2CA3               	goto	l2152
  1124  049F                     u2340:
  1125  049F                     l2150:
  1126                           
  1127                           ;main.c: 110:     ADCON1bits.ADFM = 1;;main.c: 110:     ADCON1bits.ADFM = 1;
  1128  049F  3098               	movlw	152
  1129  04A0  00E8               	movwf	_PID_value
  1130  04A1  3021               	movlw	33
  1131  04A2  00E9               	movwf	_PID_value+1
  1132  04A3                     l2152:
  1133                           
  1134                           ;main.c: 112:     ADCON1bits.PCFG3 = 1, ADCON1bits.PCFG2 = 1, ADCON1bits.PCFG1 = 1, ADCO
      +                          N1bits.PCFG0 = 0;;main.c: 112:     ADCON1bits.PCFG3 = 1, ADCON1bits.PCFG2 = 1, ADCON1bit
      +                          s.PCFG1 = 1, ADCON1bits.PCFG0 = 0;
  1135  04A3  120A  158A  2603  120A  118A  	fcall	_Lcd_Clear
  1136  04A8                     l2154:
  1137                           
  1138                           ;main.c: 113: ;main.c: 113: 
  1139  04A8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1140  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1141  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1142  04AB  00D3               	movwf	??_main
  1143  04AC  0853               	movf	??_main,w
  1144  04AD  00AE               	movwf	sprintf@f
  1145  04AE  086F               	movf	_setPoint+1,w
  1146  04AF  00B0               	movwf	?_sprintf+2
  1147  04B0  086E               	movf	_setPoint,w
  1148  04B1  00AF               	movwf	?_sprintf+1
  1149  04B2  3054               	movlw	(low (main@str| 0))& (0+255)
  1150  04B3  120A  118A  24EC  120A  118A  	fcall	_sprintf
  1151  04B8                     l2156:
  1152                           
  1153                           ;main.c: 114:     ADCON0bits.ADON = 1;;main.c: 114:     ADCON0bits.ADON = 1;
  1154  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1155  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1156  04BA  01A4               	clrf	Lcd_Set_Cursor@b
  1157  04BB  0AA4               	incf	Lcd_Set_Cursor@b,f
  1158  04BC  3001               	movlw	1
  1159  04BD  120A  158A  27A8  120A  118A  	fcall	_Lcd_Set_Cursor
  1160  04C2                     l2158:
  1161                           
  1162                           ;main.c: 115: };main.c: 115: }
  1163  04C2  3054               	movlw	(low (main@str| 0))& (0+255)
  1164  04C3  120A  158A  269D  120A  118A  	fcall	_Lcd_Write_String
  1165  04C8                     l2160:
  1166                           
  1167                           ;main.c: 118: {;main.c: 118: {
  1168  04C8  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1169  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1170  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1171  04CB  00D3               	movwf	??_main
  1172  04CC  0853               	movf	??_main,w
  1173  04CD  00AE               	movwf	sprintf@f
  1174  04CE  086D               	movf	_temp+1,w
  1175  04CF  00B0               	movwf	?_sprintf+2
  1176  04D0  086C               	movf	_temp,w
  1177  04D1  00AF               	movwf	?_sprintf+1
  1178  04D2  3054               	movlw	(low (main@str| 0))& (0+255)
  1179  04D3  120A  118A  24EC  120A  118A  	fcall	_sprintf
  1180  04D8                     l2162:
  1181                           
  1182                           ;main.c: 119:     unsigned int TempValue = 0;;main.c: 119:     unsigned int TempValue = 
      +                          0;
  1183  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1184  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1185  04DA  01A4               	clrf	Lcd_Set_Cursor@b
  1186  04DB  0AA4               	incf	Lcd_Set_Cursor@b,f
  1187  04DC  3002               	movlw	2
  1188  04DD  120A  158A  27A8  120A  118A  	fcall	_Lcd_Set_Cursor
  1189  04E2                     l2164:
  1190                           
  1191                           ;main.c: 120:     ADCON0bits.GO_nDONE = 1;;main.c: 120:     ADCON0bits.GO_nDONE = 1;
  1192  04E2  3054               	movlw	(low (main@str| 0))& (0+255)
  1193  04E3  120A  158A  269D  120A  118A  	fcall	_Lcd_Write_String
  1194  04E8  2BCC               	goto	l2122
  1195  04E9  120A  118A  280C   	ljmp	start
  1196  04EC                     __end_of_main:
  1197                           
  1198                           	psect	text1
  1199  04EC                     __ptext1:	
  1200 ;; *************** function _sprintf *****************
  1201 ;; Defined at:
  1202 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  sp              1    wreg     PTR unsigned char 
  1205 ;;		 -> main@str(20), 
  1206 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1207 ;;		 -> STR_2(11), STR_1(11), 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1210 ;;		 -> main@str(20), 
  1211 ;;  tmpval          4    0        struct .
  1212 ;;  val             2   23[BANK0 ] unsigned int 
  1213 ;;  cp              2    0        PTR const unsigned char 
  1214 ;;  len             2    0        unsigned int 
  1215 ;;  c               1   26[BANK0 ] unsigned char 
  1216 ;;  prec            1   22[BANK0 ] char 
  1217 ;;  flag            1   21[BANK0 ] unsigned char 
  1218 ;;  ap              1   20[BANK0 ] PTR void [1]
  1219 ;;		 -> ?_sprintf(2), 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2   14[BANK0 ] int 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       3       0       0       0
  1230 ;;      Locals:         0       7       0       0       0
  1231 ;;      Temps:          0       3       0       0       0
  1232 ;;      Totals:         0      13       0       0       0
  1233 ;;Total ram usage:       13 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    3
  1236 ;; This function calls:
  1237 ;;		___lwdiv
  1238 ;;		___lwmod
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _sprintf
  1246  04EC                     _sprintf:
  1247                           
  1248                           ;incstack = 0
  1249                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1250                           ;sprintf@sp stored from wreg
  1251  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1252  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1253  04EE  00B9               	movwf	sprintf@sp
  1254  04EF                     l1540:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1257  04EF  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1258  04F0  00B1               	movwf	??_sprintf
  1259  04F1  0831               	movf	??_sprintf,w
  1260  04F2  00B4               	movwf	sprintf@ap
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1263  04F3  2DBF               	goto	l1592
  1264  04F4                     l1542:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1267  04F4  3025               	movlw	37
  1268  04F5  063A               	xorwf	sprintf@c,w
  1269  04F6  1903               	btfsc	3,2
  1270  04F7  2CF9               	goto	u1361
  1271  04F8  2CFA               	goto	u1360
  1272  04F9                     u1361:
  1273  04F9  2D06               	goto	l1548
  1274  04FA                     u1360:
  1275  04FA                     l1544:
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1278  04FA  083A               	movf	sprintf@c,w
  1279  04FB  00B1               	movwf	??_sprintf
  1280  04FC  0839               	movf	sprintf@sp,w
  1281  04FD  0084               	movwf	4
  1282  04FE  0831               	movf	??_sprintf,w
  1283  04FF  1383               	bcf	3,7	;select IRP bank0
  1284  0500  0080               	movwf	0
  1285  0501                     l1546:
  1286  0501  3001               	movlw	1
  1287  0502  00B1               	movwf	??_sprintf
  1288  0503  0831               	movf	??_sprintf,w
  1289  0504  07B9               	addwf	sprintf@sp,f
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1292  0505  2DBF               	goto	l1592
  1293  0506                     l1548:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1296  0506  01B5               	clrf	sprintf@flag
  1297  0507                     l1552:	
  1298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1299                           
  1300  0507  3001               	movlw	1
  1301  0508  07AE               	addwf	sprintf@f,f
  1302  0509  30FF               	movlw	-1
  1303  050A  072E               	addwf	sprintf@f,w
  1304  050B  0084               	movwf	4
  1305  050C  120A  158A  2000  120A  118A  	fcall	stringdir
  1306  0511  00BA               	movwf	sprintf@c
  1307  0512  00B1               	movwf	??_sprintf
  1308  0513  01B2               	clrf	??_sprintf+1
  1309                           
  1310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 1, Range of values is 0 to 0
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte            4     3 (average)
  1316                           ; direct_byte           11     8 (fixed)
  1317                           ; jumptable            260     6 (fixed)
  1318                           ;	Chosen strategy is simple_byte
  1319  0514  0832               	movf	??_sprintf+1,w
  1320  0515  3A00               	xorlw	0	; case 0
  1321  0516  1903               	skipnz
  1322  0517  2D19               	goto	l2186
  1323  0518  2DBF               	goto	l1592
  1324  0519                     l2186:
  1325                           
  1326                           ; Switch size 1, requested type "simple"
  1327                           ; Number of cases is 3, Range of values is 0 to 105
  1328                           ; switch strategies available:
  1329                           ; Name         Instructions Cycles
  1330                           ; simple_byte           10     6 (average)
  1331                           ; jumptable            260     6 (fixed)
  1332                           ;	Chosen strategy is simple_byte
  1333  0519  0831               	movf	??_sprintf,w
  1334  051A  3A00               	xorlw	0	; case 0
  1335  051B  1903               	skipnz
  1336  051C  2DD1               	goto	l1594
  1337  051D  3A64               	xorlw	100	; case 100
  1338  051E  1903               	skipnz
  1339  051F  2D24               	goto	l1554
  1340  0520  3A0D               	xorlw	13	; case 105
  1341  0521  1903               	skipnz
  1342  0522  2D24               	goto	l1554
  1343  0523  2DBF               	goto	l1592
  1344  0524                     l1554:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1347  0524  0834               	movf	sprintf@ap,w
  1348  0525  0084               	movwf	4
  1349  0526  1383               	bcf	3,7	;select IRP bank0
  1350  0527  0800               	movf	0,w
  1351  0528  00B7               	movwf	sprintf@val
  1352  0529  0A84               	incf	4,f
  1353  052A  0800               	movf	0,w
  1354  052B  00B8               	movwf	sprintf@val+1
  1355  052C                     l1556:
  1356  052C  3002               	movlw	2
  1357  052D  00B1               	movwf	??_sprintf
  1358  052E  0831               	movf	??_sprintf,w
  1359  052F  07B4               	addwf	sprintf@ap,f
  1360  0530                     l1558:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1363  0530  1FB8               	btfss	sprintf@val+1,7
  1364  0531  2D33               	goto	u1371
  1365  0532  2D34               	goto	u1370
  1366  0533                     u1371:
  1367  0533  2D3D               	goto	l1564
  1368  0534                     u1370:
  1369  0534                     l1560:
  1370                           
  1371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1372  0534  3003               	movlw	3
  1373  0535  00B1               	movwf	??_sprintf
  1374  0536  0831               	movf	??_sprintf,w
  1375  0537  04B5               	iorwf	sprintf@flag,f
  1376  0538                     l1562:
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1379  0538  09B7               	comf	sprintf@val,f
  1380  0539  09B8               	comf	sprintf@val+1,f
  1381  053A  0AB7               	incf	sprintf@val,f
  1382  053B  1903               	skipnz
  1383  053C  0AB8               	incf	sprintf@val+1,f
  1384  053D                     l1564:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1387  053D  01BA               	clrf	sprintf@c
  1388  053E  0ABA               	incf	sprintf@c,f
  1389  053F                     l1570:
  1390                           
  1391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1392  053F  083A               	movf	sprintf@c,w
  1393  0540  00B1               	movwf	??_sprintf
  1394  0541  0731               	addwf	??_sprintf,w
  1395  0542  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1396  0543  0084               	movwf	4
  1397  0544  120A  158A  2000  120A  118A  	fcall	stringdir
  1398  0549  00B2               	movwf	??_sprintf+1
  1399  054A  120A  158A  2000  120A  118A  	fcall	stringdir
  1400  054F  00B3               	movwf	??_sprintf+2
  1401  0550  0833               	movf	??_sprintf+2,w
  1402  0551  0238               	subwf	sprintf@val+1,w
  1403  0552  1D03               	skipz
  1404  0553  2D56               	goto	u1385
  1405  0554  0832               	movf	??_sprintf+1,w
  1406  0555  0237               	subwf	sprintf@val,w
  1407  0556                     u1385:
  1408  0556  1803               	skipnc
  1409  0557  2D59               	goto	u1381
  1410  0558  2D5A               	goto	u1380
  1411  0559                     u1381:
  1412  0559  2D5B               	goto	l1574
  1413  055A                     u1380:
  1414  055A  2D65               	goto	l1576
  1415  055B                     l1574:
  1416  055B  3001               	movlw	1
  1417  055C  00B1               	movwf	??_sprintf
  1418  055D  0831               	movf	??_sprintf,w
  1419  055E  07BA               	addwf	sprintf@c,f
  1420  055F  3005               	movlw	5
  1421  0560  063A               	xorwf	sprintf@c,w
  1422  0561  1D03               	btfss	3,2
  1423  0562  2D64               	goto	u1391
  1424  0563  2D65               	goto	u1390
  1425  0564                     u1391:
  1426  0564  2D3F               	goto	l1570
  1427  0565                     u1390:
  1428  0565                     l1576:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1431  0565  0835               	movf	sprintf@flag,w
  1432  0566  3903               	andlw	3
  1433  0567  1903               	btfsc	3,2
  1434  0568  2D6A               	goto	u1401
  1435  0569  2D6B               	goto	u1400
  1436  056A                     u1401:
  1437  056A  2D76               	goto	l1582
  1438  056B                     u1400:
  1439  056B                     l1578:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1442  056B  302D               	movlw	45
  1443  056C  00B1               	movwf	??_sprintf
  1444  056D  0839               	movf	sprintf@sp,w
  1445  056E  0084               	movwf	4
  1446  056F  0831               	movf	??_sprintf,w
  1447  0570  1383               	bcf	3,7	;select IRP bank0
  1448  0571  0080               	movwf	0
  1449  0572                     l1580:
  1450  0572  3001               	movlw	1
  1451  0573  00B1               	movwf	??_sprintf
  1452  0574  0831               	movf	??_sprintf,w
  1453  0575  07B9               	addwf	sprintf@sp,f
  1454  0576                     l1582:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1457  0576  083A               	movf	sprintf@c,w
  1458  0577  00B1               	movwf	??_sprintf
  1459  0578  0831               	movf	??_sprintf,w
  1460  0579  00B6               	movwf	sprintf@prec
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1463  057A  2DB6               	goto	l1590
  1464  057B                     l1584:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1467  057B  300A               	movlw	10
  1468  057C  00A8               	movwf	___lwmod@divisor
  1469  057D  3000               	movlw	0
  1470  057E  00A9               	movwf	___lwmod@divisor+1
  1471  057F  0836               	movf	sprintf@prec,w
  1472  0580  00B1               	movwf	??_sprintf
  1473  0581  0731               	addwf	??_sprintf,w
  1474  0582  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1475  0583  0084               	movwf	4
  1476  0584  120A  158A  2000  120A  118A  	fcall	stringdir
  1477  0589  00A0               	movwf	___lwdiv@divisor
  1478  058A  120A  158A  2000  120A  118A  	fcall	stringdir
  1479  058F  00A1               	movwf	___lwdiv@divisor+1
  1480  0590  0838               	movf	sprintf@val+1,w
  1481  0591  00A3               	movwf	___lwdiv@dividend+1
  1482  0592  0837               	movf	sprintf@val,w
  1483  0593  00A2               	movwf	___lwdiv@dividend
  1484  0594  120A  158A  2762  120A  118A  	fcall	___lwdiv
  1485  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1486  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1487  059B  0821               	movf	?___lwdiv+1,w
  1488  059C  00AB               	movwf	___lwmod@dividend+1
  1489  059D  0820               	movf	?___lwdiv,w
  1490  059E  00AA               	movwf	___lwmod@dividend
  1491  059F  120A  158A  26E9  120A  118A  	fcall	___lwmod
  1492  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1493  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1494  05A6  0828               	movf	?___lwmod,w
  1495  05A7  3E30               	addlw	48
  1496  05A8  00B2               	movwf	??_sprintf+1
  1497  05A9  0832               	movf	??_sprintf+1,w
  1498  05AA  00BA               	movwf	sprintf@c
  1499  05AB                     l1586:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1502  05AB  083A               	movf	sprintf@c,w
  1503  05AC  00B1               	movwf	??_sprintf
  1504  05AD  0839               	movf	sprintf@sp,w
  1505  05AE  0084               	movwf	4
  1506  05AF  0831               	movf	??_sprintf,w
  1507  05B0  1383               	bcf	3,7	;select IRP bank0
  1508  05B1  0080               	movwf	0
  1509  05B2                     l1588:
  1510  05B2  3001               	movlw	1
  1511  05B3  00B1               	movwf	??_sprintf
  1512  05B4  0831               	movf	??_sprintf,w
  1513  05B5  07B9               	addwf	sprintf@sp,f
  1514  05B6                     l1590:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1517  05B6  30FF               	movlw	255
  1518  05B7  00B1               	movwf	??_sprintf
  1519  05B8  0831               	movf	??_sprintf,w
  1520  05B9  07B6               	addwf	sprintf@prec,f
  1521  05BA  0A36               	incf	sprintf@prec,w
  1522  05BB  1D03               	btfss	3,2
  1523  05BC  2DBE               	goto	u1411
  1524  05BD  2DBF               	goto	u1410
  1525  05BE                     u1411:
  1526  05BE  2D7B               	goto	l1584
  1527  05BF                     u1410:
  1528  05BF                     l1592:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1531  05BF  3001               	movlw	1
  1532  05C0  07AE               	addwf	sprintf@f,f
  1533  05C1  30FF               	movlw	-1
  1534  05C2  072E               	addwf	sprintf@f,w
  1535  05C3  0084               	movwf	4
  1536  05C4  120A  158A  2000  120A  118A  	fcall	stringdir
  1537  05C9  00B1               	movwf	??_sprintf
  1538  05CA  0831               	movf	??_sprintf,w
  1539  05CB  00BA               	movwf	sprintf@c
  1540  05CC  083A               	movf	sprintf@c,w
  1541  05CD  1D03               	btfss	3,2
  1542  05CE  2DD0               	goto	u1421
  1543  05CF  2DD1               	goto	u1420
  1544  05D0                     u1421:
  1545  05D0  2CF4               	goto	l1542
  1546  05D1                     u1420:
  1547  05D1                     l1594:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1550  05D1  0839               	movf	sprintf@sp,w
  1551  05D2  0084               	movwf	4
  1552  05D3  1383               	bcf	3,7	;select IRP bank0
  1553  05D4  0180               	clrf	0
  1554  05D5                     l290:
  1555  05D5  0008               	return
  1556  05D6                     __end_of_sprintf:
  1557                           
  1558                           	psect	text2
  1559  0EE9                     __ptext2:	
  1560 ;; *************** function ___lwmod *****************
  1561 ;; Defined at:
  1562 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  divisor         2    8[BANK0 ] unsigned int 
  1565 ;;  dividend        2   10[BANK0 ] unsigned int 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  counter         1   13[BANK0 ] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    8[BANK0 ] unsigned int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       4       0       0       0
  1578 ;;      Locals:         0       1       0       0       0
  1579 ;;      Temps:          0       1       0       0       0
  1580 ;;      Totals:         0       6       0       0       0
  1581 ;;Total ram usage:        6 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    2
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_sprintf
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function ___lwmod
  1593  0EE9                     ___lwmod:
  1594  0EE9                     l1454:	
  1595                           ;incstack = 0
  1596                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1597                           
  1598  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0EEB  0828               	movf	___lwmod@divisor,w
  1601  0EEC  0429               	iorwf	___lwmod@divisor+1,w
  1602  0EED  1903               	btfsc	3,2
  1603  0EEE  2EF0               	goto	u1211
  1604  0EEF  2EF1               	goto	u1210
  1605  0EF0                     u1211:
  1606  0EF0  2F20               	goto	l1472
  1607  0EF1                     u1210:
  1608  0EF1                     l1456:
  1609  0EF1  01AD               	clrf	___lwmod@counter
  1610  0EF2  0AAD               	incf	___lwmod@counter,f
  1611  0EF3  2EFF               	goto	l1462
  1612  0EF4                     l1458:
  1613  0EF4  3001               	movlw	1
  1614  0EF5                     u1225:
  1615  0EF5  1003               	clrc
  1616  0EF6  0DA8               	rlf	___lwmod@divisor,f
  1617  0EF7  0DA9               	rlf	___lwmod@divisor+1,f
  1618  0EF8  3EFF               	addlw	-1
  1619  0EF9  1D03               	skipz
  1620  0EFA  2EF5               	goto	u1225
  1621  0EFB                     l1460:
  1622  0EFB  3001               	movlw	1
  1623  0EFC  00AC               	movwf	??___lwmod
  1624  0EFD  082C               	movf	??___lwmod,w
  1625  0EFE  07AD               	addwf	___lwmod@counter,f
  1626  0EFF                     l1462:
  1627  0EFF  1FA9               	btfss	___lwmod@divisor+1,7
  1628  0F00  2F02               	goto	u1231
  1629  0F01  2F03               	goto	u1230
  1630  0F02                     u1231:
  1631  0F02  2EF4               	goto	l1458
  1632  0F03                     u1230:
  1633  0F03                     l1464:
  1634  0F03  0829               	movf	___lwmod@divisor+1,w
  1635  0F04  022B               	subwf	___lwmod@dividend+1,w
  1636  0F05  1D03               	skipz
  1637  0F06  2F09               	goto	u1245
  1638  0F07  0828               	movf	___lwmod@divisor,w
  1639  0F08  022A               	subwf	___lwmod@dividend,w
  1640  0F09                     u1245:
  1641  0F09  1C03               	skipc
  1642  0F0A  2F0C               	goto	u1241
  1643  0F0B  2F0D               	goto	u1240
  1644  0F0C                     u1241:
  1645  0F0C  2F13               	goto	l1468
  1646  0F0D                     u1240:
  1647  0F0D                     l1466:
  1648  0F0D  0828               	movf	___lwmod@divisor,w
  1649  0F0E  02AA               	subwf	___lwmod@dividend,f
  1650  0F0F  0829               	movf	___lwmod@divisor+1,w
  1651  0F10  1C03               	skipc
  1652  0F11  03AB               	decf	___lwmod@dividend+1,f
  1653  0F12  02AB               	subwf	___lwmod@dividend+1,f
  1654  0F13                     l1468:
  1655  0F13  3001               	movlw	1
  1656  0F14                     u1255:
  1657  0F14  1003               	clrc
  1658  0F15  0CA9               	rrf	___lwmod@divisor+1,f
  1659  0F16  0CA8               	rrf	___lwmod@divisor,f
  1660  0F17  3EFF               	addlw	-1
  1661  0F18  1D03               	skipz
  1662  0F19  2F14               	goto	u1255
  1663  0F1A                     l1470:
  1664  0F1A  3001               	movlw	1
  1665  0F1B  02AD               	subwf	___lwmod@counter,f
  1666  0F1C  1D03               	btfss	3,2
  1667  0F1D  2F1F               	goto	u1261
  1668  0F1E  2F20               	goto	u1260
  1669  0F1F                     u1261:
  1670  0F1F  2F03               	goto	l1464
  1671  0F20                     u1260:
  1672  0F20                     l1472:
  1673  0F20  082B               	movf	___lwmod@dividend+1,w
  1674  0F21  00A9               	movwf	?___lwmod+1
  1675  0F22  082A               	movf	___lwmod@dividend,w
  1676  0F23  00A8               	movwf	?___lwmod
  1677  0F24                     l576:
  1678  0F24  0008               	return
  1679  0F25                     __end_of___lwmod:
  1680                           
  1681                           	psect	text3
  1682  0F62                     __ptext3:	
  1683 ;; *************** function ___lwdiv *****************
  1684 ;; Defined at:
  1685 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  divisor         2    0[BANK0 ] unsigned int 
  1688 ;;  dividend        2    2[BANK0 ] unsigned int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  quotient        2    5[BANK0 ] unsigned int 
  1691 ;;  counter         1    7[BANK0 ] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2    0[BANK0 ] unsigned int 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       4       0       0       0
  1702 ;;      Locals:         0       3       0       0       0
  1703 ;;      Temps:          0       1       0       0       0
  1704 ;;      Totals:         0       8       0       0       0
  1705 ;;Total ram usage:        8 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    2
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;;		_sprintf
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function ___lwdiv
  1718  0F62                     ___lwdiv:
  1719  0F62                     l1428:	
  1720                           ;incstack = 0
  1721                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1722                           
  1723  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0F64  01A5               	clrf	___lwdiv@quotient
  1726  0F65  01A6               	clrf	___lwdiv@quotient+1
  1727  0F66                     l1430:
  1728  0F66  0820               	movf	___lwdiv@divisor,w
  1729  0F67  0421               	iorwf	___lwdiv@divisor+1,w
  1730  0F68  1903               	btfsc	3,2
  1731  0F69  2F6B               	goto	u1141
  1732  0F6A  2F6C               	goto	u1140
  1733  0F6B                     u1141:
  1734  0F6B  2FA3               	goto	l1450
  1735  0F6C                     u1140:
  1736  0F6C                     l1432:
  1737  0F6C  01A7               	clrf	___lwdiv@counter
  1738  0F6D  0AA7               	incf	___lwdiv@counter,f
  1739  0F6E  2F7A               	goto	l1438
  1740  0F6F                     l1434:
  1741  0F6F  3001               	movlw	1
  1742  0F70                     u1155:
  1743  0F70  1003               	clrc
  1744  0F71  0DA0               	rlf	___lwdiv@divisor,f
  1745  0F72  0DA1               	rlf	___lwdiv@divisor+1,f
  1746  0F73  3EFF               	addlw	-1
  1747  0F74  1D03               	skipz
  1748  0F75  2F70               	goto	u1155
  1749  0F76                     l1436:
  1750  0F76  3001               	movlw	1
  1751  0F77  00A4               	movwf	??___lwdiv
  1752  0F78  0824               	movf	??___lwdiv,w
  1753  0F79  07A7               	addwf	___lwdiv@counter,f
  1754  0F7A                     l1438:
  1755  0F7A  1FA1               	btfss	___lwdiv@divisor+1,7
  1756  0F7B  2F7D               	goto	u1161
  1757  0F7C  2F7E               	goto	u1160
  1758  0F7D                     u1161:
  1759  0F7D  2F6F               	goto	l1434
  1760  0F7E                     u1160:
  1761  0F7E                     l1440:
  1762  0F7E  3001               	movlw	1
  1763  0F7F                     u1175:
  1764  0F7F  1003               	clrc
  1765  0F80  0DA5               	rlf	___lwdiv@quotient,f
  1766  0F81  0DA6               	rlf	___lwdiv@quotient+1,f
  1767  0F82  3EFF               	addlw	-1
  1768  0F83  1D03               	skipz
  1769  0F84  2F7F               	goto	u1175
  1770  0F85  0821               	movf	___lwdiv@divisor+1,w
  1771  0F86  0223               	subwf	___lwdiv@dividend+1,w
  1772  0F87  1D03               	skipz
  1773  0F88  2F8B               	goto	u1185
  1774  0F89  0820               	movf	___lwdiv@divisor,w
  1775  0F8A  0222               	subwf	___lwdiv@dividend,w
  1776  0F8B                     u1185:
  1777  0F8B  1C03               	skipc
  1778  0F8C  2F8E               	goto	u1181
  1779  0F8D  2F8F               	goto	u1180
  1780  0F8E                     u1181:
  1781  0F8E  2F96               	goto	l1446
  1782  0F8F                     u1180:
  1783  0F8F                     l1442:
  1784  0F8F  0820               	movf	___lwdiv@divisor,w
  1785  0F90  02A2               	subwf	___lwdiv@dividend,f
  1786  0F91  0821               	movf	___lwdiv@divisor+1,w
  1787  0F92  1C03               	skipc
  1788  0F93  03A3               	decf	___lwdiv@dividend+1,f
  1789  0F94  02A3               	subwf	___lwdiv@dividend+1,f
  1790  0F95                     l1444:
  1791  0F95  1425               	bsf	___lwdiv@quotient,0
  1792  0F96                     l1446:
  1793  0F96  3001               	movlw	1
  1794  0F97                     u1195:
  1795  0F97  1003               	clrc
  1796  0F98  0CA1               	rrf	___lwdiv@divisor+1,f
  1797  0F99  0CA0               	rrf	___lwdiv@divisor,f
  1798  0F9A  3EFF               	addlw	-1
  1799  0F9B  1D03               	skipz
  1800  0F9C  2F97               	goto	u1195
  1801  0F9D                     l1448:
  1802  0F9D  3001               	movlw	1
  1803  0F9E  02A7               	subwf	___lwdiv@counter,f
  1804  0F9F  1D03               	btfss	3,2
  1805  0FA0  2FA2               	goto	u1201
  1806  0FA1  2FA3               	goto	u1200
  1807  0FA2                     u1201:
  1808  0FA2  2F7E               	goto	l1440
  1809  0FA3                     u1200:
  1810  0FA3                     l1450:
  1811  0FA3  0826               	movf	___lwdiv@quotient+1,w
  1812  0FA4  00A1               	movwf	?___lwdiv+1
  1813  0FA5  0825               	movf	___lwdiv@quotient,w
  1814  0FA6  00A0               	movwf	?___lwdiv
  1815  0FA7                     l566:
  1816  0FA7  0008               	return
  1817  0FA8                     __end_of___lwdiv:
  1818                           
  1819                           	psect	text4
  1820  0E4C                     __ptext4:	
  1821 ;; *************** function _init_ADC *****************
  1822 ;; Defined at:
  1823 ;;		line 127 in file "main.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		None
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    2
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _init_ADC
  1853  0E4C                     _init_ADC:
  1854  0E4C                     l2056:	
  1855                           ;incstack = 0
  1856                           ; Regs used in _init_ADC: []
  1857                           
  1858                           
  1859                           ;main.c: 130:         if(RB4 == 1);main.c: 130:         if(RB4 == 1)
  1860  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0E4E  131F               	bcf	31,6	;volatile
  1863  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0E51  139F               	bcf	31,7	;volatile
  1866  0E52  171F               	bsf	31,6	;volatile
  1867                           
  1868                           ;main.c: 132:         if(RB5 == 1);main.c: 132:         if(RB5 == 1)
  1869  0E53  129F               	bcf	31,5	;volatile
  1870  0E54  121F               	bcf	31,4	;volatile
  1871  0E55  119F               	bcf	31,3	;volatile
  1872                           
  1873                           ;main.c: 134:         RBIF = 0;;main.c: 134:         RBIF = 0;
  1874  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  1876  0E58  179F               	bsf	31,7	;volatile
  1877                           
  1878                           ;main.c: 136: ;main.c: 136: 
  1879  0E59  159F               	bsf	31,3	;volatile
  1880  0E5A  151F               	bsf	31,2	;volatile
  1881  0E5B  149F               	bsf	31,1	;volatile
  1882  0E5C  101F               	bcf	31,0	;volatile
  1883                           
  1884                           ;main.c: 138:     {;main.c: 138:     {
  1885  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0E5F  141F               	bsf	31,0	;volatile
  1888  0E60                     l158:
  1889  0E60  0008               	return
  1890  0E61                     __end_of_init_ADC:
  1891                           
  1892                           	psect	text5
  1893  05D6                     __ptext5:	
  1894 ;; *************** function ___xxtofl *****************
  1895 ;; Defined at:
  1896 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  sign            1    wreg     unsigned char 
  1899 ;;  val             4    0[BANK0 ] long 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  sign            1    8[BANK0 ] unsigned char 
  1902 ;;  arg             4   10[BANK0 ] unsigned long 
  1903 ;;  exp             1    9[BANK0 ] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  4    0[BANK0 ] unsigned char 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       4       0       0       0
  1914 ;;      Locals:         0       6       0       0       0
  1915 ;;      Temps:          0       4       0       0       0
  1916 ;;      Totals:         0      14       0       0       0
  1917 ;;Total ram usage:       14 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    2
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function ___xxtofl
  1929  05D6                     ___xxtofl:
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1933                           ;___xxtofl@sign stored from wreg
  1934  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1935  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1936  05D8  00A8               	movwf	___xxtofl@sign
  1937  05D9                     l1796:
  1938  05D9  0828               	movf	___xxtofl@sign,w
  1939  05DA  1903               	btfsc	3,2
  1940  05DB  2DDD               	goto	u1951
  1941  05DC  2DDE               	goto	u1950
  1942  05DD                     u1951:
  1943  05DD  2DF2               	goto	l1802
  1944  05DE                     u1950:
  1945  05DE                     l1798:
  1946  05DE  1FA3               	btfss	___xxtofl@val+3,7
  1947  05DF  2DE1               	goto	u1961
  1948  05E0  2DE2               	goto	u1960
  1949  05E1                     u1961:
  1950  05E1  2DF2               	goto	l1802
  1951  05E2                     u1960:
  1952  05E2                     l1800:
  1953  05E2  0920               	comf	___xxtofl@val,w
  1954  05E3  00AA               	movwf	___xxtofl@arg
  1955  05E4  0921               	comf	___xxtofl@val+1,w
  1956  05E5  00AB               	movwf	___xxtofl@arg+1
  1957  05E6  0922               	comf	___xxtofl@val+2,w
  1958  05E7  00AC               	movwf	___xxtofl@arg+2
  1959  05E8  0923               	comf	___xxtofl@val+3,w
  1960  05E9  00AD               	movwf	___xxtofl@arg+3
  1961  05EA  0AAA               	incf	___xxtofl@arg,f
  1962  05EB  1903               	skipnz
  1963  05EC  0AAB               	incf	___xxtofl@arg+1,f
  1964  05ED  1903               	skipnz
  1965  05EE  0AAC               	incf	___xxtofl@arg+2,f
  1966  05EF  1903               	skipnz
  1967  05F0  0AAD               	incf	___xxtofl@arg+3,f
  1968  05F1  2DFA               	goto	l727
  1969  05F2                     l1802:
  1970  05F2  0823               	movf	___xxtofl@val+3,w
  1971  05F3  00AD               	movwf	___xxtofl@arg+3
  1972  05F4  0822               	movf	___xxtofl@val+2,w
  1973  05F5  00AC               	movwf	___xxtofl@arg+2
  1974  05F6  0821               	movf	___xxtofl@val+1,w
  1975  05F7  00AB               	movwf	___xxtofl@arg+1
  1976  05F8  0820               	movf	___xxtofl@val,w
  1977  05F9  00AA               	movwf	___xxtofl@arg
  1978  05FA                     l727:
  1979  05FA  0823               	movf	___xxtofl@val+3,w
  1980  05FB  0422               	iorwf	___xxtofl@val+2,w
  1981  05FC  0421               	iorwf	___xxtofl@val+1,w
  1982  05FD  0420               	iorwf	___xxtofl@val,w
  1983  05FE  1D03               	skipz
  1984  05FF  2E01               	goto	u1971
  1985  0600  2E02               	goto	u1970
  1986  0601                     u1971:
  1987  0601  2E0B               	goto	l1808
  1988  0602                     u1970:
  1989  0602                     l1804:
  1990  0602  3000               	movlw	0
  1991  0603  00A3               	movwf	?___xxtofl+3
  1992  0604  3000               	movlw	0
  1993  0605  00A2               	movwf	?___xxtofl+2
  1994  0606  3000               	movlw	0
  1995  0607  00A1               	movwf	?___xxtofl+1
  1996  0608  3000               	movlw	0
  1997  0609  00A0               	movwf	?___xxtofl
  1998  060A  2E91               	goto	l729
  1999  060B                     l1808:
  2000  060B  3096               	movlw	150
  2001  060C  00A4               	movwf	??___xxtofl
  2002  060D  0824               	movf	??___xxtofl,w
  2003  060E  00A9               	movwf	___xxtofl@exp
  2004  060F  2E1D               	goto	l1812
  2005  0610                     l1810:
  2006  0610  3001               	movlw	1
  2007  0611  00A4               	movwf	??___xxtofl
  2008  0612  0824               	movf	??___xxtofl,w
  2009  0613  07A9               	addwf	___xxtofl@exp,f
  2010  0614  3001               	movlw	1
  2011  0615                     u1985:
  2012  0615  1003               	clrc
  2013  0616  0CAD               	rrf	___xxtofl@arg+3,f
  2014  0617  0CAC               	rrf	___xxtofl@arg+2,f
  2015  0618  0CAB               	rrf	___xxtofl@arg+1,f
  2016  0619  0CAA               	rrf	___xxtofl@arg,f
  2017  061A  3EFF               	addlw	-1
  2018  061B  1D03               	skipz
  2019  061C  2E15               	goto	u1985
  2020  061D                     l1812:
  2021  061D  30FE               	movlw	254
  2022  061E  052D               	andwf	___xxtofl@arg+3,w
  2023  061F  1D03               	btfss	3,2
  2024  0620  2E22               	goto	u1991
  2025  0621  2E23               	goto	u1990
  2026  0622                     u1991:
  2027  0622  2E10               	goto	l1810
  2028  0623                     u1990:
  2029  0623  2E3F               	goto	l733
  2030  0624                     l1814:
  2031  0624  3001               	movlw	1
  2032  0625  00A4               	movwf	??___xxtofl
  2033  0626  0824               	movf	??___xxtofl,w
  2034  0627  07A9               	addwf	___xxtofl@exp,f
  2035  0628                     l1816:
  2036  0628  3001               	movlw	1
  2037  0629  07AA               	addwf	___xxtofl@arg,f
  2038  062A  3000               	movlw	0
  2039  062B  1803               	skipnc
  2040  062C  3001               	movlw	1
  2041  062D  07AB               	addwf	___xxtofl@arg+1,f
  2042  062E  3000               	movlw	0
  2043  062F  1803               	skipnc
  2044  0630  3001               	movlw	1
  2045  0631  07AC               	addwf	___xxtofl@arg+2,f
  2046  0632  3000               	movlw	0
  2047  0633  1803               	skipnc
  2048  0634  3001               	movlw	1
  2049  0635  07AD               	addwf	___xxtofl@arg+3,f
  2050  0636                     l1818:
  2051  0636  3001               	movlw	1
  2052  0637                     u2005:
  2053  0637  1003               	clrc
  2054  0638  0CAD               	rrf	___xxtofl@arg+3,f
  2055  0639  0CAC               	rrf	___xxtofl@arg+2,f
  2056  063A  0CAB               	rrf	___xxtofl@arg+1,f
  2057  063B  0CAA               	rrf	___xxtofl@arg,f
  2058  063C  3EFF               	addlw	-1
  2059  063D  1D03               	skipz
  2060  063E  2E37               	goto	u2005
  2061  063F                     l733:
  2062  063F  30FF               	movlw	255
  2063  0640  052D               	andwf	___xxtofl@arg+3,w
  2064  0641  1D03               	btfss	3,2
  2065  0642  2E44               	goto	u2011
  2066  0643  2E45               	goto	u2010
  2067  0644                     u2011:
  2068  0644  2E24               	goto	l1814
  2069  0645                     u2010:
  2070  0645  2E51               	goto	l1822
  2071  0646                     l1820:
  2072  0646  3001               	movlw	1
  2073  0647  02A9               	subwf	___xxtofl@exp,f
  2074  0648  3001               	movlw	1
  2075  0649  00A4               	movwf	??___xxtofl
  2076  064A                     u2025:
  2077  064A  1003               	clrc
  2078  064B  0DAA               	rlf	___xxtofl@arg,f
  2079  064C  0DAB               	rlf	___xxtofl@arg+1,f
  2080  064D  0DAC               	rlf	___xxtofl@arg+2,f
  2081  064E  0DAD               	rlf	___xxtofl@arg+3,f
  2082  064F  0BA4               	decfsz	??___xxtofl,f
  2083  0650  2E4A               	goto	u2025
  2084  0651                     l1822:
  2085  0651  1BAC               	btfsc	___xxtofl@arg+2,7
  2086  0652  2E54               	goto	u2031
  2087  0653  2E55               	goto	u2030
  2088  0654                     u2031:
  2089  0654  2E5B               	goto	l740
  2090  0655                     u2030:
  2091  0655                     l1824:
  2092  0655  3002               	movlw	2
  2093  0656  0229               	subwf	___xxtofl@exp,w
  2094  0657  1803               	skipnc
  2095  0658  2E5A               	goto	u2041
  2096  0659  2E5B               	goto	u2040
  2097  065A                     u2041:
  2098  065A  2E46               	goto	l1820
  2099  065B                     u2040:
  2100  065B                     l740:
  2101  065B  1829               	btfsc	___xxtofl@exp,0
  2102  065C  2E5E               	goto	u2051
  2103  065D  2E5F               	goto	u2050
  2104  065E                     u2051:
  2105  065E  2E67               	goto	l741
  2106  065F                     u2050:
  2107  065F                     l1826:
  2108  065F  30FF               	movlw	255
  2109  0660  05AA               	andwf	___xxtofl@arg,f
  2110  0661  30FF               	movlw	255
  2111  0662  05AB               	andwf	___xxtofl@arg+1,f
  2112  0663  307F               	movlw	127
  2113  0664  05AC               	andwf	___xxtofl@arg+2,f
  2114  0665  30FF               	movlw	255
  2115  0666  05AD               	andwf	___xxtofl@arg+3,f
  2116  0667                     l741:
  2117  0667  1003               	clrc
  2118  0668  0CA9               	rrf	___xxtofl@exp,f
  2119  0669                     l1828:
  2120  0669  0829               	movf	___xxtofl@exp,w
  2121  066A  00A4               	movwf	??___xxtofl
  2122  066B  01A5               	clrf	??___xxtofl+1
  2123  066C  01A6               	clrf	??___xxtofl+2
  2124  066D  01A7               	clrf	??___xxtofl+3
  2125  066E  3018               	movlw	24
  2126  066F                     u2065:
  2127  066F  1003               	clrc
  2128  0670  0DA4               	rlf	??___xxtofl,f
  2129  0671  0DA5               	rlf	??___xxtofl+1,f
  2130  0672  0DA6               	rlf	??___xxtofl+2,f
  2131  0673  0DA7               	rlf	??___xxtofl+3,f
  2132  0674                     u2060:
  2133  0674  3EFF               	addlw	-1
  2134  0675  1D03               	skipz
  2135  0676  2E6F               	goto	u2065
  2136  0677  0824               	movf	??___xxtofl,w
  2137  0678  04AA               	iorwf	___xxtofl@arg,f
  2138  0679  0825               	movf	??___xxtofl+1,w
  2139  067A  04AB               	iorwf	___xxtofl@arg+1,f
  2140  067B  0826               	movf	??___xxtofl+2,w
  2141  067C  04AC               	iorwf	___xxtofl@arg+2,f
  2142  067D  0827               	movf	??___xxtofl+3,w
  2143  067E  04AD               	iorwf	___xxtofl@arg+3,f
  2144  067F                     l1830:
  2145  067F  0828               	movf	___xxtofl@sign,w
  2146  0680  1903               	btfsc	3,2
  2147  0681  2E83               	goto	u2071
  2148  0682  2E84               	goto	u2070
  2149  0683                     u2071:
  2150  0683  2E89               	goto	l1836
  2151  0684                     u2070:
  2152  0684                     l1832:
  2153  0684  1FA3               	btfss	___xxtofl@val+3,7
  2154  0685  2E87               	goto	u2081
  2155  0686  2E88               	goto	u2080
  2156  0687                     u2081:
  2157  0687  2E89               	goto	l1836
  2158  0688                     u2080:
  2159  0688                     l1834:
  2160  0688  17AD               	bsf	___xxtofl@arg+3,7
  2161  0689                     l1836:
  2162  0689  082D               	movf	___xxtofl@arg+3,w
  2163  068A  00A3               	movwf	?___xxtofl+3
  2164  068B  082C               	movf	___xxtofl@arg+2,w
  2165  068C  00A2               	movwf	?___xxtofl+2
  2166  068D  082B               	movf	___xxtofl@arg+1,w
  2167  068E  00A1               	movwf	?___xxtofl+1
  2168  068F  082A               	movf	___xxtofl@arg,w
  2169  0690  00A0               	movwf	?___xxtofl
  2170  0691                     l729:
  2171  0691  0008               	return
  2172  0692                     __end_of___xxtofl:
  2173                           
  2174                           	psect	text6
  2175  0EC2                     __ptext6:	
  2176 ;; *************** function ___wmul *****************
  2177 ;; Defined at:
  2178 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2181 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  product         2    4[BANK0 ] unsigned int 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  2    0[BANK0 ] unsigned int 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       4       0       0       0
  2194 ;;      Locals:         0       2       0       0       0
  2195 ;;      Temps:          0       0       0       0       0
  2196 ;;      Totals:         0       6       0       0       0
  2197 ;;Total ram usage:        6 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    2
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function ___wmul
  2209  0EC2                     ___wmul:
  2210  0EC2                     l2066:	
  2211                           ;incstack = 0
  2212                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2213                           
  2214  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0EC4  01A4               	clrf	___wmul@product
  2217  0EC5  01A5               	clrf	___wmul@product+1
  2218  0EC6                     l2068:
  2219  0EC6  1C20               	btfss	___wmul@multiplier,0
  2220  0EC7  2EC9               	goto	u2281
  2221  0EC8  2ECA               	goto	u2280
  2222  0EC9                     u2281:
  2223  0EC9  2ED0               	goto	l294
  2224  0ECA                     u2280:
  2225  0ECA                     l2070:
  2226  0ECA  0822               	movf	___wmul@multiplicand,w
  2227  0ECB  07A4               	addwf	___wmul@product,f
  2228  0ECC  1803               	skipnc
  2229  0ECD  0AA5               	incf	___wmul@product+1,f
  2230  0ECE  0823               	movf	___wmul@multiplicand+1,w
  2231  0ECF  07A5               	addwf	___wmul@product+1,f
  2232  0ED0                     l294:
  2233  0ED0  3001               	movlw	1
  2234  0ED1                     u2295:
  2235  0ED1  1003               	clrc
  2236  0ED2  0DA2               	rlf	___wmul@multiplicand,f
  2237  0ED3  0DA3               	rlf	___wmul@multiplicand+1,f
  2238  0ED4  3EFF               	addlw	-1
  2239  0ED5  1D03               	skipz
  2240  0ED6  2ED1               	goto	u2295
  2241  0ED7                     l2072:
  2242  0ED7  3001               	movlw	1
  2243  0ED8                     u2305:
  2244  0ED8  1003               	clrc
  2245  0ED9  0CA1               	rrf	___wmul@multiplier+1,f
  2246  0EDA  0CA0               	rrf	___wmul@multiplier,f
  2247  0EDB  3EFF               	addlw	-1
  2248  0EDC  1D03               	skipz
  2249  0EDD  2ED8               	goto	u2305
  2250  0EDE                     l2074:
  2251  0EDE  0820               	movf	___wmul@multiplier,w
  2252  0EDF  0421               	iorwf	___wmul@multiplier+1,w
  2253  0EE0  1D03               	btfss	3,2
  2254  0EE1  2EE3               	goto	u2311
  2255  0EE2  2EE4               	goto	u2310
  2256  0EE3                     u2311:
  2257  0EE3  2EC6               	goto	l2068
  2258  0EE4                     u2310:
  2259  0EE4                     l2076:
  2260  0EE4  0825               	movf	___wmul@product+1,w
  2261  0EE5  00A1               	movwf	?___wmul+1
  2262  0EE6  0824               	movf	___wmul@product,w
  2263  0EE7  00A0               	movwf	?___wmul
  2264  0EE8                     l296:
  2265  0EE8  0008               	return
  2266  0EE9                     __end_of___wmul:
  2267                           
  2268                           	psect	text7
  2269  0692                     __ptext7:	
  2270 ;; *************** function ___fltol *****************
  2271 ;; Defined at:
  2272 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  f1              4   40[BANK0 ] unsigned int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  exp1            1   50[BANK0 ] unsigned char 
  2277 ;;  sign1           1   49[BANK0 ] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  4   40[BANK0 ] long 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         0       4       0       0       0
  2288 ;;      Locals:         0       2       0       0       0
  2289 ;;      Temps:          0       5       0       0       0
  2290 ;;      Totals:         0      11       0       0       0
  2291 ;;Total ram usage:       11 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    2
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function ___fltol
  2303  0692                     ___fltol:
  2304  0692                     l1620:	
  2305                           ;incstack = 0
  2306                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2307                           
  2308  0692  1003               	clrc
  2309  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0695  0D4A               	rlf	___fltol@f1+2,w
  2312  0696  0D4B               	rlf	___fltol@f1+3,w
  2313  0697  00CC               	movwf	??___fltol
  2314  0698  084C               	movf	??___fltol,w
  2315  0699  00D2               	movwf	___fltol@exp1
  2316  069A  0852               	movf	___fltol@exp1,w
  2317  069B  1D03               	btfss	3,2
  2318  069C  2E9E               	goto	u1481
  2319  069D  2E9F               	goto	u1480
  2320  069E                     u1481:
  2321  069E  2EA8               	goto	l1626
  2322  069F                     u1480:
  2323  069F                     l1622:
  2324  069F  3000               	movlw	0
  2325  06A0  00CB               	movwf	?___fltol+3
  2326  06A1  3000               	movlw	0
  2327  06A2  00CA               	movwf	?___fltol+2
  2328  06A3  3000               	movlw	0
  2329  06A4  00C9               	movwf	?___fltol+1
  2330  06A5  3000               	movlw	0
  2331  06A6  00C8               	movwf	?___fltol
  2332  06A7  2F0D               	goto	l480
  2333  06A8                     l1626:
  2334  06A8  0848               	movf	___fltol@f1,w
  2335  06A9  00CC               	movwf	??___fltol
  2336  06AA  0849               	movf	___fltol@f1+1,w
  2337  06AB  00CD               	movwf	??___fltol+1
  2338  06AC  084A               	movf	___fltol@f1+2,w
  2339  06AD  00CE               	movwf	??___fltol+2
  2340  06AE  084B               	movf	___fltol@f1+3,w
  2341  06AF  00CF               	movwf	??___fltol+3
  2342  06B0  301F               	movlw	31
  2343  06B1                     u1495:
  2344  06B1  1003               	clrc
  2345  06B2  0CCF               	rrf	??___fltol+3,f
  2346  06B3  0CCE               	rrf	??___fltol+2,f
  2347  06B4  0CCD               	rrf	??___fltol+1,f
  2348  06B5  0CCC               	rrf	??___fltol,f
  2349  06B6                     u1490:
  2350  06B6  3EFF               	addlw	-1
  2351  06B7  1D03               	skipz
  2352  06B8  2EB1               	goto	u1495
  2353  06B9  084C               	movf	??___fltol,w
  2354  06BA  00D0               	movwf	??___fltol+4
  2355  06BB  0850               	movf	??___fltol+4,w
  2356  06BC  00D1               	movwf	___fltol@sign1
  2357  06BD                     l1628:
  2358  06BD  17CA               	bsf	___fltol@f1+2,7
  2359  06BE                     l1630:
  2360  06BE  30FF               	movlw	255
  2361  06BF  05C8               	andwf	___fltol@f1,f
  2362  06C0  30FF               	movlw	255
  2363  06C1  05C9               	andwf	___fltol@f1+1,f
  2364  06C2  30FF               	movlw	255
  2365  06C3  05CA               	andwf	___fltol@f1+2,f
  2366  06C4  3000               	movlw	0
  2367  06C5  05CB               	andwf	___fltol@f1+3,f
  2368  06C6                     l1632:
  2369  06C6  3096               	movlw	150
  2370  06C7  02D2               	subwf	___fltol@exp1,f
  2371  06C8                     l1634:
  2372  06C8  1FD2               	btfss	___fltol@exp1,7
  2373  06C9  2ECB               	goto	u1501
  2374  06CA  2ECC               	goto	u1500
  2375  06CB                     u1501:
  2376  06CB  2EE6               	goto	l1644
  2377  06CC                     u1500:
  2378  06CC                     l1636:
  2379  06CC  0852               	movf	___fltol@exp1,w
  2380  06CD  3A80               	xorlw	128
  2381  06CE  3E97               	addlw	151
  2382  06CF  1803               	skipnc
  2383  06D0  2ED2               	goto	u1511
  2384  06D1  2ED3               	goto	u1510
  2385  06D2                     u1511:
  2386  06D2  2ED4               	goto	l1642
  2387  06D3                     u1510:
  2388  06D3  2E9F               	goto	l1622
  2389  06D4                     l1642:
  2390  06D4  3001               	movlw	1
  2391  06D5                     u1525:
  2392  06D5  1003               	clrc
  2393  06D6  0CCB               	rrf	___fltol@f1+3,f
  2394  06D7  0CCA               	rrf	___fltol@f1+2,f
  2395  06D8  0CC9               	rrf	___fltol@f1+1,f
  2396  06D9  0CC8               	rrf	___fltol@f1,f
  2397  06DA  3EFF               	addlw	-1
  2398  06DB  1D03               	skipz
  2399  06DC  2ED5               	goto	u1525
  2400  06DD  3001               	movlw	1
  2401  06DE  00CC               	movwf	??___fltol
  2402  06DF  084C               	movf	??___fltol,w
  2403  06E0  07D2               	addwf	___fltol@exp1,f
  2404  06E1  1D03               	btfss	3,2
  2405  06E2  2EE4               	goto	u1531
  2406  06E3  2EE5               	goto	u1530
  2407  06E4                     u1531:
  2408  06E4  2ED4               	goto	l1642
  2409  06E5                     u1530:
  2410  06E5  2EFD               	goto	l1652
  2411  06E6                     l1644:
  2412  06E6  3020               	movlw	32
  2413  06E7  0252               	subwf	___fltol@exp1,w
  2414  06E8  1C03               	skipc
  2415  06E9  2EEB               	goto	u1541
  2416  06EA  2EEC               	goto	u1540
  2417  06EB                     u1541:
  2418  06EB  2EF8               	goto	l487
  2419  06EC                     u1540:
  2420  06EC  2E9F               	goto	l1622
  2421  06ED                     l1650:
  2422  06ED  3001               	movlw	1
  2423  06EE  00CC               	movwf	??___fltol
  2424  06EF                     u1555:
  2425  06EF  1003               	clrc
  2426  06F0  0DC8               	rlf	___fltol@f1,f
  2427  06F1  0DC9               	rlf	___fltol@f1+1,f
  2428  06F2  0DCA               	rlf	___fltol@f1+2,f
  2429  06F3  0DCB               	rlf	___fltol@f1+3,f
  2430  06F4  0BCC               	decfsz	??___fltol,f
  2431  06F5  2EEF               	goto	u1555
  2432  06F6  3001               	movlw	1
  2433  06F7  02D2               	subwf	___fltol@exp1,f
  2434  06F8                     l487:
  2435  06F8  0852               	movf	___fltol@exp1,w
  2436  06F9  1D03               	btfss	3,2
  2437  06FA  2EFC               	goto	u1561
  2438  06FB  2EFD               	goto	u1560
  2439  06FC                     u1561:
  2440  06FC  2EED               	goto	l1650
  2441  06FD                     u1560:
  2442  06FD                     l1652:
  2443  06FD  0851               	movf	___fltol@sign1,w
  2444  06FE  1903               	btfsc	3,2
  2445  06FF  2F01               	goto	u1571
  2446  0700  2F02               	goto	u1570
  2447  0701                     u1571:
  2448  0701  2F0D               	goto	l490
  2449  0702                     u1570:
  2450  0702                     l1654:
  2451  0702  09C8               	comf	___fltol@f1,f
  2452  0703  09C9               	comf	___fltol@f1+1,f
  2453  0704  09CA               	comf	___fltol@f1+2,f
  2454  0705  09CB               	comf	___fltol@f1+3,f
  2455  0706  0AC8               	incf	___fltol@f1,f
  2456  0707  1903               	skipnz
  2457  0708  0AC9               	incf	___fltol@f1+1,f
  2458  0709  1903               	skipnz
  2459  070A  0ACA               	incf	___fltol@f1+2,f
  2460  070B  1903               	skipnz
  2461  070C  0ACB               	incf	___fltol@f1+3,f
  2462  070D                     l490:
  2463  070D                     l480:
  2464  070D  0008               	return
  2465  070E                     __end_of___fltol:
  2466                           
  2467                           	psect	text8
  2468  0045                     __ptext8:	
  2469 ;; *************** function ___flmul *****************
  2470 ;; Defined at:
  2471 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  b               4   14[BANK0 ] long 
  2474 ;;  a               4   18[BANK0 ] long 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  prod            4   34[BANK0 ] struct .
  2477 ;;  grs             4   28[BANK0 ] unsigned long 
  2478 ;;  temp            2   38[BANK0 ] struct .
  2479 ;;  bexp            1   33[BANK0 ] unsigned char 
  2480 ;;  aexp            1   32[BANK0 ] unsigned char 
  2481 ;;  sign            1   27[BANK0 ] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  4   14[BANK0 ] unsigned char 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       8       0       0       0
  2492 ;;      Locals:         0      13       0       0       0
  2493 ;;      Temps:          0       5       0       0       0
  2494 ;;      Totals:         0      26       0       0       0
  2495 ;;Total ram usage:       26 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    3
  2498 ;; This function calls:
  2499 ;;		__Umul8_16
  2500 ;; This function is called by:
  2501 ;;		_main
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function ___flmul
  2507  0045                     ___flmul:
  2508  0045                     l1656:	
  2509                           ;incstack = 0
  2510                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2511                           
  2512  0045  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0046  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0047  0831               	movf	___flmul@b+3,w
  2515  0048  3980               	andlw	128
  2516  0049  00B6               	movwf	??___flmul
  2517  004A  0836               	movf	??___flmul,w
  2518  004B  00BB               	movwf	___flmul@sign
  2519  004C                     l1658:
  2520  004C  0831               	movf	___flmul@b+3,w
  2521  004D  00B6               	movwf	??___flmul
  2522  004E  0736               	addwf	??___flmul,w
  2523  004F  00B7               	movwf	??___flmul+1
  2524  0050  0837               	movf	??___flmul+1,w
  2525  0051  00C1               	movwf	___flmul@bexp
  2526  0052                     l1660:
  2527  0052  1FB0               	btfss	___flmul@b+2,7
  2528  0053  2855               	goto	u1581
  2529  0054  2856               	goto	u1580
  2530  0055                     u1581:
  2531  0055  2857               	goto	l1664
  2532  0056                     u1580:
  2533  0056                     l1662:
  2534  0056  1441               	bsf	___flmul@bexp,0
  2535  0057                     l1664:
  2536  0057  0841               	movf	___flmul@bexp,w
  2537  0058  1903               	btfsc	3,2
  2538  0059  285B               	goto	u1591
  2539  005A  285C               	goto	u1590
  2540  005B                     u1591:
  2541  005B  286B               	goto	l1672
  2542  005C                     u1590:
  2543  005C                     l1666:
  2544  005C  0A41               	incf	___flmul@bexp,w
  2545  005D  1D03               	btfss	3,2
  2546  005E  2860               	goto	u1601
  2547  005F  2861               	goto	u1600
  2548  0060                     u1601:
  2549  0060  2869               	goto	l1670
  2550  0061                     u1600:
  2551  0061                     l1668:
  2552  0061  3000               	movlw	0
  2553  0062  00B1               	movwf	___flmul@b+3
  2554  0063  3000               	movlw	0
  2555  0064  00B0               	movwf	___flmul@b+2
  2556  0065  3000               	movlw	0
  2557  0066  00AF               	movwf	___flmul@b+1
  2558  0067  3000               	movlw	0
  2559  0068  00AE               	movwf	___flmul@b
  2560  0069                     l1670:
  2561  0069  17B0               	bsf	___flmul@b+2,7
  2562  006A  2873               	goto	l1674
  2563  006B                     l1672:
  2564  006B  3000               	movlw	0
  2565  006C  00B1               	movwf	___flmul@b+3
  2566  006D  3000               	movlw	0
  2567  006E  00B0               	movwf	___flmul@b+2
  2568  006F  3000               	movlw	0
  2569  0070  00AF               	movwf	___flmul@b+1
  2570  0071  3000               	movlw	0
  2571  0072  00AE               	movwf	___flmul@b
  2572  0073                     l1674:
  2573  0073  0835               	movf	___flmul@a+3,w
  2574  0074  3980               	andlw	128
  2575  0075  00B6               	movwf	??___flmul
  2576  0076  0836               	movf	??___flmul,w
  2577  0077  06BB               	xorwf	___flmul@sign,f
  2578  0078                     l1676:
  2579  0078  0835               	movf	___flmul@a+3,w
  2580  0079  00B6               	movwf	??___flmul
  2581  007A  0736               	addwf	??___flmul,w
  2582  007B  00B7               	movwf	??___flmul+1
  2583  007C  0837               	movf	??___flmul+1,w
  2584  007D  00C0               	movwf	___flmul@aexp
  2585  007E                     l1678:
  2586  007E  1FB4               	btfss	___flmul@a+2,7
  2587  007F  2881               	goto	u1611
  2588  0080  2882               	goto	u1610
  2589  0081                     u1611:
  2590  0081  2883               	goto	l1682
  2591  0082                     u1610:
  2592  0082                     l1680:
  2593  0082  1440               	bsf	___flmul@aexp,0
  2594  0083                     l1682:
  2595  0083  0840               	movf	___flmul@aexp,w
  2596  0084  1903               	btfsc	3,2
  2597  0085  2887               	goto	u1621
  2598  0086  2888               	goto	u1620
  2599  0087                     u1621:
  2600  0087  2897               	goto	l1690
  2601  0088                     u1620:
  2602  0088                     l1684:
  2603  0088  0A40               	incf	___flmul@aexp,w
  2604  0089  1D03               	btfss	3,2
  2605  008A  288C               	goto	u1631
  2606  008B  288D               	goto	u1630
  2607  008C                     u1631:
  2608  008C  2895               	goto	l1688
  2609  008D                     u1630:
  2610  008D                     l1686:
  2611  008D  3000               	movlw	0
  2612  008E  00B5               	movwf	___flmul@a+3
  2613  008F  3000               	movlw	0
  2614  0090  00B4               	movwf	___flmul@a+2
  2615  0091  3000               	movlw	0
  2616  0092  00B3               	movwf	___flmul@a+1
  2617  0093  3000               	movlw	0
  2618  0094  00B2               	movwf	___flmul@a
  2619  0095                     l1688:
  2620  0095  17B4               	bsf	___flmul@a+2,7
  2621  0096  289F               	goto	l1692
  2622  0097                     l1690:
  2623  0097  3000               	movlw	0
  2624  0098  00B5               	movwf	___flmul@a+3
  2625  0099  3000               	movlw	0
  2626  009A  00B4               	movwf	___flmul@a+2
  2627  009B  3000               	movlw	0
  2628  009C  00B3               	movwf	___flmul@a+1
  2629  009D  3000               	movlw	0
  2630  009E  00B2               	movwf	___flmul@a
  2631  009F                     l1692:
  2632  009F  0840               	movf	___flmul@aexp,w
  2633  00A0  1903               	btfsc	3,2
  2634  00A1  28A3               	goto	u1641
  2635  00A2  28A4               	goto	u1640
  2636  00A3                     u1641:
  2637  00A3  28A9               	goto	l1696
  2638  00A4                     u1640:
  2639  00A4                     l1694:
  2640  00A4  0841               	movf	___flmul@bexp,w
  2641  00A5  1D03               	btfss	3,2
  2642  00A6  28A8               	goto	u1651
  2643  00A7  28A9               	goto	u1650
  2644  00A8                     u1651:
  2645  00A8  28B2               	goto	l1700
  2646  00A9                     u1650:
  2647  00A9                     l1696:
  2648  00A9  3000               	movlw	0
  2649  00AA  00B1               	movwf	?___flmul+3
  2650  00AB  3000               	movlw	0
  2651  00AC  00B0               	movwf	?___flmul+2
  2652  00AD  3000               	movlw	0
  2653  00AE  00AF               	movwf	?___flmul+1
  2654  00AF  3000               	movlw	0
  2655  00B0  00AE               	movwf	?___flmul
  2656  00B1  2BA5               	goto	l683
  2657  00B2                     l1700:
  2658  00B2  082E               	movf	___flmul@b,w
  2659  00B3  00B6               	movwf	??___flmul
  2660  00B4  0836               	movf	??___flmul,w
  2661  00B5  00A0               	movwf	__Umul8_16@multiplicand
  2662  00B6  0834               	movf	___flmul@a+2,w
  2663  00B7  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  2664  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2665  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2666  00BE  0821               	movf	?__Umul8_16+1,w
  2667  00BF  00C7               	movwf	___flmul@temp+1
  2668  00C0  0820               	movf	?__Umul8_16,w
  2669  00C1  00C6               	movwf	___flmul@temp
  2670  00C2                     l1702:
  2671  00C2  0846               	movf	___flmul@temp,w
  2672  00C3  00B6               	movwf	??___flmul
  2673  00C4  01B7               	clrf	??___flmul+1
  2674  00C5  01B8               	clrf	??___flmul+2
  2675  00C6  01B9               	clrf	??___flmul+3
  2676  00C7  0839               	movf	??___flmul+3,w
  2677  00C8  00BF               	movwf	___flmul@grs+3
  2678  00C9  0838               	movf	??___flmul+2,w
  2679  00CA  00BE               	movwf	___flmul@grs+2
  2680  00CB  0837               	movf	??___flmul+1,w
  2681  00CC  00BD               	movwf	___flmul@grs+1
  2682  00CD  0836               	movf	??___flmul,w
  2683  00CE  00BC               	movwf	___flmul@grs
  2684  00CF                     l1704:
  2685  00CF  0847               	movf	___flmul@temp+1,w
  2686  00D0  00B6               	movwf	??___flmul
  2687  00D1  01B7               	clrf	??___flmul+1
  2688  00D2  01B8               	clrf	??___flmul+2
  2689  00D3  01B9               	clrf	??___flmul+3
  2690  00D4  0839               	movf	??___flmul+3,w
  2691  00D5  00C5               	movwf	___flmul@prod+3
  2692  00D6  0838               	movf	??___flmul+2,w
  2693  00D7  00C4               	movwf	___flmul@prod+2
  2694  00D8  0837               	movf	??___flmul+1,w
  2695  00D9  00C3               	movwf	___flmul@prod+1
  2696  00DA  0836               	movf	??___flmul,w
  2697  00DB  00C2               	movwf	___flmul@prod
  2698  00DC  082F               	movf	___flmul@b+1,w
  2699  00DD  00B6               	movwf	??___flmul
  2700  00DE  0836               	movf	??___flmul,w
  2701  00DF  00A0               	movwf	__Umul8_16@multiplicand
  2702  00E0  0833               	movf	___flmul@a+1,w
  2703  00E1  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  2704  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2705  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2706  00E8  0821               	movf	?__Umul8_16+1,w
  2707  00E9  00C7               	movwf	___flmul@temp+1
  2708  00EA  0820               	movf	?__Umul8_16,w
  2709  00EB  00C6               	movwf	___flmul@temp
  2710  00EC                     l1706:
  2711  00EC  0846               	movf	___flmul@temp,w
  2712  00ED  00B6               	movwf	??___flmul
  2713  00EE  01B7               	clrf	??___flmul+1
  2714  00EF  01B8               	clrf	??___flmul+2
  2715  00F0  01B9               	clrf	??___flmul+3
  2716  00F1  0836               	movf	??___flmul,w
  2717  00F2  07BC               	addwf	___flmul@grs,f
  2718  00F3  0837               	movf	??___flmul+1,w
  2719  00F4  1103               	clrz
  2720  00F5  1803               	skipnc
  2721  00F6  3E01               	addlw	1
  2722  00F7  1903               	skipnz
  2723  00F8  28FA               	goto	u1661
  2724  00F9  07BD               	addwf	___flmul@grs+1,f
  2725  00FA                     u1661:
  2726  00FA  0838               	movf	??___flmul+2,w
  2727  00FB  1103               	clrz
  2728  00FC  1803               	skipnc
  2729  00FD  3E01               	addlw	1
  2730  00FE  1903               	skipnz
  2731  00FF  2901               	goto	u1662
  2732  0100  07BE               	addwf	___flmul@grs+2,f
  2733  0101                     u1662:
  2734  0101  0839               	movf	??___flmul+3,w
  2735  0102  1103               	clrz
  2736  0103  1803               	skipnc
  2737  0104  3E01               	addlw	1
  2738  0105  1903               	skipnz
  2739  0106  2908               	goto	u1663
  2740  0107  07BF               	addwf	___flmul@grs+3,f
  2741  0108                     u1663:
  2742  0108                     l1708:
  2743  0108  0847               	movf	___flmul@temp+1,w
  2744  0109  00B6               	movwf	??___flmul
  2745  010A  01B7               	clrf	??___flmul+1
  2746  010B  01B8               	clrf	??___flmul+2
  2747  010C  01B9               	clrf	??___flmul+3
  2748  010D  0836               	movf	??___flmul,w
  2749  010E  07C2               	addwf	___flmul@prod,f
  2750  010F  0837               	movf	??___flmul+1,w
  2751  0110  1103               	clrz
  2752  0111  1803               	skipnc
  2753  0112  3E01               	addlw	1
  2754  0113  1903               	skipnz
  2755  0114  2916               	goto	u1671
  2756  0115  07C3               	addwf	___flmul@prod+1,f
  2757  0116                     u1671:
  2758  0116  0838               	movf	??___flmul+2,w
  2759  0117  1103               	clrz
  2760  0118  1803               	skipnc
  2761  0119  3E01               	addlw	1
  2762  011A  1903               	skipnz
  2763  011B  291D               	goto	u1672
  2764  011C  07C4               	addwf	___flmul@prod+2,f
  2765  011D                     u1672:
  2766  011D  0839               	movf	??___flmul+3,w
  2767  011E  1103               	clrz
  2768  011F  1803               	skipnc
  2769  0120  3E01               	addlw	1
  2770  0121  1903               	skipnz
  2771  0122  2924               	goto	u1673
  2772  0123  07C5               	addwf	___flmul@prod+3,f
  2773  0124                     u1673:
  2774  0124  0830               	movf	___flmul@b+2,w
  2775  0125  00B6               	movwf	??___flmul
  2776  0126  0836               	movf	??___flmul,w
  2777  0127  00A0               	movwf	__Umul8_16@multiplicand
  2778  0128  0832               	movf	___flmul@a,w
  2779  0129  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  2780  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2781  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0130  0821               	movf	?__Umul8_16+1,w
  2783  0131  00C7               	movwf	___flmul@temp+1
  2784  0132  0820               	movf	?__Umul8_16,w
  2785  0133  00C6               	movwf	___flmul@temp
  2786  0134                     l1710:
  2787  0134  0846               	movf	___flmul@temp,w
  2788  0135  00B6               	movwf	??___flmul
  2789  0136  01B7               	clrf	??___flmul+1
  2790  0137  01B8               	clrf	??___flmul+2
  2791  0138  01B9               	clrf	??___flmul+3
  2792  0139  0836               	movf	??___flmul,w
  2793  013A  07BC               	addwf	___flmul@grs,f
  2794  013B  0837               	movf	??___flmul+1,w
  2795  013C  1103               	clrz
  2796  013D  1803               	skipnc
  2797  013E  3E01               	addlw	1
  2798  013F  1903               	skipnz
  2799  0140  2942               	goto	u1681
  2800  0141  07BD               	addwf	___flmul@grs+1,f
  2801  0142                     u1681:
  2802  0142  0838               	movf	??___flmul+2,w
  2803  0143  1103               	clrz
  2804  0144  1803               	skipnc
  2805  0145  3E01               	addlw	1
  2806  0146  1903               	skipnz
  2807  0147  2949               	goto	u1682
  2808  0148  07BE               	addwf	___flmul@grs+2,f
  2809  0149                     u1682:
  2810  0149  0839               	movf	??___flmul+3,w
  2811  014A  1103               	clrz
  2812  014B  1803               	skipnc
  2813  014C  3E01               	addlw	1
  2814  014D  1903               	skipnz
  2815  014E  2950               	goto	u1683
  2816  014F  07BF               	addwf	___flmul@grs+3,f
  2817  0150                     u1683:
  2818  0150                     l1712:
  2819  0150  0847               	movf	___flmul@temp+1,w
  2820  0151  00B6               	movwf	??___flmul
  2821  0152  01B7               	clrf	??___flmul+1
  2822  0153  01B8               	clrf	??___flmul+2
  2823  0154  01B9               	clrf	??___flmul+3
  2824  0155  0836               	movf	??___flmul,w
  2825  0156  07C2               	addwf	___flmul@prod,f
  2826  0157  0837               	movf	??___flmul+1,w
  2827  0158  1103               	clrz
  2828  0159  1803               	skipnc
  2829  015A  3E01               	addlw	1
  2830  015B  1903               	skipnz
  2831  015C  295E               	goto	u1691
  2832  015D  07C3               	addwf	___flmul@prod+1,f
  2833  015E                     u1691:
  2834  015E  0838               	movf	??___flmul+2,w
  2835  015F  1103               	clrz
  2836  0160  1803               	skipnc
  2837  0161  3E01               	addlw	1
  2838  0162  1903               	skipnz
  2839  0163  2965               	goto	u1692
  2840  0164  07C4               	addwf	___flmul@prod+2,f
  2841  0165                     u1692:
  2842  0165  0839               	movf	??___flmul+3,w
  2843  0166  1103               	clrz
  2844  0167  1803               	skipnc
  2845  0168  3E01               	addlw	1
  2846  0169  1903               	skipnz
  2847  016A  296C               	goto	u1693
  2848  016B  07C5               	addwf	___flmul@prod+3,f
  2849  016C                     u1693:
  2850  016C                     l1714:
  2851  016C  3008               	movlw	8
  2852  016D  00B6               	movwf	??___flmul
  2853  016E                     u1705:
  2854  016E  1003               	clrc
  2855  016F  0DBC               	rlf	___flmul@grs,f
  2856  0170  0DBD               	rlf	___flmul@grs+1,f
  2857  0171  0DBE               	rlf	___flmul@grs+2,f
  2858  0172  0DBF               	rlf	___flmul@grs+3,f
  2859  0173  0BB6               	decfsz	??___flmul,f
  2860  0174  296E               	goto	u1705
  2861  0175                     l1716:
  2862  0175  082F               	movf	___flmul@b+1,w
  2863  0176  00B6               	movwf	??___flmul
  2864  0177  0836               	movf	??___flmul,w
  2865  0178  00A0               	movwf	__Umul8_16@multiplicand
  2866  0179  0832               	movf	___flmul@a,w
  2867  017A  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  2868  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0180  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0181  0821               	movf	?__Umul8_16+1,w
  2871  0182  00C7               	movwf	___flmul@temp+1
  2872  0183  0820               	movf	?__Umul8_16,w
  2873  0184  00C6               	movwf	___flmul@temp
  2874  0185                     l1718:
  2875  0185  0846               	movf	___flmul@temp,w
  2876  0186  00B6               	movwf	??___flmul
  2877  0187  0847               	movf	___flmul@temp+1,w
  2878  0188  00B7               	movwf	??___flmul+1
  2879  0189  01B8               	clrf	??___flmul+2
  2880  018A  01B9               	clrf	??___flmul+3
  2881  018B  0836               	movf	??___flmul,w
  2882  018C  07BC               	addwf	___flmul@grs,f
  2883  018D  0837               	movf	??___flmul+1,w
  2884  018E  1103               	clrz
  2885  018F  1803               	skipnc
  2886  0190  3E01               	addlw	1
  2887  0191  1903               	skipnz
  2888  0192  2994               	goto	u1711
  2889  0193  07BD               	addwf	___flmul@grs+1,f
  2890  0194                     u1711:
  2891  0194  0838               	movf	??___flmul+2,w
  2892  0195  1103               	clrz
  2893  0196  1803               	skipnc
  2894  0197  3E01               	addlw	1
  2895  0198  1903               	skipnz
  2896  0199  299B               	goto	u1712
  2897  019A  07BE               	addwf	___flmul@grs+2,f
  2898  019B                     u1712:
  2899  019B  0839               	movf	??___flmul+3,w
  2900  019C  1103               	clrz
  2901  019D  1803               	skipnc
  2902  019E  3E01               	addlw	1
  2903  019F  1903               	skipnz
  2904  01A0  29A2               	goto	u1713
  2905  01A1  07BF               	addwf	___flmul@grs+3,f
  2906  01A2                     u1713:
  2907  01A2                     l1720:
  2908  01A2  082E               	movf	___flmul@b,w
  2909  01A3  00B6               	movwf	??___flmul
  2910  01A4  0836               	movf	??___flmul,w
  2911  01A5  00A0               	movwf	__Umul8_16@multiplicand
  2912  01A6  0833               	movf	___flmul@a+1,w
  2913  01A7  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  2914  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2915  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2916  01AE  0821               	movf	?__Umul8_16+1,w
  2917  01AF  00C7               	movwf	___flmul@temp+1
  2918  01B0  0820               	movf	?__Umul8_16,w
  2919  01B1  00C6               	movwf	___flmul@temp
  2920  01B2                     l1722:
  2921  01B2  0846               	movf	___flmul@temp,w
  2922  01B3  00B6               	movwf	??___flmul
  2923  01B4  0847               	movf	___flmul@temp+1,w
  2924  01B5  00B7               	movwf	??___flmul+1
  2925  01B6  01B8               	clrf	??___flmul+2
  2926  01B7  01B9               	clrf	??___flmul+3
  2927  01B8  0836               	movf	??___flmul,w
  2928  01B9  07BC               	addwf	___flmul@grs,f
  2929  01BA  0837               	movf	??___flmul+1,w
  2930  01BB  1103               	clrz
  2931  01BC  1803               	skipnc
  2932  01BD  3E01               	addlw	1
  2933  01BE  1903               	skipnz
  2934  01BF  29C1               	goto	u1721
  2935  01C0  07BD               	addwf	___flmul@grs+1,f
  2936  01C1                     u1721:
  2937  01C1  0838               	movf	??___flmul+2,w
  2938  01C2  1103               	clrz
  2939  01C3  1803               	skipnc
  2940  01C4  3E01               	addlw	1
  2941  01C5  1903               	skipnz
  2942  01C6  29C8               	goto	u1722
  2943  01C7  07BE               	addwf	___flmul@grs+2,f
  2944  01C8                     u1722:
  2945  01C8  0839               	movf	??___flmul+3,w
  2946  01C9  1103               	clrz
  2947  01CA  1803               	skipnc
  2948  01CB  3E01               	addlw	1
  2949  01CC  1903               	skipnz
  2950  01CD  29CF               	goto	u1723
  2951  01CE  07BF               	addwf	___flmul@grs+3,f
  2952  01CF                     u1723:
  2953  01CF                     l1724:
  2954  01CF  3008               	movlw	8
  2955  01D0  00B6               	movwf	??___flmul
  2956  01D1                     u1735:
  2957  01D1  1003               	clrc
  2958  01D2  0DBC               	rlf	___flmul@grs,f
  2959  01D3  0DBD               	rlf	___flmul@grs+1,f
  2960  01D4  0DBE               	rlf	___flmul@grs+2,f
  2961  01D5  0DBF               	rlf	___flmul@grs+3,f
  2962  01D6  0BB6               	decfsz	??___flmul,f
  2963  01D7  29D1               	goto	u1735
  2964  01D8  082E               	movf	___flmul@b,w
  2965  01D9  00B6               	movwf	??___flmul
  2966  01DA  0836               	movf	??___flmul,w
  2967  01DB  00A0               	movwf	__Umul8_16@multiplicand
  2968  01DC  0832               	movf	___flmul@a,w
  2969  01DD  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  2970  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2971  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2972  01E4  0821               	movf	?__Umul8_16+1,w
  2973  01E5  00C7               	movwf	___flmul@temp+1
  2974  01E6  0820               	movf	?__Umul8_16,w
  2975  01E7  00C6               	movwf	___flmul@temp
  2976  01E8                     l1726:
  2977  01E8  0846               	movf	___flmul@temp,w
  2978  01E9  00B6               	movwf	??___flmul
  2979  01EA  0847               	movf	___flmul@temp+1,w
  2980  01EB  00B7               	movwf	??___flmul+1
  2981  01EC  01B8               	clrf	??___flmul+2
  2982  01ED  01B9               	clrf	??___flmul+3
  2983  01EE  0836               	movf	??___flmul,w
  2984  01EF  07BC               	addwf	___flmul@grs,f
  2985  01F0  0837               	movf	??___flmul+1,w
  2986  01F1  1103               	clrz
  2987  01F2  1803               	skipnc
  2988  01F3  3E01               	addlw	1
  2989  01F4  1903               	skipnz
  2990  01F5  29F7               	goto	u1741
  2991  01F6  07BD               	addwf	___flmul@grs+1,f
  2992  01F7                     u1741:
  2993  01F7  0838               	movf	??___flmul+2,w
  2994  01F8  1103               	clrz
  2995  01F9  1803               	skipnc
  2996  01FA  3E01               	addlw	1
  2997  01FB  1903               	skipnz
  2998  01FC  29FE               	goto	u1742
  2999  01FD  07BE               	addwf	___flmul@grs+2,f
  3000  01FE                     u1742:
  3001  01FE  0839               	movf	??___flmul+3,w
  3002  01FF  1103               	clrz
  3003  0200  1803               	skipnc
  3004  0201  3E01               	addlw	1
  3005  0202  1903               	skipnz
  3006  0203  2A05               	goto	u1743
  3007  0204  07BF               	addwf	___flmul@grs+3,f
  3008  0205                     u1743:
  3009  0205                     l1728:
  3010  0205  082F               	movf	___flmul@b+1,w
  3011  0206  00B6               	movwf	??___flmul
  3012  0207  0836               	movf	??___flmul,w
  3013  0208  00A0               	movwf	__Umul8_16@multiplicand
  3014  0209  0834               	movf	___flmul@a+2,w
  3015  020A  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  3016  020F  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0210  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0211  0821               	movf	?__Umul8_16+1,w
  3019  0212  00C7               	movwf	___flmul@temp+1
  3020  0213  0820               	movf	?__Umul8_16,w
  3021  0214  00C6               	movwf	___flmul@temp
  3022  0215  0846               	movf	___flmul@temp,w
  3023  0216  00B6               	movwf	??___flmul
  3024  0217  0847               	movf	___flmul@temp+1,w
  3025  0218  00B7               	movwf	??___flmul+1
  3026  0219  01B8               	clrf	??___flmul+2
  3027  021A  01B9               	clrf	??___flmul+3
  3028  021B  0836               	movf	??___flmul,w
  3029  021C  07C2               	addwf	___flmul@prod,f
  3030  021D  0837               	movf	??___flmul+1,w
  3031  021E  1103               	clrz
  3032  021F  1803               	skipnc
  3033  0220  3E01               	addlw	1
  3034  0221  1903               	skipnz
  3035  0222  2A24               	goto	u1751
  3036  0223  07C3               	addwf	___flmul@prod+1,f
  3037  0224                     u1751:
  3038  0224  0838               	movf	??___flmul+2,w
  3039  0225  1103               	clrz
  3040  0226  1803               	skipnc
  3041  0227  3E01               	addlw	1
  3042  0228  1903               	skipnz
  3043  0229  2A2B               	goto	u1752
  3044  022A  07C4               	addwf	___flmul@prod+2,f
  3045  022B                     u1752:
  3046  022B  0839               	movf	??___flmul+3,w
  3047  022C  1103               	clrz
  3048  022D  1803               	skipnc
  3049  022E  3E01               	addlw	1
  3050  022F  1903               	skipnz
  3051  0230  2A32               	goto	u1753
  3052  0231  07C5               	addwf	___flmul@prod+3,f
  3053  0232                     u1753:
  3054  0232                     l1730:
  3055  0232  0830               	movf	___flmul@b+2,w
  3056  0233  00B6               	movwf	??___flmul
  3057  0234  0836               	movf	??___flmul,w
  3058  0235  00A0               	movwf	__Umul8_16@multiplicand
  3059  0236  0833               	movf	___flmul@a+1,w
  3060  0237  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  3061  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3062  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3063  023E  0821               	movf	?__Umul8_16+1,w
  3064  023F  00C7               	movwf	___flmul@temp+1
  3065  0240  0820               	movf	?__Umul8_16,w
  3066  0241  00C6               	movwf	___flmul@temp
  3067  0242                     l1732:
  3068  0242  0846               	movf	___flmul@temp,w
  3069  0243  00B6               	movwf	??___flmul
  3070  0244  0847               	movf	___flmul@temp+1,w
  3071  0245  00B7               	movwf	??___flmul+1
  3072  0246  01B8               	clrf	??___flmul+2
  3073  0247  01B9               	clrf	??___flmul+3
  3074  0248  0836               	movf	??___flmul,w
  3075  0249  07C2               	addwf	___flmul@prod,f
  3076  024A  0837               	movf	??___flmul+1,w
  3077  024B  1103               	clrz
  3078  024C  1803               	skipnc
  3079  024D  3E01               	addlw	1
  3080  024E  1903               	skipnz
  3081  024F  2A51               	goto	u1761
  3082  0250  07C3               	addwf	___flmul@prod+1,f
  3083  0251                     u1761:
  3084  0251  0838               	movf	??___flmul+2,w
  3085  0252  1103               	clrz
  3086  0253  1803               	skipnc
  3087  0254  3E01               	addlw	1
  3088  0255  1903               	skipnz
  3089  0256  2A58               	goto	u1762
  3090  0257  07C4               	addwf	___flmul@prod+2,f
  3091  0258                     u1762:
  3092  0258  0839               	movf	??___flmul+3,w
  3093  0259  1103               	clrz
  3094  025A  1803               	skipnc
  3095  025B  3E01               	addlw	1
  3096  025C  1903               	skipnz
  3097  025D  2A5F               	goto	u1763
  3098  025E  07C5               	addwf	___flmul@prod+3,f
  3099  025F                     u1763:
  3100  025F  0830               	movf	___flmul@b+2,w
  3101  0260  00B6               	movwf	??___flmul
  3102  0261  0836               	movf	??___flmul,w
  3103  0262  00A0               	movwf	__Umul8_16@multiplicand
  3104  0263  0834               	movf	___flmul@a+2,w
  3105  0264  120A  118A  27CB  120A  118A  	fcall	__Umul8_16
  3106  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3107  026A  1303               	bcf	3,6	;RP1=0, select bank0
  3108  026B  0821               	movf	?__Umul8_16+1,w
  3109  026C  00C7               	movwf	___flmul@temp+1
  3110  026D  0820               	movf	?__Umul8_16,w
  3111  026E  00C6               	movwf	___flmul@temp
  3112  026F                     l1734:
  3113  026F  0846               	movf	___flmul@temp,w
  3114  0270  00B6               	movwf	??___flmul
  3115  0271  0847               	movf	___flmul@temp+1,w
  3116  0272  00B7               	movwf	??___flmul+1
  3117  0273  01B8               	clrf	??___flmul+2
  3118  0274  01B9               	clrf	??___flmul+3
  3119  0275  3008               	movlw	8
  3120  0276                     u1775:
  3121  0276  1003               	clrc
  3122  0277  0DB6               	rlf	??___flmul,f
  3123  0278  0DB7               	rlf	??___flmul+1,f
  3124  0279  0DB8               	rlf	??___flmul+2,f
  3125  027A  0DB9               	rlf	??___flmul+3,f
  3126  027B                     u1770:
  3127  027B  3EFF               	addlw	-1
  3128  027C  1D03               	skipz
  3129  027D  2A76               	goto	u1775
  3130  027E  0836               	movf	??___flmul,w
  3131  027F  07C2               	addwf	___flmul@prod,f
  3132  0280  0837               	movf	??___flmul+1,w
  3133  0281  1103               	clrz
  3134  0282  1803               	skipnc
  3135  0283  3E01               	addlw	1
  3136  0284  1903               	skipnz
  3137  0285  2A87               	goto	u1781
  3138  0286  07C3               	addwf	___flmul@prod+1,f
  3139  0287                     u1781:
  3140  0287  0838               	movf	??___flmul+2,w
  3141  0288  1103               	clrz
  3142  0289  1803               	skipnc
  3143  028A  3E01               	addlw	1
  3144  028B  1903               	skipnz
  3145  028C  2A8E               	goto	u1782
  3146  028D  07C4               	addwf	___flmul@prod+2,f
  3147  028E                     u1782:
  3148  028E  0839               	movf	??___flmul+3,w
  3149  028F  1103               	clrz
  3150  0290  1803               	skipnc
  3151  0291  3E01               	addlw	1
  3152  0292  1903               	skipnz
  3153  0293  2A95               	goto	u1783
  3154  0294  07C5               	addwf	___flmul@prod+3,f
  3155  0295                     u1783:
  3156  0295                     l1736:
  3157  0295  083C               	movf	___flmul@grs,w
  3158  0296  00B6               	movwf	??___flmul
  3159  0297  083D               	movf	___flmul@grs+1,w
  3160  0298  00B7               	movwf	??___flmul+1
  3161  0299  083E               	movf	___flmul@grs+2,w
  3162  029A  00B8               	movwf	??___flmul+2
  3163  029B  083F               	movf	___flmul@grs+3,w
  3164  029C  00B9               	movwf	??___flmul+3
  3165  029D  3018               	movlw	24
  3166  029E                     u1795:
  3167  029E  1003               	clrc
  3168  029F  0CB9               	rrf	??___flmul+3,f
  3169  02A0  0CB8               	rrf	??___flmul+2,f
  3170  02A1  0CB7               	rrf	??___flmul+1,f
  3171  02A2  0CB6               	rrf	??___flmul,f
  3172  02A3                     u1790:
  3173  02A3  3EFF               	addlw	-1
  3174  02A4  1D03               	skipz
  3175  02A5  2A9E               	goto	u1795
  3176  02A6  0836               	movf	??___flmul,w
  3177  02A7  07C2               	addwf	___flmul@prod,f
  3178  02A8  0837               	movf	??___flmul+1,w
  3179  02A9  1103               	clrz
  3180  02AA  1803               	skipnc
  3181  02AB  3E01               	addlw	1
  3182  02AC  1903               	skipnz
  3183  02AD  2AAF               	goto	u1801
  3184  02AE  07C3               	addwf	___flmul@prod+1,f
  3185  02AF                     u1801:
  3186  02AF  0838               	movf	??___flmul+2,w
  3187  02B0  1103               	clrz
  3188  02B1  1803               	skipnc
  3189  02B2  3E01               	addlw	1
  3190  02B3  1903               	skipnz
  3191  02B4  2AB6               	goto	u1802
  3192  02B5  07C4               	addwf	___flmul@prod+2,f
  3193  02B6                     u1802:
  3194  02B6  0839               	movf	??___flmul+3,w
  3195  02B7  1103               	clrz
  3196  02B8  1803               	skipnc
  3197  02B9  3E01               	addlw	1
  3198  02BA  1903               	skipnz
  3199  02BB  2ABD               	goto	u1803
  3200  02BC  07C5               	addwf	___flmul@prod+3,f
  3201  02BD                     u1803:
  3202  02BD                     l1738:
  3203  02BD  3008               	movlw	8
  3204  02BE  00B6               	movwf	??___flmul
  3205  02BF                     u1815:
  3206  02BF  1003               	clrc
  3207  02C0  0DBC               	rlf	___flmul@grs,f
  3208  02C1  0DBD               	rlf	___flmul@grs+1,f
  3209  02C2  0DBE               	rlf	___flmul@grs+2,f
  3210  02C3  0DBF               	rlf	___flmul@grs+3,f
  3211  02C4  0BB6               	decfsz	??___flmul,f
  3212  02C5  2ABF               	goto	u1815
  3213  02C6                     l1740:
  3214  02C6  0841               	movf	___flmul@bexp,w
  3215  02C7  0740               	addwf	___flmul@aexp,w
  3216  02C8  00B6               	movwf	??___flmul
  3217  02C9  01B7               	clrf	??___flmul+1
  3218  02CA  0DB7               	rlf	??___flmul+1,f
  3219  02CB  0836               	movf	??___flmul,w
  3220  02CC  3E82               	addlw	130
  3221  02CD  00C6               	movwf	___flmul@temp
  3222  02CE  0837               	movf	??___flmul+1,w
  3223  02CF  1803               	skipnc
  3224  02D0  3E01               	addlw	1
  3225  02D1  3EFF               	addlw	255
  3226  02D2  00C7               	movwf	___flmul@temp+1
  3227  02D3  2AF1               	goto	l1752
  3228  02D4                     l1742:
  3229  02D4  3001               	movlw	1
  3230  02D5  00B6               	movwf	??___flmul
  3231  02D6                     u1825:
  3232  02D6  1003               	clrc
  3233  02D7  0DC2               	rlf	___flmul@prod,f
  3234  02D8  0DC3               	rlf	___flmul@prod+1,f
  3235  02D9  0DC4               	rlf	___flmul@prod+2,f
  3236  02DA  0DC5               	rlf	___flmul@prod+3,f
  3237  02DB  0BB6               	decfsz	??___flmul,f
  3238  02DC  2AD6               	goto	u1825
  3239  02DD                     l1744:
  3240  02DD  1FBF               	btfss	___flmul@grs+3,7
  3241  02DE  2AE0               	goto	u1831
  3242  02DF  2AE1               	goto	u1830
  3243  02E0                     u1831:
  3244  02E0  2AE2               	goto	l1748
  3245  02E1                     u1830:
  3246  02E1                     l1746:
  3247  02E1  1442               	bsf	___flmul@prod,0
  3248  02E2                     l1748:
  3249  02E2  3001               	movlw	1
  3250  02E3  00B6               	movwf	??___flmul
  3251  02E4                     u1845:
  3252  02E4  1003               	clrc
  3253  02E5  0DBC               	rlf	___flmul@grs,f
  3254  02E6  0DBD               	rlf	___flmul@grs+1,f
  3255  02E7  0DBE               	rlf	___flmul@grs+2,f
  3256  02E8  0DBF               	rlf	___flmul@grs+3,f
  3257  02E9  0BB6               	decfsz	??___flmul,f
  3258  02EA  2AE4               	goto	u1845
  3259  02EB                     l1750:
  3260  02EB  30FF               	movlw	255
  3261  02EC  07C6               	addwf	___flmul@temp,f
  3262  02ED  1803               	skipnc
  3263  02EE  0AC7               	incf	___flmul@temp+1,f
  3264  02EF  30FF               	movlw	255
  3265  02F0  07C7               	addwf	___flmul@temp+1,f
  3266  02F1                     l1752:
  3267  02F1  1FC4               	btfss	___flmul@prod+2,7
  3268  02F2  2AF4               	goto	u1851
  3269  02F3  2AF5               	goto	u1850
  3270  02F4                     u1851:
  3271  02F4  2AD4               	goto	l1742
  3272  02F5                     u1850:
  3273  02F5                     l1754:
  3274  02F5  01C0               	clrf	___flmul@aexp
  3275  02F6                     l1756:
  3276  02F6  1FBF               	btfss	___flmul@grs+3,7
  3277  02F7  2AF9               	goto	u1861
  3278  02F8  2AFA               	goto	u1860
  3279  02F9                     u1861:
  3280  02F9  2B16               	goto	l1764
  3281  02FA                     u1860:
  3282  02FA                     l1758:
  3283  02FA  30FF               	movlw	255
  3284  02FB  053C               	andwf	___flmul@grs,w
  3285  02FC  00B6               	movwf	??___flmul
  3286  02FD  30FF               	movlw	255
  3287  02FE  053D               	andwf	___flmul@grs+1,w
  3288  02FF  00B7               	movwf	??___flmul+1
  3289  0300  30FF               	movlw	255
  3290  0301  053E               	andwf	___flmul@grs+2,w
  3291  0302  00B8               	movwf	??___flmul+2
  3292  0303  307F               	movlw	127
  3293  0304  053F               	andwf	___flmul@grs+3,w
  3294  0305  00B9               	movwf	??___flmul+3
  3295  0306  0839               	movf	??___flmul+3,w
  3296  0307  0438               	iorwf	??___flmul+2,w
  3297  0308  0437               	iorwf	??___flmul+1,w
  3298  0309  0436               	iorwf	??___flmul,w
  3299  030A  1903               	skipnz
  3300  030B  2B0D               	goto	u1871
  3301  030C  2B0E               	goto	u1870
  3302  030D                     u1871:
  3303  030D  2B11               	goto	l689
  3304  030E                     u1870:
  3305  030E                     l1760:
  3306  030E  01C0               	clrf	___flmul@aexp
  3307  030F  0AC0               	incf	___flmul@aexp,f
  3308  0310  2B16               	goto	l1764
  3309  0311                     l689:
  3310  0311  1C42               	btfss	___flmul@prod,0
  3311  0312  2B14               	goto	u1881
  3312  0313  2B15               	goto	u1880
  3313  0314                     u1881:
  3314  0314  2B16               	goto	l1764
  3315  0315                     u1880:
  3316  0315  2B0E               	goto	l1760
  3317  0316                     l1764:
  3318  0316  0840               	movf	___flmul@aexp,w
  3319  0317  1903               	btfsc	3,2
  3320  0318  2B1A               	goto	u1891
  3321  0319  2B1B               	goto	u1890
  3322  031A                     u1891:
  3323  031A  2B4C               	goto	l1774
  3324  031B                     u1890:
  3325  031B                     l1766:
  3326  031B  3001               	movlw	1
  3327  031C  07C2               	addwf	___flmul@prod,f
  3328  031D  3000               	movlw	0
  3329  031E  1803               	skipnc
  3330  031F  3001               	movlw	1
  3331  0320  07C3               	addwf	___flmul@prod+1,f
  3332  0321  3000               	movlw	0
  3333  0322  1803               	skipnc
  3334  0323  3001               	movlw	1
  3335  0324  07C4               	addwf	___flmul@prod+2,f
  3336  0325  3000               	movlw	0
  3337  0326  1803               	skipnc
  3338  0327  3001               	movlw	1
  3339  0328  07C5               	addwf	___flmul@prod+3,f
  3340  0329                     l1768:
  3341  0329  1C45               	btfss	___flmul@prod+3,0
  3342  032A  2B2C               	goto	u1901
  3343  032B  2B2D               	goto	u1900
  3344  032C                     u1901:
  3345  032C  2B4C               	goto	l1774
  3346  032D                     u1900:
  3347  032D                     l1770:
  3348  032D  0842               	movf	___flmul@prod,w
  3349  032E  00B6               	movwf	??___flmul
  3350  032F  0843               	movf	___flmul@prod+1,w
  3351  0330  00B7               	movwf	??___flmul+1
  3352  0331  0844               	movf	___flmul@prod+2,w
  3353  0332  00B8               	movwf	??___flmul+2
  3354  0333  0845               	movf	___flmul@prod+3,w
  3355  0334  00B9               	movwf	??___flmul+3
  3356  0335  3001               	movlw	1
  3357  0336  00BA               	movwf	??___flmul+4
  3358  0337                     u1915:
  3359  0337  0D39               	rlf	??___flmul+3,w
  3360  0338  0CB9               	rrf	??___flmul+3,f
  3361  0339  0CB8               	rrf	??___flmul+2,f
  3362  033A  0CB7               	rrf	??___flmul+1,f
  3363  033B  0CB6               	rrf	??___flmul,f
  3364  033C                     u1910:
  3365  033C  0BBA               	decfsz	??___flmul+4,f
  3366  033D  2B37               	goto	u1915
  3367  033E  0839               	movf	??___flmul+3,w
  3368  033F  00C5               	movwf	___flmul@prod+3
  3369  0340  0838               	movf	??___flmul+2,w
  3370  0341  00C4               	movwf	___flmul@prod+2
  3371  0342  0837               	movf	??___flmul+1,w
  3372  0343  00C3               	movwf	___flmul@prod+1
  3373  0344  0836               	movf	??___flmul,w
  3374  0345  00C2               	movwf	___flmul@prod
  3375  0346                     l1772:
  3376  0346  3001               	movlw	1
  3377  0347  07C6               	addwf	___flmul@temp,f
  3378  0348  1803               	skipnc
  3379  0349  0AC7               	incf	___flmul@temp+1,f
  3380  034A  3000               	movlw	0
  3381  034B  07C7               	addwf	___flmul@temp+1,f
  3382  034C                     l1774:
  3383  034C  0847               	movf	___flmul@temp+1,w
  3384  034D  3A80               	xorlw	128
  3385  034E  00FF               	movwf	btemp+1
  3386  034F  3080               	movlw	128
  3387  0350  027F               	subwf	btemp+1,w
  3388  0351  1D03               	skipz
  3389  0352  2B55               	goto	u1925
  3390  0353  30FF               	movlw	255
  3391  0354  0246               	subwf	___flmul@temp,w
  3392  0355                     u1925:
  3393  0355  1C03               	skipc
  3394  0356  2B58               	goto	u1921
  3395  0357  2B59               	goto	u1920
  3396  0358                     u1921:
  3397  0358  2B64               	goto	l1778
  3398  0359                     u1920:
  3399  0359                     l1776:
  3400  0359  307F               	movlw	127
  3401  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3402  035B  1303               	bcf	3,6	;RP1=0, select bank0
  3403  035C  00C5               	movwf	___flmul@prod+3
  3404  035D  3080               	movlw	128
  3405  035E  00C4               	movwf	___flmul@prod+2
  3406  035F  3000               	movlw	0
  3407  0360  00C3               	movwf	___flmul@prod+1
  3408  0361  3000               	movlw	0
  3409  0362  00C2               	movwf	___flmul@prod
  3410  0363  2B99               	goto	l695
  3411  0364                     l1778:
  3412  0364  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0365  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0366  0847               	movf	___flmul@temp+1,w
  3415  0367  3A80               	xorlw	128
  3416  0368  00FF               	movwf	btemp+1
  3417  0369  3080               	movlw	128
  3418  036A  027F               	subwf	btemp+1,w
  3419  036B  1D03               	skipz
  3420  036C  2B6F               	goto	u1935
  3421  036D  3001               	movlw	1
  3422  036E  0246               	subwf	___flmul@temp,w
  3423  036F                     u1935:
  3424  036F  1803               	skipnc
  3425  0370  2B72               	goto	u1931
  3426  0371  2B73               	goto	u1930
  3427  0372                     u1931:
  3428  0372  2B7F               	goto	l1784
  3429  0373                     u1930:
  3430  0373                     l1780:
  3431  0373  3000               	movlw	0
  3432  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0376  00C5               	movwf	___flmul@prod+3
  3435  0377  3000               	movlw	0
  3436  0378  00C4               	movwf	___flmul@prod+2
  3437  0379  3000               	movlw	0
  3438  037A  00C3               	movwf	___flmul@prod+1
  3439  037B  3000               	movlw	0
  3440  037C  00C2               	movwf	___flmul@prod
  3441  037D                     l1782:
  3442  037D  01BB               	clrf	___flmul@sign
  3443  037E  2B99               	goto	l695
  3444  037F                     l1784:
  3445  037F  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0380  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0381  0846               	movf	___flmul@temp,w
  3448  0382  00B6               	movwf	??___flmul
  3449  0383  0836               	movf	??___flmul,w
  3450  0384  00C1               	movwf	___flmul@bexp
  3451  0385  30FF               	movlw	255
  3452  0386  05C2               	andwf	___flmul@prod,f
  3453  0387  30FF               	movlw	255
  3454  0388  05C3               	andwf	___flmul@prod+1,f
  3455  0389  307F               	movlw	127
  3456  038A  05C4               	andwf	___flmul@prod+2,f
  3457  038B  3000               	movlw	0
  3458  038C  05C5               	andwf	___flmul@prod+3,f
  3459  038D                     l1786:
  3460  038D  1C41               	btfss	___flmul@bexp,0
  3461  038E  2B90               	goto	u1941
  3462  038F  2B91               	goto	u1940
  3463  0390                     u1941:
  3464  0390  2B92               	goto	l1790
  3465  0391                     u1940:
  3466  0391                     l1788:
  3467  0391  17C4               	bsf	___flmul@prod+2,7
  3468  0392                     l1790:
  3469  0392  0841               	movf	___flmul@bexp,w
  3470  0393  00B6               	movwf	??___flmul
  3471  0394  1003               	clrc
  3472  0395  0C36               	rrf	??___flmul,w
  3473  0396  00B7               	movwf	??___flmul+1
  3474  0397  0837               	movf	??___flmul+1,w
  3475  0398  00C5               	movwf	___flmul@prod+3
  3476  0399                     l695:
  3477  0399  083B               	movf	___flmul@sign,w
  3478  039A  00B6               	movwf	??___flmul
  3479  039B  0836               	movf	??___flmul,w
  3480  039C  04C5               	iorwf	___flmul@prod+3,f
  3481  039D                     l1792:
  3482  039D  0845               	movf	___flmul@prod+3,w
  3483  039E  00B1               	movwf	?___flmul+3
  3484  039F  0844               	movf	___flmul@prod+2,w
  3485  03A0  00B0               	movwf	?___flmul+2
  3486  03A1  0843               	movf	___flmul@prod+1,w
  3487  03A2  00AF               	movwf	?___flmul+1
  3488  03A3  0842               	movf	___flmul@prod,w
  3489  03A4  00AE               	movwf	?___flmul
  3490  03A5                     l683:
  3491  03A5  0008               	return
  3492  03A6                     __end_of___flmul:
  3493                           
  3494                           	psect	text9
  3495  07CB                     __ptext9:	
  3496 ;; *************** function __Umul8_16 *****************
  3497 ;; Defined at:
  3498 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  multiplier      1    wreg     unsigned char 
  3501 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3504 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  3505 ;;  product         2    4[BANK0 ] unsigned int 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  2    0[BANK0 ] unsigned int 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       2       0       0       0
  3516 ;;      Locals:         0       5       0       0       0
  3517 ;;      Temps:          0       2       0       0       0
  3518 ;;      Totals:         0       9       0       0       0
  3519 ;;Total ram usage:        9 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    2
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		___flmul
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function __Umul8_16
  3531  07CB                     __Umul8_16:
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3535                           ;__Umul8_16@multiplier stored from wreg
  3536  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3537  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3538  07CD  00A8               	movwf	__Umul8_16@multiplier
  3539  07CE                     l1476:
  3540  07CE  01A4               	clrf	__Umul8_16@product
  3541  07CF  01A5               	clrf	__Umul8_16@product+1
  3542  07D0                     l1478:
  3543  07D0  0820               	movf	__Umul8_16@multiplicand,w
  3544  07D1  00A2               	movwf	??__Umul8_16
  3545  07D2  01A3               	clrf	??__Umul8_16+1
  3546  07D3  0822               	movf	??__Umul8_16,w
  3547  07D4  00A6               	movwf	__Umul8_16@word_mpld
  3548  07D5  0823               	movf	??__Umul8_16+1,w
  3549  07D6  00A7               	movwf	__Umul8_16@word_mpld+1
  3550  07D7                     l1480:
  3551  07D7  1C28               	btfss	__Umul8_16@multiplier,0
  3552  07D8  2FDA               	goto	u1271
  3553  07D9  2FDB               	goto	u1270
  3554  07DA                     u1271:
  3555  07DA  2FE1               	goto	l702
  3556  07DB                     u1270:
  3557  07DB                     l1482:
  3558  07DB  0826               	movf	__Umul8_16@word_mpld,w
  3559  07DC  07A4               	addwf	__Umul8_16@product,f
  3560  07DD  1803               	skipnc
  3561  07DE  0AA5               	incf	__Umul8_16@product+1,f
  3562  07DF  0827               	movf	__Umul8_16@word_mpld+1,w
  3563  07E0  07A5               	addwf	__Umul8_16@product+1,f
  3564  07E1                     l702:
  3565  07E1  3001               	movlw	1
  3566  07E2                     u1285:
  3567  07E2  1003               	clrc
  3568  07E3  0DA6               	rlf	__Umul8_16@word_mpld,f
  3569  07E4  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  3570  07E5  3EFF               	addlw	-1
  3571  07E6  1D03               	skipz
  3572  07E7  2FE2               	goto	u1285
  3573  07E8  1003               	clrc
  3574  07E9  0CA8               	rrf	__Umul8_16@multiplier,f
  3575  07EA                     l1484:
  3576  07EA  0828               	movf	__Umul8_16@multiplier,w
  3577  07EB  1D03               	btfss	3,2
  3578  07EC  2FEE               	goto	u1291
  3579  07ED  2FEF               	goto	u1290
  3580  07EE                     u1291:
  3581  07EE  2FD7               	goto	l1480
  3582  07EF                     u1290:
  3583  07EF                     l1486:
  3584  07EF  0825               	movf	__Umul8_16@product+1,w
  3585  07F0  00A1               	movwf	?__Umul8_16+1
  3586  07F1  0824               	movf	__Umul8_16@product,w
  3587  07F2  00A0               	movwf	?__Umul8_16
  3588  07F3                     l704:
  3589  07F3  0008               	return
  3590  07F4                     __end_of__Umul8_16:
  3591                           
  3592                           	psect	text10
  3593  0E23                     __ptext10:	
  3594 ;; *************** function _ReadADC *****************
  3595 ;; Defined at:
  3596 ;;		line 141 in file "main.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  TempValue       2    2[BANK0 ] unsigned int 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2    0[BANK0 ] unsigned int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3610 ;;      Params:         0       2       0       0       0
  3611 ;;      Locals:         0       2       0       0       0
  3612 ;;      Temps:          0       0       0       0       0
  3613 ;;      Totals:         0       4       0       0       0
  3614 ;;Total ram usage:        4 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    2
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_main
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _ReadADC
  3626  0E23                     _ReadADC:
  3627  0E23                     l2058:	
  3628                           ;incstack = 0
  3629                           ; Regs used in _ReadADC: [wreg+status,2]
  3630                           
  3631  0E23                     l2060:
  3632                           
  3633                           ;main.c: 144:         INTF = 0;;main.c: 144:         INTF = 0;
  3634  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0E25  151F               	bsf	31,2	;volatile
  3637  0E26                     l161:	
  3638                           ;main.c: 145:     };main.c: 145:     }
  3639                           
  3640  0E26  191F               	btfsc	31,2	;volatile
  3641  0E27  2E29               	goto	u2271
  3642  0E28  2E2A               	goto	u2270
  3643  0E29                     u2271:
  3644  0E29  2E26               	goto	l161
  3645  0E2A                     u2270:
  3646  0E2A                     l2062:
  3647                           
  3648                           ;main.c: 146: ;main.c: 146: 
  3649  0E2A  081E               	movf	30,w	;volatile
  3650  0E2B  00A3               	movwf	ReadADC@TempValue+1
  3651  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  3652  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  3653  0E2E  081E               	movf	30,w	;volatile
  3654  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0E31  00A2               	movwf	ReadADC@TempValue
  3657                           
  3658                           ;main.c: 147:     if(TMR1IF == 1);main.c: 147:     if(TMR1IF == 1)
  3659  0E32  0823               	movf	ReadADC@TempValue+1,w
  3660  0E33  00A1               	movwf	?_ReadADC+1
  3661  0E34  0822               	movf	ReadADC@TempValue,w
  3662  0E35  00A0               	movwf	?_ReadADC
  3663  0E36                     l164:
  3664  0E36  0008               	return
  3665  0E37                     __end_of_ReadADC:
  3666                           
  3667                           	psect	text11
  3668  0E9D                     __ptext11:	
  3669 ;; *************** function _Lcd_Write_String *****************
  3670 ;; Defined at:
  3671 ;;		line 95 in file "./lcd.h"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  a               1    wreg     PTR unsigned char 
  3674 ;;		 -> main@str(20), 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  a               1    8[BANK0 ] PTR unsigned char 
  3677 ;;		 -> main@str(20), 
  3678 ;;  i               2    6[BANK0 ] int 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3688 ;;      Params:         0       0       0       0       0
  3689 ;;      Locals:         0       3       0       0       0
  3690 ;;      Temps:          0       1       0       0       0
  3691 ;;      Totals:         0       4       0       0       0
  3692 ;;Total ram usage:        4 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    4
  3695 ;; This function calls:
  3696 ;;		_Lcd_Write_Char
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _Lcd_Write_String
  3704  0E9D                     _Lcd_Write_String:
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3708                           ;Lcd_Write_String@a stored from wreg
  3709  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0E9F  00A8               	movwf	Lcd_Write_String@a
  3712  0EA0                     l2048:
  3713                           
  3714                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 95: void Lcd_Write_String(char *a)
      +                          ;./lcd.h: 96: {;./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h: 97:  int i;;./lcd.h: 98:  f
      +                          or(i=0;a[i]!='\0';i++);./lcd.h: 98:  for(i=0;a[i]!='\0';i++)
  3715  0EA0  01A6               	clrf	Lcd_Write_String@i
  3716  0EA1  01A7               	clrf	Lcd_Write_String@i+1
  3717  0EA2  2EB6               	goto	l2054
  3718  0EA3                     l2050:
  3719                           
  3720                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  3721  0EA3  0826               	movf	Lcd_Write_String@i,w
  3722  0EA4  0728               	addwf	Lcd_Write_String@a,w
  3723  0EA5  00A5               	movwf	??_Lcd_Write_String
  3724  0EA6  0825               	movf	??_Lcd_Write_String,w
  3725  0EA7  0084               	movwf	4
  3726  0EA8  0800               	movf	0,w
  3727  0EA9  120A  158A  2725  120A  158A  	fcall	_Lcd_Write_Char
  3728  0EAE                     l2052:
  3729  0EAE  3001               	movlw	1
  3730  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0EB1  07A6               	addwf	Lcd_Write_String@i,f
  3733  0EB2  1803               	skipnc
  3734  0EB3  0AA7               	incf	Lcd_Write_String@i+1,f
  3735  0EB4  3000               	movlw	0
  3736  0EB5  07A7               	addwf	Lcd_Write_String@i+1,f
  3737  0EB6                     l2054:
  3738  0EB6  0826               	movf	Lcd_Write_String@i,w
  3739  0EB7  0728               	addwf	Lcd_Write_String@a,w
  3740  0EB8  00A5               	movwf	??_Lcd_Write_String
  3741  0EB9  0825               	movf	??_Lcd_Write_String,w
  3742  0EBA  0084               	movwf	4
  3743  0EBB  1383               	bcf	3,7	;select IRP bank0
  3744  0EBC  0800               	movf	0,w
  3745  0EBD  1D03               	btfss	3,2
  3746  0EBE  2EC0               	goto	u2261
  3747  0EBF  2EC1               	goto	u2260
  3748  0EC0                     u2261:
  3749  0EC0  2EA3               	goto	l2050
  3750  0EC1                     u2260:
  3751  0EC1                     l107:
  3752  0EC1  0008               	return
  3753  0EC2                     __end_of_Lcd_Write_String:
  3754                           
  3755                           	psect	text12
  3756  0F25                     __ptext12:	
  3757 ;; *************** function _Lcd_Write_Char *****************
  3758 ;; Defined at:
  3759 ;;		line 79 in file "./lcd.h"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  a               1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  a               1    4[BANK0 ] unsigned char 
  3764 ;;  y               1    3[BANK0 ] unsigned char 
  3765 ;;  temp            1    2[BANK0 ] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, pclath, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3775 ;;      Params:         0       0       0       0       0
  3776 ;;      Locals:         0       3       0       0       0
  3777 ;;      Temps:          0       1       0       0       0
  3778 ;;      Totals:         0       4       0       0       0
  3779 ;;Total ram usage:        4 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    3
  3782 ;; This function calls:
  3783 ;;		_Lcd_Port
  3784 ;; This function is called by:
  3785 ;;		_Lcd_Write_String
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           
  3790                           ;psect for function _Lcd_Write_Char
  3791  0F25                     _Lcd_Write_Char:
  3792                           
  3793                           ;incstack = 0
  3794                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3795                           ;Lcd_Write_Char@a stored from wreg
  3796  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0F27  00A4               	movwf	Lcd_Write_Char@a
  3799  0F28                     l1996:
  3800                           
  3801                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 79: void Lcd_Write_Char(char a);./lcd
      +                          .h: 80: {;./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./lcd.h: 81:    char temp,y;;./lcd
      +                          .h: 82:    temp = a&0x0F;;./lcd.h: 82:    temp = a&0x0F;
  3802  0F28  0824               	movf	Lcd_Write_Char@a,w
  3803  0F29  390F               	andlw	15
  3804  0F2A  00A1               	movwf	??_Lcd_Write_Char
  3805  0F2B  0821               	movf	??_Lcd_Write_Char,w
  3806  0F2C  00A2               	movwf	Lcd_Write_Char@temp
  3807                           
  3808                           ;./lcd.h: 83:    y = a&0xF0;;./lcd.h: 83:    y = a&0xF0;
  3809  0F2D  0824               	movf	Lcd_Write_Char@a,w
  3810  0F2E  39F0               	andlw	240
  3811  0F2F  00A1               	movwf	??_Lcd_Write_Char
  3812  0F30  0821               	movf	??_Lcd_Write_Char,w
  3813  0F31  00A3               	movwf	Lcd_Write_Char@y
  3814  0F32                     l1998:
  3815                           
  3816                           ;./lcd.h: 84:    RD2 = 1;;./lcd.h: 84:    RD2 = 1;
  3817  0F32  1508               	bsf	8,2	;volatile
  3818  0F33                     l2000:
  3819                           
  3820                           ;./lcd.h: 85:    Lcd_Port(y>>4);;./lcd.h: 85:    Lcd_Port(y>>4);
  3821  0F33  0823               	movf	Lcd_Write_Char@y,w
  3822  0F34  00A1               	movwf	??_Lcd_Write_Char
  3823  0F35  3004               	movlw	4
  3824  0F36                     u2215:
  3825  0F36  1003               	clrc
  3826  0F37  0CA1               	rrf	??_Lcd_Write_Char,f
  3827  0F38  3EFF               	addlw	-1
  3828  0F39  1D03               	skipz
  3829  0F3A  2F36               	goto	u2215
  3830  0F3B  0821               	movf	??_Lcd_Write_Char,w
  3831  0F3C  120A  158A  267D  120A  158A  	fcall	_Lcd_Port
  3832  0F41                     l2002:
  3833                           
  3834                           ;./lcd.h: 86:    RD3 = 1;;./lcd.h: 86:    RD3 = 1;
  3835  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0F43  1588               	bsf	8,3	;volatile
  3838  0F44                     l2004:
  3839                           
  3840                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(4000000/4000000.0)));;./lcd.h: 87:    _del
      +                          ay((unsigned long)((40)*(4000000/4000000.0)));
  3841  0F44  300C               	movlw	12
  3842  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0F47  00A1               	movwf	??_Lcd_Write_Char
  3845  0F48                     u2357:
  3846  0F48  0BA1               	decfsz	??_Lcd_Write_Char,f
  3847  0F49  2F48               	goto	u2357
  3848  0F4A  0000               	nop
  3849  0F4B                     l2006:
  3850                           
  3851                           ;./lcd.h: 88:    RD3 = 0;;./lcd.h: 88:    RD3 = 0;
  3852  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3853  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3854  0F4D  1188               	bcf	8,3	;volatile
  3855  0F4E                     l2008:
  3856                           
  3857                           ;./lcd.h: 89:    Lcd_Port(temp);;./lcd.h: 89:    Lcd_Port(temp);
  3858  0F4E  0822               	movf	Lcd_Write_Char@temp,w
  3859  0F4F  120A  158A  267D  120A  158A  	fcall	_Lcd_Port
  3860  0F54                     l2010:
  3861                           
  3862                           ;./lcd.h: 90:    RD3 = 1;;./lcd.h: 90:    RD3 = 1;
  3863  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0F56  1588               	bsf	8,3	;volatile
  3866  0F57                     l2012:
  3867                           
  3868                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(4000000/4000000.0)));;./lcd.h: 91:    _del
      +                          ay((unsigned long)((40)*(4000000/4000000.0)));
  3869  0F57  300C               	movlw	12
  3870  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0F5A  00A1               	movwf	??_Lcd_Write_Char
  3873  0F5B                     u2367:
  3874  0F5B  0BA1               	decfsz	??_Lcd_Write_Char,f
  3875  0F5C  2F5B               	goto	u2367
  3876  0F5D  0000               	nop
  3877  0F5E                     l2014:
  3878                           
  3879                           ;./lcd.h: 92:    RD3 = 0;;./lcd.h: 92:    RD3 = 0;
  3880  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0F60  1188               	bcf	8,3	;volatile
  3883  0F61                     l101:
  3884  0F61  0008               	return
  3885  0F62                     __end_of_Lcd_Write_Char:
  3886                           
  3887                           	psect	text13
  3888  0FA8                     __ptext13:	
  3889 ;; *************** function _Lcd_Set_Cursor *****************
  3890 ;; Defined at:
  3891 ;;		line 39 in file "./lcd.h"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  a               1    wreg     unsigned char 
  3894 ;;  b               1    4[BANK0 ] unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  a               1    7[BANK0 ] unsigned char 
  3897 ;;  temp            1   10[BANK0 ] unsigned char 
  3898 ;;  y               1    9[BANK0 ] unsigned char 
  3899 ;;  z               1    8[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0, pclath, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3909 ;;      Params:         0       1       0       0       0
  3910 ;;      Locals:         0       4       0       0       0
  3911 ;;      Temps:          0       2       0       0       0
  3912 ;;      Totals:         0       7       0       0       0
  3913 ;;Total ram usage:        7 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    4
  3916 ;; This function calls:
  3917 ;;		_Lcd_Cmd
  3918 ;; This function is called by:
  3919 ;;		_main
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _Lcd_Set_Cursor
  3925  0FA8                     _Lcd_Set_Cursor:
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3929                           ;Lcd_Set_Cursor@a stored from wreg
  3930  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0FAA  00A7               	movwf	Lcd_Set_Cursor@a
  3933  0FAB                     l2018:
  3934                           
  3935                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 39: void Lcd_Set_Cursor(char 
      +                          a, char b);./lcd.h: 40: {;./lcd.h: 40: {;./lcd.h: 41:  char temp,z,y;;./lcd.h: 41:  char
      +                           temp,z,y;;./lcd.h: 42:  if(a == 1);./lcd.h: 42:  if(a == 1)
  3936  0FAB  0327               	decf	Lcd_Set_Cursor@a,w
  3937  0FAC  1D03               	btfss	3,2
  3938  0FAD  2FAF               	goto	u2221
  3939  0FAE  2FB0               	goto	u2220
  3940  0FAF                     u2221:
  3941  0FAF  2FD5               	goto	l2028
  3942  0FB0                     u2220:
  3943  0FB0                     l2020:
  3944                           
  3945                           ;./lcd.h: 43:  {;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;;./lcd.h: 44:    te
      +                          mp = 0x80 + b - 1;
  3946  0FB0  0824               	movf	Lcd_Set_Cursor@b,w
  3947  0FB1  3E7F               	addlw	127
  3948  0FB2  00A5               	movwf	??_Lcd_Set_Cursor
  3949  0FB3  0825               	movf	??_Lcd_Set_Cursor,w
  3950  0FB4  00AA               	movwf	Lcd_Set_Cursor@temp
  3951                           
  3952                           ;./lcd.h: 45:   z = temp>>4;;./lcd.h: 45:   z = temp>>4;
  3953  0FB5  082A               	movf	Lcd_Set_Cursor@temp,w
  3954  0FB6  00A5               	movwf	??_Lcd_Set_Cursor
  3955  0FB7  3004               	movlw	4
  3956  0FB8                     u2235:
  3957  0FB8  1003               	clrc
  3958  0FB9  0CA5               	rrf	??_Lcd_Set_Cursor,f
  3959  0FBA  3EFF               	addlw	-1
  3960  0FBB  1D03               	skipz
  3961  0FBC  2FB8               	goto	u2235
  3962  0FBD  0825               	movf	??_Lcd_Set_Cursor,w
  3963  0FBE  00A6               	movwf	??_Lcd_Set_Cursor+1
  3964  0FBF  0826               	movf	??_Lcd_Set_Cursor+1,w
  3965  0FC0  00A8               	movwf	Lcd_Set_Cursor@z
  3966  0FC1                     l2022:
  3967                           
  3968                           ;./lcd.h: 46:   y = temp & 0x0F;;./lcd.h: 46:   y = temp & 0x0F;
  3969  0FC1  082A               	movf	Lcd_Set_Cursor@temp,w
  3970  0FC2  390F               	andlw	15
  3971  0FC3  00A5               	movwf	??_Lcd_Set_Cursor
  3972  0FC4  0825               	movf	??_Lcd_Set_Cursor,w
  3973  0FC5  00A9               	movwf	Lcd_Set_Cursor@y
  3974  0FC6                     l2024:
  3975                           
  3976                           ;./lcd.h: 47:   Lcd_Cmd(z);;./lcd.h: 47:   Lcd_Cmd(z);
  3977  0FC6  0828               	movf	Lcd_Set_Cursor@z,w
  3978  0FC7  120A  158A  2661  120A  158A  	fcall	_Lcd_Cmd
  3979  0FCC                     l2026:
  3980                           
  3981                           ;./lcd.h: 48:   Lcd_Cmd(y);;./lcd.h: 48:   Lcd_Cmd(y);
  3982  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0FCE  0829               	movf	Lcd_Set_Cursor@y,w
  3985  0FCF  120A  158A  2661  120A  158A  	fcall	_Lcd_Cmd
  3986                           
  3987                           ;./lcd.h: 49:  };./lcd.h: 49:  }
  3988  0FD4  2FFF               	goto	l95
  3989  0FD5                     l2028:
  3990  0FD5  3002               	movlw	2
  3991  0FD6  0627               	xorwf	Lcd_Set_Cursor@a,w
  3992  0FD7  1D03               	btfss	3,2
  3993  0FD8  2FDA               	goto	u2241
  3994  0FD9  2FDB               	goto	u2240
  3995  0FDA                     u2241:
  3996  0FDA  2FFF               	goto	l95
  3997  0FDB                     u2240:
  3998  0FDB                     l2030:
  3999                           
  4000                           ;./lcd.h: 51:  {;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;;./lcd.h: 52:   temp
      +                           = 0xC0 + b - 1;
  4001  0FDB  0824               	movf	Lcd_Set_Cursor@b,w
  4002  0FDC  3EBF               	addlw	191
  4003  0FDD  00A5               	movwf	??_Lcd_Set_Cursor
  4004  0FDE  0825               	movf	??_Lcd_Set_Cursor,w
  4005  0FDF  00AA               	movwf	Lcd_Set_Cursor@temp
  4006                           
  4007                           ;./lcd.h: 53:   z = temp>>4;;./lcd.h: 53:   z = temp>>4;
  4008  0FE0  082A               	movf	Lcd_Set_Cursor@temp,w
  4009  0FE1  00A5               	movwf	??_Lcd_Set_Cursor
  4010  0FE2  3004               	movlw	4
  4011  0FE3                     u2255:
  4012  0FE3  1003               	clrc
  4013  0FE4  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4014  0FE5  3EFF               	addlw	-1
  4015  0FE6  1D03               	skipz
  4016  0FE7  2FE3               	goto	u2255
  4017  0FE8  0825               	movf	??_Lcd_Set_Cursor,w
  4018  0FE9  00A6               	movwf	??_Lcd_Set_Cursor+1
  4019  0FEA  0826               	movf	??_Lcd_Set_Cursor+1,w
  4020  0FEB  00A8               	movwf	Lcd_Set_Cursor@z
  4021  0FEC                     l2032:
  4022                           
  4023                           ;./lcd.h: 54:   y = temp & 0x0F;;./lcd.h: 54:   y = temp & 0x0F;
  4024  0FEC  082A               	movf	Lcd_Set_Cursor@temp,w
  4025  0FED  390F               	andlw	15
  4026  0FEE  00A5               	movwf	??_Lcd_Set_Cursor
  4027  0FEF  0825               	movf	??_Lcd_Set_Cursor,w
  4028  0FF0  00A9               	movwf	Lcd_Set_Cursor@y
  4029  0FF1                     l2034:
  4030                           
  4031                           ;./lcd.h: 55:   Lcd_Cmd(z);;./lcd.h: 55:   Lcd_Cmd(z);
  4032  0FF1  0828               	movf	Lcd_Set_Cursor@z,w
  4033  0FF2  120A  158A  2661  120A  158A  	fcall	_Lcd_Cmd
  4034  0FF7                     l2036:
  4035                           
  4036                           ;./lcd.h: 56:   Lcd_Cmd(y);;./lcd.h: 56:   Lcd_Cmd(y);
  4037  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0FF9  0829               	movf	Lcd_Set_Cursor@y,w
  4040  0FFA  120A  158A  2661  120A  158A  	fcall	_Lcd_Cmd
  4041  0FFF                     l95:
  4042  0FFF  0008               	return
  4043  1000                     __end_of_Lcd_Set_Cursor:
  4044                           
  4045                           	psect	text14
  4046  070E                     __ptext14:	
  4047 ;; *************** function _Lcd_Init *****************
  4048 ;; Defined at:
  4049 ;;		line 60 in file "./lcd.h"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0
  4065 ;;      Temps:          0       2       0       0       0
  4066 ;;      Totals:         0       2       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    4
  4070 ;; This function calls:
  4071 ;;		_Lcd_Cmd
  4072 ;;		_Lcd_Port
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _Lcd_Init
  4080  070E                     _Lcd_Init:
  4081  070E                     l2038:	
  4082                           ;incstack = 0
  4083                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4084                           
  4085                           
  4086                           ;./lcd.h: 62:   Lcd_Port(0x00);;./lcd.h: 62:   Lcd_Port(0x00);
  4087  070E  3000               	movlw	0
  4088  070F  120A  158A  267D  120A  118A  	fcall	_Lcd_Port
  4089  0714                     l2040:
  4090                           
  4091                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(4000000/4000.0)));;./lcd.h: 63:    _delay(
      +                          (unsigned long)((20)*(4000000/4000.0)));
  4092  0714  301A               	movlw	26
  4093  0715  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0716  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0717  00A5               	movwf	??_Lcd_Init+1
  4096  0718  30F7               	movlw	247
  4097  0719  00A4               	movwf	??_Lcd_Init
  4098  071A                     u2377:
  4099  071A  0BA4               	decfsz	??_Lcd_Init,f
  4100  071B  2F1A               	goto	u2377
  4101  071C  0BA5               	decfsz	??_Lcd_Init+1,f
  4102  071D  2F1A               	goto	u2377
  4103  071E  2F1F               	nop2
  4104  071F                     l2042:
  4105                           
  4106                           ;./lcd.h: 64:   Lcd_Cmd(0x03);;./lcd.h: 64:   Lcd_Cmd(0x03);
  4107  071F  3003               	movlw	3
  4108  0720  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4109                           
  4110                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(4000000/4000.0)));;./lcd.h: 65:  _delay((unsi
      +                          gned long)((5)*(4000000/4000.0)));
  4111  0725  3007               	movlw	7
  4112  0726  1283               	bcf	3,5	;RP0=0, select bank0
  4113  0727  1303               	bcf	3,6	;RP1=0, select bank0
  4114  0728  00A5               	movwf	??_Lcd_Init+1
  4115  0729  307C               	movlw	124
  4116  072A  00A4               	movwf	??_Lcd_Init
  4117  072B                     u2387:
  4118  072B  0BA4               	decfsz	??_Lcd_Init,f
  4119  072C  2F2B               	goto	u2387
  4120  072D  0BA5               	decfsz	??_Lcd_Init+1,f
  4121  072E  2F2B               	goto	u2387
  4122  072F  0000               	nop
  4123  0730                     l2044:
  4124                           
  4125                           ;./lcd.h: 66:   Lcd_Cmd(0x03);;./lcd.h: 66:   Lcd_Cmd(0x03);
  4126  0730  3003               	movlw	3
  4127  0731  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4128  0736                     l2046:
  4129                           
  4130                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(4000000/4000.0)));;./lcd.h: 67:  _delay((uns
      +                          igned long)((11)*(4000000/4000.0)));
  4131  0736  300F               	movlw	15
  4132  0737  1283               	bcf	3,5	;RP0=0, select bank0
  4133  0738  1303               	bcf	3,6	;RP1=0, select bank0
  4134  0739  00A5               	movwf	??_Lcd_Init+1
  4135  073A  3047               	movlw	71
  4136  073B  00A4               	movwf	??_Lcd_Init
  4137  073C                     u2397:
  4138  073C  0BA4               	decfsz	??_Lcd_Init,f
  4139  073D  2F3C               	goto	u2397
  4140  073E  0BA5               	decfsz	??_Lcd_Init+1,f
  4141  073F  2F3C               	goto	u2397
  4142                           
  4143                           ;./lcd.h: 68:   Lcd_Cmd(0x03);;./lcd.h: 68:   Lcd_Cmd(0x03);
  4144  0740  3003               	movlw	3
  4145  0741  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4146                           
  4147                           ;./lcd.h: 70:   Lcd_Cmd(0x02);;./lcd.h: 70:   Lcd_Cmd(0x02);
  4148  0746  3002               	movlw	2
  4149  0747  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4150                           
  4151                           ;./lcd.h: 71:   Lcd_Cmd(0x02);;./lcd.h: 71:   Lcd_Cmd(0x02);
  4152  074C  3002               	movlw	2
  4153  074D  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4154                           
  4155                           ;./lcd.h: 72:   Lcd_Cmd(0x08);;./lcd.h: 72:   Lcd_Cmd(0x08);
  4156  0752  3008               	movlw	8
  4157  0753  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4158                           
  4159                           ;./lcd.h: 73:   Lcd_Cmd(0x00);;./lcd.h: 73:   Lcd_Cmd(0x00);
  4160  0758  3000               	movlw	0
  4161  0759  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4162                           
  4163                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);;./lcd.h: 74:   Lcd_Cmd(0x0C);
  4164  075E  300C               	movlw	12
  4165  075F  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4166                           
  4167                           ;./lcd.h: 75:   Lcd_Cmd(0x00);;./lcd.h: 75:   Lcd_Cmd(0x00);
  4168  0764  3000               	movlw	0
  4169  0765  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4170                           
  4171                           ;./lcd.h: 76:   Lcd_Cmd(0x06);;./lcd.h: 76:   Lcd_Cmd(0x06);
  4172  076A  3006               	movlw	6
  4173  076B  120A  158A  2661  120A  118A  	fcall	_Lcd_Cmd
  4174  0770                     l98:
  4175  0770  0008               	return
  4176  0771                     __end_of_Lcd_Init:
  4177                           
  4178                           	psect	text15
  4179  0E03                     __ptext15:	
  4180 ;; *************** function _Lcd_Clear *****************
  4181 ;; Defined at:
  4182 ;;		line 33 in file "./lcd.h"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2   88[None  ] int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0
  4199 ;;      Totals:         0       0       0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    4
  4203 ;; This function calls:
  4204 ;;		_Lcd_Cmd
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _Lcd_Clear
  4212  0E03                     _Lcd_Clear:
  4213  0E03                     l2016:	
  4214                           ;incstack = 0
  4215                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4216                           
  4217                           
  4218                           ;./lcd.h: 35:  Lcd_Cmd(0);;./lcd.h: 35:  Lcd_Cmd(0);
  4219  0E03  3000               	movlw	0
  4220  0E04  120A  158A  2661  120A  158A  	fcall	_Lcd_Cmd
  4221                           
  4222                           ;./lcd.h: 36:  Lcd_Cmd(1);;./lcd.h: 36:  Lcd_Cmd(1);
  4223  0E09  3001               	movlw	1
  4224  0E0A  120A  158A  2661  120A  158A  	fcall	_Lcd_Cmd
  4225  0E0F                     l89:
  4226  0E0F  0008               	return
  4227  0E10                     __end_of_Lcd_Clear:
  4228                           
  4229                           	psect	text16
  4230  0E61                     __ptext16:	
  4231 ;; *************** function _Lcd_Cmd *****************
  4232 ;; Defined at:
  4233 ;;		line 24 in file "./lcd.h"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  a               1    wreg     unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  a               1    3[BANK0 ] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0, pclath, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4247 ;;      Params:         0       0       0       0       0
  4248 ;;      Locals:         0       1       0       0       0
  4249 ;;      Temps:          0       2       0       0       0
  4250 ;;      Totals:         0       3       0       0       0
  4251 ;;Total ram usage:        3 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    3
  4254 ;; This function calls:
  4255 ;;		_Lcd_Port
  4256 ;; This function is called by:
  4257 ;;		_Lcd_Clear
  4258 ;;		_Lcd_Set_Cursor
  4259 ;;		_Lcd_Init
  4260 ;;		_Lcd_Shift_Right
  4261 ;;		_Lcd_Shift_Left
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function _Lcd_Cmd
  4267  0E61                     _Lcd_Cmd:
  4268                           
  4269                           ;incstack = 0
  4270                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4271                           ;Lcd_Cmd@a stored from wreg
  4272  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0E63  00A3               	movwf	Lcd_Cmd@a
  4275  0E64                     l1986:
  4276                           
  4277                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lc
      +                          d.h: 25: {;./lcd.h: 26:  RD2 = 0;;./lcd.h: 26:  RD2 = 0;
  4278  0E64  1108               	bcf	8,2	;volatile
  4279  0E65                     l1988:
  4280                           
  4281                           ;./lcd.h: 27:  Lcd_Port(a);;./lcd.h: 27:  Lcd_Port(a);
  4282  0E65  0823               	movf	Lcd_Cmd@a,w
  4283  0E66  120A  158A  267D  120A  158A  	fcall	_Lcd_Port
  4284  0E6B                     l1990:
  4285                           
  4286                           ;./lcd.h: 28:  RD3 = 1;;./lcd.h: 28:  RD3 = 1;
  4287  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0E6D  1588               	bsf	8,3	;volatile
  4290  0E6E                     l1992:
  4291                           
  4292                           ;./lcd.h: 29:         _delay((unsigned long)((4)*(4000000/4000.0)));;./lcd.h: 29:       
      +                            _delay((unsigned long)((4)*(4000000/4000.0)));
  4293  0E6E  3006               	movlw	6
  4294  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0E71  00A2               	movwf	??_Lcd_Cmd+1
  4297  0E72  302F               	movlw	47
  4298  0E73  00A1               	movwf	??_Lcd_Cmd
  4299  0E74                     u2407:
  4300  0E74  0BA1               	decfsz	??_Lcd_Cmd,f
  4301  0E75  2E74               	goto	u2407
  4302  0E76  0BA2               	decfsz	??_Lcd_Cmd+1,f
  4303  0E77  2E74               	goto	u2407
  4304  0E78  2E79               	nop2
  4305  0E79                     l1994:
  4306                           
  4307                           ;./lcd.h: 30:         RD3 = 0;;./lcd.h: 30:         RD3 = 0;
  4308  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0E7B  1188               	bcf	8,3	;volatile
  4311  0E7C                     l86:
  4312  0E7C  0008               	return
  4313  0E7D                     __end_of_Lcd_Cmd:
  4314                           
  4315                           	psect	text17
  4316  0E7D                     __ptext17:	
  4317 ;; *************** function _Lcd_Port *****************
  4318 ;; Defined at:
  4319 ;;		line 2 in file "./lcd.h"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  a               1    wreg     unsigned char 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  a               1    0[BANK0 ] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4333 ;;      Params:         0       0       0       0       0
  4334 ;;      Locals:         0       1       0       0       0
  4335 ;;      Temps:          0       0       0       0       0
  4336 ;;      Totals:         0       1       0       0       0
  4337 ;;Total ram usage:        1 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    2
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_Lcd_Cmd
  4344 ;;		_Lcd_Init
  4345 ;;		_Lcd_Write_Char
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function _Lcd_Port
  4351  0E7D                     _Lcd_Port:
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _Lcd_Port: [wreg]
  4355                           ;Lcd_Port@a stored from wreg
  4356  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  4358  0E7F  00A0               	movwf	Lcd_Port@a
  4359  0E80                     l1976:
  4360                           
  4361                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd
      +                          .h: 3: {;./lcd.h: 4:  if(a & 1);./lcd.h: 4:  if(a & 1)
  4362  0E80  1C20               	btfss	Lcd_Port@a,0
  4363  0E81  2E83               	goto	u2171
  4364  0E82  2E84               	goto	u2170
  4365  0E83                     u2171:
  4366  0E83  2E86               	goto	l75
  4367  0E84                     u2170:
  4368  0E84                     l1978:
  4369                           
  4370                           ;./lcd.h: 5:   RD4 = 1;;./lcd.h: 5:   RD4 = 1;
  4371  0E84  1608               	bsf	8,4	;volatile
  4372  0E85  2E87               	goto	l76
  4373  0E86                     l75:	
  4374                           ;./lcd.h: 6:  else;./lcd.h: 6:  else
  4375                           
  4376                           
  4377                           ;./lcd.h: 7:   RD4 = 0;;./lcd.h: 7:   RD4 = 0;
  4378  0E86  1208               	bcf	8,4	;volatile
  4379  0E87                     l76:
  4380                           
  4381                           ;./lcd.h: 9:  if(a & 2);./lcd.h: 9:  if(a & 2)
  4382  0E87  1CA0               	btfss	Lcd_Port@a,1
  4383  0E88  2E8A               	goto	u2181
  4384  0E89  2E8B               	goto	u2180
  4385  0E8A                     u2181:
  4386  0E8A  2E8D               	goto	l77
  4387  0E8B                     u2180:
  4388  0E8B                     l1980:
  4389                           
  4390                           ;./lcd.h: 10:   RD5 = 1;;./lcd.h: 10:   RD5 = 1;
  4391  0E8B  1688               	bsf	8,5	;volatile
  4392  0E8C  2E8E               	goto	l78
  4393  0E8D                     l77:	
  4394                           ;./lcd.h: 11:  else;./lcd.h: 11:  else
  4395                           
  4396                           
  4397                           ;./lcd.h: 12:   RD5 = 0;;./lcd.h: 12:   RD5 = 0;
  4398  0E8D  1288               	bcf	8,5	;volatile
  4399  0E8E                     l78:
  4400                           
  4401                           ;./lcd.h: 14:  if(a & 4);./lcd.h: 14:  if(a & 4)
  4402  0E8E  1D20               	btfss	Lcd_Port@a,2
  4403  0E8F  2E91               	goto	u2191
  4404  0E90  2E92               	goto	u2190
  4405  0E91                     u2191:
  4406  0E91  2E94               	goto	l79
  4407  0E92                     u2190:
  4408  0E92                     l1982:
  4409                           
  4410                           ;./lcd.h: 15:   RD6 = 1;;./lcd.h: 15:   RD6 = 1;
  4411  0E92  1708               	bsf	8,6	;volatile
  4412  0E93  2E95               	goto	l80
  4413  0E94                     l79:	
  4414                           ;./lcd.h: 16:  else;./lcd.h: 16:  else
  4415                           
  4416                           
  4417                           ;./lcd.h: 17:   RD6 = 0;;./lcd.h: 17:   RD6 = 0;
  4418  0E94  1308               	bcf	8,6	;volatile
  4419  0E95                     l80:
  4420                           
  4421                           ;./lcd.h: 19:  if(a & 8);./lcd.h: 19:  if(a & 8)
  4422  0E95  1DA0               	btfss	Lcd_Port@a,3
  4423  0E96  2E98               	goto	u2201
  4424  0E97  2E99               	goto	u2200
  4425  0E98                     u2201:
  4426  0E98  2E9B               	goto	l81
  4427  0E99                     u2200:
  4428  0E99                     l1984:
  4429                           
  4430                           ;./lcd.h: 20:   RD7 = 1;;./lcd.h: 20:   RD7 = 1;
  4431  0E99  1788               	bsf	8,7	;volatile
  4432  0E9A  2E9C               	goto	l83
  4433  0E9B                     l81:	
  4434                           ;./lcd.h: 21:  else;./lcd.h: 21:  else
  4435                           
  4436                           
  4437                           ;./lcd.h: 22:   RD7 = 0;;./lcd.h: 22:   RD7 = 0;
  4438  0E9B  1388               	bcf	8,7	;volatile
  4439  0E9C                     l83:
  4440  0E9C  0008               	return
  4441  0E9D                     __end_of_Lcd_Port:
  4442                           
  4443                           	psect	text18
  4444  0771                     __ptext18:	
  4445 ;; *************** function _ISR *****************
  4446 ;; Defined at:
  4447 ;;		line 150 in file "main.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0
  4463 ;;      Temps:          3       0       0       0       0
  4464 ;;      Totals:         3       0       0       0       0
  4465 ;;Total ram usage:        3 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    1
  4468 ;; This function calls:
  4469 ;;		_delay_us
  4470 ;; This function is called by:
  4471 ;;		Interrupt level 1
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function _ISR
  4477  0771                     _ISR:
  4478  0771                     i1l1926:
  4479                           
  4480                           ;main.c: 152: };main.c: 152: }
  4481  0771  1C0B               	btfss	11,0	;volatile
  4482  0772  2F74               	goto	u212_21
  4483  0773  2F75               	goto	u212_20
  4484  0774                     u212_21:
  4485  0774  2F8C               	goto	i1l1938
  4486  0775                     u212_20:
  4487  0775                     i1l1928:
  4488                           
  4489                           ;main.c: 153: ;main.c: 153: ;main.c: 154: void delay_us(unsigned int uTime);main.c: 154:
      +                           void delay_us(unsigned int uTime)
  4490  0775  1283               	bcf	3,5	;RP0=0, select bank0
  4491  0776  1303               	bcf	3,6	;RP1=0, select bank0
  4492  0777  1E06               	btfss	6,4	;volatile
  4493  0778  2F7A               	goto	u213_21
  4494  0779  2F7B               	goto	u213_20
  4495  077A                     u213_21:
  4496  077A  2F81               	goto	i1l1932
  4497  077B                     u213_20:
  4498  077B                     i1l1930:
  4499                           
  4500                           ;main.c: 155: {;main.c: 155: {
  4501  077B  3001               	movlw	1
  4502  077C  07EE               	addwf	_setPoint,f
  4503  077D  1803               	skipnc
  4504  077E  0AEF               	incf	_setPoint+1,f
  4505  077F  3000               	movlw	0
  4506  0780  07EF               	addwf	_setPoint+1,f
  4507  0781                     i1l1932:
  4508                           
  4509                           ;main.c: 156:     unsigned int i = 0;;main.c: 156:     unsigned int i = 0;
  4510  0781  1E86               	btfss	6,5	;volatile
  4511  0782  2F84               	goto	u214_21
  4512  0783  2F85               	goto	u214_20
  4513  0784                     u214_21:
  4514  0784  2F8B               	goto	i1l1936
  4515  0785                     u214_20:
  4516  0785                     i1l1934:
  4517                           
  4518                           ;main.c: 157:     while(i<uTime);main.c: 157:     while(i<uTime)
  4519  0785  3001               	movlw	1
  4520  0786  02EE               	subwf	_setPoint,f
  4521  0787  3000               	movlw	0
  4522  0788  1C03               	skipc
  4523  0789  03EF               	decf	_setPoint+1,f
  4524  078A  02EF               	subwf	_setPoint+1,f
  4525  078B                     i1l1936:
  4526                           
  4527                           ;main.c: 158:     {;main.c: 158:     {
  4528  078B  100B               	bcf	11,0	;volatile
  4529  078C                     i1l1938:
  4530                           
  4531                           ;main.c: 161:     };main.c: 161:     }
  4532  078C  1C8B               	btfss	11,1	;volatile
  4533  078D  2F8F               	goto	u215_21
  4534  078E  2F90               	goto	u215_20
  4535  078F                     u215_21:
  4536  078F  2FB3               	goto	i1l1950
  4537  0790                     u215_20:
  4538  0790                     i1l1940:
  4539                           
  4540                           ;main.c: 162: };main.c: 162: }
  4541  0790  1283               	bcf	3,5	;RP0=0, select bank0
  4542  0791  1303               	bcf	3,6	;RP1=0, select bank0
  4543  0792  0868               	movf	_PID_value,w
  4544  0793  1683               	bsf	3,5	;RP0=1, select bank1
  4545  0794  1303               	bcf	3,6	;RP1=0, select bank1
  4546  0795  022E               	subwf	_max_delay^(0+128),w
  4547  0796  00F0               	movwf	delay_us@uTime
  4548  0797  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0798  1303               	bcf	3,6	;RP1=0, select bank0
  4550  0799  0869               	movf	_PID_value+1,w
  4551  079A  1C03               	skipc
  4552  079B  0A69               	incf	_PID_value+1,w
  4553  079C  1683               	bsf	3,5	;RP0=1, select bank1
  4554  079D  1303               	bcf	3,6	;RP1=0, select bank1
  4555  079E  022F               	subwf	(_max_delay+1)^(0+128),w
  4556  079F  00F1               	movwf	delay_us@uTime+1
  4557  07A0  120A  158A  2637  120A  118A  	fcall	_delay_us
  4558  07A5                     i1l1942:
  4559  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  4560  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  4561  07A7  1408               	bsf	8,0	;volatile
  4562  07A8                     i1l1944:
  4563  07A8  30C7               	movlw	199
  4564  07A9  00F4               	movwf	??_ISR
  4565  07AA                     u241_27:
  4566  07AA  2FAB               	nop2
  4567  07AB  0BF4               	decfsz	??_ISR,f
  4568  07AC  2FAA               	goto	u241_27
  4569  07AD  2FAE               	nop2
  4570  07AE  2FAF               	nop2
  4571  07AF                     i1l1946:
  4572  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4573  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  4574  07B1  1008               	bcf	8,0	;volatile
  4575  07B2                     i1l1948:
  4576  07B2  108B               	bcf	11,1	;volatile
  4577  07B3                     i1l1950:
  4578  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  4579  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  4580  07B5  1C0C               	btfss	12,0	;volatile
  4581  07B6  2FB8               	goto	u216_21
  4582  07B7  2FB9               	goto	u216_20
  4583  07B8                     u216_21:
  4584  07B8  2FC4               	goto	i1l174
  4585  07B9                     u216_20:
  4586  07B9                     i1l1952:
  4587  07B9  3001               	movlw	1
  4588  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  4589  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  4590  07BC  07A0               	addwf	_cnt^(0+128),f
  4591  07BD  1803               	skipnc
  4592  07BE  0AA1               	incf	(_cnt+1)^(0+128),f
  4593  07BF  3000               	movlw	0
  4594  07C0  07A1               	addwf	(_cnt+1)^(0+128),f
  4595  07C1                     i1l1954:
  4596  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  4597  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  4598  07C3  100C               	bcf	12,0	;volatile
  4599  07C4                     i1l174:
  4600  07C4  0876               	movf	??_ISR+2,w
  4601  07C5  008A               	movwf	10
  4602  07C6  0E75               	swapf	??_ISR+1,w
  4603  07C7  0083               	movwf	3
  4604  07C8  0EFE               	swapf	btemp,f
  4605  07C9  0E7E               	swapf	btemp,w
  4606  07CA  0009               	retfie
  4607  07CB                     __end_of_ISR:
  4608                           
  4609                           	psect	intentry
  4610  0004                     __pintentry:	
  4611                           ;incstack = 0
  4612                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4613                           
  4614  0004                     interrupt_function:
  4615  007E                     saved_w	set	btemp
  4616  0004  00FE               	movwf	btemp
  4617  0005  0E03               	swapf	3,w
  4618  0006  00F5               	movwf	??_ISR+1
  4619  0007  080A               	movf	10,w
  4620  0008  00F6               	movwf	??_ISR+2
  4621  0009  120A  118A  2F71   	ljmp	_ISR
  4622                           
  4623                           	psect	text19
  4624  0E37                     __ptext19:	
  4625 ;; *************** function _delay_us *****************
  4626 ;; Defined at:
  4627 ;;		line 178 in file "main.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  uTime           2    0[COMMON] unsigned int 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  i               2    2[COMMON] unsigned int 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4641 ;;      Params:         2       0       0       0       0
  4642 ;;      Locals:         2       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0
  4644 ;;      Totals:         4       0       0       0       0
  4645 ;;Total ram usage:        4 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_ISR
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           
  4655                           ;psect for function _delay_us
  4656  0E37                     _delay_us:
  4657  0E37                     i1l1602:	
  4658                           ;incstack = 0
  4659                           ; Regs used in _delay_us: [wreg+status,2]
  4660                           
  4661  0E37  01F2               	clrf	delay_us@i
  4662  0E38  01F3               	clrf	delay_us@i+1
  4663  0E39  2E41               	goto	i1l177
  4664  0E3A                     i1l178:
  4665  0E3A  0000               	nop
  4666  0E3B                     i1l1604:
  4667  0E3B  3001               	movlw	1
  4668  0E3C  07F2               	addwf	delay_us@i,f
  4669  0E3D  1803               	skipnc
  4670  0E3E  0AF3               	incf	delay_us@i+1,f
  4671  0E3F  3000               	movlw	0
  4672  0E40  07F3               	addwf	delay_us@i+1,f
  4673  0E41                     i1l177:
  4674  0E41  0871               	movf	delay_us@uTime+1,w
  4675  0E42  0273               	subwf	delay_us@i+1,w
  4676  0E43  1D03               	skipz
  4677  0E44  2E47               	goto	u143_25
  4678  0E45  0870               	movf	delay_us@uTime,w
  4679  0E46  0272               	subwf	delay_us@i,w
  4680  0E47                     u143_25:
  4681  0E47  1C03               	skipc
  4682  0E48  2E4A               	goto	u143_21
  4683  0E49  2E4B               	goto	u143_20
  4684  0E4A                     u143_21:
  4685  0E4A  2E3A               	goto	i1l178
  4686  0E4B                     u143_20:
  4687  0E4B                     i1l180:
  4688  0E4B  0008               	return
  4689  0E4C                     __end_of_delay_us:
  4690  007E                     btemp	set	126	;btemp
  4691  007E                     wtemp0	set	126
  4692                           
  4693                           	psect	config
  4694                           
  4695                           ;Config register CONFIG @ 0x2007
  4696                           ;	Oscillator Selection bits
  4697                           ;	FOSC = XT, XT oscillator
  4698                           ;	Watchdog Timer Enable bit
  4699                           ;	WDTE = OFF, WDT disabled
  4700                           ;	Power-up Timer Enable bit
  4701                           ;	PWRTE = ON, PWRT enabled
  4702                           ;	Brown-out Reset Enable bit
  4703                           ;	BOREN = ON, BOR enabled
  4704                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4705                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4706                           ;	Data EEPROM Memory Code Protection bit
  4707                           ;	CPD = OFF, Data EEPROM code protection off
  4708                           ;	Flash Program Memory Write Enable bits
  4709                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4710                           ;	In-Circuit Debugger Mode bit
  4711                           ;	DEBUG = 0x1, unprogrammed default
  4712                           ;	Flash Program Memory Code Protection bit
  4713                           ;	CP = OFF, Code protection off
  4714  2007                     	org	8199
  4715  2007  3F71               	dw	16241

Data Sizes:
    Strings     22
    Constant    10
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     72      80
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_delay_us

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    7360
                                             51 BANK0     21    21      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _ReadADC
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                           _init_ADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1472
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     496
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2      37
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     456
                                              5 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     725
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0     122
                                              4 COMMON     3     3      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ReadADC
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___wmul
   ___xxtofl
   _init_ADC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6D      12        0.0%
ABS                  0      0      6D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 28 20:06:52 2021

                        pc 0002                         l80 0E95                         l81 0E9B  
                       l83 0E9C                         l75 0E86                         l76 0E87  
                       l77 0E8D                         l78 0E8E                         l86 0E7C  
                       l79 0E94                         l95 0FFF                         l89 0E0F  
                       l98 0770                         _kd 00A8                         _ki 00AA  
                       _kp 00AC                         fsr 0004        ___wmul@multiplicand 0022  
      __Umul8_16@word_mpld 0026                        l101 0F61                        l107 0EC1  
                      l161 0E26                        l164 0E36                        l158 0E60  
                      l290 05D5                        l702 07E1                        l294 0ED0  
                      l704 07F3                        l480 070D                        l296 0EE8  
                      l490 070D                        l740 065B                        l741 0667  
                      l733 063F                        l566 0FA7                        l487 06F8  
                      l727 05FA                        l576 0F24                        l729 0691  
                      l683 03A5                        l695 0399                        l689 0311  
                      _GIE 005F                        _RD0 0040                        _RB4 0034  
                      _RB5 0035                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _ISR 0771                        _cnt 00A0  
                      fsr0 0004                        indf 0000               ___flmul@aexp 0040  
             ___flmul@bexp 0041               ___flmul@sign 003B               ___flmul@temp 0046  
             ___flmul@prod 0042                       ?_ISR 0070               ___fltol@exp1 0052  
                     l2000 0F33                       l2010 0F54                       l2002 0F41  
                     l2020 0FB0                       l2012 0F57                       l2004 0F44  
                     l2100 03BD                       l2030 0FDB                       l2022 0FC1  
                     l2014 0F5E                       l2006 0F4B                       l2110 03C2  
                     l2102 03BE                       l2016 0E03                       l2040 0714  
                     l2032 0FEC                       l2024 0FC6                       l2008 0F4E  
                     l2120 03CB                       l2112 03C5                       l2104 03BF  
                     l2042 071F                       l2034 0FF1                       l2026 0FCC  
                     l2018 0FAB                       l2050 0EA3                       l2130 0422  
                     l2122 03CC                       l2114 03C6                       l2106 03C0  
                     l2044 0730                       l2036 0FF7                       l2028 0FD5  
                     l2052 0EAE                       l2060 0E23                       l2140 0461  
                     l2132 0435                       l2124 03DB                       l2116 03C7  
                     l2108 03C1                       l2046 0736                       l2038 070E  
                     l2054 0EB6                       l2062 0E2A                       l2070 0ECA  
                     l1430 0F66                       l2150 049F                       l2142 047A  
                     l2134 043D                       l2126 03DF                       l2118 03C8  
                     l2048 0EA0                       l2072 0ED7                       l2056 0E4C  
                     l1440 0F7E                       l1432 0F6C                       l2160 04C8  
                     l2152 04A3                       l2144 048A                       l2136 0446  
                     l2128 03EA                       l2058 0E23                       l2074 0EDE  
                     l2066 0EC2                       l1442 0F8F                       l1434 0F6F  
                     l1450 0FA3                       l2162 04D8                       l2154 04A8  
                     l2138 0448                       l2090 03AF                       l1700 00B2  
                     l1620 0692                       l2076 0EE4                       l2068 0EC6  
                     l1444 0F95                       l1436 0F76                       l1428 0F62  
                     l1460 0EFB                       l1540 04EF                       l2164 04E2  
                     l2156 04B8                       l2148 0494                       l2092 03B4  
                     l2084 03A6                       l1710 0134                       l1702 00C2  
                     l1630 06BE                       l1622 069F                       l1446 0F96  
                     l1438 0F7A                       l1470 0F1A                       l1462 0EFF  
                     l1454 0EE9                       l1542 04F4                       l2158 04C2  
                     l2094 03B7                       l2086 03AB                       l1480 07D7  
                     l1720 01A2                       l1712 0150                       l1704 00CF  
                     l1632 06C6                       l1800 05E2                       l1448 0F9D  
                     l1464 0F03                       l1456 0EF1                       l1472 0F20  
                     l1560 0534                       l1552 0507                       l1544 04FA  
                     l2096 03B8                       l2088 03AE                       l1482 07DB  
                     l1730 0232                       l1722 01B2                       l1714 016C  
                     l1706 00EC                       l1650 06ED                       l1642 06D4  
                     l1634 06C8                       l1626 06A8                       l1810 0610  
                     l1802 05F2                       l1466 0F0D                       l1458 0EF4  
                     l1570 053F                       l1562 0538                       l1554 0524  
                     l2186 0519                       l1546 0501                       l2098 03BB  
                     l1484 07EA                       l1476 07CE                       l1740 02C6  
                     l1732 0242                       l1724 01CF                       l1716 0175  
                     l1708 0108                       l1660 0052                       l1652 06FD  
                     l1636 06CC                       l1644 06E6                       l1628 06BD  
                     l1820 0646                       l1812 061D                       l1804 0602  
                     l1468 0F13                       l1580 0572                       l1564 053D  
                     l1556 052C                       l1548 0506                       l1486 07EF  
                     l1478 07D0                       l1750 02EB                       l1742 02D4  
                     l1734 026F                       l1726 01E8                       l1718 0185  
                     l1670 0069                       l1662 0056                       l1654 0702  
                     l1830 067F                       l1822 0651                       l1814 0624  
                     l1590 05B6                       l1582 0576                       l1574 055B  
                     l1558 0530                       l1760 030E                       l1744 02DD  
                     l1752 02F1                       l1736 0295                       l1728 0205  
                     l1680 0082                       l1672 006B                       l1664 0057  
                     l1656 0045                       l1832 0684                       l1824 0655  
                     l1816 0628                       l1808 060B                       l1584 057B  
                     l1576 0565                       l1592 05BF                       l1770 032D  
                     l1754 02F5                       l1746 02E1                       l1738 02BD  
                     l1690 0097                       l1682 0083                       l1674 0073  
                     l1666 005C                       l1658 004C                       l1834 0688  
                     l1826 065F                       l1818 0636                       l1586 05AB  
                     l1578 056B                       l1594 05D1                       l1780 0373  
                     l1772 0346                       l1764 0316                       l1756 02F6  
                     l1748 02E2                       l1692 009F                       l1684 0088  
                     l1676 0078                       l1668 0061                       l1836 0689  
                     l1828 0669                       l1588 05B2                       l1790 0392  
                     l1782 037D                       l1766 031B                       l1774 034C  
                     l1758 02FA                       l1694 00A4                       l1686 008D  
                     l1678 007E                       l1792 039D                       l1784 037F  
                     l1776 0359                       l1768 0329                       l1696 00A9  
                     l1688 0095                       l1786 038D                       l1778 0364  
                     l1980 0E8B                       l1788 0391                       l1796 05D9  
                     l1982 0E92                       l1990 0E6B                       l1798 05DE  
                     l1984 0E99                       l1976 0E80                       l1992 0E6E  
                     l1978 0E84                       l1994 0E79                       l1986 0E64  
                     l1988 0E65                       l1996 0F28                       l1998 0F32  
                     STR_1 0810                       STR_2 081B                       u1200 0FA3  
                     u1201 0FA2                       u2010 0645                       u1210 0EF1  
                     u2011 0644                       u1211 0EF0                       u1140 0F6C  
                     u2005 0637                       u1141 0F6B                       u2030 0655  
                     u1230 0F03                       u2031 0654                       u1231 0F02  
                     u2200 0E99                       u2040 065B                       u1160 0F7E  
                     u1240 0F0D                       u1400 056B                       u2201 0E98  
                     u2041 065A                       u2025 064A                       u1161 0F7D  
                     u1241 0F0C                       u1225 0EF5                       u1401 056A  
                     u2050 065F                       u1410 05BF                       u2051 065E  
                     u1155 0F70                       u1411 05BE                       u2220 0FB0  
                     u1500 06CC                       u2060 0674                       u1180 0F8F  
                     u1260 0F20                       u1420 05D1                       u2221 0FAF  
                     u1501 06CB                       u1181 0F8E                       u1261 0F1F  
                     u1245 0F09                       u1421 05D0                       u1270 07DB  
                     u1510 06D3                       u2310 0EE4                       u2070 0684  
                     u2215 0F36                       u1271 07DA                       u1511 06D2  
                     u2311 0EE3                       u2071 0683                       u1175 0F7F  
                     u1255 0F14                       u2240 0FDB                       u1600 0061  
                     u2080 0688                       u1360 04FA                       u2320 03DB  
                     u2241 0FDA                       u1601 0060                       u2305 0ED8  
                     u2081 0687                       u2065 066F                       u1185 0F8B  
                     u1361 04F9                       u2321 03DA                       u2170 0E84  
                     u1290 07EF                       u1610 0082                       u1530 06E5  
                     u1370 0534                       u2330 0446                       u2171 0E83  
                     u2235 0FB8                       u1291 07EE                       u1611 0081  
                     u1531 06E4                       u1195 0F97                       u1371 0533  
                     u2331 0445                       u2180 0E8B                       u2260 0EC1  
                     u1620 0088                       u1540 06EC                       u1380 055A  
                     u2340 049F                       u2181 0E8A                       u2261 0EC0  
                     u1285 07E2                       u1621 0087                       u1541 06EB  
                     u1525 06D5                       u1381 0559                       u2341 049E  
                     u2325 03D7                       u2190 0E92                       u2270 0E2A  
                     u1630 008D                       u1390 0565                       u2191 0E91  
                     u2407 0E74                       u2255 0FE3                       u2271 0E29  
                     u1711 0194                       u1631 008C                       u1391 0564  
                     u1712 019B                       u1640 00A4                       u1560 06FD  
                     u1480 069F                       u2280 0ECA                       u1801 02AF  
                     u1721 01C1                       u1713 01A2                       u1705 016E  
                     u1641 00A3                       u1561 06FC                       u1481 069E  
                     u2281 0EC9                       u1385 0556                       u1802 02B6  
                     u1722 01C8                       u1650 00A9                       u1570 0702  
                     u1490 06B6                       u1803 02BD                       u1723 01CF  
                     u1651 00A8                       u1571 0701                       u1555 06EF  
                     u1900 032D                       u1580 0056                       u2357 0F48  
                     u1901 032C                       u1741 01F7                       u1661 00FA  
                     u1581 0055                       u1910 033C                       u1830 02E1  
                     u1742 01FE                       u1662 0101                       u1590 005C  
                     u2367 0F5B                       u1831 02E0                       u1815 02BF  
                     u1751 0224                       u1743 0205                       u1735 01D1  
                     u1671 0116                       u1663 0108                       u1591 005B  
                     u1495 06B1                       u2295 0ED1                       u1920 0359  
                     u1752 022B                       u1672 011D                       u2377 071A  
                     u1921 0358                       u1825 02D6                       u1761 0251  
                     u1753 0232                       u1681 0142                       u1673 0124  
                     u1930 0373                       u1850 02F5                       u1770 027B  
                     u1762 0258                       u1682 0149                       u2387 072B  
                     u1931 0372                       u1915 0337                       u1851 02F4  
                     u1763 025F                       u1691 015E                       u1683 0150  
                     u1940 0391                       u1860 02FA                       u1692 0165  
                     u2397 073C                       u1941 0390                       u1925 0355  
                     u1861 02F9                       u1845 02E4                       u1781 0287  
                     u1693 016C                       u1870 030E                       u1790 02A3  
                     u1782 028E                       u1950 05DE                       u1935 036F  
                     u1871 030D                       u1783 0295                       u1775 0276  
                     u1951 05DD                       u1880 0315                       u1960 05E2  
                     u1881 0314                       u1961 05E1                       u1890 031B  
                     u1970 0602                       u1891 031A                       u1795 029E  
                     u1971 0601                       _PEIE 005E                       _INTE 005C  
                     u1990 0623                       _INTF 0059                       u1991 0622  
                     _RBIE 005B                       _RBIF 0058                       u1985 0615  
                     _TMR1 000E          ?_Lcd_Write_String 0070                       _main 03A6  
                     _temp 006C                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0025            __end_of_Lcd_Cmd 0E7D            __end_of_ReadADC 0E37  
                    ??_ISR 0074              ___fltol@sign1 0051                      ?_main 0070  
          __end_of___flmul 03A6            __end_of___fltol 070E            __end_of___lwdiv 0FA8  
                    i1l180 0E4B                      i1l174 07C4                      i1l177 0E41  
          __end_of___lwmod 0F25                      i1l178 0E3A                      _PID_d 00A2  
                    _PID_i 0077                      _PID_p 00A4    __size_of_Lcd_Set_Cursor 0058  
                    _TRISD 0088            __end_of_dpowers 0810                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 05D6  
         __end_of_Lcd_Init 0771           __end_of_Lcd_Port 0E9D            __initialization 000F  
             __end_of_main 04EC                     ??_main 0053         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E                     _ADRESL 009E                     i1l1602 0E37  
                   i1l1604 0E3B                     i1l1930 077B                     i1l1940 0790  
                   i1l1932 0781                     i1l1942 07A5                     i1l1950 07B3  
                   i1l1934 0785                     i1l1926 0771                     i1l1952 07B9  
                   i1l1944 07A8                     i1l1936 078B                     i1l1928 0775  
                   i1l1954 07C1                     i1l1946 07AF                     i1l1938 078C  
                   i1l1948 07B2                     u212_20 0775                     u212_21 0774  
                   u213_20 077B                     u213_21 077A                     u214_20 0785  
                   u214_21 0784                     _INTEDG 040E                     u143_20 0E4B  
                   u215_20 0790                     u143_21 0E4A                     u215_21 078F  
                   u143_25 0E47                     u216_20 07B9                     u216_21 07B8  
                   u241_27 07AA                  ??_Lcd_Cmd 0021                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR1CS 0081                     _TMR1ON 0080  
  __size_of_Lcd_Write_Char 003D                     _TRISA0 0428                     _TRISB0 0430  
                   _TRISD0 0440           __end_of___xxtofl 0692                  ??_ReadADC 0022  
         __end_of_delay_us 0E4C                     ___wmul 0EC2                  ??___flmul 0036  
                ??___fltol 004C           __end_of_init_ADC 0E61                  ??___lwdiv 0024  
                ??___lwmod 002C         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 0031            Lcd_Set_Cursor@a 0027            Lcd_Set_Cursor@b 0024  
          Lcd_Set_Cursor@y 0029            Lcd_Set_Cursor@z 0028               ___xxtofl@arg 002A  
             ___xxtofl@exp 0029               ___xxtofl@val 0020    __end_of__initialization 0041  
        __end_of_Lcd_Clear 0E10                 ___fltol@f1 0048             __pcstackCOMMON 0070  
             __pidataBANK0 07FC               __pidataBANK1 07F4             _Lcd_Set_Cursor 0FA8  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0068  
               __pbssBANK1 00A0          __end_of__Umul8_16 07F4                 __pmaintext 03A6  
                  ?___wmul 0020                 __pintentry 0004  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 1000                    _T1CKPS0 0084                    _T1CKPS1 0085  
                ?___xxtofl 0020                  ?_delay_us 0070                 ??_Lcd_Init 0024  
               ??_Lcd_Port 0020                 __stringtab 0800                  ?_init_ADC 0070  
           _Lcd_Write_Char 0F25                    _Lcd_Cmd 0E61                    _ReadADC 0E23  
                  ___flmul 0045                    ___fltol 0692            __size_of___wmul 0027  
                  ___lwdiv 0F62                    ___lwmod 0EE9            ?_Lcd_Set_Cursor 0024  
                  __ptext1 04EC                    __ptext2 0EE9                    __ptext3 0F62  
                  __ptext4 0E4C                    __ptext5 05D6                    __ptext6 0EC2  
                  __ptext7 0692                    __ptext8 0045                    __ptext9 07CB  
             __size_of_ISR 005A                    _dpowers 0806                 ??___xxtofl 0024  
               ??_delay_us 0072                    _sprintf 04EC                    main@str 0054  
                  _voltage 0079     __end_of_Lcd_Write_Char 0F62       end_of_initialization 0041  
               ??_init_ADC 0020                  Lcd_Port@a 0020                  _PID_error 006A  
                _PID_value 0068              ___xxtofl@sign 0028            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0028          Lcd_Write_String@i 0026                ___flmul@grs 003C  
         ReadADC@TempValue 0022                  _Lcd_Clear 0E03             __end_of___wmul 0EE9  
         _Lcd_Write_String 0E9D        start_initialization 000F              delay_us@uTime 0070  
              __end_of_ISR 07CB          __size_of_Lcd_Init 0063          __size_of_Lcd_Port 0020  
               ?_Lcd_Clear 0070                   ??___wmul 0024                 init_fetch0 0E10  
                __Umul8_16 07CB                __pdataBANK0 006E                __pdataBANK1 00A8  
          Lcd_Write_Char@a 0024            Lcd_Write_Char@y 0023                  ___flmul@a 0032  
                ___flmul@b 002E                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00BC          __size_of_delay_us 0015  
                 ?_Lcd_Cmd 0070                sprintf@flag 0035                sprintf@prec 0036  
                 ?_ReadADC 0020          __size_of_init_ADC 0015           ___lwdiv@dividend 0022  
         ??_Lcd_Set_Cursor 0025                   ?___flmul 002E                   ?___fltol 0048  
               ?__Umul8_16 0020                   ?___lwdiv 0020                   ?___lwmod 0028  
                __pstrings 0800                  _max_delay 00AE           ___lwdiv@quotient 0025  
                 _ADCvalue 007B                   ?_sprintf 002E          interrupt_function 0004  
           ___wmul@product 0024                  delay_us@i 0072                   Lcd_Cmd@a 0023  
              ??_Lcd_Clear 0024                 _ADCON0bits 001F                __stringbase 0805  
               _ADCON1bits 009F          ___wmul@multiplier 0020           ??_Lcd_Write_Char 0021  
                 _Lcd_Init 070E                   _Lcd_Port 0E7D   __end_of_Lcd_Write_String 0EC2  
         __size_of_Lcd_Cmd 001C           __size_of_ReadADC 0014                ??__Umul8_16 0022  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0806                 sprintf@val 0037  
                 ___xxtofl 05D6                   _delay_us 0E37            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0027                   __ptext10 0E23                   __ptext11 0E9D  
                 __ptext12 0F25                   __ptext13 0FA8                   __ptext14 070E  
                 __ptext15 0E03                   __ptext16 0E61                   __ptext17 0E7D  
                 __ptext18 0771                   __ptext19 0E37           __size_of_sprintf 00EA  
                 _init_ADC 0E4C              __size_of_main 0146                   _setPoint 006E  
           _previous_error 00A6                   init_ram0 0E14         Lcd_Write_Char@temp 0022  
                 intlevel1 0000                  sprintf@ap 0034                  sprintf@sp 0039  
         ___lwmod@dividend 002A                  stringcode 0800         Lcd_Set_Cursor@temp 002A  
   __Umul8_16@multiplicand 0020                   sprintf@c 003A                   sprintf@f 002E  
          ___lwmod@divisor 0028            ___lwmod@counter 002D                   stringdir 0800  
                 stringtab 0800       __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
