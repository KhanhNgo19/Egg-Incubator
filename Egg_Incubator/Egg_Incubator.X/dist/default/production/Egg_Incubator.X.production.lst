

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 28 15:42:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187                           
   188                           	psect	idataBANK0
   189  0F46                     __pidataBANK0:
   190                           
   191                           ;initializer for _setPoint
   192  0F46  3425               	retlw	37
   193  0F47  3400               	retlw	0
   194                           
   195                           	psect	strings
   196  0800                     __pstrings:
   197  0800                     stringtab:
   198  0800                     __stringtab:
   199  0800                     stringcode:	
   200                           ;	String table - string pointers are 1 byte each
   201                           
   202  0800                     stringdir:
   203  0800  3008               	movlw	high stringdir
   204  0801  008A               	movwf	10
   205  0802  0804               	movf	4,w
   206  0803  0A84               	incf	4,f
   207  0804  0782               	addwf	2,f
   208  0805                     __stringbase:
   209  0805  3400               	retlw	0
   210  0806                     __end_of__stringtab:
   211  0806                     _dpowers:
   212  0806  3401               	retlw	1
   213  0807  3400               	retlw	0
   214  0808  340A               	retlw	10
   215  0809  3400               	retlw	0
   216  080A  3464               	retlw	100
   217  080B  3400               	retlw	0
   218  080C  34E8               	retlw	232
   219  080D  3403               	retlw	3
   220  080E  3410               	retlw	16
   221  080F  3427               	retlw	39
   222  0810                     __end_of_dpowers:
   223  001E                     _ADRESH	set	30
   224  001F                     _ADCON0bits	set	31
   225  0035                     _RB5	set	53
   226  0034                     _RB4	set	52
   227  0058                     _RBIF	set	88
   228  005B                     _RBIE	set	91
   229  005C                     _INTE	set	92
   230  005F                     _GIE	set	95
   231  0040                     _RD0	set	64
   232  0043                     _RD3	set	67
   233  0042                     _RD2	set	66
   234  0047                     _RD7	set	71
   235  0046                     _RD6	set	70
   236  0045                     _RD5	set	69
   237  0044                     _RD4	set	68
   238  009E                     _ADRESL	set	158
   239  009F                     _ADCON1bits	set	159
   240  0088                     _TRISD	set	136
   241  040E                     _INTEDG	set	1038
   242  0440                     _TRISD0	set	1088
   243  0430                     _TRISB0	set	1072
   244  0428                     _TRISA0	set	1064
   245  0810                     STR_1:
   246  0810  3453               	retlw	83	;'S'
   247  0811  3465               	retlw	101	;'e'
   248  0812  3474               	retlw	116	;'t'
   249  0813  3420               	retlw	32	;' '
   250  0814  3420               	retlw	32	;' '
   251  0815  343D               	retlw	61	;'='
   252  0816  3420               	retlw	32	;' '
   253  0817  3425               	retlw	37	;'%'
   254  0818  3464               	retlw	100	;'d'
   255  0819  3420               	retlw	32	;' '
   256  081A  3400               	retlw	0
   257  081B                     STR_2:
   258  081B  3452               	retlw	82	;'R'
   259  081C  3465               	retlw	101	;'e'
   260  081D  3461               	retlw	97	;'a'
   261  081E  346C               	retlw	108	;'l'
   262  081F  3420               	retlw	32	;' '
   263  0820  343D               	retlw	61	;'='
   264  0821  3420               	retlw	32	;' '
   265  0822  3425               	retlw	37	;'%'
   266  0823  3464               	retlw	100	;'d'
   267  0824  3420               	retlw	32	;' '
   268  0825  3400               	retlw	0
   269                           
   270                           	psect	cinit
   271  000F                     start_initialization:	
   272                           ; #config settings
   273                           
   274  000F                     __initialization:
   275                           
   276                           ; Initialize objects allocated to BANK0
   277  000F  120A  158A  2746  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   278  0014  00E7               	movwf	__pdataBANK0& (0+127)
   279  0015  120A  158A  2747  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   280  001A  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   281                           
   282                           ; Clear objects allocated to BANK0
   283  001B  01E1               	clrf	__pbssBANK0& (0+127)
   284  001C  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   285  001D  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   286  001E  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   287  001F  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   288  0020  01E6               	clrf	(__pbssBANK0+5)& (0+127)
   289  0021                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  0021                     __end_of__initialization:
   293  0021  0183               	clrf	3
   294  0022  120A  118A  2C70   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  0061                     __pbssBANK0:
   298  0061                     _voltage:
   299  0061                     	ds	2
   300  0063                     _temp:
   301  0063                     	ds	2
   302  0065                     _ADCvalue:
   303  0065                     	ds	2
   304                           
   305                           	psect	dataBANK0
   306  0067                     __pdataBANK0:
   307  0067                     _setPoint:
   308  0067                     	ds	2
   309                           
   310                           	psect	cstackCOMMON
   311  0070                     __pcstackCOMMON:
   312  0070                     ?_ADCinit:
   313  0070                     ?_Lcd_Port:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_Lcd_Cmd:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_Lcd_Init:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_Lcd_Write_Char:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_Lcd_Write_String:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_ISR:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_ISR:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_Lcd_Clear:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_main:	
   338                           ; 2 bytes @ 0x0
   339                           
   340                           
   341                           ; 2 bytes @ 0x0
   342  0070                     	ds	2
   343  0072                     ??_ADCinit:
   344  0072                     ??_Lcd_Port:	
   345                           ; 1 bytes @ 0x2
   346                           
   347  0072                     ?_ReadADC:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     ?__Umul8_16:	
   351                           ; 2 bytes @ 0x2
   352                           
   353  0072                     ?___lwdiv:	
   354                           ; 2 bytes @ 0x2
   355                           
   356  0072                     ?___xxtofl:	
   357                           ; 2 bytes @ 0x2
   358                           
   359  0072                     Lcd_Port@a:	
   360                           ; 4 bytes @ 0x2
   361                           
   362  0072                     __Umul8_16@multiplicand:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ___lwdiv@divisor:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0072                     ___xxtofl@val:	
   369                           ; 2 bytes @ 0x2
   370                           
   371                           
   372                           ; 4 bytes @ 0x2
   373  0072                     	ds	1
   374  0073                     ??_Lcd_Cmd:
   375  0073                     ??_Lcd_Write_Char:	
   376                           ; 1 bytes @ 0x3
   377                           
   378                           
   379                           ; 1 bytes @ 0x3
   380  0073                     	ds	1
   381  0074                     ??_ReadADC:
   382  0074                     ??__Umul8_16:	
   383                           ; 1 bytes @ 0x4
   384                           
   385  0074                     Lcd_Write_Char@temp:	
   386                           ; 1 bytes @ 0x4
   387                           
   388  0074                     ReadADC@TempValue:	
   389                           ; 1 bytes @ 0x4
   390                           
   391  0074                     ___lwdiv@dividend:	
   392                           ; 2 bytes @ 0x4
   393                           
   394                           
   395                           ; 2 bytes @ 0x4
   396  0074                     	ds	1
   397  0075                     Lcd_Cmd@a:
   398  0075                     Lcd_Write_Char@y:	
   399                           ; 1 bytes @ 0x5
   400                           
   401                           
   402                           ; 1 bytes @ 0x5
   403  0075                     	ds	1
   404  0076                     ??_Lcd_Clear:
   405  0076                     ?_Lcd_Set_Cursor:	
   406                           ; 1 bytes @ 0x6
   407                           
   408  0076                     ??_Lcd_Init:	
   409                           ; 1 bytes @ 0x6
   410                           
   411  0076                     ??___lwdiv:	
   412                           ; 1 bytes @ 0x6
   413                           
   414  0076                     ??___xxtofl:	
   415                           ; 1 bytes @ 0x6
   416                           
   417  0076                     Lcd_Set_Cursor@b:	
   418                           ; 1 bytes @ 0x6
   419                           
   420  0076                     Lcd_Write_Char@a:	
   421                           ; 1 bytes @ 0x6
   422                           
   423  0076                     __Umul8_16@product:	
   424                           ; 1 bytes @ 0x6
   425                           
   426                           
   427                           ; 2 bytes @ 0x6
   428  0076                     	ds	1
   429  0077                     ??_Lcd_Set_Cursor:
   430  0077                     ??_Lcd_Write_String:	
   431                           ; 1 bytes @ 0x7
   432                           
   433  0077                     ___lwdiv@quotient:	
   434                           ; 1 bytes @ 0x7
   435                           
   436                           
   437                           ; 2 bytes @ 0x7
   438  0077                     	ds	1
   439  0078                     Lcd_Write_String@i:
   440  0078                     __Umul8_16@word_mpld:	
   441                           ; 2 bytes @ 0x8
   442                           
   443                           
   444                           ; 2 bytes @ 0x8
   445  0078                     	ds	1
   446  0079                     ___lwdiv@counter:
   447                           
   448                           ; 1 bytes @ 0x9
   449  0079                     	ds	1
   450  007A                     ??___lwmod:
   451  007A                     Lcd_Write_String@a:	
   452                           ; 1 bytes @ 0xA
   453                           
   454  007A                     __Umul8_16@multiplier:	
   455                           ; 1 bytes @ 0xA
   456                           
   457                           
   458                           ; 1 bytes @ 0xA
   459  007A                     	ds	1
   460  007B                     ___lwmod@counter:
   461                           
   462                           ; 1 bytes @ 0xB
   463  007B                     	ds	1
   464                           
   465                           	psect	cstackBANK0
   466  0020                     __pcstackBANK0:
   467  0020                     ?___lwmod:
   468  0020                     Lcd_Set_Cursor@a:	
   469                           ; 2 bytes @ 0x0
   470                           
   471  0020                     ___xxtofl@sign:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0020                     ___lwmod@divisor:	
   475                           ; 1 bytes @ 0x0
   476                           
   477                           
   478                           ; 2 bytes @ 0x0
   479  0020                     	ds	1
   480  0021                     Lcd_Set_Cursor@z:
   481  0021                     ___xxtofl@exp:	
   482                           ; 1 bytes @ 0x1
   483                           
   484                           
   485                           ; 1 bytes @ 0x1
   486  0021                     	ds	1
   487  0022                     Lcd_Set_Cursor@y:
   488  0022                     ___lwmod@dividend:	
   489                           ; 1 bytes @ 0x2
   490                           
   491  0022                     ___xxtofl@arg:	
   492                           ; 2 bytes @ 0x2
   493                           
   494                           
   495                           ; 4 bytes @ 0x2
   496  0022                     	ds	1
   497  0023                     Lcd_Set_Cursor@temp:
   498                           
   499                           ; 1 bytes @ 0x3
   500  0023                     	ds	1
   501  0024                     ?_sprintf:
   502  0024                     sprintf@f:	
   503                           ; 2 bytes @ 0x4
   504                           
   505                           
   506                           ; 1 bytes @ 0x4
   507  0024                     	ds	2
   508  0026                     ?___flmul:
   509  0026                     ___flmul@b:	
   510                           ; 4 bytes @ 0x6
   511                           
   512                           
   513                           ; 4 bytes @ 0x6
   514  0026                     	ds	1
   515  0027                     ??_sprintf:
   516                           
   517                           ; 1 bytes @ 0x7
   518  0027                     	ds	3
   519  002A                     sprintf@ap:
   520  002A                     ___flmul@a:	
   521                           ; 1 bytes @ 0xA
   522                           
   523                           
   524                           ; 4 bytes @ 0xA
   525  002A                     	ds	1
   526  002B                     sprintf@flag:
   527                           
   528                           ; 1 bytes @ 0xB
   529  002B                     	ds	1
   530  002C                     sprintf@prec:
   531                           
   532                           ; 1 bytes @ 0xC
   533  002C                     	ds	1
   534  002D                     sprintf@val:
   535                           
   536                           ; 2 bytes @ 0xD
   537  002D                     	ds	1
   538  002E                     ??___flmul:
   539                           
   540                           ; 1 bytes @ 0xE
   541  002E                     	ds	1
   542  002F                     sprintf@sp:
   543                           
   544                           ; 1 bytes @ 0xF
   545  002F                     	ds	1
   546  0030                     sprintf@c:
   547                           
   548                           ; 1 bytes @ 0x10
   549  0030                     	ds	3
   550  0033                     ___flmul@sign:
   551                           
   552                           ; 1 bytes @ 0x13
   553  0033                     	ds	1
   554  0034                     ___flmul@grs:
   555                           
   556                           ; 4 bytes @ 0x14
   557  0034                     	ds	4
   558  0038                     ___flmul@aexp:
   559                           
   560                           ; 1 bytes @ 0x18
   561  0038                     	ds	1
   562  0039                     ___flmul@bexp:
   563                           
   564                           ; 1 bytes @ 0x19
   565  0039                     	ds	1
   566  003A                     ___flmul@prod:
   567                           
   568                           ; 4 bytes @ 0x1A
   569  003A                     	ds	4
   570  003E                     ___flmul@temp:
   571                           
   572                           ; 2 bytes @ 0x1E
   573  003E                     	ds	2
   574  0040                     ?___fltol:
   575  0040                     ___fltol@f1:	
   576                           ; 4 bytes @ 0x20
   577                           
   578                           
   579                           ; 4 bytes @ 0x20
   580  0040                     	ds	4
   581  0044                     ??___fltol:
   582                           
   583                           ; 1 bytes @ 0x24
   584  0044                     	ds	5
   585  0049                     ___fltol@sign1:
   586                           
   587                           ; 1 bytes @ 0x29
   588  0049                     	ds	1
   589  004A                     ___fltol@exp1:
   590                           
   591                           ; 1 bytes @ 0x2A
   592  004A                     	ds	1
   593  004B                     ??_main:
   594                           
   595                           ; 1 bytes @ 0x2B
   596  004B                     	ds	2
   597  004D                     main@str:
   598                           
   599                           ; 20 bytes @ 0x2D
   600  004D                     	ds	20
   601                           
   602                           	psect	maintext
   603  0470                     __pmaintext:	
   604 ;;
   605 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   606 ;;
   607 ;; *************** function _main *****************
   608 ;; Defined at:
   609 ;;		line 32 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  str            20   45[BANK0 ] unsigned char [20]
   614 ;; Return value:  Size  Location     Type
   615 ;;                  2  105[None  ] int 
   616 ;; Registers used:
   617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : B00/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0      20       0       0       0
   625 ;;      Temps:          0       2       0       0       0
   626 ;;      Totals:         0      22       0       0       0
   627 ;;Total ram usage:       22 bytes
   628 ;; Hardware stack levels required when called:    4
   629 ;; This function calls:
   630 ;;		_ADCinit
   631 ;;		_Lcd_Clear
   632 ;;		_Lcd_Init
   633 ;;		_Lcd_Set_Cursor
   634 ;;		_Lcd_Write_String
   635 ;;		_ReadADC
   636 ;;		___flmul
   637 ;;		___fltol
   638 ;;		___lwdiv
   639 ;;		___xxtofl
   640 ;;		_sprintf
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function _main
   648  0470                     _main:
   649  0470                     l1700:	
   650                           ;incstack = 0
   651                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   652                           
   653                           
   654                           ;main.c: 34:         ADCvalue = ReadADC();;main.c: 37: 
   655  0470  120A  158A  2767  120A  118A  	fcall	_ADCinit
   656  0475                     l1702:
   657                           
   658                           ;main.c: 38:         Lcd_Clear();
   659  0475  1683               	bsf	3,5	;RP0=1, select bank1
   660  0476  1303               	bcf	3,6	;RP1=0, select bank1
   661  0477  1405               	bsf	5,0	;volatile
   662  0478                     l1704:
   663                           
   664                           ;main.c: 41:         Lcd_Write_String(str);
   665  0478  0188               	clrf	8	;volatile
   666  0479                     l1706:
   667                           
   668                           ;main.c: 42:         _delay((unsigned long)((10)*(4000000/4000.0)));
   669  0479  120A  118A  2672  120A  118A  	fcall	_Lcd_Init
   670  047E                     l1708:
   671                           
   672                           ;main.c: 45:         Lcd_Set_Cursor(2,1);
   673  047E  1683               	bsf	3,5	;RP0=1, select bank1
   674  047F  1303               	bcf	3,6	;RP1=0, select bank1
   675  0480  1406               	bsf	6,0	;volatile
   676  0481                     l1710:
   677                           
   678                           ;main.c: 46:         Lcd_Write_String(str);
   679  0481  1008               	bcf	8,0	;volatile
   680  0482                     l1712:
   681                           
   682                           ;main.c: 47:         _delay((unsigned long)((10)*(4000000/4000.0)));
   683  0482  1283               	bcf	3,5	;RP0=0, select bank0
   684  0483  1303               	bcf	3,6	;RP1=0, select bank0
   685  0484  1008               	bcf	8,0	;volatile
   686  0485                     l1714:
   687                           
   688                           ;main.c: 50: }
   689  0485  178B               	bsf	11,7	;volatile
   690  0486                     l1716:
   691                           
   692                           ;main.c: 51: 
   693  0486  1683               	bsf	3,5	;RP0=1, select bank1
   694  0487  1303               	bcf	3,6	;RP1=0, select bank1
   695  0488  1701               	bsf	1,6	;volatile
   696  0489                     l1718:
   697                           
   698                           ;main.c: 52: void ADCinit (void)
   699  0489  160B               	bsf	11,4	;volatile
   700  048A                     l1720:
   701                           
   702                           ;main.c: 53: {
   703  048A  158B               	bsf	11,3	;volatile
   704  048B                     l1722:
   705                           
   706                           ;main.c: 56: ;main.c: 58: 
   707  048B  120A  158A  2755  120A  118A  	fcall	_ReadADC
   708  0490  0873               	movf	?_ReadADC+1,w
   709  0491  1283               	bcf	3,5	;RP0=0, select bank0
   710  0492  1303               	bcf	3,6	;RP1=0, select bank0
   711  0493  00E6               	movwf	_ADCvalue+1
   712  0494  0872               	movf	?_ReadADC,w
   713  0495  00E5               	movwf	_ADCvalue
   714  0496                     l1724:
   715                           
   716                           ;main.c: 59:     ADCON1bits.ADFM = 1;
   717  0496  0865               	movf	_ADCvalue,w
   718  0497  00F2               	movwf	___xxtofl@val
   719  0498  0866               	movf	_ADCvalue+1,w
   720  0499  00F3               	movwf	___xxtofl@val+1
   721  049A  01F4               	clrf	___xxtofl@val+2
   722  049B  01F5               	clrf	___xxtofl@val+3
   723  049C  3000               	movlw	0
   724  049D  120A  118A  253A  120A  118A  	fcall	___xxtofl
   725  04A2  0875               	movf	?___xxtofl+3,w
   726  04A3  1283               	bcf	3,5	;RP0=0, select bank0
   727  04A4  1303               	bcf	3,6	;RP1=0, select bank0
   728  04A5  00AD               	movwf	___flmul@a+3
   729  04A6  0874               	movf	?___xxtofl+2,w
   730  04A7  00AC               	movwf	___flmul@a+2
   731  04A8  0873               	movf	?___xxtofl+1,w
   732  04A9  00AB               	movwf	___flmul@a+1
   733  04AA  0872               	movf	?___xxtofl,w
   734  04AB  00AA               	movwf	___flmul@a
   735  04AC  3040               	movlw	64
   736  04AD  00A9               	movwf	___flmul@b+3
   737  04AE  309C               	movlw	156
   738  04AF  00A8               	movwf	___flmul@b+2
   739  04B0  3067               	movlw	103
   740  04B1  00A7               	movwf	___flmul@b+1
   741  04B2  301A               	movlw	26
   742  04B3  00A6               	movwf	___flmul@b
   743  04B4  120A  118A  2025  120A  118A  	fcall	___flmul
   744  04B9  1283               	bcf	3,5	;RP0=0, select bank0
   745  04BA  1303               	bcf	3,6	;RP1=0, select bank0
   746  04BB  0829               	movf	?___flmul+3,w
   747  04BC  00C3               	movwf	___fltol@f1+3
   748  04BD  0828               	movf	?___flmul+2,w
   749  04BE  00C2               	movwf	___fltol@f1+2
   750  04BF  0827               	movf	?___flmul+1,w
   751  04C0  00C1               	movwf	___fltol@f1+1
   752  04C1  0826               	movf	?___flmul,w
   753  04C2  00C0               	movwf	___fltol@f1
   754  04C3  120A  118A  25F6  120A  118A  	fcall	___fltol
   755  04C8  1283               	bcf	3,5	;RP0=0, select bank0
   756  04C9  1303               	bcf	3,6	;RP1=0, select bank0
   757  04CA  0841               	movf	?___fltol+1,w
   758  04CB  00E2               	movwf	_voltage+1
   759  04CC  0840               	movf	?___fltol,w
   760  04CD  00E1               	movwf	_voltage
   761  04CE                     l1726:
   762                           
   763                           ;main.c: 60: 
   764  04CE  300A               	movlw	10
   765  04CF  00F2               	movwf	___lwdiv@divisor
   766  04D0  3000               	movlw	0
   767  04D1  00F3               	movwf	___lwdiv@divisor+1
   768  04D2  0862               	movf	_voltage+1,w
   769  04D3  00F5               	movwf	___lwdiv@dividend+1
   770  04D4  0861               	movf	_voltage,w
   771  04D5  00F4               	movwf	___lwdiv@dividend
   772  04D6  120A  118A  2727  120A  118A  	fcall	___lwdiv
   773  04DB  0873               	movf	?___lwdiv+1,w
   774  04DC  1283               	bcf	3,5	;RP0=0, select bank0
   775  04DD  1303               	bcf	3,6	;RP1=0, select bank0
   776  04DE  00E4               	movwf	_temp+1
   777  04DF  0872               	movf	?___lwdiv,w
   778  04E0  00E3               	movwf	_temp
   779  04E1                     l1728:
   780                           
   781                           ;main.c: 62: 
   782  04E1  120A  158A  2748  120A  118A  	fcall	_Lcd_Clear
   783  04E6                     l1730:
   784                           
   785                           ;main.c: 63:     ADCON0bits.ADON = 1;
   786  04E6  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   787  04E7  1283               	bcf	3,5	;RP0=0, select bank0
   788  04E8  1303               	bcf	3,6	;RP1=0, select bank0
   789  04E9  00CB               	movwf	??_main
   790  04EA  084B               	movf	??_main,w
   791  04EB  00A4               	movwf	sprintf@f
   792  04EC  0868               	movf	_setPoint+1,w
   793  04ED  00A6               	movwf	?_sprintf+2
   794  04EE  0867               	movf	_setPoint,w
   795  04EF  00A5               	movwf	?_sprintf+1
   796  04F0  304D               	movlw	(low (main@str| 0))& (0+255)
   797  04F1  120A  118A  2386  120A  118A  	fcall	_sprintf
   798  04F6                     l1732:
   799                           
   800                           ;main.c: 64: }
   801  04F6  01F6               	clrf	Lcd_Set_Cursor@b
   802  04F7  0AF6               	incf	Lcd_Set_Cursor@b,f
   803  04F8  3001               	movlw	1
   804  04F9  120A  118A  26CF  120A  118A  	fcall	_Lcd_Set_Cursor
   805  04FE                     l1734:
   806                           
   807                           ;main.c: 65: 
   808  04FE  304D               	movlw	(low (main@str| 0))& (0+255)
   809  04FF  120A  158A  2796  120A  118A  	fcall	_Lcd_Write_String
   810  0504                     l1736:
   811                           
   812                           ;main.c: 66: unsigned int ReadADC (void)
   813  0504  300D               	movlw	13
   814  0505  1283               	bcf	3,5	;RP0=0, select bank0
   815  0506  1303               	bcf	3,6	;RP1=0, select bank0
   816  0507  00CC               	movwf	??_main+1
   817  0508  30FB               	movlw	251
   818  0509  00CB               	movwf	??_main
   819  050A                     u1977:
   820  050A  0BCB               	decfsz	??_main,f
   821  050B  2D0A               	goto	u1977
   822  050C  0BCC               	decfsz	??_main+1,f
   823  050D  2D0A               	goto	u1977
   824  050E                     l1738:
   825                           
   826                           ;main.c: 68:     unsigned int TempValue = 0;
   827  050E  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   828  050F  1283               	bcf	3,5	;RP0=0, select bank0
   829  0510  1303               	bcf	3,6	;RP1=0, select bank0
   830  0511  00CB               	movwf	??_main
   831  0512  084B               	movf	??_main,w
   832  0513  00A4               	movwf	sprintf@f
   833  0514  0864               	movf	_temp+1,w
   834  0515  00A6               	movwf	?_sprintf+2
   835  0516  0863               	movf	_temp,w
   836  0517  00A5               	movwf	?_sprintf+1
   837  0518  304D               	movlw	(low (main@str| 0))& (0+255)
   838  0519  120A  118A  2386  120A  118A  	fcall	_sprintf
   839  051E                     l1740:
   840                           
   841                           ;main.c: 69:     ADCON0bits.GO_nDONE = 1;
   842  051E  01F6               	clrf	Lcd_Set_Cursor@b
   843  051F  0AF6               	incf	Lcd_Set_Cursor@b,f
   844  0520  3002               	movlw	2
   845  0521  120A  118A  26CF  120A  118A  	fcall	_Lcd_Set_Cursor
   846  0526                     l1742:
   847                           
   848                           ;main.c: 70:     while(ADCON0bits.GO_nDONE);
   849  0526  304D               	movlw	(low (main@str| 0))& (0+255)
   850  0527  120A  158A  2796  120A  118A  	fcall	_Lcd_Write_String
   851  052C                     l1744:
   852                           
   853                           ;main.c: 71:     TempValue = ADRESH*256 + ADRESL;
   854  052C  300D               	movlw	13
   855  052D  1283               	bcf	3,5	;RP0=0, select bank0
   856  052E  1303               	bcf	3,6	;RP1=0, select bank0
   857  052F  00CC               	movwf	??_main+1
   858  0530  30FB               	movlw	251
   859  0531  00CB               	movwf	??_main
   860  0532                     u1987:
   861  0532  0BCB               	decfsz	??_main,f
   862  0533  2D32               	goto	u1987
   863  0534  0BCC               	decfsz	??_main+1,f
   864  0535  2D32               	goto	u1987
   865  0536  2C8B               	goto	l1722
   866  0537  120A  118A  280C   	ljmp	start
   867  053A                     __end_of_main:
   868                           
   869                           	psect	text1
   870  0386                     __ptext1:	
   871 ;; *************** function _sprintf *****************
   872 ;; Defined at:
   873 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  sp              1    wreg     PTR unsigned char 
   876 ;;		 -> main@str(20), 
   877 ;;  f               1    4[BANK0 ] PTR const unsigned char 
   878 ;;		 -> STR_2(11), STR_1(11), 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  sp              1   15[BANK0 ] PTR unsigned char 
   881 ;;		 -> main@str(20), 
   882 ;;  tmpval          4    0        struct .
   883 ;;  val             2   13[BANK0 ] unsigned int 
   884 ;;  cp              2    0        PTR const unsigned char 
   885 ;;  len             2    0        unsigned int 
   886 ;;  c               1   16[BANK0 ] unsigned char 
   887 ;;  prec            1   12[BANK0 ] char 
   888 ;;  flag            1   11[BANK0 ] unsigned char 
   889 ;;  ap              1   10[BANK0 ] PTR void [1]
   890 ;;		 -> ?_sprintf(2), 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2    4[BANK0 ] int 
   893 ;; Registers used:
   894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         0       3       0       0       0
   901 ;;      Locals:         0       7       0       0       0
   902 ;;      Temps:          0       3       0       0       0
   903 ;;      Totals:         0      13       0       0       0
   904 ;;Total ram usage:       13 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    2
   907 ;; This function calls:
   908 ;;		___lwdiv
   909 ;;		___lwmod
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _sprintf
   917  0386                     _sprintf:
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   921                           ;sprintf@sp stored from wreg
   922  0386  1283               	bcf	3,5	;RP0=0, select bank0
   923  0387  1303               	bcf	3,6	;RP1=0, select bank0
   924  0388  00AF               	movwf	sprintf@sp
   925  0389                     l1414:
   926                           
   927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   928  0389  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   929  038A  00A7               	movwf	??_sprintf
   930  038B  0827               	movf	??_sprintf,w
   931  038C  00AA               	movwf	sprintf@ap
   932                           
   933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   934  038D  2C59               	goto	l1466
   935  038E                     l1416:
   936                           
   937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   938  038E  3025               	movlw	37
   939  038F  0630               	xorwf	sprintf@c,w
   940  0390  1903               	btfsc	3,2
   941  0391  2B93               	goto	u1261
   942  0392  2B94               	goto	u1260
   943  0393                     u1261:
   944  0393  2BA0               	goto	l1422
   945  0394                     u1260:
   946  0394                     l1418:
   947                           
   948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   949  0394  0830               	movf	sprintf@c,w
   950  0395  00A7               	movwf	??_sprintf
   951  0396  082F               	movf	sprintf@sp,w
   952  0397  0084               	movwf	4
   953  0398  0827               	movf	??_sprintf,w
   954  0399  1383               	bcf	3,7	;select IRP bank0
   955  039A  0080               	movwf	0
   956  039B                     l1420:
   957  039B  3001               	movlw	1
   958  039C  00A7               	movwf	??_sprintf
   959  039D  0827               	movf	??_sprintf,w
   960  039E  07AF               	addwf	sprintf@sp,f
   961                           
   962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   963  039F  2C59               	goto	l1466
   964  03A0                     l1422:
   965                           
   966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   967  03A0  01AB               	clrf	sprintf@flag
   968  03A1                     l1426:	
   969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   970                           
   971  03A1  3001               	movlw	1
   972  03A2  07A4               	addwf	sprintf@f,f
   973  03A3  30FF               	movlw	-1
   974  03A4  0724               	addwf	sprintf@f,w
   975  03A5  0084               	movwf	4
   976  03A6  120A  158A  2000  120A  118A  	fcall	stringdir
   977  03AB  00B0               	movwf	sprintf@c
   978  03AC  00A7               	movwf	??_sprintf
   979  03AD  01A8               	clrf	??_sprintf+1
   980                           
   981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   982                           ; Switch size 1, requested type "simple"
   983                           ; Number of cases is 1, Range of values is 0 to 0
   984                           ; switch strategies available:
   985                           ; Name         Instructions Cycles
   986                           ; simple_byte            4     3 (average)
   987                           ; direct_byte           11     8 (fixed)
   988                           ; jumptable            260     6 (fixed)
   989                           ;	Chosen strategy is simple_byte
   990  03AE  0828               	movf	??_sprintf+1,w
   991  03AF  3A00               	xorlw	0	; case 0
   992  03B0  1903               	skipnz
   993  03B1  2BB3               	goto	l1778
   994  03B2  2C59               	goto	l1466
   995  03B3                     l1778:
   996                           
   997                           ; Switch size 1, requested type "simple"
   998                           ; Number of cases is 3, Range of values is 0 to 105
   999                           ; switch strategies available:
  1000                           ; Name         Instructions Cycles
  1001                           ; simple_byte           10     6 (average)
  1002                           ; jumptable            260     6 (fixed)
  1003                           ;	Chosen strategy is simple_byte
  1004  03B3  0827               	movf	??_sprintf,w
  1005  03B4  3A00               	xorlw	0	; case 0
  1006  03B5  1903               	skipnz
  1007  03B6  2C6B               	goto	l1468
  1008  03B7  3A64               	xorlw	100	; case 100
  1009  03B8  1903               	skipnz
  1010  03B9  2BBE               	goto	l1428
  1011  03BA  3A0D               	xorlw	13	; case 105
  1012  03BB  1903               	skipnz
  1013  03BC  2BBE               	goto	l1428
  1014  03BD  2C59               	goto	l1466
  1015  03BE                     l1428:
  1016                           
  1017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1018  03BE  082A               	movf	sprintf@ap,w
  1019  03BF  0084               	movwf	4
  1020  03C0  1383               	bcf	3,7	;select IRP bank0
  1021  03C1  0800               	movf	0,w
  1022  03C2  00AD               	movwf	sprintf@val
  1023  03C3  0A84               	incf	4,f
  1024  03C4  0800               	movf	0,w
  1025  03C5  00AE               	movwf	sprintf@val+1
  1026  03C6                     l1430:
  1027  03C6  3002               	movlw	2
  1028  03C7  00A7               	movwf	??_sprintf
  1029  03C8  0827               	movf	??_sprintf,w
  1030  03C9  07AA               	addwf	sprintf@ap,f
  1031  03CA                     l1432:
  1032                           
  1033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1034  03CA  1FAE               	btfss	sprintf@val+1,7
  1035  03CB  2BCD               	goto	u1271
  1036  03CC  2BCE               	goto	u1270
  1037  03CD                     u1271:
  1038  03CD  2BD7               	goto	l1438
  1039  03CE                     u1270:
  1040  03CE                     l1434:
  1041                           
  1042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1043  03CE  3003               	movlw	3
  1044  03CF  00A7               	movwf	??_sprintf
  1045  03D0  0827               	movf	??_sprintf,w
  1046  03D1  04AB               	iorwf	sprintf@flag,f
  1047  03D2                     l1436:
  1048                           
  1049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1050  03D2  09AD               	comf	sprintf@val,f
  1051  03D3  09AE               	comf	sprintf@val+1,f
  1052  03D4  0AAD               	incf	sprintf@val,f
  1053  03D5  1903               	skipnz
  1054  03D6  0AAE               	incf	sprintf@val+1,f
  1055  03D7                     l1438:
  1056                           
  1057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1058  03D7  01B0               	clrf	sprintf@c
  1059  03D8  0AB0               	incf	sprintf@c,f
  1060  03D9                     l1444:
  1061                           
  1062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1063  03D9  0830               	movf	sprintf@c,w
  1064  03DA  00A7               	movwf	??_sprintf
  1065  03DB  0727               	addwf	??_sprintf,w
  1066  03DC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1067  03DD  0084               	movwf	4
  1068  03DE  120A  158A  2000  120A  118A  	fcall	stringdir
  1069  03E3  00A8               	movwf	??_sprintf+1
  1070  03E4  120A  158A  2000  120A  118A  	fcall	stringdir
  1071  03E9  00A9               	movwf	??_sprintf+2
  1072  03EA  0829               	movf	??_sprintf+2,w
  1073  03EB  022E               	subwf	sprintf@val+1,w
  1074  03EC  1D03               	skipz
  1075  03ED  2BF0               	goto	u1285
  1076  03EE  0828               	movf	??_sprintf+1,w
  1077  03EF  022D               	subwf	sprintf@val,w
  1078  03F0                     u1285:
  1079  03F0  1803               	skipnc
  1080  03F1  2BF3               	goto	u1281
  1081  03F2  2BF4               	goto	u1280
  1082  03F3                     u1281:
  1083  03F3  2BF5               	goto	l1448
  1084  03F4                     u1280:
  1085  03F4  2BFF               	goto	l1450
  1086  03F5                     l1448:
  1087  03F5  3001               	movlw	1
  1088  03F6  00A7               	movwf	??_sprintf
  1089  03F7  0827               	movf	??_sprintf,w
  1090  03F8  07B0               	addwf	sprintf@c,f
  1091  03F9  3005               	movlw	5
  1092  03FA  0630               	xorwf	sprintf@c,w
  1093  03FB  1D03               	btfss	3,2
  1094  03FC  2BFE               	goto	u1291
  1095  03FD  2BFF               	goto	u1290
  1096  03FE                     u1291:
  1097  03FE  2BD9               	goto	l1444
  1098  03FF                     u1290:
  1099  03FF                     l1450:
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1102  03FF  082B               	movf	sprintf@flag,w
  1103  0400  3903               	andlw	3
  1104  0401  1903               	btfsc	3,2
  1105  0402  2C04               	goto	u1301
  1106  0403  2C05               	goto	u1300
  1107  0404                     u1301:
  1108  0404  2C10               	goto	l1456
  1109  0405                     u1300:
  1110  0405                     l1452:
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1113  0405  302D               	movlw	45
  1114  0406  00A7               	movwf	??_sprintf
  1115  0407  082F               	movf	sprintf@sp,w
  1116  0408  0084               	movwf	4
  1117  0409  0827               	movf	??_sprintf,w
  1118  040A  1383               	bcf	3,7	;select IRP bank0
  1119  040B  0080               	movwf	0
  1120  040C                     l1454:
  1121  040C  3001               	movlw	1
  1122  040D  00A7               	movwf	??_sprintf
  1123  040E  0827               	movf	??_sprintf,w
  1124  040F  07AF               	addwf	sprintf@sp,f
  1125  0410                     l1456:
  1126                           
  1127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1128  0410  0830               	movf	sprintf@c,w
  1129  0411  00A7               	movwf	??_sprintf
  1130  0412  0827               	movf	??_sprintf,w
  1131  0413  00AC               	movwf	sprintf@prec
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1134  0414  2C50               	goto	l1464
  1135  0415                     l1458:
  1136                           
  1137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1138  0415  300A               	movlw	10
  1139  0416  00A0               	movwf	___lwmod@divisor
  1140  0417  3000               	movlw	0
  1141  0418  00A1               	movwf	___lwmod@divisor+1
  1142  0419  082C               	movf	sprintf@prec,w
  1143  041A  00A7               	movwf	??_sprintf
  1144  041B  0727               	addwf	??_sprintf,w
  1145  041C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1146  041D  0084               	movwf	4
  1147  041E  120A  158A  2000  120A  118A  	fcall	stringdir
  1148  0423  00F2               	movwf	___lwdiv@divisor
  1149  0424  120A  158A  2000  120A  118A  	fcall	stringdir
  1150  0429  00F3               	movwf	___lwdiv@divisor+1
  1151  042A  082E               	movf	sprintf@val+1,w
  1152  042B  00F5               	movwf	___lwdiv@dividend+1
  1153  042C  082D               	movf	sprintf@val,w
  1154  042D  00F4               	movwf	___lwdiv@dividend
  1155  042E  120A  118A  2727  120A  118A  	fcall	___lwdiv
  1156  0433  0873               	movf	?___lwdiv+1,w
  1157  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0436  00A3               	movwf	___lwmod@dividend+1
  1160  0437  0872               	movf	?___lwdiv,w
  1161  0438  00A2               	movwf	___lwmod@dividend
  1162  0439  120A  118A  276B  120A  118A  	fcall	___lwmod
  1163  043E  1283               	bcf	3,5	;RP0=0, select bank0
  1164  043F  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0440  0820               	movf	?___lwmod,w
  1166  0441  3E30               	addlw	48
  1167  0442  00A8               	movwf	??_sprintf+1
  1168  0443  0828               	movf	??_sprintf+1,w
  1169  0444  00B0               	movwf	sprintf@c
  1170  0445                     l1460:
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1173  0445  0830               	movf	sprintf@c,w
  1174  0446  00A7               	movwf	??_sprintf
  1175  0447  082F               	movf	sprintf@sp,w
  1176  0448  0084               	movwf	4
  1177  0449  0827               	movf	??_sprintf,w
  1178  044A  1383               	bcf	3,7	;select IRP bank0
  1179  044B  0080               	movwf	0
  1180  044C                     l1462:
  1181  044C  3001               	movlw	1
  1182  044D  00A7               	movwf	??_sprintf
  1183  044E  0827               	movf	??_sprintf,w
  1184  044F  07AF               	addwf	sprintf@sp,f
  1185  0450                     l1464:
  1186                           
  1187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1188  0450  30FF               	movlw	255
  1189  0451  00A7               	movwf	??_sprintf
  1190  0452  0827               	movf	??_sprintf,w
  1191  0453  07AC               	addwf	sprintf@prec,f
  1192  0454  0A2C               	incf	sprintf@prec,w
  1193  0455  1D03               	btfss	3,2
  1194  0456  2C58               	goto	u1311
  1195  0457  2C59               	goto	u1310
  1196  0458                     u1311:
  1197  0458  2C15               	goto	l1458
  1198  0459                     u1310:
  1199  0459                     l1466:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1202  0459  3001               	movlw	1
  1203  045A  07A4               	addwf	sprintf@f,f
  1204  045B  30FF               	movlw	-1
  1205  045C  0724               	addwf	sprintf@f,w
  1206  045D  0084               	movwf	4
  1207  045E  120A  158A  2000  120A  118A  	fcall	stringdir
  1208  0463  00A7               	movwf	??_sprintf
  1209  0464  0827               	movf	??_sprintf,w
  1210  0465  00B0               	movwf	sprintf@c
  1211  0466  0830               	movf	sprintf@c,w
  1212  0467  1D03               	btfss	3,2
  1213  0468  2C6A               	goto	u1321
  1214  0469  2C6B               	goto	u1320
  1215  046A                     u1321:
  1216  046A  2B8E               	goto	l1416
  1217  046B                     u1320:
  1218  046B                     l1468:
  1219                           
  1220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1221  046B  082F               	movf	sprintf@sp,w
  1222  046C  0084               	movwf	4
  1223  046D  1383               	bcf	3,7	;select IRP bank0
  1224  046E  0180               	clrf	0
  1225  046F                     l236:
  1226  046F  0008               	return
  1227  0470                     __end_of_sprintf:
  1228                           
  1229                           	psect	text2
  1230  076B                     __ptext2:	
  1231 ;; *************** function ___lwmod *****************
  1232 ;; Defined at:
  1233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  divisor         2    0[BANK0 ] unsigned int 
  1236 ;;  dividend        2    2[BANK0 ] unsigned int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  counter         1   11[COMMON] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  2    0[BANK0 ] unsigned int 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         0       4       0       0       0
  1249 ;;      Locals:         1       0       0       0       0
  1250 ;;      Temps:          1       0       0       0       0
  1251 ;;      Totals:         2       4       0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    1
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_sprintf
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function ___lwmod
  1264  076B                     ___lwmod:
  1265  076B                     l1328:	
  1266                           ;incstack = 0
  1267                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1268                           
  1269  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1270  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1271  076D  0820               	movf	___lwmod@divisor,w
  1272  076E  0421               	iorwf	___lwmod@divisor+1,w
  1273  076F  1903               	btfsc	3,2
  1274  0770  2F72               	goto	u1111
  1275  0771  2F73               	goto	u1110
  1276  0772                     u1111:
  1277  0772  2FA2               	goto	l1346
  1278  0773                     u1110:
  1279  0773                     l1330:
  1280  0773  01FB               	clrf	___lwmod@counter
  1281  0774  0AFB               	incf	___lwmod@counter,f
  1282  0775  2F81               	goto	l1336
  1283  0776                     l1332:
  1284  0776  3001               	movlw	1
  1285  0777                     u1125:
  1286  0777  1003               	clrc
  1287  0778  0DA0               	rlf	___lwmod@divisor,f
  1288  0779  0DA1               	rlf	___lwmod@divisor+1,f
  1289  077A  3EFF               	addlw	-1
  1290  077B  1D03               	skipz
  1291  077C  2F77               	goto	u1125
  1292  077D                     l1334:
  1293  077D  3001               	movlw	1
  1294  077E  00FA               	movwf	??___lwmod
  1295  077F  087A               	movf	??___lwmod,w
  1296  0780  07FB               	addwf	___lwmod@counter,f
  1297  0781                     l1336:
  1298  0781  1FA1               	btfss	___lwmod@divisor+1,7
  1299  0782  2F84               	goto	u1131
  1300  0783  2F85               	goto	u1130
  1301  0784                     u1131:
  1302  0784  2F76               	goto	l1332
  1303  0785                     u1130:
  1304  0785                     l1338:
  1305  0785  0821               	movf	___lwmod@divisor+1,w
  1306  0786  0223               	subwf	___lwmod@dividend+1,w
  1307  0787  1D03               	skipz
  1308  0788  2F8B               	goto	u1145
  1309  0789  0820               	movf	___lwmod@divisor,w
  1310  078A  0222               	subwf	___lwmod@dividend,w
  1311  078B                     u1145:
  1312  078B  1C03               	skipc
  1313  078C  2F8E               	goto	u1141
  1314  078D  2F8F               	goto	u1140
  1315  078E                     u1141:
  1316  078E  2F95               	goto	l1342
  1317  078F                     u1140:
  1318  078F                     l1340:
  1319  078F  0820               	movf	___lwmod@divisor,w
  1320  0790  02A2               	subwf	___lwmod@dividend,f
  1321  0791  0821               	movf	___lwmod@divisor+1,w
  1322  0792  1C03               	skipc
  1323  0793  03A3               	decf	___lwmod@dividend+1,f
  1324  0794  02A3               	subwf	___lwmod@dividend+1,f
  1325  0795                     l1342:
  1326  0795  3001               	movlw	1
  1327  0796                     u1155:
  1328  0796  1003               	clrc
  1329  0797  0CA1               	rrf	___lwmod@divisor+1,f
  1330  0798  0CA0               	rrf	___lwmod@divisor,f
  1331  0799  3EFF               	addlw	-1
  1332  079A  1D03               	skipz
  1333  079B  2F96               	goto	u1155
  1334  079C                     l1344:
  1335  079C  3001               	movlw	1
  1336  079D  02FB               	subwf	___lwmod@counter,f
  1337  079E  1D03               	btfss	3,2
  1338  079F  2FA1               	goto	u1161
  1339  07A0  2FA2               	goto	u1160
  1340  07A1                     u1161:
  1341  07A1  2F85               	goto	l1338
  1342  07A2                     u1160:
  1343  07A2                     l1346:
  1344  07A2  0823               	movf	___lwmod@dividend+1,w
  1345  07A3  00A1               	movwf	?___lwmod+1
  1346  07A4  0822               	movf	___lwmod@dividend,w
  1347  07A5  00A0               	movwf	?___lwmod
  1348  07A6                     l522:
  1349  07A6  0008               	return
  1350  07A7                     __end_of___lwmod:
  1351                           
  1352                           	psect	text3
  1353  0727                     __ptext3:	
  1354 ;; *************** function ___lwdiv *****************
  1355 ;; Defined at:
  1356 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  divisor         2    2[COMMON] unsigned int 
  1359 ;;  dividend        2    4[COMMON] unsigned int 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  quotient        2    7[COMMON] unsigned int 
  1362 ;;  counter         1    9[COMMON] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2    2[COMMON] unsigned int 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         4       0       0       0       0
  1373 ;;      Locals:         3       0       0       0       0
  1374 ;;      Temps:          1       0       0       0       0
  1375 ;;      Totals:         8       0       0       0       0
  1376 ;;Total ram usage:        8 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;;		_sprintf
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function ___lwdiv
  1389  0727                     ___lwdiv:
  1390  0727                     l1302:	
  1391                           ;incstack = 0
  1392                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1393                           
  1394  0727  01F7               	clrf	___lwdiv@quotient
  1395  0728  01F8               	clrf	___lwdiv@quotient+1
  1396  0729                     l1304:
  1397  0729  0872               	movf	___lwdiv@divisor,w
  1398  072A  0473               	iorwf	___lwdiv@divisor+1,w
  1399  072B  1903               	btfsc	3,2
  1400  072C  2F2E               	goto	u1041
  1401  072D  2F2F               	goto	u1040
  1402  072E                     u1041:
  1403  072E  2F66               	goto	l1324
  1404  072F                     u1040:
  1405  072F                     l1306:
  1406  072F  01F9               	clrf	___lwdiv@counter
  1407  0730  0AF9               	incf	___lwdiv@counter,f
  1408  0731  2F3D               	goto	l1312
  1409  0732                     l1308:
  1410  0732  3001               	movlw	1
  1411  0733                     u1055:
  1412  0733  1003               	clrc
  1413  0734  0DF2               	rlf	___lwdiv@divisor,f
  1414  0735  0DF3               	rlf	___lwdiv@divisor+1,f
  1415  0736  3EFF               	addlw	-1
  1416  0737  1D03               	skipz
  1417  0738  2F33               	goto	u1055
  1418  0739                     l1310:
  1419  0739  3001               	movlw	1
  1420  073A  00F6               	movwf	??___lwdiv
  1421  073B  0876               	movf	??___lwdiv,w
  1422  073C  07F9               	addwf	___lwdiv@counter,f
  1423  073D                     l1312:
  1424  073D  1FF3               	btfss	___lwdiv@divisor+1,7
  1425  073E  2F40               	goto	u1061
  1426  073F  2F41               	goto	u1060
  1427  0740                     u1061:
  1428  0740  2F32               	goto	l1308
  1429  0741                     u1060:
  1430  0741                     l1314:
  1431  0741  3001               	movlw	1
  1432  0742                     u1075:
  1433  0742  1003               	clrc
  1434  0743  0DF7               	rlf	___lwdiv@quotient,f
  1435  0744  0DF8               	rlf	___lwdiv@quotient+1,f
  1436  0745  3EFF               	addlw	-1
  1437  0746  1D03               	skipz
  1438  0747  2F42               	goto	u1075
  1439  0748  0873               	movf	___lwdiv@divisor+1,w
  1440  0749  0275               	subwf	___lwdiv@dividend+1,w
  1441  074A  1D03               	skipz
  1442  074B  2F4E               	goto	u1085
  1443  074C  0872               	movf	___lwdiv@divisor,w
  1444  074D  0274               	subwf	___lwdiv@dividend,w
  1445  074E                     u1085:
  1446  074E  1C03               	skipc
  1447  074F  2F51               	goto	u1081
  1448  0750  2F52               	goto	u1080
  1449  0751                     u1081:
  1450  0751  2F59               	goto	l1320
  1451  0752                     u1080:
  1452  0752                     l1316:
  1453  0752  0872               	movf	___lwdiv@divisor,w
  1454  0753  02F4               	subwf	___lwdiv@dividend,f
  1455  0754  0873               	movf	___lwdiv@divisor+1,w
  1456  0755  1C03               	skipc
  1457  0756  03F5               	decf	___lwdiv@dividend+1,f
  1458  0757  02F5               	subwf	___lwdiv@dividend+1,f
  1459  0758                     l1318:
  1460  0758  1477               	bsf	___lwdiv@quotient,0
  1461  0759                     l1320:
  1462  0759  3001               	movlw	1
  1463  075A                     u1095:
  1464  075A  1003               	clrc
  1465  075B  0CF3               	rrf	___lwdiv@divisor+1,f
  1466  075C  0CF2               	rrf	___lwdiv@divisor,f
  1467  075D  3EFF               	addlw	-1
  1468  075E  1D03               	skipz
  1469  075F  2F5A               	goto	u1095
  1470  0760                     l1322:
  1471  0760  3001               	movlw	1
  1472  0761  02F9               	subwf	___lwdiv@counter,f
  1473  0762  1D03               	btfss	3,2
  1474  0763  2F65               	goto	u1101
  1475  0764  2F66               	goto	u1100
  1476  0765                     u1101:
  1477  0765  2F41               	goto	l1314
  1478  0766                     u1100:
  1479  0766                     l1324:
  1480  0766  0878               	movf	___lwdiv@quotient+1,w
  1481  0767  00F3               	movwf	?___lwdiv+1
  1482  0768  0877               	movf	___lwdiv@quotient,w
  1483  0769  00F2               	movwf	?___lwdiv
  1484  076A                     l512:
  1485  076A  0008               	return
  1486  076B                     __end_of___lwdiv:
  1487                           
  1488                           	psect	text4
  1489  053A                     __ptext4:	
  1490 ;; *************** function ___xxtofl *****************
  1491 ;; Defined at:
  1492 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  sign            1    wreg     unsigned char 
  1495 ;;  val             4    2[COMMON] long 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  sign            1    0[BANK0 ] unsigned char 
  1498 ;;  arg             4    2[BANK0 ] unsigned long 
  1499 ;;  exp             1    1[BANK0 ] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  4    2[COMMON] unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         4       0       0       0       0
  1510 ;;      Locals:         0       6       0       0       0
  1511 ;;      Temps:          4       0       0       0       0
  1512 ;;      Totals:         8       6       0       0       0
  1513 ;;Total ram usage:       14 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function ___xxtofl
  1525  053A                     ___xxtofl:
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1529                           ;___xxtofl@sign stored from wreg
  1530  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1531  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1532  053C  00A0               	movwf	___xxtofl@sign
  1533  053D                     l1652:
  1534  053D  0820               	movf	___xxtofl@sign,w
  1535  053E  1903               	btfsc	3,2
  1536  053F  2D41               	goto	u1801
  1537  0540  2D42               	goto	u1800
  1538  0541                     u1801:
  1539  0541  2D56               	goto	l1658
  1540  0542                     u1800:
  1541  0542                     l1654:
  1542  0542  1FF5               	btfss	___xxtofl@val+3,7
  1543  0543  2D45               	goto	u1811
  1544  0544  2D46               	goto	u1810
  1545  0545                     u1811:
  1546  0545  2D56               	goto	l1658
  1547  0546                     u1810:
  1548  0546                     l1656:
  1549  0546  0972               	comf	___xxtofl@val,w
  1550  0547  00A2               	movwf	___xxtofl@arg
  1551  0548  0973               	comf	___xxtofl@val+1,w
  1552  0549  00A3               	movwf	___xxtofl@arg+1
  1553  054A  0974               	comf	___xxtofl@val+2,w
  1554  054B  00A4               	movwf	___xxtofl@arg+2
  1555  054C  0975               	comf	___xxtofl@val+3,w
  1556  054D  00A5               	movwf	___xxtofl@arg+3
  1557  054E  0AA2               	incf	___xxtofl@arg,f
  1558  054F  1903               	skipnz
  1559  0550  0AA3               	incf	___xxtofl@arg+1,f
  1560  0551  1903               	skipnz
  1561  0552  0AA4               	incf	___xxtofl@arg+2,f
  1562  0553  1903               	skipnz
  1563  0554  0AA5               	incf	___xxtofl@arg+3,f
  1564  0555  2D5E               	goto	l673
  1565  0556                     l1658:
  1566  0556  0875               	movf	___xxtofl@val+3,w
  1567  0557  00A5               	movwf	___xxtofl@arg+3
  1568  0558  0874               	movf	___xxtofl@val+2,w
  1569  0559  00A4               	movwf	___xxtofl@arg+2
  1570  055A  0873               	movf	___xxtofl@val+1,w
  1571  055B  00A3               	movwf	___xxtofl@arg+1
  1572  055C  0872               	movf	___xxtofl@val,w
  1573  055D  00A2               	movwf	___xxtofl@arg
  1574  055E                     l673:
  1575  055E  0875               	movf	___xxtofl@val+3,w
  1576  055F  0474               	iorwf	___xxtofl@val+2,w
  1577  0560  0473               	iorwf	___xxtofl@val+1,w
  1578  0561  0472               	iorwf	___xxtofl@val,w
  1579  0562  1D03               	skipz
  1580  0563  2D65               	goto	u1821
  1581  0564  2D66               	goto	u1820
  1582  0565                     u1821:
  1583  0565  2D6F               	goto	l1664
  1584  0566                     u1820:
  1585  0566                     l1660:
  1586  0566  3000               	movlw	0
  1587  0567  00F5               	movwf	?___xxtofl+3
  1588  0568  3000               	movlw	0
  1589  0569  00F4               	movwf	?___xxtofl+2
  1590  056A  3000               	movlw	0
  1591  056B  00F3               	movwf	?___xxtofl+1
  1592  056C  3000               	movlw	0
  1593  056D  00F2               	movwf	?___xxtofl
  1594  056E  2DF5               	goto	l675
  1595  056F                     l1664:
  1596  056F  3096               	movlw	150
  1597  0570  00F6               	movwf	??___xxtofl
  1598  0571  0876               	movf	??___xxtofl,w
  1599  0572  00A1               	movwf	___xxtofl@exp
  1600  0573  2D81               	goto	l1668
  1601  0574                     l1666:
  1602  0574  3001               	movlw	1
  1603  0575  00F6               	movwf	??___xxtofl
  1604  0576  0876               	movf	??___xxtofl,w
  1605  0577  07A1               	addwf	___xxtofl@exp,f
  1606  0578  3001               	movlw	1
  1607  0579                     u1835:
  1608  0579  1003               	clrc
  1609  057A  0CA5               	rrf	___xxtofl@arg+3,f
  1610  057B  0CA4               	rrf	___xxtofl@arg+2,f
  1611  057C  0CA3               	rrf	___xxtofl@arg+1,f
  1612  057D  0CA2               	rrf	___xxtofl@arg,f
  1613  057E  3EFF               	addlw	-1
  1614  057F  1D03               	skipz
  1615  0580  2D79               	goto	u1835
  1616  0581                     l1668:
  1617  0581  30FE               	movlw	254
  1618  0582  0525               	andwf	___xxtofl@arg+3,w
  1619  0583  1D03               	btfss	3,2
  1620  0584  2D86               	goto	u1841
  1621  0585  2D87               	goto	u1840
  1622  0586                     u1841:
  1623  0586  2D74               	goto	l1666
  1624  0587                     u1840:
  1625  0587  2DA3               	goto	l679
  1626  0588                     l1670:
  1627  0588  3001               	movlw	1
  1628  0589  00F6               	movwf	??___xxtofl
  1629  058A  0876               	movf	??___xxtofl,w
  1630  058B  07A1               	addwf	___xxtofl@exp,f
  1631  058C                     l1672:
  1632  058C  3001               	movlw	1
  1633  058D  07A2               	addwf	___xxtofl@arg,f
  1634  058E  3000               	movlw	0
  1635  058F  1803               	skipnc
  1636  0590  3001               	movlw	1
  1637  0591  07A3               	addwf	___xxtofl@arg+1,f
  1638  0592  3000               	movlw	0
  1639  0593  1803               	skipnc
  1640  0594  3001               	movlw	1
  1641  0595  07A4               	addwf	___xxtofl@arg+2,f
  1642  0596  3000               	movlw	0
  1643  0597  1803               	skipnc
  1644  0598  3001               	movlw	1
  1645  0599  07A5               	addwf	___xxtofl@arg+3,f
  1646  059A                     l1674:
  1647  059A  3001               	movlw	1
  1648  059B                     u1855:
  1649  059B  1003               	clrc
  1650  059C  0CA5               	rrf	___xxtofl@arg+3,f
  1651  059D  0CA4               	rrf	___xxtofl@arg+2,f
  1652  059E  0CA3               	rrf	___xxtofl@arg+1,f
  1653  059F  0CA2               	rrf	___xxtofl@arg,f
  1654  05A0  3EFF               	addlw	-1
  1655  05A1  1D03               	skipz
  1656  05A2  2D9B               	goto	u1855
  1657  05A3                     l679:
  1658  05A3  30FF               	movlw	255
  1659  05A4  0525               	andwf	___xxtofl@arg+3,w
  1660  05A5  1D03               	btfss	3,2
  1661  05A6  2DA8               	goto	u1861
  1662  05A7  2DA9               	goto	u1860
  1663  05A8                     u1861:
  1664  05A8  2D88               	goto	l1670
  1665  05A9                     u1860:
  1666  05A9  2DB5               	goto	l1678
  1667  05AA                     l1676:
  1668  05AA  3001               	movlw	1
  1669  05AB  02A1               	subwf	___xxtofl@exp,f
  1670  05AC  3001               	movlw	1
  1671  05AD  00F6               	movwf	??___xxtofl
  1672  05AE                     u1875:
  1673  05AE  1003               	clrc
  1674  05AF  0DA2               	rlf	___xxtofl@arg,f
  1675  05B0  0DA3               	rlf	___xxtofl@arg+1,f
  1676  05B1  0DA4               	rlf	___xxtofl@arg+2,f
  1677  05B2  0DA5               	rlf	___xxtofl@arg+3,f
  1678  05B3  0BF6               	decfsz	??___xxtofl,f
  1679  05B4  2DAE               	goto	u1875
  1680  05B5                     l1678:
  1681  05B5  1BA4               	btfsc	___xxtofl@arg+2,7
  1682  05B6  2DB8               	goto	u1881
  1683  05B7  2DB9               	goto	u1880
  1684  05B8                     u1881:
  1685  05B8  2DBF               	goto	l686
  1686  05B9                     u1880:
  1687  05B9                     l1680:
  1688  05B9  3002               	movlw	2
  1689  05BA  0221               	subwf	___xxtofl@exp,w
  1690  05BB  1803               	skipnc
  1691  05BC  2DBE               	goto	u1891
  1692  05BD  2DBF               	goto	u1890
  1693  05BE                     u1891:
  1694  05BE  2DAA               	goto	l1676
  1695  05BF                     u1890:
  1696  05BF                     l686:
  1697  05BF  1821               	btfsc	___xxtofl@exp,0
  1698  05C0  2DC2               	goto	u1901
  1699  05C1  2DC3               	goto	u1900
  1700  05C2                     u1901:
  1701  05C2  2DCB               	goto	l687
  1702  05C3                     u1900:
  1703  05C3                     l1682:
  1704  05C3  30FF               	movlw	255
  1705  05C4  05A2               	andwf	___xxtofl@arg,f
  1706  05C5  30FF               	movlw	255
  1707  05C6  05A3               	andwf	___xxtofl@arg+1,f
  1708  05C7  307F               	movlw	127
  1709  05C8  05A4               	andwf	___xxtofl@arg+2,f
  1710  05C9  30FF               	movlw	255
  1711  05CA  05A5               	andwf	___xxtofl@arg+3,f
  1712  05CB                     l687:
  1713  05CB  1003               	clrc
  1714  05CC  0CA1               	rrf	___xxtofl@exp,f
  1715  05CD                     l1684:
  1716  05CD  0821               	movf	___xxtofl@exp,w
  1717  05CE  00F6               	movwf	??___xxtofl
  1718  05CF  01F7               	clrf	??___xxtofl+1
  1719  05D0  01F8               	clrf	??___xxtofl+2
  1720  05D1  01F9               	clrf	??___xxtofl+3
  1721  05D2  3018               	movlw	24
  1722  05D3                     u1915:
  1723  05D3  1003               	clrc
  1724  05D4  0DF6               	rlf	??___xxtofl,f
  1725  05D5  0DF7               	rlf	??___xxtofl+1,f
  1726  05D6  0DF8               	rlf	??___xxtofl+2,f
  1727  05D7  0DF9               	rlf	??___xxtofl+3,f
  1728  05D8                     u1910:
  1729  05D8  3EFF               	addlw	-1
  1730  05D9  1D03               	skipz
  1731  05DA  2DD3               	goto	u1915
  1732  05DB  0876               	movf	??___xxtofl,w
  1733  05DC  04A2               	iorwf	___xxtofl@arg,f
  1734  05DD  0877               	movf	??___xxtofl+1,w
  1735  05DE  04A3               	iorwf	___xxtofl@arg+1,f
  1736  05DF  0878               	movf	??___xxtofl+2,w
  1737  05E0  04A4               	iorwf	___xxtofl@arg+2,f
  1738  05E1  0879               	movf	??___xxtofl+3,w
  1739  05E2  04A5               	iorwf	___xxtofl@arg+3,f
  1740  05E3                     l1686:
  1741  05E3  0820               	movf	___xxtofl@sign,w
  1742  05E4  1903               	btfsc	3,2
  1743  05E5  2DE7               	goto	u1921
  1744  05E6  2DE8               	goto	u1920
  1745  05E7                     u1921:
  1746  05E7  2DED               	goto	l1692
  1747  05E8                     u1920:
  1748  05E8                     l1688:
  1749  05E8  1FF5               	btfss	___xxtofl@val+3,7
  1750  05E9  2DEB               	goto	u1931
  1751  05EA  2DEC               	goto	u1930
  1752  05EB                     u1931:
  1753  05EB  2DED               	goto	l1692
  1754  05EC                     u1930:
  1755  05EC                     l1690:
  1756  05EC  17A5               	bsf	___xxtofl@arg+3,7
  1757  05ED                     l1692:
  1758  05ED  0825               	movf	___xxtofl@arg+3,w
  1759  05EE  00F5               	movwf	?___xxtofl+3
  1760  05EF  0824               	movf	___xxtofl@arg+2,w
  1761  05F0  00F4               	movwf	?___xxtofl+2
  1762  05F1  0823               	movf	___xxtofl@arg+1,w
  1763  05F2  00F3               	movwf	?___xxtofl+1
  1764  05F3  0822               	movf	___xxtofl@arg,w
  1765  05F4  00F2               	movwf	?___xxtofl
  1766  05F5                     l675:
  1767  05F5  0008               	return
  1768  05F6                     __end_of___xxtofl:
  1769                           
  1770                           	psect	text5
  1771  05F6                     __ptext5:	
  1772 ;; *************** function ___fltol *****************
  1773 ;; Defined at:
  1774 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  f1              4   32[BANK0 ] unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  exp1            1   42[BANK0 ] unsigned char 
  1779 ;;  sign1           1   41[BANK0 ] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  4   32[BANK0 ] long 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       4       0       0       0
  1790 ;;      Locals:         0       2       0       0       0
  1791 ;;      Temps:          0       5       0       0       0
  1792 ;;      Totals:         0      11       0       0       0
  1793 ;;Total ram usage:       11 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function ___fltol
  1805  05F6                     ___fltol:
  1806  05F6                     l1476:	
  1807                           ;incstack = 0
  1808                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1809                           
  1810  05F6  1003               	clrc
  1811  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1812  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1813  05F9  0D42               	rlf	___fltol@f1+2,w
  1814  05FA  0D43               	rlf	___fltol@f1+3,w
  1815  05FB  00C4               	movwf	??___fltol
  1816  05FC  0844               	movf	??___fltol,w
  1817  05FD  00CA               	movwf	___fltol@exp1
  1818  05FE  084A               	movf	___fltol@exp1,w
  1819  05FF  1D03               	btfss	3,2
  1820  0600  2E02               	goto	u1331
  1821  0601  2E03               	goto	u1330
  1822  0602                     u1331:
  1823  0602  2E0C               	goto	l1482
  1824  0603                     u1330:
  1825  0603                     l1478:
  1826  0603  3000               	movlw	0
  1827  0604  00C3               	movwf	?___fltol+3
  1828  0605  3000               	movlw	0
  1829  0606  00C2               	movwf	?___fltol+2
  1830  0607  3000               	movlw	0
  1831  0608  00C1               	movwf	?___fltol+1
  1832  0609  3000               	movlw	0
  1833  060A  00C0               	movwf	?___fltol
  1834  060B  2E71               	goto	l426
  1835  060C                     l1482:
  1836  060C  0840               	movf	___fltol@f1,w
  1837  060D  00C4               	movwf	??___fltol
  1838  060E  0841               	movf	___fltol@f1+1,w
  1839  060F  00C5               	movwf	??___fltol+1
  1840  0610  0842               	movf	___fltol@f1+2,w
  1841  0611  00C6               	movwf	??___fltol+2
  1842  0612  0843               	movf	___fltol@f1+3,w
  1843  0613  00C7               	movwf	??___fltol+3
  1844  0614  301F               	movlw	31
  1845  0615                     u1345:
  1846  0615  1003               	clrc
  1847  0616  0CC7               	rrf	??___fltol+3,f
  1848  0617  0CC6               	rrf	??___fltol+2,f
  1849  0618  0CC5               	rrf	??___fltol+1,f
  1850  0619  0CC4               	rrf	??___fltol,f
  1851  061A                     u1340:
  1852  061A  3EFF               	addlw	-1
  1853  061B  1D03               	skipz
  1854  061C  2E15               	goto	u1345
  1855  061D  0844               	movf	??___fltol,w
  1856  061E  00C8               	movwf	??___fltol+4
  1857  061F  0848               	movf	??___fltol+4,w
  1858  0620  00C9               	movwf	___fltol@sign1
  1859  0621                     l1484:
  1860  0621  17C2               	bsf	___fltol@f1+2,7
  1861  0622                     l1486:
  1862  0622  30FF               	movlw	255
  1863  0623  05C0               	andwf	___fltol@f1,f
  1864  0624  30FF               	movlw	255
  1865  0625  05C1               	andwf	___fltol@f1+1,f
  1866  0626  30FF               	movlw	255
  1867  0627  05C2               	andwf	___fltol@f1+2,f
  1868  0628  3000               	movlw	0
  1869  0629  05C3               	andwf	___fltol@f1+3,f
  1870  062A                     l1488:
  1871  062A  3096               	movlw	150
  1872  062B  02CA               	subwf	___fltol@exp1,f
  1873  062C                     l1490:
  1874  062C  1FCA               	btfss	___fltol@exp1,7
  1875  062D  2E2F               	goto	u1351
  1876  062E  2E30               	goto	u1350
  1877  062F                     u1351:
  1878  062F  2E4A               	goto	l1500
  1879  0630                     u1350:
  1880  0630                     l1492:
  1881  0630  084A               	movf	___fltol@exp1,w
  1882  0631  3A80               	xorlw	128
  1883  0632  3E97               	addlw	151
  1884  0633  1803               	skipnc
  1885  0634  2E36               	goto	u1361
  1886  0635  2E37               	goto	u1360
  1887  0636                     u1361:
  1888  0636  2E38               	goto	l1498
  1889  0637                     u1360:
  1890  0637  2E03               	goto	l1478
  1891  0638                     l1498:
  1892  0638  3001               	movlw	1
  1893  0639                     u1375:
  1894  0639  1003               	clrc
  1895  063A  0CC3               	rrf	___fltol@f1+3,f
  1896  063B  0CC2               	rrf	___fltol@f1+2,f
  1897  063C  0CC1               	rrf	___fltol@f1+1,f
  1898  063D  0CC0               	rrf	___fltol@f1,f
  1899  063E  3EFF               	addlw	-1
  1900  063F  1D03               	skipz
  1901  0640  2E39               	goto	u1375
  1902  0641  3001               	movlw	1
  1903  0642  00C4               	movwf	??___fltol
  1904  0643  0844               	movf	??___fltol,w
  1905  0644  07CA               	addwf	___fltol@exp1,f
  1906  0645  1D03               	btfss	3,2
  1907  0646  2E48               	goto	u1381
  1908  0647  2E49               	goto	u1380
  1909  0648                     u1381:
  1910  0648  2E38               	goto	l1498
  1911  0649                     u1380:
  1912  0649  2E61               	goto	l1508
  1913  064A                     l1500:
  1914  064A  3020               	movlw	32
  1915  064B  024A               	subwf	___fltol@exp1,w
  1916  064C  1C03               	skipc
  1917  064D  2E4F               	goto	u1391
  1918  064E  2E50               	goto	u1390
  1919  064F                     u1391:
  1920  064F  2E5C               	goto	l433
  1921  0650                     u1390:
  1922  0650  2E03               	goto	l1478
  1923  0651                     l1506:
  1924  0651  3001               	movlw	1
  1925  0652  00C4               	movwf	??___fltol
  1926  0653                     u1405:
  1927  0653  1003               	clrc
  1928  0654  0DC0               	rlf	___fltol@f1,f
  1929  0655  0DC1               	rlf	___fltol@f1+1,f
  1930  0656  0DC2               	rlf	___fltol@f1+2,f
  1931  0657  0DC3               	rlf	___fltol@f1+3,f
  1932  0658  0BC4               	decfsz	??___fltol,f
  1933  0659  2E53               	goto	u1405
  1934  065A  3001               	movlw	1
  1935  065B  02CA               	subwf	___fltol@exp1,f
  1936  065C                     l433:
  1937  065C  084A               	movf	___fltol@exp1,w
  1938  065D  1D03               	btfss	3,2
  1939  065E  2E60               	goto	u1411
  1940  065F  2E61               	goto	u1410
  1941  0660                     u1411:
  1942  0660  2E51               	goto	l1506
  1943  0661                     u1410:
  1944  0661                     l1508:
  1945  0661  0849               	movf	___fltol@sign1,w
  1946  0662  1903               	btfsc	3,2
  1947  0663  2E65               	goto	u1421
  1948  0664  2E66               	goto	u1420
  1949  0665                     u1421:
  1950  0665  2E71               	goto	l436
  1951  0666                     u1420:
  1952  0666                     l1510:
  1953  0666  09C0               	comf	___fltol@f1,f
  1954  0667  09C1               	comf	___fltol@f1+1,f
  1955  0668  09C2               	comf	___fltol@f1+2,f
  1956  0669  09C3               	comf	___fltol@f1+3,f
  1957  066A  0AC0               	incf	___fltol@f1,f
  1958  066B  1903               	skipnz
  1959  066C  0AC1               	incf	___fltol@f1+1,f
  1960  066D  1903               	skipnz
  1961  066E  0AC2               	incf	___fltol@f1+2,f
  1962  066F  1903               	skipnz
  1963  0670  0AC3               	incf	___fltol@f1+3,f
  1964  0671                     l436:
  1965  0671                     l426:
  1966  0671  0008               	return
  1967  0672                     __end_of___fltol:
  1968                           
  1969                           	psect	text6
  1970  0025                     __ptext6:	
  1971 ;; *************** function ___flmul *****************
  1972 ;; Defined at:
  1973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  b               4    6[BANK0 ] long 
  1976 ;;  a               4   10[BANK0 ] long 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  prod            4   26[BANK0 ] struct .
  1979 ;;  grs             4   20[BANK0 ] unsigned long 
  1980 ;;  temp            2   30[BANK0 ] struct .
  1981 ;;  bexp            1   25[BANK0 ] unsigned char 
  1982 ;;  aexp            1   24[BANK0 ] unsigned char 
  1983 ;;  sign            1   19[BANK0 ] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  4    6[BANK0 ] unsigned char 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       8       0       0       0
  1994 ;;      Locals:         0      13       0       0       0
  1995 ;;      Temps:          0       5       0       0       0
  1996 ;;      Totals:         0      26       0       0       0
  1997 ;;Total ram usage:       26 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    2
  2000 ;; This function calls:
  2001 ;;		__Umul8_16
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function ___flmul
  2009  0025                     ___flmul:
  2010  0025                     l1512:	
  2011                           ;incstack = 0
  2012                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2013                           
  2014  0025  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0026  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0027  0829               	movf	___flmul@b+3,w
  2017  0028  3980               	andlw	128
  2018  0029  00AE               	movwf	??___flmul
  2019  002A  082E               	movf	??___flmul,w
  2020  002B  00B3               	movwf	___flmul@sign
  2021  002C                     l1514:
  2022  002C  0829               	movf	___flmul@b+3,w
  2023  002D  00AE               	movwf	??___flmul
  2024  002E  072E               	addwf	??___flmul,w
  2025  002F  00AF               	movwf	??___flmul+1
  2026  0030  082F               	movf	??___flmul+1,w
  2027  0031  00B9               	movwf	___flmul@bexp
  2028  0032                     l1516:
  2029  0032  1FA8               	btfss	___flmul@b+2,7
  2030  0033  2835               	goto	u1431
  2031  0034  2836               	goto	u1430
  2032  0035                     u1431:
  2033  0035  2837               	goto	l1520
  2034  0036                     u1430:
  2035  0036                     l1518:
  2036  0036  1439               	bsf	___flmul@bexp,0
  2037  0037                     l1520:
  2038  0037  0839               	movf	___flmul@bexp,w
  2039  0038  1903               	btfsc	3,2
  2040  0039  283B               	goto	u1441
  2041  003A  283C               	goto	u1440
  2042  003B                     u1441:
  2043  003B  284B               	goto	l1528
  2044  003C                     u1440:
  2045  003C                     l1522:
  2046  003C  0A39               	incf	___flmul@bexp,w
  2047  003D  1D03               	btfss	3,2
  2048  003E  2840               	goto	u1451
  2049  003F  2841               	goto	u1450
  2050  0040                     u1451:
  2051  0040  2849               	goto	l1526
  2052  0041                     u1450:
  2053  0041                     l1524:
  2054  0041  3000               	movlw	0
  2055  0042  00A9               	movwf	___flmul@b+3
  2056  0043  3000               	movlw	0
  2057  0044  00A8               	movwf	___flmul@b+2
  2058  0045  3000               	movlw	0
  2059  0046  00A7               	movwf	___flmul@b+1
  2060  0047  3000               	movlw	0
  2061  0048  00A6               	movwf	___flmul@b
  2062  0049                     l1526:
  2063  0049  17A8               	bsf	___flmul@b+2,7
  2064  004A  2853               	goto	l1530
  2065  004B                     l1528:
  2066  004B  3000               	movlw	0
  2067  004C  00A9               	movwf	___flmul@b+3
  2068  004D  3000               	movlw	0
  2069  004E  00A8               	movwf	___flmul@b+2
  2070  004F  3000               	movlw	0
  2071  0050  00A7               	movwf	___flmul@b+1
  2072  0051  3000               	movlw	0
  2073  0052  00A6               	movwf	___flmul@b
  2074  0053                     l1530:
  2075  0053  082D               	movf	___flmul@a+3,w
  2076  0054  3980               	andlw	128
  2077  0055  00AE               	movwf	??___flmul
  2078  0056  082E               	movf	??___flmul,w
  2079  0057  06B3               	xorwf	___flmul@sign,f
  2080  0058                     l1532:
  2081  0058  082D               	movf	___flmul@a+3,w
  2082  0059  00AE               	movwf	??___flmul
  2083  005A  072E               	addwf	??___flmul,w
  2084  005B  00AF               	movwf	??___flmul+1
  2085  005C  082F               	movf	??___flmul+1,w
  2086  005D  00B8               	movwf	___flmul@aexp
  2087  005E                     l1534:
  2088  005E  1FAC               	btfss	___flmul@a+2,7
  2089  005F  2861               	goto	u1461
  2090  0060  2862               	goto	u1460
  2091  0061                     u1461:
  2092  0061  2863               	goto	l1538
  2093  0062                     u1460:
  2094  0062                     l1536:
  2095  0062  1438               	bsf	___flmul@aexp,0
  2096  0063                     l1538:
  2097  0063  0838               	movf	___flmul@aexp,w
  2098  0064  1903               	btfsc	3,2
  2099  0065  2867               	goto	u1471
  2100  0066  2868               	goto	u1470
  2101  0067                     u1471:
  2102  0067  2877               	goto	l1546
  2103  0068                     u1470:
  2104  0068                     l1540:
  2105  0068  0A38               	incf	___flmul@aexp,w
  2106  0069  1D03               	btfss	3,2
  2107  006A  286C               	goto	u1481
  2108  006B  286D               	goto	u1480
  2109  006C                     u1481:
  2110  006C  2875               	goto	l1544
  2111  006D                     u1480:
  2112  006D                     l1542:
  2113  006D  3000               	movlw	0
  2114  006E  00AD               	movwf	___flmul@a+3
  2115  006F  3000               	movlw	0
  2116  0070  00AC               	movwf	___flmul@a+2
  2117  0071  3000               	movlw	0
  2118  0072  00AB               	movwf	___flmul@a+1
  2119  0073  3000               	movlw	0
  2120  0074  00AA               	movwf	___flmul@a
  2121  0075                     l1544:
  2122  0075  17AC               	bsf	___flmul@a+2,7
  2123  0076  287F               	goto	l1548
  2124  0077                     l1546:
  2125  0077  3000               	movlw	0
  2126  0078  00AD               	movwf	___flmul@a+3
  2127  0079  3000               	movlw	0
  2128  007A  00AC               	movwf	___flmul@a+2
  2129  007B  3000               	movlw	0
  2130  007C  00AB               	movwf	___flmul@a+1
  2131  007D  3000               	movlw	0
  2132  007E  00AA               	movwf	___flmul@a
  2133  007F                     l1548:
  2134  007F  0838               	movf	___flmul@aexp,w
  2135  0080  1903               	btfsc	3,2
  2136  0081  2883               	goto	u1491
  2137  0082  2884               	goto	u1490
  2138  0083                     u1491:
  2139  0083  2889               	goto	l1552
  2140  0084                     u1490:
  2141  0084                     l1550:
  2142  0084  0839               	movf	___flmul@bexp,w
  2143  0085  1D03               	btfss	3,2
  2144  0086  2888               	goto	u1501
  2145  0087  2889               	goto	u1500
  2146  0088                     u1501:
  2147  0088  2892               	goto	l1556
  2148  0089                     u1500:
  2149  0089                     l1552:
  2150  0089  3000               	movlw	0
  2151  008A  00A9               	movwf	?___flmul+3
  2152  008B  3000               	movlw	0
  2153  008C  00A8               	movwf	?___flmul+2
  2154  008D  3000               	movlw	0
  2155  008E  00A7               	movwf	?___flmul+1
  2156  008F  3000               	movlw	0
  2157  0090  00A6               	movwf	?___flmul
  2158  0091  2B85               	goto	l629
  2159  0092                     l1556:
  2160  0092  0826               	movf	___flmul@b,w
  2161  0093  00AE               	movwf	??___flmul
  2162  0094  082E               	movf	??___flmul,w
  2163  0095  00F2               	movwf	__Umul8_16@multiplicand
  2164  0096  082C               	movf	___flmul@a+2,w
  2165  0097  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2166  009C  0873               	movf	?__Umul8_16+1,w
  2167  009D  1283               	bcf	3,5	;RP0=0, select bank0
  2168  009E  1303               	bcf	3,6	;RP1=0, select bank0
  2169  009F  00BF               	movwf	___flmul@temp+1
  2170  00A0  0872               	movf	?__Umul8_16,w
  2171  00A1  00BE               	movwf	___flmul@temp
  2172  00A2                     l1558:
  2173  00A2  083E               	movf	___flmul@temp,w
  2174  00A3  00AE               	movwf	??___flmul
  2175  00A4  01AF               	clrf	??___flmul+1
  2176  00A5  01B0               	clrf	??___flmul+2
  2177  00A6  01B1               	clrf	??___flmul+3
  2178  00A7  0831               	movf	??___flmul+3,w
  2179  00A8  00B7               	movwf	___flmul@grs+3
  2180  00A9  0830               	movf	??___flmul+2,w
  2181  00AA  00B6               	movwf	___flmul@grs+2
  2182  00AB  082F               	movf	??___flmul+1,w
  2183  00AC  00B5               	movwf	___flmul@grs+1
  2184  00AD  082E               	movf	??___flmul,w
  2185  00AE  00B4               	movwf	___flmul@grs
  2186  00AF                     l1560:
  2187  00AF  083F               	movf	___flmul@temp+1,w
  2188  00B0  00AE               	movwf	??___flmul
  2189  00B1  01AF               	clrf	??___flmul+1
  2190  00B2  01B0               	clrf	??___flmul+2
  2191  00B3  01B1               	clrf	??___flmul+3
  2192  00B4  0831               	movf	??___flmul+3,w
  2193  00B5  00BD               	movwf	___flmul@prod+3
  2194  00B6  0830               	movf	??___flmul+2,w
  2195  00B7  00BC               	movwf	___flmul@prod+2
  2196  00B8  082F               	movf	??___flmul+1,w
  2197  00B9  00BB               	movwf	___flmul@prod+1
  2198  00BA  082E               	movf	??___flmul,w
  2199  00BB  00BA               	movwf	___flmul@prod
  2200  00BC  0827               	movf	___flmul@b+1,w
  2201  00BD  00AE               	movwf	??___flmul
  2202  00BE  082E               	movf	??___flmul,w
  2203  00BF  00F2               	movwf	__Umul8_16@multiplicand
  2204  00C0  082B               	movf	___flmul@a+1,w
  2205  00C1  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2206  00C6  0873               	movf	?__Umul8_16+1,w
  2207  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2208  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2209  00C9  00BF               	movwf	___flmul@temp+1
  2210  00CA  0872               	movf	?__Umul8_16,w
  2211  00CB  00BE               	movwf	___flmul@temp
  2212  00CC                     l1562:
  2213  00CC  083E               	movf	___flmul@temp,w
  2214  00CD  00AE               	movwf	??___flmul
  2215  00CE  01AF               	clrf	??___flmul+1
  2216  00CF  01B0               	clrf	??___flmul+2
  2217  00D0  01B1               	clrf	??___flmul+3
  2218  00D1  082E               	movf	??___flmul,w
  2219  00D2  07B4               	addwf	___flmul@grs,f
  2220  00D3  082F               	movf	??___flmul+1,w
  2221  00D4  1103               	clrz
  2222  00D5  1803               	skipnc
  2223  00D6  3E01               	addlw	1
  2224  00D7  1903               	skipnz
  2225  00D8  28DA               	goto	u1511
  2226  00D9  07B5               	addwf	___flmul@grs+1,f
  2227  00DA                     u1511:
  2228  00DA  0830               	movf	??___flmul+2,w
  2229  00DB  1103               	clrz
  2230  00DC  1803               	skipnc
  2231  00DD  3E01               	addlw	1
  2232  00DE  1903               	skipnz
  2233  00DF  28E1               	goto	u1512
  2234  00E0  07B6               	addwf	___flmul@grs+2,f
  2235  00E1                     u1512:
  2236  00E1  0831               	movf	??___flmul+3,w
  2237  00E2  1103               	clrz
  2238  00E3  1803               	skipnc
  2239  00E4  3E01               	addlw	1
  2240  00E5  1903               	skipnz
  2241  00E6  28E8               	goto	u1513
  2242  00E7  07B7               	addwf	___flmul@grs+3,f
  2243  00E8                     u1513:
  2244  00E8                     l1564:
  2245  00E8  083F               	movf	___flmul@temp+1,w
  2246  00E9  00AE               	movwf	??___flmul
  2247  00EA  01AF               	clrf	??___flmul+1
  2248  00EB  01B0               	clrf	??___flmul+2
  2249  00EC  01B1               	clrf	??___flmul+3
  2250  00ED  082E               	movf	??___flmul,w
  2251  00EE  07BA               	addwf	___flmul@prod,f
  2252  00EF  082F               	movf	??___flmul+1,w
  2253  00F0  1103               	clrz
  2254  00F1  1803               	skipnc
  2255  00F2  3E01               	addlw	1
  2256  00F3  1903               	skipnz
  2257  00F4  28F6               	goto	u1521
  2258  00F5  07BB               	addwf	___flmul@prod+1,f
  2259  00F6                     u1521:
  2260  00F6  0830               	movf	??___flmul+2,w
  2261  00F7  1103               	clrz
  2262  00F8  1803               	skipnc
  2263  00F9  3E01               	addlw	1
  2264  00FA  1903               	skipnz
  2265  00FB  28FD               	goto	u1522
  2266  00FC  07BC               	addwf	___flmul@prod+2,f
  2267  00FD                     u1522:
  2268  00FD  0831               	movf	??___flmul+3,w
  2269  00FE  1103               	clrz
  2270  00FF  1803               	skipnc
  2271  0100  3E01               	addlw	1
  2272  0101  1903               	skipnz
  2273  0102  2904               	goto	u1523
  2274  0103  07BD               	addwf	___flmul@prod+3,f
  2275  0104                     u1523:
  2276  0104  0828               	movf	___flmul@b+2,w
  2277  0105  00AE               	movwf	??___flmul
  2278  0106  082E               	movf	??___flmul,w
  2279  0107  00F2               	movwf	__Umul8_16@multiplicand
  2280  0108  082A               	movf	___flmul@a,w
  2281  0109  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2282  010E  0873               	movf	?__Umul8_16+1,w
  2283  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0111  00BF               	movwf	___flmul@temp+1
  2286  0112  0872               	movf	?__Umul8_16,w
  2287  0113  00BE               	movwf	___flmul@temp
  2288  0114                     l1566:
  2289  0114  083E               	movf	___flmul@temp,w
  2290  0115  00AE               	movwf	??___flmul
  2291  0116  01AF               	clrf	??___flmul+1
  2292  0117  01B0               	clrf	??___flmul+2
  2293  0118  01B1               	clrf	??___flmul+3
  2294  0119  082E               	movf	??___flmul,w
  2295  011A  07B4               	addwf	___flmul@grs,f
  2296  011B  082F               	movf	??___flmul+1,w
  2297  011C  1103               	clrz
  2298  011D  1803               	skipnc
  2299  011E  3E01               	addlw	1
  2300  011F  1903               	skipnz
  2301  0120  2922               	goto	u1531
  2302  0121  07B5               	addwf	___flmul@grs+1,f
  2303  0122                     u1531:
  2304  0122  0830               	movf	??___flmul+2,w
  2305  0123  1103               	clrz
  2306  0124  1803               	skipnc
  2307  0125  3E01               	addlw	1
  2308  0126  1903               	skipnz
  2309  0127  2929               	goto	u1532
  2310  0128  07B6               	addwf	___flmul@grs+2,f
  2311  0129                     u1532:
  2312  0129  0831               	movf	??___flmul+3,w
  2313  012A  1103               	clrz
  2314  012B  1803               	skipnc
  2315  012C  3E01               	addlw	1
  2316  012D  1903               	skipnz
  2317  012E  2930               	goto	u1533
  2318  012F  07B7               	addwf	___flmul@grs+3,f
  2319  0130                     u1533:
  2320  0130                     l1568:
  2321  0130  083F               	movf	___flmul@temp+1,w
  2322  0131  00AE               	movwf	??___flmul
  2323  0132  01AF               	clrf	??___flmul+1
  2324  0133  01B0               	clrf	??___flmul+2
  2325  0134  01B1               	clrf	??___flmul+3
  2326  0135  082E               	movf	??___flmul,w
  2327  0136  07BA               	addwf	___flmul@prod,f
  2328  0137  082F               	movf	??___flmul+1,w
  2329  0138  1103               	clrz
  2330  0139  1803               	skipnc
  2331  013A  3E01               	addlw	1
  2332  013B  1903               	skipnz
  2333  013C  293E               	goto	u1541
  2334  013D  07BB               	addwf	___flmul@prod+1,f
  2335  013E                     u1541:
  2336  013E  0830               	movf	??___flmul+2,w
  2337  013F  1103               	clrz
  2338  0140  1803               	skipnc
  2339  0141  3E01               	addlw	1
  2340  0142  1903               	skipnz
  2341  0143  2945               	goto	u1542
  2342  0144  07BC               	addwf	___flmul@prod+2,f
  2343  0145                     u1542:
  2344  0145  0831               	movf	??___flmul+3,w
  2345  0146  1103               	clrz
  2346  0147  1803               	skipnc
  2347  0148  3E01               	addlw	1
  2348  0149  1903               	skipnz
  2349  014A  294C               	goto	u1543
  2350  014B  07BD               	addwf	___flmul@prod+3,f
  2351  014C                     u1543:
  2352  014C                     l1570:
  2353  014C  3008               	movlw	8
  2354  014D  00AE               	movwf	??___flmul
  2355  014E                     u1555:
  2356  014E  1003               	clrc
  2357  014F  0DB4               	rlf	___flmul@grs,f
  2358  0150  0DB5               	rlf	___flmul@grs+1,f
  2359  0151  0DB6               	rlf	___flmul@grs+2,f
  2360  0152  0DB7               	rlf	___flmul@grs+3,f
  2361  0153  0BAE               	decfsz	??___flmul,f
  2362  0154  294E               	goto	u1555
  2363  0155                     l1572:
  2364  0155  0827               	movf	___flmul@b+1,w
  2365  0156  00AE               	movwf	??___flmul
  2366  0157  082E               	movf	??___flmul,w
  2367  0158  00F2               	movwf	__Umul8_16@multiplicand
  2368  0159  082A               	movf	___flmul@a,w
  2369  015A  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2370  015F  0873               	movf	?__Umul8_16+1,w
  2371  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2372  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2373  0162  00BF               	movwf	___flmul@temp+1
  2374  0163  0872               	movf	?__Umul8_16,w
  2375  0164  00BE               	movwf	___flmul@temp
  2376  0165                     l1574:
  2377  0165  083E               	movf	___flmul@temp,w
  2378  0166  00AE               	movwf	??___flmul
  2379  0167  083F               	movf	___flmul@temp+1,w
  2380  0168  00AF               	movwf	??___flmul+1
  2381  0169  01B0               	clrf	??___flmul+2
  2382  016A  01B1               	clrf	??___flmul+3
  2383  016B  082E               	movf	??___flmul,w
  2384  016C  07B4               	addwf	___flmul@grs,f
  2385  016D  082F               	movf	??___flmul+1,w
  2386  016E  1103               	clrz
  2387  016F  1803               	skipnc
  2388  0170  3E01               	addlw	1
  2389  0171  1903               	skipnz
  2390  0172  2974               	goto	u1561
  2391  0173  07B5               	addwf	___flmul@grs+1,f
  2392  0174                     u1561:
  2393  0174  0830               	movf	??___flmul+2,w
  2394  0175  1103               	clrz
  2395  0176  1803               	skipnc
  2396  0177  3E01               	addlw	1
  2397  0178  1903               	skipnz
  2398  0179  297B               	goto	u1562
  2399  017A  07B6               	addwf	___flmul@grs+2,f
  2400  017B                     u1562:
  2401  017B  0831               	movf	??___flmul+3,w
  2402  017C  1103               	clrz
  2403  017D  1803               	skipnc
  2404  017E  3E01               	addlw	1
  2405  017F  1903               	skipnz
  2406  0180  2982               	goto	u1563
  2407  0181  07B7               	addwf	___flmul@grs+3,f
  2408  0182                     u1563:
  2409  0182                     l1576:
  2410  0182  0826               	movf	___flmul@b,w
  2411  0183  00AE               	movwf	??___flmul
  2412  0184  082E               	movf	??___flmul,w
  2413  0185  00F2               	movwf	__Umul8_16@multiplicand
  2414  0186  082B               	movf	___flmul@a+1,w
  2415  0187  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2416  018C  0873               	movf	?__Umul8_16+1,w
  2417  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2418  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2419  018F  00BF               	movwf	___flmul@temp+1
  2420  0190  0872               	movf	?__Umul8_16,w
  2421  0191  00BE               	movwf	___flmul@temp
  2422  0192                     l1578:
  2423  0192  083E               	movf	___flmul@temp,w
  2424  0193  00AE               	movwf	??___flmul
  2425  0194  083F               	movf	___flmul@temp+1,w
  2426  0195  00AF               	movwf	??___flmul+1
  2427  0196  01B0               	clrf	??___flmul+2
  2428  0197  01B1               	clrf	??___flmul+3
  2429  0198  082E               	movf	??___flmul,w
  2430  0199  07B4               	addwf	___flmul@grs,f
  2431  019A  082F               	movf	??___flmul+1,w
  2432  019B  1103               	clrz
  2433  019C  1803               	skipnc
  2434  019D  3E01               	addlw	1
  2435  019E  1903               	skipnz
  2436  019F  29A1               	goto	u1571
  2437  01A0  07B5               	addwf	___flmul@grs+1,f
  2438  01A1                     u1571:
  2439  01A1  0830               	movf	??___flmul+2,w
  2440  01A2  1103               	clrz
  2441  01A3  1803               	skipnc
  2442  01A4  3E01               	addlw	1
  2443  01A5  1903               	skipnz
  2444  01A6  29A8               	goto	u1572
  2445  01A7  07B6               	addwf	___flmul@grs+2,f
  2446  01A8                     u1572:
  2447  01A8  0831               	movf	??___flmul+3,w
  2448  01A9  1103               	clrz
  2449  01AA  1803               	skipnc
  2450  01AB  3E01               	addlw	1
  2451  01AC  1903               	skipnz
  2452  01AD  29AF               	goto	u1573
  2453  01AE  07B7               	addwf	___flmul@grs+3,f
  2454  01AF                     u1573:
  2455  01AF                     l1580:
  2456  01AF  3008               	movlw	8
  2457  01B0  00AE               	movwf	??___flmul
  2458  01B1                     u1585:
  2459  01B1  1003               	clrc
  2460  01B2  0DB4               	rlf	___flmul@grs,f
  2461  01B3  0DB5               	rlf	___flmul@grs+1,f
  2462  01B4  0DB6               	rlf	___flmul@grs+2,f
  2463  01B5  0DB7               	rlf	___flmul@grs+3,f
  2464  01B6  0BAE               	decfsz	??___flmul,f
  2465  01B7  29B1               	goto	u1585
  2466  01B8  0826               	movf	___flmul@b,w
  2467  01B9  00AE               	movwf	??___flmul
  2468  01BA  082E               	movf	??___flmul,w
  2469  01BB  00F2               	movwf	__Umul8_16@multiplicand
  2470  01BC  082A               	movf	___flmul@a,w
  2471  01BD  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2472  01C2  0873               	movf	?__Umul8_16+1,w
  2473  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2474  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2475  01C5  00BF               	movwf	___flmul@temp+1
  2476  01C6  0872               	movf	?__Umul8_16,w
  2477  01C7  00BE               	movwf	___flmul@temp
  2478  01C8                     l1582:
  2479  01C8  083E               	movf	___flmul@temp,w
  2480  01C9  00AE               	movwf	??___flmul
  2481  01CA  083F               	movf	___flmul@temp+1,w
  2482  01CB  00AF               	movwf	??___flmul+1
  2483  01CC  01B0               	clrf	??___flmul+2
  2484  01CD  01B1               	clrf	??___flmul+3
  2485  01CE  082E               	movf	??___flmul,w
  2486  01CF  07B4               	addwf	___flmul@grs,f
  2487  01D0  082F               	movf	??___flmul+1,w
  2488  01D1  1103               	clrz
  2489  01D2  1803               	skipnc
  2490  01D3  3E01               	addlw	1
  2491  01D4  1903               	skipnz
  2492  01D5  29D7               	goto	u1591
  2493  01D6  07B5               	addwf	___flmul@grs+1,f
  2494  01D7                     u1591:
  2495  01D7  0830               	movf	??___flmul+2,w
  2496  01D8  1103               	clrz
  2497  01D9  1803               	skipnc
  2498  01DA  3E01               	addlw	1
  2499  01DB  1903               	skipnz
  2500  01DC  29DE               	goto	u1592
  2501  01DD  07B6               	addwf	___flmul@grs+2,f
  2502  01DE                     u1592:
  2503  01DE  0831               	movf	??___flmul+3,w
  2504  01DF  1103               	clrz
  2505  01E0  1803               	skipnc
  2506  01E1  3E01               	addlw	1
  2507  01E2  1903               	skipnz
  2508  01E3  29E5               	goto	u1593
  2509  01E4  07B7               	addwf	___flmul@grs+3,f
  2510  01E5                     u1593:
  2511  01E5                     l1584:
  2512  01E5  0827               	movf	___flmul@b+1,w
  2513  01E6  00AE               	movwf	??___flmul
  2514  01E7  082E               	movf	??___flmul,w
  2515  01E8  00F2               	movwf	__Umul8_16@multiplicand
  2516  01E9  082C               	movf	___flmul@a+2,w
  2517  01EA  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2518  01EF  0873               	movf	?__Umul8_16+1,w
  2519  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2520  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2521  01F2  00BF               	movwf	___flmul@temp+1
  2522  01F3  0872               	movf	?__Umul8_16,w
  2523  01F4  00BE               	movwf	___flmul@temp
  2524  01F5  083E               	movf	___flmul@temp,w
  2525  01F6  00AE               	movwf	??___flmul
  2526  01F7  083F               	movf	___flmul@temp+1,w
  2527  01F8  00AF               	movwf	??___flmul+1
  2528  01F9  01B0               	clrf	??___flmul+2
  2529  01FA  01B1               	clrf	??___flmul+3
  2530  01FB  082E               	movf	??___flmul,w
  2531  01FC  07BA               	addwf	___flmul@prod,f
  2532  01FD  082F               	movf	??___flmul+1,w
  2533  01FE  1103               	clrz
  2534  01FF  1803               	skipnc
  2535  0200  3E01               	addlw	1
  2536  0201  1903               	skipnz
  2537  0202  2A04               	goto	u1601
  2538  0203  07BB               	addwf	___flmul@prod+1,f
  2539  0204                     u1601:
  2540  0204  0830               	movf	??___flmul+2,w
  2541  0205  1103               	clrz
  2542  0206  1803               	skipnc
  2543  0207  3E01               	addlw	1
  2544  0208  1903               	skipnz
  2545  0209  2A0B               	goto	u1602
  2546  020A  07BC               	addwf	___flmul@prod+2,f
  2547  020B                     u1602:
  2548  020B  0831               	movf	??___flmul+3,w
  2549  020C  1103               	clrz
  2550  020D  1803               	skipnc
  2551  020E  3E01               	addlw	1
  2552  020F  1903               	skipnz
  2553  0210  2A12               	goto	u1603
  2554  0211  07BD               	addwf	___flmul@prod+3,f
  2555  0212                     u1603:
  2556  0212                     l1586:
  2557  0212  0828               	movf	___flmul@b+2,w
  2558  0213  00AE               	movwf	??___flmul
  2559  0214  082E               	movf	??___flmul,w
  2560  0215  00F2               	movwf	__Umul8_16@multiplicand
  2561  0216  082B               	movf	___flmul@a+1,w
  2562  0217  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2563  021C  0873               	movf	?__Umul8_16+1,w
  2564  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2565  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2566  021F  00BF               	movwf	___flmul@temp+1
  2567  0220  0872               	movf	?__Umul8_16,w
  2568  0221  00BE               	movwf	___flmul@temp
  2569  0222                     l1588:
  2570  0222  083E               	movf	___flmul@temp,w
  2571  0223  00AE               	movwf	??___flmul
  2572  0224  083F               	movf	___flmul@temp+1,w
  2573  0225  00AF               	movwf	??___flmul+1
  2574  0226  01B0               	clrf	??___flmul+2
  2575  0227  01B1               	clrf	??___flmul+3
  2576  0228  082E               	movf	??___flmul,w
  2577  0229  07BA               	addwf	___flmul@prod,f
  2578  022A  082F               	movf	??___flmul+1,w
  2579  022B  1103               	clrz
  2580  022C  1803               	skipnc
  2581  022D  3E01               	addlw	1
  2582  022E  1903               	skipnz
  2583  022F  2A31               	goto	u1611
  2584  0230  07BB               	addwf	___flmul@prod+1,f
  2585  0231                     u1611:
  2586  0231  0830               	movf	??___flmul+2,w
  2587  0232  1103               	clrz
  2588  0233  1803               	skipnc
  2589  0234  3E01               	addlw	1
  2590  0235  1903               	skipnz
  2591  0236  2A38               	goto	u1612
  2592  0237  07BC               	addwf	___flmul@prod+2,f
  2593  0238                     u1612:
  2594  0238  0831               	movf	??___flmul+3,w
  2595  0239  1103               	clrz
  2596  023A  1803               	skipnc
  2597  023B  3E01               	addlw	1
  2598  023C  1903               	skipnz
  2599  023D  2A3F               	goto	u1613
  2600  023E  07BD               	addwf	___flmul@prod+3,f
  2601  023F                     u1613:
  2602  023F  0828               	movf	___flmul@b+2,w
  2603  0240  00AE               	movwf	??___flmul
  2604  0241  082E               	movf	??___flmul,w
  2605  0242  00F2               	movwf	__Umul8_16@multiplicand
  2606  0243  082C               	movf	___flmul@a+2,w
  2607  0244  120A  158A  27D9  120A  118A  	fcall	__Umul8_16
  2608  0249  0873               	movf	?__Umul8_16+1,w
  2609  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2610  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2611  024C  00BF               	movwf	___flmul@temp+1
  2612  024D  0872               	movf	?__Umul8_16,w
  2613  024E  00BE               	movwf	___flmul@temp
  2614  024F                     l1590:
  2615  024F  083E               	movf	___flmul@temp,w
  2616  0250  00AE               	movwf	??___flmul
  2617  0251  083F               	movf	___flmul@temp+1,w
  2618  0252  00AF               	movwf	??___flmul+1
  2619  0253  01B0               	clrf	??___flmul+2
  2620  0254  01B1               	clrf	??___flmul+3
  2621  0255  3008               	movlw	8
  2622  0256                     u1625:
  2623  0256  1003               	clrc
  2624  0257  0DAE               	rlf	??___flmul,f
  2625  0258  0DAF               	rlf	??___flmul+1,f
  2626  0259  0DB0               	rlf	??___flmul+2,f
  2627  025A  0DB1               	rlf	??___flmul+3,f
  2628  025B                     u1620:
  2629  025B  3EFF               	addlw	-1
  2630  025C  1D03               	skipz
  2631  025D  2A56               	goto	u1625
  2632  025E  082E               	movf	??___flmul,w
  2633  025F  07BA               	addwf	___flmul@prod,f
  2634  0260  082F               	movf	??___flmul+1,w
  2635  0261  1103               	clrz
  2636  0262  1803               	skipnc
  2637  0263  3E01               	addlw	1
  2638  0264  1903               	skipnz
  2639  0265  2A67               	goto	u1631
  2640  0266  07BB               	addwf	___flmul@prod+1,f
  2641  0267                     u1631:
  2642  0267  0830               	movf	??___flmul+2,w
  2643  0268  1103               	clrz
  2644  0269  1803               	skipnc
  2645  026A  3E01               	addlw	1
  2646  026B  1903               	skipnz
  2647  026C  2A6E               	goto	u1632
  2648  026D  07BC               	addwf	___flmul@prod+2,f
  2649  026E                     u1632:
  2650  026E  0831               	movf	??___flmul+3,w
  2651  026F  1103               	clrz
  2652  0270  1803               	skipnc
  2653  0271  3E01               	addlw	1
  2654  0272  1903               	skipnz
  2655  0273  2A75               	goto	u1633
  2656  0274  07BD               	addwf	___flmul@prod+3,f
  2657  0275                     u1633:
  2658  0275                     l1592:
  2659  0275  0834               	movf	___flmul@grs,w
  2660  0276  00AE               	movwf	??___flmul
  2661  0277  0835               	movf	___flmul@grs+1,w
  2662  0278  00AF               	movwf	??___flmul+1
  2663  0279  0836               	movf	___flmul@grs+2,w
  2664  027A  00B0               	movwf	??___flmul+2
  2665  027B  0837               	movf	___flmul@grs+3,w
  2666  027C  00B1               	movwf	??___flmul+3
  2667  027D  3018               	movlw	24
  2668  027E                     u1645:
  2669  027E  1003               	clrc
  2670  027F  0CB1               	rrf	??___flmul+3,f
  2671  0280  0CB0               	rrf	??___flmul+2,f
  2672  0281  0CAF               	rrf	??___flmul+1,f
  2673  0282  0CAE               	rrf	??___flmul,f
  2674  0283                     u1640:
  2675  0283  3EFF               	addlw	-1
  2676  0284  1D03               	skipz
  2677  0285  2A7E               	goto	u1645
  2678  0286  082E               	movf	??___flmul,w
  2679  0287  07BA               	addwf	___flmul@prod,f
  2680  0288  082F               	movf	??___flmul+1,w
  2681  0289  1103               	clrz
  2682  028A  1803               	skipnc
  2683  028B  3E01               	addlw	1
  2684  028C  1903               	skipnz
  2685  028D  2A8F               	goto	u1651
  2686  028E  07BB               	addwf	___flmul@prod+1,f
  2687  028F                     u1651:
  2688  028F  0830               	movf	??___flmul+2,w
  2689  0290  1103               	clrz
  2690  0291  1803               	skipnc
  2691  0292  3E01               	addlw	1
  2692  0293  1903               	skipnz
  2693  0294  2A96               	goto	u1652
  2694  0295  07BC               	addwf	___flmul@prod+2,f
  2695  0296                     u1652:
  2696  0296  0831               	movf	??___flmul+3,w
  2697  0297  1103               	clrz
  2698  0298  1803               	skipnc
  2699  0299  3E01               	addlw	1
  2700  029A  1903               	skipnz
  2701  029B  2A9D               	goto	u1653
  2702  029C  07BD               	addwf	___flmul@prod+3,f
  2703  029D                     u1653:
  2704  029D                     l1594:
  2705  029D  3008               	movlw	8
  2706  029E  00AE               	movwf	??___flmul
  2707  029F                     u1665:
  2708  029F  1003               	clrc
  2709  02A0  0DB4               	rlf	___flmul@grs,f
  2710  02A1  0DB5               	rlf	___flmul@grs+1,f
  2711  02A2  0DB6               	rlf	___flmul@grs+2,f
  2712  02A3  0DB7               	rlf	___flmul@grs+3,f
  2713  02A4  0BAE               	decfsz	??___flmul,f
  2714  02A5  2A9F               	goto	u1665
  2715  02A6                     l1596:
  2716  02A6  0839               	movf	___flmul@bexp,w
  2717  02A7  0738               	addwf	___flmul@aexp,w
  2718  02A8  00AE               	movwf	??___flmul
  2719  02A9  01AF               	clrf	??___flmul+1
  2720  02AA  0DAF               	rlf	??___flmul+1,f
  2721  02AB  082E               	movf	??___flmul,w
  2722  02AC  3E82               	addlw	130
  2723  02AD  00BE               	movwf	___flmul@temp
  2724  02AE  082F               	movf	??___flmul+1,w
  2725  02AF  1803               	skipnc
  2726  02B0  3E01               	addlw	1
  2727  02B1  3EFF               	addlw	255
  2728  02B2  00BF               	movwf	___flmul@temp+1
  2729  02B3  2AD1               	goto	l1608
  2730  02B4                     l1598:
  2731  02B4  3001               	movlw	1
  2732  02B5  00AE               	movwf	??___flmul
  2733  02B6                     u1675:
  2734  02B6  1003               	clrc
  2735  02B7  0DBA               	rlf	___flmul@prod,f
  2736  02B8  0DBB               	rlf	___flmul@prod+1,f
  2737  02B9  0DBC               	rlf	___flmul@prod+2,f
  2738  02BA  0DBD               	rlf	___flmul@prod+3,f
  2739  02BB  0BAE               	decfsz	??___flmul,f
  2740  02BC  2AB6               	goto	u1675
  2741  02BD                     l1600:
  2742  02BD  1FB7               	btfss	___flmul@grs+3,7
  2743  02BE  2AC0               	goto	u1681
  2744  02BF  2AC1               	goto	u1680
  2745  02C0                     u1681:
  2746  02C0  2AC2               	goto	l1604
  2747  02C1                     u1680:
  2748  02C1                     l1602:
  2749  02C1  143A               	bsf	___flmul@prod,0
  2750  02C2                     l1604:
  2751  02C2  3001               	movlw	1
  2752  02C3  00AE               	movwf	??___flmul
  2753  02C4                     u1695:
  2754  02C4  1003               	clrc
  2755  02C5  0DB4               	rlf	___flmul@grs,f
  2756  02C6  0DB5               	rlf	___flmul@grs+1,f
  2757  02C7  0DB6               	rlf	___flmul@grs+2,f
  2758  02C8  0DB7               	rlf	___flmul@grs+3,f
  2759  02C9  0BAE               	decfsz	??___flmul,f
  2760  02CA  2AC4               	goto	u1695
  2761  02CB                     l1606:
  2762  02CB  30FF               	movlw	255
  2763  02CC  07BE               	addwf	___flmul@temp,f
  2764  02CD  1803               	skipnc
  2765  02CE  0ABF               	incf	___flmul@temp+1,f
  2766  02CF  30FF               	movlw	255
  2767  02D0  07BF               	addwf	___flmul@temp+1,f
  2768  02D1                     l1608:
  2769  02D1  1FBC               	btfss	___flmul@prod+2,7
  2770  02D2  2AD4               	goto	u1701
  2771  02D3  2AD5               	goto	u1700
  2772  02D4                     u1701:
  2773  02D4  2AB4               	goto	l1598
  2774  02D5                     u1700:
  2775  02D5                     l1610:
  2776  02D5  01B8               	clrf	___flmul@aexp
  2777  02D6                     l1612:
  2778  02D6  1FB7               	btfss	___flmul@grs+3,7
  2779  02D7  2AD9               	goto	u1711
  2780  02D8  2ADA               	goto	u1710
  2781  02D9                     u1711:
  2782  02D9  2AF6               	goto	l1620
  2783  02DA                     u1710:
  2784  02DA                     l1614:
  2785  02DA  30FF               	movlw	255
  2786  02DB  0534               	andwf	___flmul@grs,w
  2787  02DC  00AE               	movwf	??___flmul
  2788  02DD  30FF               	movlw	255
  2789  02DE  0535               	andwf	___flmul@grs+1,w
  2790  02DF  00AF               	movwf	??___flmul+1
  2791  02E0  30FF               	movlw	255
  2792  02E1  0536               	andwf	___flmul@grs+2,w
  2793  02E2  00B0               	movwf	??___flmul+2
  2794  02E3  307F               	movlw	127
  2795  02E4  0537               	andwf	___flmul@grs+3,w
  2796  02E5  00B1               	movwf	??___flmul+3
  2797  02E6  0831               	movf	??___flmul+3,w
  2798  02E7  0430               	iorwf	??___flmul+2,w
  2799  02E8  042F               	iorwf	??___flmul+1,w
  2800  02E9  042E               	iorwf	??___flmul,w
  2801  02EA  1903               	skipnz
  2802  02EB  2AED               	goto	u1721
  2803  02EC  2AEE               	goto	u1720
  2804  02ED                     u1721:
  2805  02ED  2AF1               	goto	l635
  2806  02EE                     u1720:
  2807  02EE                     l1616:
  2808  02EE  01B8               	clrf	___flmul@aexp
  2809  02EF  0AB8               	incf	___flmul@aexp,f
  2810  02F0  2AF6               	goto	l1620
  2811  02F1                     l635:
  2812  02F1  1C3A               	btfss	___flmul@prod,0
  2813  02F2  2AF4               	goto	u1731
  2814  02F3  2AF5               	goto	u1730
  2815  02F4                     u1731:
  2816  02F4  2AF6               	goto	l1620
  2817  02F5                     u1730:
  2818  02F5  2AEE               	goto	l1616
  2819  02F6                     l1620:
  2820  02F6  0838               	movf	___flmul@aexp,w
  2821  02F7  1903               	btfsc	3,2
  2822  02F8  2AFA               	goto	u1741
  2823  02F9  2AFB               	goto	u1740
  2824  02FA                     u1741:
  2825  02FA  2B2C               	goto	l1630
  2826  02FB                     u1740:
  2827  02FB                     l1622:
  2828  02FB  3001               	movlw	1
  2829  02FC  07BA               	addwf	___flmul@prod,f
  2830  02FD  3000               	movlw	0
  2831  02FE  1803               	skipnc
  2832  02FF  3001               	movlw	1
  2833  0300  07BB               	addwf	___flmul@prod+1,f
  2834  0301  3000               	movlw	0
  2835  0302  1803               	skipnc
  2836  0303  3001               	movlw	1
  2837  0304  07BC               	addwf	___flmul@prod+2,f
  2838  0305  3000               	movlw	0
  2839  0306  1803               	skipnc
  2840  0307  3001               	movlw	1
  2841  0308  07BD               	addwf	___flmul@prod+3,f
  2842  0309                     l1624:
  2843  0309  1C3D               	btfss	___flmul@prod+3,0
  2844  030A  2B0C               	goto	u1751
  2845  030B  2B0D               	goto	u1750
  2846  030C                     u1751:
  2847  030C  2B2C               	goto	l1630
  2848  030D                     u1750:
  2849  030D                     l1626:
  2850  030D  083A               	movf	___flmul@prod,w
  2851  030E  00AE               	movwf	??___flmul
  2852  030F  083B               	movf	___flmul@prod+1,w
  2853  0310  00AF               	movwf	??___flmul+1
  2854  0311  083C               	movf	___flmul@prod+2,w
  2855  0312  00B0               	movwf	??___flmul+2
  2856  0313  083D               	movf	___flmul@prod+3,w
  2857  0314  00B1               	movwf	??___flmul+3
  2858  0315  3001               	movlw	1
  2859  0316  00B2               	movwf	??___flmul+4
  2860  0317                     u1765:
  2861  0317  0D31               	rlf	??___flmul+3,w
  2862  0318  0CB1               	rrf	??___flmul+3,f
  2863  0319  0CB0               	rrf	??___flmul+2,f
  2864  031A  0CAF               	rrf	??___flmul+1,f
  2865  031B  0CAE               	rrf	??___flmul,f
  2866  031C                     u1760:
  2867  031C  0BB2               	decfsz	??___flmul+4,f
  2868  031D  2B17               	goto	u1765
  2869  031E  0831               	movf	??___flmul+3,w
  2870  031F  00BD               	movwf	___flmul@prod+3
  2871  0320  0830               	movf	??___flmul+2,w
  2872  0321  00BC               	movwf	___flmul@prod+2
  2873  0322  082F               	movf	??___flmul+1,w
  2874  0323  00BB               	movwf	___flmul@prod+1
  2875  0324  082E               	movf	??___flmul,w
  2876  0325  00BA               	movwf	___flmul@prod
  2877  0326                     l1628:
  2878  0326  3001               	movlw	1
  2879  0327  07BE               	addwf	___flmul@temp,f
  2880  0328  1803               	skipnc
  2881  0329  0ABF               	incf	___flmul@temp+1,f
  2882  032A  3000               	movlw	0
  2883  032B  07BF               	addwf	___flmul@temp+1,f
  2884  032C                     l1630:
  2885  032C  083F               	movf	___flmul@temp+1,w
  2886  032D  3A80               	xorlw	128
  2887  032E  00FF               	movwf	btemp+1
  2888  032F  3080               	movlw	128
  2889  0330  027F               	subwf	btemp+1,w
  2890  0331  1D03               	skipz
  2891  0332  2B35               	goto	u1775
  2892  0333  30FF               	movlw	255
  2893  0334  023E               	subwf	___flmul@temp,w
  2894  0335                     u1775:
  2895  0335  1C03               	skipc
  2896  0336  2B38               	goto	u1771
  2897  0337  2B39               	goto	u1770
  2898  0338                     u1771:
  2899  0338  2B44               	goto	l1634
  2900  0339                     u1770:
  2901  0339                     l1632:
  2902  0339  307F               	movlw	127
  2903  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2904  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2905  033C  00BD               	movwf	___flmul@prod+3
  2906  033D  3080               	movlw	128
  2907  033E  00BC               	movwf	___flmul@prod+2
  2908  033F  3000               	movlw	0
  2909  0340  00BB               	movwf	___flmul@prod+1
  2910  0341  3000               	movlw	0
  2911  0342  00BA               	movwf	___flmul@prod
  2912  0343  2B79               	goto	l641
  2913  0344                     l1634:
  2914  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0346  083F               	movf	___flmul@temp+1,w
  2917  0347  3A80               	xorlw	128
  2918  0348  00FF               	movwf	btemp+1
  2919  0349  3080               	movlw	128
  2920  034A  027F               	subwf	btemp+1,w
  2921  034B  1D03               	skipz
  2922  034C  2B4F               	goto	u1785
  2923  034D  3001               	movlw	1
  2924  034E  023E               	subwf	___flmul@temp,w
  2925  034F                     u1785:
  2926  034F  1803               	skipnc
  2927  0350  2B52               	goto	u1781
  2928  0351  2B53               	goto	u1780
  2929  0352                     u1781:
  2930  0352  2B5F               	goto	l1640
  2931  0353                     u1780:
  2932  0353                     l1636:
  2933  0353  3000               	movlw	0
  2934  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0356  00BD               	movwf	___flmul@prod+3
  2937  0357  3000               	movlw	0
  2938  0358  00BC               	movwf	___flmul@prod+2
  2939  0359  3000               	movlw	0
  2940  035A  00BB               	movwf	___flmul@prod+1
  2941  035B  3000               	movlw	0
  2942  035C  00BA               	movwf	___flmul@prod
  2943  035D                     l1638:
  2944  035D  01B3               	clrf	___flmul@sign
  2945  035E  2B79               	goto	l641
  2946  035F                     l1640:
  2947  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0361  083E               	movf	___flmul@temp,w
  2950  0362  00AE               	movwf	??___flmul
  2951  0363  082E               	movf	??___flmul,w
  2952  0364  00B9               	movwf	___flmul@bexp
  2953  0365  30FF               	movlw	255
  2954  0366  05BA               	andwf	___flmul@prod,f
  2955  0367  30FF               	movlw	255
  2956  0368  05BB               	andwf	___flmul@prod+1,f
  2957  0369  307F               	movlw	127
  2958  036A  05BC               	andwf	___flmul@prod+2,f
  2959  036B  3000               	movlw	0
  2960  036C  05BD               	andwf	___flmul@prod+3,f
  2961  036D                     l1642:
  2962  036D  1C39               	btfss	___flmul@bexp,0
  2963  036E  2B70               	goto	u1791
  2964  036F  2B71               	goto	u1790
  2965  0370                     u1791:
  2966  0370  2B72               	goto	l1646
  2967  0371                     u1790:
  2968  0371                     l1644:
  2969  0371  17BC               	bsf	___flmul@prod+2,7
  2970  0372                     l1646:
  2971  0372  0839               	movf	___flmul@bexp,w
  2972  0373  00AE               	movwf	??___flmul
  2973  0374  1003               	clrc
  2974  0375  0C2E               	rrf	??___flmul,w
  2975  0376  00AF               	movwf	??___flmul+1
  2976  0377  082F               	movf	??___flmul+1,w
  2977  0378  00BD               	movwf	___flmul@prod+3
  2978  0379                     l641:
  2979  0379  0833               	movf	___flmul@sign,w
  2980  037A  00AE               	movwf	??___flmul
  2981  037B  082E               	movf	??___flmul,w
  2982  037C  04BD               	iorwf	___flmul@prod+3,f
  2983  037D                     l1648:
  2984  037D  083D               	movf	___flmul@prod+3,w
  2985  037E  00A9               	movwf	?___flmul+3
  2986  037F  083C               	movf	___flmul@prod+2,w
  2987  0380  00A8               	movwf	?___flmul+2
  2988  0381  083B               	movf	___flmul@prod+1,w
  2989  0382  00A7               	movwf	?___flmul+1
  2990  0383  083A               	movf	___flmul@prod,w
  2991  0384  00A6               	movwf	?___flmul
  2992  0385                     l629:
  2993  0385  0008               	return
  2994  0386                     __end_of___flmul:
  2995                           
  2996                           	psect	text7
  2997  0FD9                     __ptext7:	
  2998 ;; *************** function __Umul8_16 *****************
  2999 ;; Defined at:
  3000 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  multiplier      1    wreg     unsigned char 
  3003 ;;  multiplicand    1    2[COMMON] unsigned char 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  multiplier      1   10[COMMON] unsigned char 
  3006 ;;  word_mpld       2    8[COMMON] unsigned int 
  3007 ;;  product         2    6[COMMON] unsigned int 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  2    2[COMMON] unsigned int 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         2       0       0       0       0
  3018 ;;      Locals:         5       0       0       0       0
  3019 ;;      Temps:          2       0       0       0       0
  3020 ;;      Totals:         9       0       0       0       0
  3021 ;;Total ram usage:        9 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		___flmul
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function __Umul8_16
  3033  0FD9                     __Umul8_16:
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3037                           ;__Umul8_16@multiplier stored from wreg
  3038  0FD9  00FA               	movwf	__Umul8_16@multiplier
  3039  0FDA                     l1350:
  3040  0FDA  01F6               	clrf	__Umul8_16@product
  3041  0FDB  01F7               	clrf	__Umul8_16@product+1
  3042  0FDC                     l1352:
  3043  0FDC  0872               	movf	__Umul8_16@multiplicand,w
  3044  0FDD  00F4               	movwf	??__Umul8_16
  3045  0FDE  01F5               	clrf	??__Umul8_16+1
  3046  0FDF  0874               	movf	??__Umul8_16,w
  3047  0FE0  00F8               	movwf	__Umul8_16@word_mpld
  3048  0FE1  0875               	movf	??__Umul8_16+1,w
  3049  0FE2  00F9               	movwf	__Umul8_16@word_mpld+1
  3050  0FE3                     l1354:
  3051  0FE3  1C7A               	btfss	__Umul8_16@multiplier,0
  3052  0FE4  2FE6               	goto	u1171
  3053  0FE5  2FE7               	goto	u1170
  3054  0FE6                     u1171:
  3055  0FE6  2FED               	goto	l648
  3056  0FE7                     u1170:
  3057  0FE7                     l1356:
  3058  0FE7  0878               	movf	__Umul8_16@word_mpld,w
  3059  0FE8  07F6               	addwf	__Umul8_16@product,f
  3060  0FE9  1803               	skipnc
  3061  0FEA  0AF7               	incf	__Umul8_16@product+1,f
  3062  0FEB  0879               	movf	__Umul8_16@word_mpld+1,w
  3063  0FEC  07F7               	addwf	__Umul8_16@product+1,f
  3064  0FED                     l648:
  3065  0FED  3001               	movlw	1
  3066  0FEE                     u1185:
  3067  0FEE  1003               	clrc
  3068  0FEF  0DF8               	rlf	__Umul8_16@word_mpld,f
  3069  0FF0  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  3070  0FF1  3EFF               	addlw	-1
  3071  0FF2  1D03               	skipz
  3072  0FF3  2FEE               	goto	u1185
  3073  0FF4  1003               	clrc
  3074  0FF5  0CFA               	rrf	__Umul8_16@multiplier,f
  3075  0FF6                     l1358:
  3076  0FF6  087A               	movf	__Umul8_16@multiplier,w
  3077  0FF7  1D03               	btfss	3,2
  3078  0FF8  2FFA               	goto	u1191
  3079  0FF9  2FFB               	goto	u1190
  3080  0FFA                     u1191:
  3081  0FFA  2FE3               	goto	l1354
  3082  0FFB                     u1190:
  3083  0FFB                     l1360:
  3084  0FFB  0877               	movf	__Umul8_16@product+1,w
  3085  0FFC  00F3               	movwf	?__Umul8_16+1
  3086  0FFD  0876               	movf	__Umul8_16@product,w
  3087  0FFE  00F2               	movwf	?__Umul8_16
  3088  0FFF                     l650:
  3089  0FFF  0008               	return
  3090  1000                     __end_of__Umul8_16:
  3091                           
  3092                           	psect	text8
  3093  0F55                     __ptext8:	
  3094 ;; *************** function _ReadADC *****************
  3095 ;; Defined at:
  3096 ;;		line 90 in file "main.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  TempValue       2    4[COMMON] unsigned int 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  2    2[COMMON] unsigned int 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         2       0       0       0       0
  3111 ;;      Locals:         2       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         4       0       0       0       0
  3114 ;;Total ram usage:        4 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _ReadADC
  3126  0F55                     _ReadADC:
  3127  0F55                     l1406:	
  3128                           ;incstack = 0
  3129                           ; Regs used in _ReadADC: [wreg+status,2]
  3130                           
  3131  0F55                     l1408:
  3132  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0F57  151F               	bsf	31,2	;volatile
  3135  0F58                     l115:
  3136  0F58  191F               	btfsc	31,2	;volatile
  3137  0F59  2F5B               	goto	u1251
  3138  0F5A  2F5C               	goto	u1250
  3139  0F5B                     u1251:
  3140  0F5B  2F58               	goto	l115
  3141  0F5C                     u1250:
  3142  0F5C                     l1410:
  3143  0F5C  081E               	movf	30,w	;volatile
  3144  0F5D  00F5               	movwf	ReadADC@TempValue+1
  3145  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  3146  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  3147  0F60  081E               	movf	30,w	;volatile
  3148  0F61  00F4               	movwf	ReadADC@TempValue
  3149  0F62  0875               	movf	ReadADC@TempValue+1,w
  3150  0F63  00F3               	movwf	?_ReadADC+1
  3151  0F64  0874               	movf	ReadADC@TempValue,w
  3152  0F65  00F2               	movwf	?_ReadADC
  3153  0F66                     l118:
  3154  0F66  0008               	return
  3155  0F67                     __end_of_ReadADC:
  3156                           
  3157                           	psect	text9
  3158  0F96                     __ptext9:	
  3159 ;; *************** function _Lcd_Write_String *****************
  3160 ;; Defined at:
  3161 ;;		line 95 in file "./lcd.h"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  a               1    wreg     PTR unsigned char 
  3164 ;;		 -> main@str(20), 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  a               1   10[COMMON] PTR unsigned char 
  3167 ;;		 -> main@str(20), 
  3168 ;;  i               2    8[COMMON] int 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       0       0       0       0
  3179 ;;      Locals:         3       0       0       0       0
  3180 ;;      Temps:          1       0       0       0       0
  3181 ;;      Totals:         4       0       0       0       0
  3182 ;;Total ram usage:        4 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    3
  3185 ;; This function calls:
  3186 ;;		_Lcd_Write_Char
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function _Lcd_Write_String
  3194  0F96                     _Lcd_Write_String:
  3195                           
  3196                           ;incstack = 0
  3197                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3198                           ;Lcd_Write_String@a stored from wreg
  3199  0F96  00FA               	movwf	Lcd_Write_String@a
  3200  0F97                     l1396:
  3201                           
  3202                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  3203  0F97  01F8               	clrf	Lcd_Write_String@i
  3204  0F98  01F9               	clrf	Lcd_Write_String@i+1
  3205  0F99  2FAB               	goto	l1402
  3206  0F9A                     l1398:
  3207                           
  3208                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  3209  0F9A  0878               	movf	Lcd_Write_String@i,w
  3210  0F9B  077A               	addwf	Lcd_Write_String@a,w
  3211  0F9C  00F7               	movwf	??_Lcd_Write_String
  3212  0F9D  0877               	movf	??_Lcd_Write_String,w
  3213  0F9E  0084               	movwf	4
  3214  0F9F  0800               	movf	0,w
  3215  0FA0  120A  118A  27A7  120A  158A  	fcall	_Lcd_Write_Char
  3216  0FA5                     l1400:
  3217  0FA5  3001               	movlw	1
  3218  0FA6  07F8               	addwf	Lcd_Write_String@i,f
  3219  0FA7  1803               	skipnc
  3220  0FA8  0AF9               	incf	Lcd_Write_String@i+1,f
  3221  0FA9  3000               	movlw	0
  3222  0FAA  07F9               	addwf	Lcd_Write_String@i+1,f
  3223  0FAB                     l1402:
  3224  0FAB  0878               	movf	Lcd_Write_String@i,w
  3225  0FAC  077A               	addwf	Lcd_Write_String@a,w
  3226  0FAD  00F7               	movwf	??_Lcd_Write_String
  3227  0FAE  0877               	movf	??_Lcd_Write_String,w
  3228  0FAF  0084               	movwf	4
  3229  0FB0  1383               	bcf	3,7	;select IRP bank0
  3230  0FB1  0800               	movf	0,w
  3231  0FB2  1D03               	btfss	3,2
  3232  0FB3  2FB5               	goto	u1241
  3233  0FB4  2FB6               	goto	u1240
  3234  0FB5                     u1241:
  3235  0FB5  2F9A               	goto	l1398
  3236  0FB6                     u1240:
  3237  0FB6                     l87:
  3238  0FB6  0008               	return
  3239  0FB7                     __end_of_Lcd_Write_String:
  3240                           
  3241                           	psect	text10
  3242  07A7                     __ptext10:	
  3243 ;; *************** function _Lcd_Write_Char *****************
  3244 ;; Defined at:
  3245 ;;		line 79 in file "./lcd.h"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  a               1    wreg     unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  a               1    6[COMMON] unsigned char 
  3250 ;;  y               1    5[COMMON] unsigned char 
  3251 ;;  temp            1    4[COMMON] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, pclath, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         0       0       0       0       0
  3262 ;;      Locals:         3       0       0       0       0
  3263 ;;      Temps:          1       0       0       0       0
  3264 ;;      Totals:         4       0       0       0       0
  3265 ;;Total ram usage:        4 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    2
  3268 ;; This function calls:
  3269 ;;		_Lcd_Port
  3270 ;; This function is called by:
  3271 ;;		_Lcd_Write_String
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _Lcd_Write_Char
  3277  07A7                     _Lcd_Write_Char:
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3281                           ;Lcd_Write_Char@a stored from wreg
  3282  07A7  00F6               	movwf	Lcd_Write_Char@a
  3283  07A8                     l1282:
  3284                           
  3285                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  3286  07A8  0876               	movf	Lcd_Write_Char@a,w
  3287  07A9  390F               	andlw	15
  3288  07AA  00F3               	movwf	??_Lcd_Write_Char
  3289  07AB  0873               	movf	??_Lcd_Write_Char,w
  3290  07AC  00F4               	movwf	Lcd_Write_Char@temp
  3291                           
  3292                           ;./lcd.h: 83:    y = a&0xF0;
  3293  07AD  0876               	movf	Lcd_Write_Char@a,w
  3294  07AE  39F0               	andlw	240
  3295  07AF  00F3               	movwf	??_Lcd_Write_Char
  3296  07B0  0873               	movf	??_Lcd_Write_Char,w
  3297  07B1  00F5               	movwf	Lcd_Write_Char@y
  3298  07B2                     l1284:
  3299                           
  3300                           ;./lcd.h: 84:    RD2 = 1;
  3301  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  3302  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  3303  07B4  1508               	bsf	8,2	;volatile
  3304  07B5                     l1286:
  3305                           
  3306                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  3307  07B5  0875               	movf	Lcd_Write_Char@y,w
  3308  07B6  00F3               	movwf	??_Lcd_Write_Char
  3309  07B7  3004               	movlw	4
  3310  07B8                     u1035:
  3311  07B8  1003               	clrc
  3312  07B9  0CF3               	rrf	??_Lcd_Write_Char,f
  3313  07BA  3EFF               	addlw	-1
  3314  07BB  1D03               	skipz
  3315  07BC  2FB8               	goto	u1035
  3316  07BD  0873               	movf	??_Lcd_Write_Char,w
  3317  07BE  120A  118A  27DE  120A  118A  	fcall	_Lcd_Port
  3318  07C3                     l1288:
  3319                           
  3320                           ;./lcd.h: 86:    RD3 = 1;
  3321  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3322  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3323  07C5  1588               	bsf	8,3	;volatile
  3324  07C6                     l1290:
  3325                           
  3326                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3327  07C6  300D               	movlw	13
  3328  07C7  00F3               	movwf	??_Lcd_Write_Char
  3329  07C8                     u1997:
  3330  07C8  0BF3               	decfsz	??_Lcd_Write_Char,f
  3331  07C9  2FC8               	goto	u1997
  3332  07CA                     l1292:
  3333                           
  3334                           ;./lcd.h: 88:    RD3 = 0;
  3335  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  3336  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  3337  07CC  1188               	bcf	8,3	;volatile
  3338  07CD                     l1294:
  3339                           
  3340                           ;./lcd.h: 89:    Lcd_Port(temp);
  3341  07CD  0874               	movf	Lcd_Write_Char@temp,w
  3342  07CE  120A  118A  27DE  120A  118A  	fcall	_Lcd_Port
  3343  07D3                     l1296:
  3344                           
  3345                           ;./lcd.h: 90:    RD3 = 1;
  3346  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3347  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  3348  07D5  1588               	bsf	8,3	;volatile
  3349  07D6                     l1298:
  3350                           
  3351                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3352  07D6  300D               	movlw	13
  3353  07D7  00F3               	movwf	??_Lcd_Write_Char
  3354  07D8                     u2007:
  3355  07D8  0BF3               	decfsz	??_Lcd_Write_Char,f
  3356  07D9  2FD8               	goto	u2007
  3357  07DA                     l1300:
  3358                           
  3359                           ;./lcd.h: 92:    RD3 = 0;
  3360  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  3361  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  3362  07DC  1188               	bcf	8,3	;volatile
  3363  07DD                     l81:
  3364  07DD  0008               	return
  3365  07DE                     __end_of_Lcd_Write_Char:
  3366                           
  3367                           	psect	text11
  3368  06CF                     __ptext11:	
  3369 ;; *************** function _Lcd_Set_Cursor *****************
  3370 ;; Defined at:
  3371 ;;		line 39 in file "./lcd.h"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  a               1    wreg     unsigned char 
  3374 ;;  b               1    6[COMMON] unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  a               1    0[BANK0 ] unsigned char 
  3377 ;;  temp            1    3[BANK0 ] unsigned char 
  3378 ;;  y               1    2[BANK0 ] unsigned char 
  3379 ;;  z               1    1[BANK0 ] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, pclath, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3389 ;;      Params:         1       0       0       0       0
  3390 ;;      Locals:         0       4       0       0       0
  3391 ;;      Temps:          2       0       0       0       0
  3392 ;;      Totals:         3       4       0       0       0
  3393 ;;Total ram usage:        7 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		_Lcd_Cmd
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _Lcd_Set_Cursor
  3405  06CF                     _Lcd_Set_Cursor:
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3409                           ;Lcd_Set_Cursor@a stored from wreg
  3410  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3411  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3412  06D1  00A0               	movwf	Lcd_Set_Cursor@a
  3413  06D2                     l1366:
  3414                           
  3415                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  3416  06D2  0320               	decf	Lcd_Set_Cursor@a,w
  3417  06D3  1D03               	btfss	3,2
  3418  06D4  2ED6               	goto	u1201
  3419  06D5  2ED7               	goto	u1200
  3420  06D6                     u1201:
  3421  06D6  2EFC               	goto	l1376
  3422  06D7                     u1200:
  3423  06D7                     l1368:
  3424                           
  3425                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  3426  06D7  0876               	movf	Lcd_Set_Cursor@b,w
  3427  06D8  3E7F               	addlw	127
  3428  06D9  00F7               	movwf	??_Lcd_Set_Cursor
  3429  06DA  0877               	movf	??_Lcd_Set_Cursor,w
  3430  06DB  00A3               	movwf	Lcd_Set_Cursor@temp
  3431                           
  3432                           ;./lcd.h: 45:   z = temp>>4;
  3433  06DC  0823               	movf	Lcd_Set_Cursor@temp,w
  3434  06DD  00F7               	movwf	??_Lcd_Set_Cursor
  3435  06DE  3004               	movlw	4
  3436  06DF                     u1215:
  3437  06DF  1003               	clrc
  3438  06E0  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3439  06E1  3EFF               	addlw	-1
  3440  06E2  1D03               	skipz
  3441  06E3  2EDF               	goto	u1215
  3442  06E4  0877               	movf	??_Lcd_Set_Cursor,w
  3443  06E5  00F8               	movwf	??_Lcd_Set_Cursor+1
  3444  06E6  0878               	movf	??_Lcd_Set_Cursor+1,w
  3445  06E7  00A1               	movwf	Lcd_Set_Cursor@z
  3446  06E8                     l1370:
  3447                           
  3448                           ;./lcd.h: 46:   y = temp & 0x0F;
  3449  06E8  0823               	movf	Lcd_Set_Cursor@temp,w
  3450  06E9  390F               	andlw	15
  3451  06EA  00F7               	movwf	??_Lcd_Set_Cursor
  3452  06EB  0877               	movf	??_Lcd_Set_Cursor,w
  3453  06EC  00A2               	movwf	Lcd_Set_Cursor@y
  3454  06ED                     l1372:
  3455                           
  3456                           ;./lcd.h: 47:   Lcd_Cmd(z);
  3457  06ED  0821               	movf	Lcd_Set_Cursor@z,w
  3458  06EE  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3459  06F3                     l1374:
  3460                           
  3461                           ;./lcd.h: 48:   Lcd_Cmd(y);
  3462  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3463  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  3464  06F5  0822               	movf	Lcd_Set_Cursor@y,w
  3465  06F6  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3466                           
  3467                           ;./lcd.h: 49:  }
  3468  06FB  2F26               	goto	l75
  3469  06FC                     l1376:
  3470  06FC  3002               	movlw	2
  3471  06FD  0620               	xorwf	Lcd_Set_Cursor@a,w
  3472  06FE  1D03               	btfss	3,2
  3473  06FF  2F01               	goto	u1221
  3474  0700  2F02               	goto	u1220
  3475  0701                     u1221:
  3476  0701  2F26               	goto	l75
  3477  0702                     u1220:
  3478  0702                     l1378:
  3479                           
  3480                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  3481  0702  0876               	movf	Lcd_Set_Cursor@b,w
  3482  0703  3EBF               	addlw	191
  3483  0704  00F7               	movwf	??_Lcd_Set_Cursor
  3484  0705  0877               	movf	??_Lcd_Set_Cursor,w
  3485  0706  00A3               	movwf	Lcd_Set_Cursor@temp
  3486                           
  3487                           ;./lcd.h: 53:   z = temp>>4;
  3488  0707  0823               	movf	Lcd_Set_Cursor@temp,w
  3489  0708  00F7               	movwf	??_Lcd_Set_Cursor
  3490  0709  3004               	movlw	4
  3491  070A                     u1235:
  3492  070A  1003               	clrc
  3493  070B  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3494  070C  3EFF               	addlw	-1
  3495  070D  1D03               	skipz
  3496  070E  2F0A               	goto	u1235
  3497  070F  0877               	movf	??_Lcd_Set_Cursor,w
  3498  0710  00F8               	movwf	??_Lcd_Set_Cursor+1
  3499  0711  0878               	movf	??_Lcd_Set_Cursor+1,w
  3500  0712  00A1               	movwf	Lcd_Set_Cursor@z
  3501  0713                     l1380:
  3502                           
  3503                           ;./lcd.h: 54:   y = temp & 0x0F;
  3504  0713  0823               	movf	Lcd_Set_Cursor@temp,w
  3505  0714  390F               	andlw	15
  3506  0715  00F7               	movwf	??_Lcd_Set_Cursor
  3507  0716  0877               	movf	??_Lcd_Set_Cursor,w
  3508  0717  00A2               	movwf	Lcd_Set_Cursor@y
  3509  0718                     l1382:
  3510                           
  3511                           ;./lcd.h: 55:   Lcd_Cmd(z);
  3512  0718  0821               	movf	Lcd_Set_Cursor@z,w
  3513  0719  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3514  071E                     l1384:
  3515                           
  3516                           ;./lcd.h: 56:   Lcd_Cmd(y);
  3517  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3518  071F  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0720  0822               	movf	Lcd_Set_Cursor@y,w
  3520  0721  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3521  0726                     l75:
  3522  0726  0008               	return
  3523  0727                     __end_of_Lcd_Set_Cursor:
  3524                           
  3525                           	psect	text12
  3526  0672                     __ptext12:	
  3527 ;; *************** function _Lcd_Init *****************
  3528 ;; Defined at:
  3529 ;;		line 60 in file "./lcd.h"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0
  3545 ;;      Temps:          2       0       0       0       0
  3546 ;;      Totals:         2       0       0       0       0
  3547 ;;Total ram usage:        2 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    3
  3550 ;; This function calls:
  3551 ;;		_Lcd_Cmd
  3552 ;;		_Lcd_Port
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _Lcd_Init
  3560  0672                     _Lcd_Init:
  3561  0672                     l1386:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3564                           
  3565                           
  3566                           ;./lcd.h: 62:   Lcd_Port(0x00);
  3567  0672  3000               	movlw	0
  3568  0673  120A  118A  27DE  120A  118A  	fcall	_Lcd_Port
  3569  0678                     l1388:
  3570                           
  3571                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3572  0678  301A               	movlw	26
  3573  0679  00F7               	movwf	??_Lcd_Init+1
  3574  067A  30F8               	movlw	248
  3575  067B  00F6               	movwf	??_Lcd_Init
  3576  067C                     u2017:
  3577  067C  0BF6               	decfsz	??_Lcd_Init,f
  3578  067D  2E7C               	goto	u2017
  3579  067E  0BF7               	decfsz	??_Lcd_Init+1,f
  3580  067F  2E7C               	goto	u2017
  3581  0680  0000               	nop
  3582  0681                     l1390:
  3583                           
  3584                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  3585  0681  3003               	movlw	3
  3586  0682  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3587                           
  3588                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3589  0687  3007               	movlw	7
  3590  0688  00F7               	movwf	??_Lcd_Init+1
  3591  0689  307D               	movlw	125
  3592  068A  00F6               	movwf	??_Lcd_Init
  3593  068B                     u2027:
  3594  068B  0BF6               	decfsz	??_Lcd_Init,f
  3595  068C  2E8B               	goto	u2027
  3596  068D  0BF7               	decfsz	??_Lcd_Init+1,f
  3597  068E  2E8B               	goto	u2027
  3598  068F                     l1392:
  3599                           
  3600                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3601  068F  3003               	movlw	3
  3602  0690  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3603  0695                     l1394:
  3604                           
  3605                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3606  0695  300F               	movlw	15
  3607  0696  00F7               	movwf	??_Lcd_Init+1
  3608  0697  3047               	movlw	71
  3609  0698  00F6               	movwf	??_Lcd_Init
  3610  0699                     u2037:
  3611  0699  0BF6               	decfsz	??_Lcd_Init,f
  3612  069A  2E99               	goto	u2037
  3613  069B  0BF7               	decfsz	??_Lcd_Init+1,f
  3614  069C  2E99               	goto	u2037
  3615  069D  2E9E               	nop2
  3616                           
  3617                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3618  069E  3003               	movlw	3
  3619  069F  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3620                           
  3621                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  3622  06A4  3002               	movlw	2
  3623  06A5  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3624                           
  3625                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  3626  06AA  3002               	movlw	2
  3627  06AB  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3628                           
  3629                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  3630  06B0  3008               	movlw	8
  3631  06B1  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3632                           
  3633                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  3634  06B6  3000               	movlw	0
  3635  06B7  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3636                           
  3637                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  3638  06BC  300C               	movlw	12
  3639  06BD  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3640                           
  3641                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3642  06C2  3000               	movlw	0
  3643  06C3  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3644                           
  3645                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  3646  06C8  3006               	movlw	6
  3647  06C9  120A  158A  277C  120A  118A  	fcall	_Lcd_Cmd
  3648  06CE                     l78:
  3649  06CE  0008               	return
  3650  06CF                     __end_of_Lcd_Init:
  3651                           
  3652                           	psect	text13
  3653  0F48                     __ptext13:	
  3654 ;; *************** function _Lcd_Clear *****************
  3655 ;; Defined at:
  3656 ;;		line 33 in file "./lcd.h"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2   68[None  ] int 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    3
  3677 ;; This function calls:
  3678 ;;		_Lcd_Cmd
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _Lcd_Clear
  3686  0F48                     _Lcd_Clear:
  3687  0F48                     l1364:	
  3688                           ;incstack = 0
  3689                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3690                           
  3691                           
  3692                           ;./lcd.h: 35:  Lcd_Cmd(0);
  3693  0F48  3000               	movlw	0
  3694  0F49  120A  158A  277C  120A  158A  	fcall	_Lcd_Cmd
  3695                           
  3696                           ;./lcd.h: 36:  Lcd_Cmd(1);
  3697  0F4E  3001               	movlw	1
  3698  0F4F  120A  158A  277C  120A  158A  	fcall	_Lcd_Cmd
  3699  0F54                     l69:
  3700  0F54  0008               	return
  3701  0F55                     __end_of_Lcd_Clear:
  3702                           
  3703                           	psect	text14
  3704  0F7C                     __ptext14:	
  3705 ;; *************** function _Lcd_Cmd *****************
  3706 ;; Defined at:
  3707 ;;		line 24 in file "./lcd.h"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  a               1    wreg     unsigned char 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  a               1    5[COMMON] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       0       0       0       0
  3722 ;;      Locals:         1       0       0       0       0
  3723 ;;      Temps:          2       0       0       0       0
  3724 ;;      Totals:         3       0       0       0       0
  3725 ;;Total ram usage:        3 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    2
  3728 ;; This function calls:
  3729 ;;		_Lcd_Port
  3730 ;; This function is called by:
  3731 ;;		_Lcd_Clear
  3732 ;;		_Lcd_Set_Cursor
  3733 ;;		_Lcd_Init
  3734 ;;		_Lcd_Shift_Right
  3735 ;;		_Lcd_Shift_Left
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _Lcd_Cmd
  3741  0F7C                     _Lcd_Cmd:
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3745                           ;Lcd_Cmd@a stored from wreg
  3746  0F7C  00F5               	movwf	Lcd_Cmd@a
  3747  0F7D                     l1272:
  3748                           
  3749                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD2 = 0;
  3750  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0F7F  1108               	bcf	8,2	;volatile
  3753  0F80                     l1274:
  3754                           
  3755                           ;./lcd.h: 27:  Lcd_Port(a);
  3756  0F80  0875               	movf	Lcd_Cmd@a,w
  3757  0F81  120A  118A  27DE  120A  158A  	fcall	_Lcd_Port
  3758  0F86                     l1276:
  3759                           
  3760                           ;./lcd.h: 28:  RD3 = 1;
  3761  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  3763  0F88  1588               	bsf	8,3	;volatile
  3764  0F89                     l1278:
  3765                           
  3766                           ;./lcd.h: 29:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3767  0F89  3006               	movlw	6
  3768  0F8A  00F4               	movwf	??_Lcd_Cmd+1
  3769  0F8B  3030               	movlw	48
  3770  0F8C  00F3               	movwf	??_Lcd_Cmd
  3771  0F8D                     u2047:
  3772  0F8D  0BF3               	decfsz	??_Lcd_Cmd,f
  3773  0F8E  2F8D               	goto	u2047
  3774  0F8F  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3775  0F90  2F8D               	goto	u2047
  3776  0F91  0000               	nop
  3777  0F92                     l1280:
  3778                           
  3779                           ;./lcd.h: 30:         RD3 = 0;
  3780  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0F94  1188               	bcf	8,3	;volatile
  3783  0F95                     l66:
  3784  0F95  0008               	return
  3785  0F96                     __end_of_Lcd_Cmd:
  3786                           
  3787                           	psect	text15
  3788  07DE                     __ptext15:	
  3789 ;; *************** function _Lcd_Port *****************
  3790 ;; Defined at:
  3791 ;;		line 2 in file "./lcd.h"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  a               1    wreg     unsigned char 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  a               1    2[COMMON] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       0       0       0       0
  3806 ;;      Locals:         1       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0
  3808 ;;      Totals:         1       0       0       0       0
  3809 ;;Total ram usage:        1 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_Lcd_Cmd
  3816 ;;		_Lcd_Init
  3817 ;;		_Lcd_Write_Char
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _Lcd_Port
  3823  07DE                     _Lcd_Port:
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _Lcd_Port: [wreg]
  3827                           ;Lcd_Port@a stored from wreg
  3828  07DE  00F2               	movwf	Lcd_Port@a
  3829  07DF                     l1262:
  3830                           
  3831                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
  3832  07DF  1C72               	btfss	Lcd_Port@a,0
  3833  07E0  2FE2               	goto	u991
  3834  07E1  2FE3               	goto	u990
  3835  07E2                     u991:
  3836  07E2  2FE7               	goto	l55
  3837  07E3                     u990:
  3838  07E3                     l1264:
  3839                           
  3840                           ;./lcd.h: 5:   RD4 = 1;
  3841  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  3842  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  3843  07E5  1608               	bsf	8,4	;volatile
  3844  07E6  2FEA               	goto	l56
  3845  07E7                     l55:	
  3846                           ;./lcd.h: 6:  else
  3847                           
  3848                           
  3849                           ;./lcd.h: 7:   RD4 = 0;
  3850  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  3851  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  3852  07E9  1208               	bcf	8,4	;volatile
  3853  07EA                     l56:
  3854                           
  3855                           ;./lcd.h: 9:  if(a & 2)
  3856  07EA  1CF2               	btfss	Lcd_Port@a,1
  3857  07EB  2FED               	goto	u1001
  3858  07EC  2FEE               	goto	u1000
  3859  07ED                     u1001:
  3860  07ED  2FF0               	goto	l57
  3861  07EE                     u1000:
  3862  07EE                     l1266:
  3863                           
  3864                           ;./lcd.h: 10:   RD5 = 1;
  3865  07EE  1688               	bsf	8,5	;volatile
  3866  07EF  2FF1               	goto	l58
  3867  07F0                     l57:	
  3868                           ;./lcd.h: 11:  else
  3869                           
  3870                           
  3871                           ;./lcd.h: 12:   RD5 = 0;
  3872  07F0  1288               	bcf	8,5	;volatile
  3873  07F1                     l58:
  3874                           
  3875                           ;./lcd.h: 14:  if(a & 4)
  3876  07F1  1D72               	btfss	Lcd_Port@a,2
  3877  07F2  2FF4               	goto	u1011
  3878  07F3  2FF5               	goto	u1010
  3879  07F4                     u1011:
  3880  07F4  2FF7               	goto	l59
  3881  07F5                     u1010:
  3882  07F5                     l1268:
  3883                           
  3884                           ;./lcd.h: 15:   RD6 = 1;
  3885  07F5  1708               	bsf	8,6	;volatile
  3886  07F6  2FF8               	goto	l60
  3887  07F7                     l59:	
  3888                           ;./lcd.h: 16:  else
  3889                           
  3890                           
  3891                           ;./lcd.h: 17:   RD6 = 0;
  3892  07F7  1308               	bcf	8,6	;volatile
  3893  07F8                     l60:
  3894                           
  3895                           ;./lcd.h: 19:  if(a & 8)
  3896  07F8  1DF2               	btfss	Lcd_Port@a,3
  3897  07F9  2FFB               	goto	u1021
  3898  07FA  2FFC               	goto	u1020
  3899  07FB                     u1021:
  3900  07FB  2FFE               	goto	l61
  3901  07FC                     u1020:
  3902  07FC                     l1270:
  3903                           
  3904                           ;./lcd.h: 20:   RD7 = 1;
  3905  07FC  1788               	bsf	8,7	;volatile
  3906  07FD  2FFF               	goto	l63
  3907  07FE                     l61:	
  3908                           ;./lcd.h: 21:  else
  3909                           
  3910                           
  3911                           ;./lcd.h: 22:   RD7 = 0;
  3912  07FE  1388               	bcf	8,7	;volatile
  3913  07FF                     l63:
  3914  07FF  0008               	return
  3915  0800                     __end_of_Lcd_Port:
  3916                           
  3917                           	psect	text16
  3918  0F67                     __ptext16:	
  3919 ;; *************** function _ADCinit *****************
  3920 ;; Defined at:
  3921 ;;		line 76 in file "main.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		None
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       0       0       0       0
  3936 ;;      Locals:         0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0
  3938 ;;      Totals:         0       0       0       0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    1
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_main
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function _ADCinit
  3951  0F67                     _ADCinit:
  3952  0F67                     l1404:	
  3953                           ;incstack = 0
  3954                           ; Regs used in _ADCinit: []
  3955                           
  3956                           
  3957                           ;main.c: 79:         if(RB4 == 1)
  3958  0F67  1683               	bsf	3,5	;RP0=1, select bank1
  3959  0F68  1303               	bcf	3,6	;RP1=0, select bank1
  3960  0F69  131F               	bcf	31,6	;volatile
  3961  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  3963  0F6C  139F               	bcf	31,7	;volatile
  3964  0F6D  171F               	bsf	31,6	;volatile
  3965                           
  3966                           ;main.c: 81:         if(RB5 == 1)
  3967  0F6E  129F               	bcf	31,5	;volatile
  3968  0F6F  121F               	bcf	31,4	;volatile
  3969  0F70  119F               	bcf	31,3	;volatile
  3970                           
  3971                           ;main.c: 83:         RBIF = 0;
  3972  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3973  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  3974  0F73  179F               	bsf	31,7	;volatile
  3975                           
  3976                           ;main.c: 85: }
  3977  0F74  159F               	bsf	31,3	;volatile
  3978  0F75  151F               	bsf	31,2	;volatile
  3979  0F76  149F               	bsf	31,1	;volatile
  3980  0F77  101F               	bcf	31,0	;volatile
  3981  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0F7A  141F               	bsf	31,0	;volatile
  3984  0F7B                     l112:
  3985  0F7B  0008               	return
  3986  0F7C                     __end_of_ADCinit:
  3987                           
  3988                           	psect	text17
  3989  0FB7                     __ptext17:	
  3990 ;; *************** function _ISR *****************
  3991 ;; Defined at:
  3992 ;;		line 99 in file "main.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0
  4008 ;;      Temps:          2       0       0       0       0
  4009 ;;      Totals:         2       0       0       0       0
  4010 ;;Total ram usage:        2 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		Interrupt level 1
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _ISR
  4021  0FB7                     _ISR:
  4022  0FB7                     i1l1746:
  4023  0FB7  1C0B               	btfss	11,0	;volatile
  4024  0FB8  2FBA               	goto	u194_21
  4025  0FB9  2FBB               	goto	u194_20
  4026  0FBA                     u194_21:
  4027  0FBA  2FD2               	goto	i1l126
  4028  0FBB                     u194_20:
  4029  0FBB                     i1l1748:
  4030  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  4032  0FBD  1E06               	btfss	6,4	;volatile
  4033  0FBE  2FC0               	goto	u195_21
  4034  0FBF  2FC1               	goto	u195_20
  4035  0FC0                     u195_21:
  4036  0FC0  2FC7               	goto	i1l1752
  4037  0FC1                     u195_20:
  4038  0FC1                     i1l1750:
  4039  0FC1  3001               	movlw	1
  4040  0FC2  07E7               	addwf	_setPoint,f
  4041  0FC3  1803               	skipnc
  4042  0FC4  0AE8               	incf	_setPoint+1,f
  4043  0FC5  3000               	movlw	0
  4044  0FC6  07E8               	addwf	_setPoint+1,f
  4045  0FC7                     i1l1752:
  4046  0FC7  1E86               	btfss	6,5	;volatile
  4047  0FC8  2FCA               	goto	u196_21
  4048  0FC9  2FCB               	goto	u196_20
  4049  0FCA                     u196_21:
  4050  0FCA  2FD1               	goto	i1l1756
  4051  0FCB                     u196_20:
  4052  0FCB                     i1l1754:
  4053  0FCB  3001               	movlw	1
  4054  0FCC  02E7               	subwf	_setPoint,f
  4055  0FCD  3000               	movlw	0
  4056  0FCE  1C03               	skipc
  4057  0FCF  03E8               	decf	_setPoint+1,f
  4058  0FD0  02E8               	subwf	_setPoint+1,f
  4059  0FD1                     i1l1756:
  4060  0FD1  100B               	bcf	11,0	;volatile
  4061  0FD2                     i1l126:
  4062  0FD2  0871               	movf	??_ISR+1,w
  4063  0FD3  008A               	movwf	10
  4064  0FD4  0E70               	swapf	??_ISR,w
  4065  0FD5  0083               	movwf	3
  4066  0FD6  0EFE               	swapf	btemp,f
  4067  0FD7  0E7E               	swapf	btemp,w
  4068  0FD8  0009               	retfie
  4069  0FD9                     __end_of_ISR:
  4070  007E                     btemp	set	126	;btemp
  4071  007E                     wtemp0	set	126
  4072                           
  4073                           	psect	intentry
  4074  0004                     __pintentry:	
  4075                           ;incstack = 0
  4076                           ; Regs used in _ISR: [wreg]
  4077                           
  4078  0004                     interrupt_function:
  4079  007E                     saved_w	set	btemp
  4080  0004  00FE               	movwf	btemp
  4081  0005  0E03               	swapf	3,w
  4082  0006  00F0               	movwf	??_ISR
  4083  0007  080A               	movf	10,w
  4084  0008  00F1               	movwf	??_ISR+1
  4085  0009  120A  158A  2FB7   	ljmp	_ISR
  4086                           
  4087                           	psect	config
  4088                           
  4089                           ;Config register CONFIG @ 0x2007
  4090                           ;	Oscillator Selection bits
  4091                           ;	FOSC = XT, XT oscillator
  4092                           ;	Watchdog Timer Enable bit
  4093                           ;	WDTE = OFF, WDT disabled
  4094                           ;	Power-up Timer Enable bit
  4095                           ;	PWRTE = ON, PWRT enabled
  4096                           ;	Brown-out Reset Enable bit
  4097                           ;	BOREN = ON, BOR enabled
  4098                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4099                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4100                           ;	Data EEPROM Memory Code Protection bit
  4101                           ;	CPD = OFF, Data EEPROM code protection off
  4102                           ;	Flash Program Memory Write Enable bits
  4103                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4104                           ;	In-Circuit Debugger Mode bit
  4105                           ;	DEBUG = 0x1, unprogrammed default
  4106                           ;	Flash Program Memory Code Protection bit
  4107                           ;	CP = OFF, Code protection off
  4108  2007                     	org	8199
  4109  2007  3F71               	dw	16241

Data Sizes:
    Strings     22
    Constant    10
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     65      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    6354
                                             43 BANK0     22    22      0
                            _ADCinit
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _ReadADC
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1472
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             32 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2      24
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              7 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ReadADC
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      49       5       91.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      55      12        0.0%
ABS                  0      0      55       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 28 15:42:22 2021

                        pc 0002                         l60 07F8                         l61 07FE  
                       l63 07FF                         l55 07E7                         l56 07EA  
                       l57 07F0                         l81 07DD                         l58 07F1  
                       l66 0F95                         l59 07F7                         l75 0726  
                       l69 0F54                         l78 06CE                         l87 0FB6  
                       fsr 0004        __Umul8_16@word_mpld 0078                        l112 0F7B  
                      l115 0F58                        l118 0F66                        l236 046F  
                      l512 076A                        l433 065C                        l426 0671  
                      l522 07A6                        l436 0671                        l641 0379  
                      l650 0FFF                        l635 02F1                        l629 0385  
                      l648 0FED                        l673 055E                        l675 05F5  
                      l686 05BF                        l687 05CB                        l679 05A3  
                      _GIE 005F                        _RD0 0040                        _RB4 0034  
                      _RB5 0035                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _ISR 0FB7                        u990 07E3  
                      u991 07E2                        fsr0 0004                        indf 0000  
          __end_of_ADCinit 0F7C               ___flmul@aexp 0038               ___flmul@bexp 0039  
             ___flmul@sign 0033               ___flmul@temp 003E               ___flmul@prod 003A  
                     ?_ISR 0070               ___fltol@exp1 004A                       l1300 07DA  
                     l1310 0739                       l1302 0727                       l1400 0FA5  
                     l1320 0759                       l1312 073D                       l1304 0729  
                     l1402 0FAB                       l1410 0F5C                       l1322 0760  
                     l1314 0741                       l1306 072F                       l1330 0773  
                     l1404 0F67                       l1500 064A                       l1316 0752  
                     l1308 0732                       l1324 0766                       l1340 078F  
                     l1332 0776                       l1420 039B                       l1270 07FC  
                     l1262 07DF                       l1406 0F55                       l1350 0FDA  
                     l1510 0666                       l1318 0758                       l1342 0795  
                     l1334 077D                       l1430 03C6                       l1422 03A0  
                     l1414 0389                       l1264 07E3                       l1280 0F92  
                     l1272 0F7D                       l1408 0F55                       l1360 0FFB  
                     l1352 0FDC                       l1600 02BD                       l1520 0037  
                     l1512 0025                       l1344 079C                       l1336 0781  
                     l1328 076B                       l1432 03CA                       l1416 038E  
                     l1266 07EE                       l1274 0F80                       l1370 06E8  
                     l1290 07C6                       l1282 07A8                       l1354 0FE3  
                     l1610 02D5                       l1602 02C1                       l1530 0053  
                     l1522 003C                       l1514 002C                       l1506 0651  
                     l1338 0785                       l1346 07A2                       l1450 03FF  
                     l1434 03CE                       l1426 03A1                       l1418 0394  
                     l1268 07F5                       l1276 0F86                       l1364 0F48  
                     l1380 0713                       l1372 06ED                       l1292 07CA  
                     l1284 07B2                       l1356 0FE7                       l1620 02F6  
                     l1612 02D6                       l1604 02C2                       l1540 0068  
                     l1532 0058                       l1524 0041                       l1516 0032  
                     l1508 0661                       l1460 0445                       l1452 0405  
                     l1444 03D9                       l1436 03D2                       l1428 03BE  
                     l1700 0470                       l1278 0F89                       l1390 0681  
                     l1382 0718                       l1374 06F3                       l1366 06D2  
                     l1294 07CD                       l1286 07B5                       l1358 0FF6  
                     l1622 02FB                       l1630 032C                       l1614 02DA  
                     l1606 02CB                       l1550 0084                       l1542 006D  
                     l1534 005E                       l1526 0049                       l1518 0036  
                     l1462 044C                       l1454 040C                       l1438 03D7  
                     l1710 0481                       l1702 0475                       l1392 068F  
                     l1384 071E                       l1368 06D7                       l1376 06FC  
                     l1296 07D3                       l1288 07C3                       l1640 035F  
                     l1632 0339                       l1624 0309                       l1616 02EE  
                     l1608 02D1                       l1560 00AF                       l1552 0089  
                     l1544 0075                       l1536 0062                       l1528 004B  
                     l1464 0450                       l1456 0410                       l1448 03F5  
                     l1720 048A                       l1712 0482                       l1704 0478  
                     l1394 0695                       l1386 0672                       l1378 0702  
                     l1298 07D6                       l1642 036D                       l1634 0344  
                     l1626 030D                       l1570 014C                       l1562 00CC  
                     l1546 0077                       l1538 0063                       l1490 062C  
                     l1482 060C                       l1458 0415                       l1466 0459  
                     l1730 04E6                       l1722 048B                       l1714 0485  
                     l1706 0479                       l1388 0678                       l1396 0F97  
                     l1644 0371                       l1636 0353                       l1628 0326  
                     l1580 01AF                       l1572 0155                       l1564 00E8  
                     l1556 0092                       l1548 007F                       l1492 0630  
                     l1484 0621                       l1476 05F6                       l1660 0566  
                     l1652 053D                       l1468 046B                       l1740 051E  
                     l1732 04F6                       l1724 0496                       l1716 0486  
                     l1708 047E                       l1398 0F9A                       l1646 0372  
                     l1638 035D                       l1590 024F                       l1582 01C8  
                     l1574 0165                       l1566 0114                       l1558 00A2  
                     l1486 0622                       l1478 0603                       l1670 0588  
                     l1654 0542                       l1742 0526                       l1734 04FE  
                     l1726 04CE                       l1718 0489                       l1648 037D  
                     l1592 0275                       l1584 01E5                       l1576 0182  
                     l1568 0130                       l1488 062A                       l1680 05B9  
                     l1672 058C                       l1664 056F                       l1656 0546  
                     l1744 052C                       l1736 0504                       l1728 04E1  
                     l1594 029D                       l1586 0212                       l1578 0192  
                     l1498 0638                       l1690 05EC                       l1682 05C3  
                     l1674 059A                       l1666 0574                       l1658 0556  
                     l1738 050E                       l1596 02A6                       l1588 0222  
                     l1692 05ED                       l1684 05CD                       l1676 05AA  
                     l1668 0581                       l1598 02B4                       l1686 05E3  
                     l1678 05B5                       l1688 05E8                       l1778 03B3  
                     STR_1 0810                       STR_2 081B                       u1000 07EE  
                     u1001 07ED                       u1010 07F5                       u1011 07F4  
                     u1020 07FC                       u1100 0766                       u1021 07FB  
                     u1101 0765                       u1110 0773                       u1111 0772  
                     u1200 06D7                       u1040 072F                       u1201 06D6  
                     u1041 072E                       u1130 0785                       u1035 07B8  
                     u1131 0784                       u1220 0702                       u1060 0741  
                     u1140 078F                       u1300 0405                       u1221 0701  
                     u1061 0740                       u1141 078E                       u1125 0777  
                     u1301 0404                       u1310 0459                       u1215 06DF  
                     u2007 07D8                       u1055 0733                       u1311 0458  
                     u1240 0FB6                       u1080 0752                       u1160 07A2  
                     u1320 046B                       u2017 067C                       u1241 0FB5  
                     u1081 0751                       u1161 07A1                       u1145 078B  
                     u1321 046A                       u1250 0F5C                       u1170 0FE7  
                     u1410 0661                       u1330 0603                       u2027 068B  
                     u1235 070A                       u1251 0F5B                       u1171 0FE6  
                     u1411 0660                       u1331 0602                       u1075 0742  
                     u1155 0796                       u1500 0089                       u1420 0666  
                     u1340 061A                       u1260 0394                       u2037 0699  
                     u1501 0088                       u1421 0665                       u1405 0653  
                     u1085 074E                       u1261 0393                       u1190 0FFB  
                     u1430 0036                       u1350 0630                       u1270 03CE  
                     u2047 0F8D                       u1191 0FFA                       u1511 00DA  
                     u1431 0035                       u1351 062F                       u1095 075A  
                     u1271 03CD                       u1512 00E1                       u1440 003C  
                     u1360 0637                       u1280 03F4                       u1185 0FEE  
                     u1601 0204                       u1521 00F6                       u1513 00E8  
                     u1441 003B                       u1361 0636                       u1345 0615  
                     u1281 03F3                       u1602 020B                       u1522 00FD  
                     u1450 0041                       u1290 03FF                       u1611 0231  
                     u1603 0212                       u1531 0122                       u1523 0104  
                     u1451 0040                       u1291 03FE                       u1700 02D5  
                     u1620 025B                       u1612 0238                       u1532 0129  
                     u1460 0062                       u1380 0649                       u1701 02D4  
                     u1613 023F                       u1541 013E                       u1533 0130  
                     u1461 0061                       u1381 0648                       u1285 03F0  
                     u1710 02DA                       u1542 0145                       u1470 0068  
                     u1390 0650                       u1711 02D9                       u1631 0267  
                     u1543 014C                       u1471 0067                       u1391 064F  
                     u1375 0639                       u1720 02EE                       u1640 0283  
                     u1632 026E                       u1480 006D                       u1800 0542  
                     u1721 02ED                       u1633 0275                       u1625 0256  
                     u1561 0174                       u1481 006C                       u1801 0541  
                     u1730 02F5                       u1562 017B                       u1490 0084  
                     u1810 0546                       u1731 02F4                       u1651 028F  
                     u1571 01A1                       u1563 0182                       u1555 014E  
                     u1491 0083                       u1811 0545                       u1740 02FB  
                     u1652 0296                       u1572 01A8                       u1900 05C3  
                     u1820 0566                       u1741 02FA                       u1653 029D  
                     u1645 027E                       u1573 01AF                       u1901 05C2  
                     u1821 0565                       u1750 030D                       u1910 05D8  
                     u1751 030C                       u1591 01D7                       u1760 031C  
                     u1680 02C1                       u1592 01DE                       u1920 05E8  
                     u1840 0587                       u1681 02C0                       u1665 029F  
                     u1593 01E5                       u1585 01B1                       u1921 05E7  
                     u1841 0586                       u1770 0339                       u1930 05EC  
                     u1771 0338                       u1675 02B6                       u1931 05EB  
                     u1915 05D3                       u1835 0579                       u1780 0353  
                     u1860 05A9                       u1781 0352                       u1765 0317  
                     u1861 05A8                       u1790 0371                       u1791 0370  
                     u1775 0335                       u1695 02C4                       u1855 059B  
                     u1880 05B9                       u1785 034F                       u1881 05B8  
                     u1890 05BF                       u1891 05BE                       u1875 05AE  
                     _INTE 005C                       _RBIE 005B                       _RBIF 0058  
                     u1977 050A                       u1987 0532                       u1997 07C8  
        ?_Lcd_Write_String 0070                       _main 0470                       _temp 0063  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 0F96            __end_of_ReadADC 0F67                      ??_ISR 0070  
            ___fltol@sign1 0049                      ?_main 0070            __end_of___flmul 0386  
          __end_of___fltol 0672            __end_of___lwdiv 076B                      i1l126 0FD2  
          __end_of___lwmod 07A7    __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088  
          __end_of_dpowers 0810                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0470           __end_of_Lcd_Init 06CF  
         __end_of_Lcd_Port 0800            __initialization 000F               __end_of_main 053A  
                ??_ADCinit 0072                     ??_main 004B         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E                     _ADRESL 009E                     i1l1750 0FC1  
                   i1l1752 0FC7                     i1l1754 0FCB                     i1l1746 0FB7  
                   i1l1756 0FD1                     i1l1748 0FBB                     _INTEDG 040E  
                   u194_20 0FBB                     u194_21 0FBA                     u195_20 0FC1  
                   u195_21 0FC0                     u196_20 0FCB                     u196_21 0FCA  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0037                     _TRISA0 0428  
                   _TRISB0 0430                     _TRISD0 0440           __end_of___xxtofl 05F6  
                ??_ReadADC 0074                  ??___flmul 002E                  ??___fltol 0044  
                ??___lwdiv 0076                  ??___lwmod 007A         __size_of__Umul8_16 0027  
                   saved_w 007E                  ??_sprintf 0027            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0072  
  __end_of__initialization 0021          __end_of_Lcd_Clear 0F55                 ___fltol@f1 0040  
           __pcstackCOMMON 0070               __pidataBANK0 0F46             _Lcd_Set_Cursor 06CF  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0061  
        __end_of__Umul8_16 1000                 __pmaintext 0470                 __pintentry 0004  
__size_of_Lcd_Write_String 0021     __end_of_Lcd_Set_Cursor 0727                    _ADCinit 0F67  
                ?___xxtofl 0072                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
               __stringtab 0800             _Lcd_Write_Char 07A7                    _Lcd_Cmd 0F7C  
                  _ReadADC 0F55                    ___flmul 0025                    ___fltol 05F6  
                  ___lwdiv 0727                    ___lwmod 076B            ?_Lcd_Set_Cursor 0076  
                  __ptext1 0386                    __ptext2 076B                    __ptext3 0727  
                  __ptext4 053A                    __ptext5 05F6                    __ptext6 0025  
                  __ptext7 0FD9                    __ptext8 0F55                    __ptext9 0F96  
             __size_of_ISR 0022                    _dpowers 0806                 ??___xxtofl 0076  
                  _sprintf 0386                    main@str 004D                    _voltage 0061  
   __end_of_Lcd_Write_Char 07DE       end_of_initialization 0021                  Lcd_Port@a 0072  
            ___xxtofl@sign 0020            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 007A  
        Lcd_Write_String@i 0078                ___flmul@grs 0034           ReadADC@TempValue 0074  
                _Lcd_Clear 0F48           _Lcd_Write_String 0F96        start_initialization 000F  
              __end_of_ISR 0FD9          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
               ?_Lcd_Clear 0070                  __Umul8_16 0FD9                __pdataBANK0 0067  
          Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075                   ?_ADCinit 0070  
                ___flmul@a 002A                  ___flmul@b 0026                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
              sprintf@flag 002B                sprintf@prec 002C                   ?_ReadADC 0072  
         ___lwdiv@dividend 0074           ??_Lcd_Set_Cursor 0077                   ?___flmul 0026  
                 ?___fltol 0040                 ?__Umul8_16 0072                   ?___lwdiv 0072  
                 ?___lwmod 0020                  __pstrings 0800           ___lwdiv@quotient 0077  
                 _ADCvalue 0065                   ?_sprintf 0024          interrupt_function 0004  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F           __size_of_ADCinit 0015  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 0672                   _Lcd_Port 07DE  
 __end_of_Lcd_Write_String 0FB7           __size_of_Lcd_Cmd 001A           __size_of_ReadADC 0012  
              ??__Umul8_16 0074           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lwdiv 0044           __size_of___lwmod 003C         __end_of__stringtab 0806  
               sprintf@val 002D                   ___xxtofl 053A            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079                   __ptext10 07A7                   __ptext11 06CF  
                 __ptext12 0672                   __ptext13 0F48                   __ptext14 0F7C  
                 __ptext15 07DE                   __ptext16 0F67                   __ptext17 0FB7  
         __size_of_sprintf 00EA              __size_of_main 00CA                   _setPoint 0067  
       Lcd_Write_Char@temp 0074                   intlevel1 0000                  sprintf@ap 002A  
                sprintf@sp 002F           ___lwmod@dividend 0022                  stringcode 0800  
       Lcd_Set_Cursor@temp 0023     __Umul8_16@multiplicand 0072                   sprintf@c 0030  
                 sprintf@f 0024            ___lwmod@divisor 0020            ___lwmod@counter 007B  
                 stringdir 0800                   stringtab 0800       __Umul8_16@multiplier 007A  
        __Umul8_16@product 0076  
