

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 09 22:17:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	idataBANK0
   200  0AA9                     __pidataBANK0:
   201                           
   202                           ;initializer for _ki
   203  0AA9  3407               	retlw	7
   204  0AAA  3400               	retlw	0
   205                           
   206                           ;initializer for _kp
   207  0AAB  342F               	retlw	47
   208  0AAC  3401               	retlw	1
   209                           
   210                           ;initializer for _setPoint
   211  0AAD  3425               	retlw	37
   212  0AAE  3400               	retlw	0
   213                           
   214                           	psect	idataBANK1
   215  0AA7                     __pidataBANK1:
   216                           
   217                           ;initializer for _kd
   218  0AA7  3401               	retlw	1
   219  0AA8  3400               	retlw	0
   220                           
   221                           	psect	strings
   222  0800                     __pstrings:
   223  0800                     stringtab:
   224  0800                     __stringtab:
   225  0800                     stringcode:	
   226                           ;	String table - string pointers are 1 byte each
   227                           
   228  0800                     stringdir:
   229  0800  3008               	movlw	high stringdir
   230  0801  008A               	movwf	10
   231  0802  0804               	movf	4,w
   232  0803  0A84               	incf	4,f
   233  0804  0782               	addwf	2,f
   234  0805                     __stringbase:
   235  0805  3400               	retlw	0
   236  0806                     __end_of__stringtab:
   237  0806                     _dpowers:
   238  0806  3401               	retlw	1
   239  0807  3400               	retlw	0
   240  0808  340A               	retlw	10
   241  0809  3400               	retlw	0
   242  080A  3464               	retlw	100
   243  080B  3400               	retlw	0
   244  080C  34E8               	retlw	232
   245  080D  3403               	retlw	3
   246  080E  3410               	retlw	16
   247  080F  3427               	retlw	39
   248  0810                     __end_of_dpowers:
   249  0015                     _CCPR1	set	21
   250  000E                     _TMR1	set	14
   251  001E                     _ADRESH	set	30
   252  001F                     _ADCON0bits	set	31
   253  0012                     _T2CON	set	18
   254  0011                     _TMR2	set	17
   255  0001                     _TMR0	set	1
   256  0017                     _CCP1CON	set	23
   257  0059                     _INTF	set	89
   258  0035                     _RB5	set	53
   259  0034                     _RB4	set	52
   260  0058                     _RBIF	set	88
   261  0061                     _TMR2IF	set	97
   262  0060                     _TMR1IF	set	96
   263  005A                     _TMR0IF	set	90
   264  005D                     _TMR0IE	set	93
   265  005B                     _RBIE	set	91
   266  005C                     _INTE	set	92
   267  005E                     _PEIE	set	94
   268  005F                     _GIE	set	95
   269  0080                     _TMR1ON	set	128
   270  0085                     _T1CKPS1	set	133
   271  0084                     _T1CKPS0	set	132
   272  0081                     _TMR1CS	set	129
   273  0036                     _RB6	set	54
   274  0037                     _RB7	set	55
   275  0033                     _RB3	set	51
   276  0040                     _RD0	set	64
   277  0062                     _CCP1IF	set	98
   278  003A                     _RC2	set	58
   279  0046                     _RD6	set	70
   280  0047                     _RD7	set	71
   281  0042                     _RD2	set	66
   282  0043                     _RD3	set	67
   283  0044                     _RD4	set	68
   284  0045                     _RD5	set	69
   285  009E                     _ADRESL	set	158
   286  009F                     _ADCON1bits	set	159
   287  0081                     _OPTION_REG	set	129
   288  0088                     _TRISD	set	136
   289  0461                     _TMR2IE	set	1121
   290  0460                     _TMR1IE	set	1120
   291  040E                     _INTEDG	set	1038
   292  0436                     _TRISB6	set	1078
   293  0437                     _TRISB7	set	1079
   294  0433                     _TRISB3	set	1075
   295  0430                     _TRISB0	set	1072
   296  0435                     _TRISB5	set	1077
   297  0434                     _TRISB4	set	1076
   298  0462                     _CCP1IE	set	1122
   299  043A                     _TRISC2	set	1082
   300  0428                     _TRISA0	set	1064
   301  0810                     STR_1:
   302  0810  3453               	retlw	83	;'S'
   303  0811  3465               	retlw	101	;'e'
   304  0812  3474               	retlw	116	;'t'
   305  0813  3420               	retlw	32	;' '
   306  0814  3420               	retlw	32	;' '
   307  0815  343D               	retlw	61	;'='
   308  0816  3420               	retlw	32	;' '
   309  0817  3425               	retlw	37	;'%'
   310  0818  3464               	retlw	100	;'d'
   311  0819  3420               	retlw	32	;' '
   312  081A  3400               	retlw	0
   313  081B                     STR_2:
   314  081B  3452               	retlw	82	;'R'
   315  081C  3465               	retlw	101	;'e'
   316  081D  3461               	retlw	97	;'a'
   317  081E  346C               	retlw	108	;'l'
   318  081F  3420               	retlw	32	;' '
   319  0820  343D               	retlw	61	;'='
   320  0821  3420               	retlw	32	;' '
   321  0822  3425               	retlw	37	;'%'
   322  0823  3464               	retlw	100	;'d'
   323  0824  3420               	retlw	32	;' '
   324  0825  3400               	retlw	0
   325  0817                     
   326                           	psect	cinit
   327  000F                     start_initialization:	
   328                           ; #config settings
   329                           
   330  000F                     __initialization:
   331                           
   332                           ; Initialize objects allocated to BANK1
   333  000F  1683               	bsf	3,5	;RP0=1, select bank1
   334  0010  1303               	bcf	3,6	;RP1=0, select bank1
   335  0011  120A  158A  22A7  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   336  0016  00B2               	movwf	__pdataBANK1& (0+127)
   337  0017  120A  158A  22A8  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   338  001C  00B3               	movwf	(__pdataBANK1+1)& (0+127)
   339                           
   340                           ; Initialize objects allocated to BANK0
   341  001D  1283               	bcf	3,5	;RP0=0, select bank0
   342  001E  1303               	bcf	3,6	;RP1=0, select bank0
   343  001F  120A  158A  22A9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   344  0024  00DE               	movwf	__pdataBANK0& (0+127)
   345  0025  120A  158A  22AA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   346  002A  00DF               	movwf	(__pdataBANK0+1)& (0+127)
   347  002B  120A  158A  22AB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   348  0030  00E0               	movwf	(__pdataBANK0+2)& (0+127)
   349  0031  120A  158A  22AC  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   350  0036  00E1               	movwf	(__pdataBANK0+3)& (0+127)
   351  0037  120A  158A  22AD  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   352  003C  00E2               	movwf	(__pdataBANK0+4)& (0+127)
   353  003D  120A  158A  22AE  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   354  0042  00E3               	movwf	(__pdataBANK0+5)& (0+127)
   355                           
   356                           ; Clear objects allocated to BANK1
   357  0043  1683               	bsf	3,5	;RP0=1, select bank1
   358  0044  1303               	bcf	3,6	;RP1=0, select bank1
   359  0045  01B0               	clrf	__pbssBANK1& (0+127)
   360  0046  01B1               	clrf	(__pbssBANK1+1)& (0+127)
   361                           
   362                           ; Clear objects allocated to BANK0
   363  0047  1383               	bcf	3,7	;select IRP bank0
   364  0048  304C               	movlw	low __pbssBANK0
   365  0049  0084               	movwf	4
   366  004A  305E               	movlw	low (__pbssBANK0+18)
   367  004B  120A  158A  22AF  120A  118A  	fcall	clear_ram0
   368                           
   369                           ; Clear objects allocated to COMMON
   370  0050  01F5               	clrf	__pbssCOMMON& (0+127)
   371  0051  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   372  0052  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   373  0053  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   374  0054                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377  0054                     __end_of__initialization:
   378  0054  0183               	clrf	3
   379  0055  120A  118A  2D96   	ljmp	_main	;jump to C main() function
   380                           
   381                           	psect	bssCOMMON
   382  0075                     __pbssCOMMON:
   383  0075                     _PID_i:
   384  0075                     	ds	2
   385  0077                     _PID_error:
   386  0077                     	ds	2
   387                           
   388                           	psect	bssBANK0
   389  004C                     __pbssBANK0:
   390  004C                     _samp:
   391  004C                     	ds	2
   392  004E                     _tmp:
   393  004E                     	ds	2
   394  0050                     _cnt2:
   395  0050                     	ds	2
   396  0052                     _cnt0:
   397  0052                     	ds	2
   398  0054                     _PID_d:
   399  0054                     	ds	2
   400  0056                     _PID_p:
   401  0056                     	ds	2
   402  0058                     _PID_value:
   403  0058                     	ds	2
   404  005A                     _previous_error:
   405  005A                     	ds	2
   406  005C                     _Temperature:
   407  005C                     	ds	2
   408                           
   409                           	psect	dataBANK0
   410  005E                     __pdataBANK0:
   411  005E                     _ki:
   412  005E                     	ds	2
   413  0060                     _kp:
   414  0060                     	ds	2
   415  0062                     _setPoint:
   416  0062                     	ds	2
   417                           
   418                           	psect	bssBANK1
   419  00B0                     __pbssBANK1:
   420  00B0                     _cnt1:
   421  00B0                     	ds	2
   422                           
   423                           	psect	dataBANK1
   424  00B2                     __pdataBANK1:
   425  00B2                     _kd:
   426  00B2                     	ds	2
   427                           
   428                           	psect	clrtext
   429  0AAF                     clear_ram0:	
   430                           ;	Called with FSR containing the base address, and
   431                           ;	W with the last address+1
   432                           
   433  0AAF  0064               	clrwdt	;clear the watchdog before getting into this loop
   434  0AB0                     clrloop0:
   435  0AB0  0180               	clrf	0	;clear RAM location pointed to by FSR
   436  0AB1  0A84               	incf	4,f	;increment pointer
   437  0AB2  0604               	xorwf	4,w	;XOR with final address
   438  0AB3  1903               	btfsc	3,2	;have we reached the end yet?
   439  0AB4  3400               	retlw	0	;all done for this memory range, return
   440  0AB5  0604               	xorwf	4,w	;XOR again to restore value
   441  0AB6  2AB0               	goto	clrloop0	;do the next byte
   442                           
   443                           	psect	cstackBANK1
   444  00A0                     __pcstackBANK1:
   445  00A0                     main@str:
   446                           
   447                           ; 16 bytes @ 0x0
   448  00A0                     	ds	16
   449                           
   450                           	psect	cstackCOMMON
   451  0070                     __pcstackCOMMON:
   452  0070                     ?_init_ADC:
   453  0070                     ?_Read_Temp:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_Cal_PID:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_Lcd_Port:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_Lcd_Cmd:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_Lcd_Clear:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_Lcd_Init:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_Lcd_Write_Char:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_Lcd_Write_String:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_ISR:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ??_ISR:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_main:	
   484                           ; 1 bytes @ 0x0
   485                           
   486                           
   487                           ; 2 bytes @ 0x0
   488  0070                     	ds	5
   489  0075                     ??_init_ADC:
   490  0075                     ??_Servo_MoveTo:	
   491                           ; 1 bytes @ 0x5
   492                           
   493  0075                     ??_Lcd_Port:	
   494                           ; 1 bytes @ 0x5
   495                           
   496  0075                     ??_Lcd_Clear:	
   497                           ; 1 bytes @ 0x5
   498                           
   499  0075                     ??___wmul:	
   500                           ; 1 bytes @ 0x5
   501                           
   502                           
   503                           	psect	cstackBANK0
   504  0020                     __pcstackBANK0:	
   505                           ; 1 bytes @ 0x5
   506                           
   507  0020                     ?_Servo_MoveTo:
   508  0020                     ?__Umul8_16:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0020                     ?___wmul:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0020                     ?___awdiv:	
   515                           ; 2 bytes @ 0x0
   516                           
   517  0020                     ?___lwdiv:	
   518                           ; 2 bytes @ 0x0
   519                           
   520  0020                     ?___fldiv:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0020                     ?___xxtofl:	
   524                           ; 4 bytes @ 0x0
   525                           
   526  0020                     Lcd_Port@a:	
   527                           ; 4 bytes @ 0x0
   528                           
   529  0020                     __Umul8_16@multiplicand:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0020                     Servo_MoveTo@a:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0020                     ___wmul@multiplier:	
   536                           ; 2 bytes @ 0x0
   537                           
   538  0020                     ___awdiv@divisor:	
   539                           ; 2 bytes @ 0x0
   540                           
   541  0020                     ___lwdiv@divisor:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0020                     ___fldiv@a:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0020                     ___xxtofl@val:	
   548                           ; 4 bytes @ 0x0
   549                           
   550                           
   551                           ; 4 bytes @ 0x0
   552  0020                     	ds	1
   553  0021                     ??_Lcd_Cmd:
   554  0021                     ??_Lcd_Write_Char:	
   555                           ; 1 bytes @ 0x1
   556                           
   557                           
   558                           ; 1 bytes @ 0x1
   559  0021                     	ds	1
   560  0022                     ??__Umul8_16:
   561  0022                     Lcd_Write_Char@temp:	
   562                           ; 1 bytes @ 0x2
   563                           
   564  0022                     ___wmul@multiplicand:	
   565                           ; 1 bytes @ 0x2
   566                           
   567  0022                     ___awdiv@dividend:	
   568                           ; 2 bytes @ 0x2
   569                           
   570  0022                     ___lwdiv@dividend:	
   571                           ; 2 bytes @ 0x2
   572                           
   573                           
   574                           ; 2 bytes @ 0x2
   575  0022                     	ds	1
   576  0023                     Lcd_Cmd@a:
   577  0023                     Lcd_Write_Char@y:	
   578                           ; 1 bytes @ 0x3
   579                           
   580                           
   581                           ; 1 bytes @ 0x3
   582  0023                     	ds	1
   583  0024                     ?_Lcd_Set_Cursor:
   584  0024                     ??_Lcd_Init:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0024                     ??___awdiv:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0024                     ??___lwdiv:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  0024                     ??___xxtofl:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0024                     Lcd_Set_Cursor@b:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0024                     Lcd_Write_Char@a:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0024                     ___wmul@product:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0024                     __Umul8_16@product:	
   606                           ; 2 bytes @ 0x4
   607                           
   608  0024                     ___fldiv@b:	
   609                           ; 2 bytes @ 0x4
   610                           
   611                           
   612                           ; 4 bytes @ 0x4
   613  0024                     	ds	1
   614  0025                     ??_Lcd_Set_Cursor:
   615  0025                     ??_Lcd_Write_String:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0025                     ___awdiv@counter:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0025                     ___lwdiv@counter:	
   622                           ; 1 bytes @ 0x5
   623                           
   624                           
   625                           ; 1 bytes @ 0x5
   626  0025                     	ds	1
   627  0026                     ___awdiv@sign:
   628  0026                     Lcd_Write_String@i:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0026                     ___lwdiv@quotient:	
   632                           ; 2 bytes @ 0x6
   633                           
   634  0026                     __Umul8_16@word_mpld:	
   635                           ; 2 bytes @ 0x6
   636                           
   637                           
   638                           ; 2 bytes @ 0x6
   639  0026                     	ds	1
   640  0027                     Lcd_Set_Cursor@a:
   641  0027                     ___awdiv@quotient:	
   642                           ; 1 bytes @ 0x7
   643                           
   644                           
   645                           ; 2 bytes @ 0x7
   646  0027                     	ds	1
   647  0028                     ??___fldiv:
   648  0028                     ?___lwmod:	
   649                           ; 1 bytes @ 0x8
   650                           
   651  0028                     Lcd_Set_Cursor@z:	
   652                           ; 2 bytes @ 0x8
   653                           
   654  0028                     Lcd_Write_String@a:	
   655                           ; 1 bytes @ 0x8
   656                           
   657  0028                     __Umul8_16@multiplier:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  0028                     ___xxtofl@sign:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  0028                     ___lwmod@divisor:	
   664                           ; 1 bytes @ 0x8
   665                           
   666                           
   667                           ; 2 bytes @ 0x8
   668  0028                     	ds	1
   669  0029                     ??_Cal_PID:
   670  0029                     ?___flmul:	
   671                           ; 1 bytes @ 0x9
   672                           
   673  0029                     Lcd_Set_Cursor@y:	
   674                           ; 4 bytes @ 0x9
   675                           
   676  0029                     ___xxtofl@exp:	
   677                           ; 1 bytes @ 0x9
   678                           
   679  0029                     ___flmul@b:	
   680                           ; 1 bytes @ 0x9
   681                           
   682                           
   683                           ; 4 bytes @ 0x9
   684  0029                     	ds	1
   685  002A                     Lcd_Set_Cursor@temp:
   686  002A                     ___lwmod@dividend:	
   687                           ; 1 bytes @ 0xA
   688                           
   689  002A                     ___xxtofl@arg:	
   690                           ; 2 bytes @ 0xA
   691                           
   692                           
   693                           ; 4 bytes @ 0xA
   694  002A                     	ds	2
   695  002C                     ??___lwmod:
   696                           
   697                           ; 1 bytes @ 0xC
   698  002C                     	ds	1
   699  002D                     ___lwmod@counter:
   700  002D                     ___fldiv@rem:	
   701                           ; 1 bytes @ 0xD
   702                           
   703  002D                     ___flmul@a:	
   704                           ; 4 bytes @ 0xD
   705                           
   706                           
   707                           ; 4 bytes @ 0xD
   708  002D                     	ds	1
   709  002E                     ?_sprintf:
   710  002E                     sprintf@f:	
   711                           ; 2 bytes @ 0xE
   712                           
   713                           
   714                           ; 1 bytes @ 0xE
   715  002E                     	ds	3
   716  0031                     ??_sprintf:
   717  0031                     ??___flmul:	
   718                           ; 1 bytes @ 0x11
   719                           
   720  0031                     ___fldiv@sign:	
   721                           ; 1 bytes @ 0x11
   722                           
   723                           
   724                           ; 1 bytes @ 0x11
   725  0031                     	ds	1
   726  0032                     ___fldiv@new_exp:
   727                           
   728                           ; 2 bytes @ 0x12
   729  0032                     	ds	2
   730  0034                     sprintf@ap:
   731  0034                     ___fldiv@grs:	
   732                           ; 1 bytes @ 0x14
   733                           
   734                           
   735                           ; 4 bytes @ 0x14
   736  0034                     	ds	1
   737  0035                     sprintf@flag:
   738                           
   739                           ; 1 bytes @ 0x15
   740  0035                     	ds	1
   741  0036                     sprintf@prec:
   742  0036                     ___flmul@sign:	
   743                           ; 1 bytes @ 0x16
   744                           
   745                           
   746                           ; 1 bytes @ 0x16
   747  0036                     	ds	1
   748  0037                     ___flmul@aexp:
   749  0037                     sprintf@val:	
   750                           ; 1 bytes @ 0x17
   751                           
   752                           
   753                           ; 2 bytes @ 0x17
   754  0037                     	ds	1
   755  0038                     ___fldiv@bexp:
   756  0038                     ___flmul@grs:	
   757                           ; 1 bytes @ 0x18
   758                           
   759                           
   760                           ; 4 bytes @ 0x18
   761  0038                     	ds	1
   762  0039                     sprintf@sp:
   763  0039                     ___fldiv@aexp:	
   764                           ; 1 bytes @ 0x19
   765                           
   766                           
   767                           ; 1 bytes @ 0x19
   768  0039                     	ds	1
   769  003A                     ?___fltol:
   770  003A                     sprintf@c:	
   771                           ; 4 bytes @ 0x1A
   772                           
   773  003A                     ___fltol@f1:	
   774                           ; 1 bytes @ 0x1A
   775                           
   776                           
   777                           ; 4 bytes @ 0x1A
   778  003A                     	ds	2
   779  003C                     ___flmul@bexp:
   780                           
   781                           ; 1 bytes @ 0x1C
   782  003C                     	ds	1
   783  003D                     ___flmul@prod:
   784                           
   785                           ; 4 bytes @ 0x1D
   786  003D                     	ds	1
   787  003E                     ??___fltol:
   788                           
   789                           ; 1 bytes @ 0x1E
   790  003E                     	ds	3
   791  0041                     ___flmul@temp:
   792                           
   793                           ; 2 bytes @ 0x21
   794  0041                     	ds	2
   795  0043                     ___fltol@sign1:
   796                           
   797                           ; 1 bytes @ 0x23
   798  0043                     	ds	1
   799  0044                     ___fltol@exp1:
   800                           
   801                           ; 1 bytes @ 0x24
   802  0044                     	ds	1
   803  0045                     ??_Read_Temp:
   804                           
   805                           ; 1 bytes @ 0x25
   806  0045                     	ds	2
   807  0047                     Read_Temp@TempValue:
   808                           
   809                           ; 4 bytes @ 0x27
   810  0047                     	ds	4
   811  004B                     ??_main:
   812                           
   813                           ; 1 bytes @ 0x2B
   814  004B                     	ds	1
   815                           
   816                           	psect	maintext
   817  0596                     __pmaintext:	
   818 ;;
   819 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   820 ;;
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 56 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  str            16    0[BANK1 ] unsigned char [16]
   828 ;; Return value:  Size  Location     Type
   829 ;;                  2  193[None  ] int 
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : B00/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       0      16       0       0
   839 ;;      Temps:          0       1       0       0       0
   840 ;;      Totals:         0       1      16       0       0
   841 ;;Total ram usage:       17 bytes
   842 ;; Hardware stack levels required when called: 4
   843 ;; This function calls:
   844 ;;		_Cal_PID
   845 ;;		_Lcd_Clear
   846 ;;		_Lcd_Init
   847 ;;		_Lcd_Set_Cursor
   848 ;;		_Lcd_Write_String
   849 ;;		_Read_Temp
   850 ;;		_Servo_MoveTo
   851 ;;		_init_ADC
   852 ;;		_sprintf
   853 ;; This function is called by:
   854 ;;		Startup code after reset
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _main
   860  0596                     _main:
   861  0596                     l3271:	
   862                           ;incstack = 0
   863                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   864                           
   865                           
   866                           ;main.c: 58: ;main.c: 61:     TRISB7 = 0;
   867  0596  120A  158A  22C4  120A  118A  	fcall	_init_ADC
   868  059B                     l3273:
   869                           
   870                           ;main.c: 62:     RB3 = 1;
   871  059B  1683               	bsf	3,5	;RP0=1, select bank1
   872  059C  1303               	bcf	3,6	;RP1=0, select bank1
   873  059D  1405               	bsf	5,0	;volatile
   874  059E                     l3275:
   875                           
   876                           ;main.c: 66: 
   877  059E  1107               	bcf	7,2	;volatile
   878  059F                     l3277:
   879                           
   880                           ;main.c: 67: 
   881  059F  1283               	bcf	3,5	;RP0=0, select bank0
   882  05A0  1303               	bcf	3,6	;RP1=0, select bank0
   883  05A1  1507               	bsf	7,2	;volatile
   884  05A2                     l3279:
   885                           
   886                           ;main.c: 68: 
   887  05A2  3009               	movlw	9
   888  05A3  0097               	movwf	23	;volatile
   889  05A4                     l3281:
   890                           
   891                           ;main.c: 69: 
   892  05A4  1683               	bsf	3,5	;RP0=1, select bank1
   893  05A5  1303               	bcf	3,6	;RP1=0, select bank1
   894  05A6  110C               	bcf	12,2	;volatile
   895  05A7                     l3283:
   896                           
   897                           ;main.c: 70:     TMR0 = 0x38;
   898  05A7  1283               	bcf	3,5	;RP0=0, select bank0
   899  05A8  1303               	bcf	3,6	;RP1=0, select bank0
   900  05A9  110C               	bcf	12,2	;volatile
   901                           
   902                           ;main.c: 71:     OPTION_REG = 0x00;
   903  05AA  3000               	movlw	0
   904  05AB  00A0               	movwf	Servo_MoveTo@a
   905  05AC  00A1               	movwf	Servo_MoveTo@a+1
   906  05AD  120A  158A  22D9  120A  118A  	fcall	_Servo_MoveTo
   907  05B2                     l3285:
   908                           
   909                           ;main.c: 75: 
   910  05B2  1683               	bsf	3,5	;RP0=1, select bank1
   911  05B3  1303               	bcf	3,6	;RP1=0, select bank1
   912  05B4  0188               	clrf	8	;volatile
   913  05B5                     l3287:
   914                           
   915                           ;main.c: 76:     TMR1 = 0xB1E0;
   916  05B5  1283               	bcf	3,5	;RP0=0, select bank0
   917  05B6  1303               	bcf	3,6	;RP1=0, select bank0
   918  05B7  1008               	bcf	8,0	;volatile
   919  05B8                     l3289:
   920                           
   921                           ;main.c: 77:     TMR1CS = 0;
   922  05B8  120A  158A  24B9  120A  118A  	fcall	_Lcd_Init
   923  05BD                     l3291:
   924                           
   925                           ;main.c: 81: 
   926  05BD  1683               	bsf	3,5	;RP0=1, select bank1
   927  05BE  1303               	bcf	3,6	;RP1=0, select bank1
   928  05BF  1606               	bsf	6,4	;volatile
   929  05C0                     l3293:
   930                           
   931                           ;main.c: 82: 
   932  05C0  1686               	bsf	6,5	;volatile
   933  05C1                     l3295:
   934                           
   935                           ;main.c: 87: 
   936  05C1  1406               	bsf	6,0	;volatile
   937  05C2                     l3297:
   938                           
   939                           ;main.c: 91:     GIE = 1;
   940  05C2  1186               	bcf	6,3	;volatile
   941  05C3                     l3299:
   942                           
   943                           ;main.c: 92:     PEIE = 1;
   944  05C3  1386               	bcf	6,7	;volatile
   945  05C4                     l3301:
   946                           
   947                           ;main.c: 93:     INTEDG = 1;
   948  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   949  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   950  05C6  1586               	bsf	6,3	;volatile
   951  05C7                     l3303:
   952                           
   953                           ;main.c: 94:     INTE = 1;
   954  05C7  1386               	bcf	6,7	;volatile
   955  05C8                     l3305:
   956                           
   957                           ;main.c: 95:     RBIE = 1;
   958  05C8  1683               	bsf	3,5	;RP0=1, select bank1
   959  05C9  1303               	bcf	3,6	;RP1=0, select bank1
   960  05CA  1306               	bcf	6,6	;volatile
   961  05CB                     l3307:
   962                           
   963                           ;main.c: 96:     TMR0IE = 0;
   964  05CB  1283               	bcf	3,5	;RP0=0, select bank0
   965  05CC  1303               	bcf	3,6	;RP1=0, select bank0
   966  05CD  1706               	bsf	6,6	;volatile
   967  05CE                     l3309:
   968                           
   969                           ;main.c: 101:     TMR2IF = 0;
   970  05CE  3038               	movlw	56
   971  05CF  0081               	movwf	1	;volatile
   972  05D0                     l3311:
   973                           
   974                           ;main.c: 102: 
   975  05D0  1683               	bsf	3,5	;RP0=1, select bank1
   976  05D1  1303               	bcf	3,6	;RP1=0, select bank1
   977  05D2  0181               	clrf	1	;volatile
   978  05D3                     l3313:
   979                           
   980                           ;main.c: 107: 
   981  05D3  30B1               	movlw	177
   982  05D4  1283               	bcf	3,5	;RP0=0, select bank0
   983  05D5  1303               	bcf	3,6	;RP1=0, select bank0
   984  05D6  008F               	movwf	15	;volatile
   985  05D7  30E0               	movlw	224
   986  05D8  008E               	movwf	14	;volatile
   987  05D9                     l3315:
   988                           
   989                           ;main.c: 108:         if(Temperature > setPoint)
   990  05D9  1090               	bcf	16,1	;volatile
   991  05DA                     l3317:
   992                           
   993                           ;main.c: 109:         {
   994  05DA  1210               	bcf	16,4	;volatile
   995  05DB                     l3319:
   996                           
   997                           ;main.c: 110:             RB6 = 0;
   998  05DB  1690               	bsf	16,5	;volatile
   999  05DC                     l3321:
  1000                           
  1001                           ;main.c: 111:             Servo_MoveTo(90);
  1002  05DC  1410               	bsf	16,0	;volatile
  1003                           
  1004                           ;main.c: 116:             Servo_MoveTo(0);
  1005  05DD  3006               	movlw	6
  1006  05DE  0091               	movwf	17	;volatile
  1007                           
  1008                           ;main.c: 117:         }
  1009  05DF  3006               	movlw	6
  1010  05E0  0092               	movwf	18	;volatile
  1011  05E1                     l3323:
  1012                           
  1013                           ;main.c: 122:             samp = 0;
  1014  05E1  178B               	bsf	11,7	;volatile
  1015  05E2                     l3325:
  1016                           
  1017                           ;main.c: 123:         }
  1018  05E2  170B               	bsf	11,6	;volatile
  1019  05E3                     l3327:
  1020                           
  1021                           ;main.c: 124: 
  1022  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  1023  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  1024  05E5  1701               	bsf	1,6	;volatile
  1025  05E6                     l3329:
  1026                           
  1027                           ;main.c: 125:         Lcd_Clear();
  1028  05E6  160B               	bsf	11,4	;volatile
  1029  05E7                     l3331:
  1030                           
  1031                           ;main.c: 126:         sprintf(str, "Set  = %d ", setPoint);
  1032  05E7  158B               	bsf	11,3	;volatile
  1033  05E8                     l3333:
  1034                           
  1035                           ;main.c: 127:         Lcd_Set_Cursor(1,1);
  1036  05E8  128B               	bcf	11,5	;volatile
  1037  05E9                     l3335:
  1038                           
  1039                           ;main.c: 128:         Lcd_Write_String(str);
  1040  05E9  110B               	bcf	11,2	;volatile
  1041  05EA                     l3337:
  1042                           
  1043                           ;main.c: 129:         sprintf(str, "Real = %d ", Temperature);
  1044  05EA  140C               	bsf	12,0	;volatile
  1045  05EB                     l3339:
  1046                           
  1047                           ;main.c: 130:         Lcd_Set_Cursor(2,1);
  1048  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1049  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1050  05ED  100C               	bcf	12,0	;volatile
  1051  05EE                     l3341:
  1052                           
  1053                           ;main.c: 131:         Lcd_Write_String(str);
  1054  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  1055  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  1056  05F0  148C               	bsf	12,1	;volatile
  1057  05F1                     l3343:
  1058                           
  1059                           ;main.c: 132:         sprintf(str, "%d ", PID_value);
  1060  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1061  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1062  05F3  108C               	bcf	12,1	;volatile
  1063  05F4                     l3345:
  1064                           
  1065                           ;main.c: 136:     };main.c: 137:     return 0;
  1066  05F4  120A  118A  2787  120A  118A  	fcall	_Read_Temp
  1067  05F9                     l3347:
  1068                           
  1069                           ;main.c: 139: 
  1070  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1071  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1072  05FB  0863               	movf	_setPoint+1,w
  1073  05FC  3A80               	xorlw	128
  1074  05FD  00CB               	movwf	??_main
  1075  05FE  085D               	movf	_Temperature+1,w
  1076  05FF  3A80               	xorlw	128
  1077  0600  024B               	subwf	??_main,w
  1078  0601  1D03               	skipz
  1079  0602  2E05               	goto	u4575
  1080  0603  085C               	movf	_Temperature,w
  1081  0604  0262               	subwf	_setPoint,w
  1082  0605                     u4575:
  1083  0605  1803               	skipnc
  1084  0606  2E08               	goto	u4571
  1085  0607  2E09               	goto	u4570
  1086  0608                     u4571:
  1087  0608  2E16               	goto	l195
  1088  0609                     u4570:
  1089  0609                     l3349:
  1090                           
  1091                           ;main.c: 140: void init_ADC (void);main.c: 141: {
  1092  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1093  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1094  060B  1306               	bcf	6,6	;volatile
  1095  060C                     l3351:
  1096                           
  1097                           ;main.c: 142: 
  1098  060C  305A               	movlw	90
  1099  060D  00A0               	movwf	Servo_MoveTo@a
  1100  060E  3000               	movlw	0
  1101  060F  00A1               	movwf	Servo_MoveTo@a+1
  1102  0610  120A  158A  22D9  120A  118A  	fcall	_Servo_MoveTo
  1103                           
  1104                           ;main.c: 143:     ADCON1bits.ADCS2 = 0, ADCON0bits.ADCS1 = 0,ADCON0bits.ADCS0 = 1;
  1105  0615  2E21               	goto	l3355
  1106  0616                     l195:	
  1107                           ;main.c: 144: 
  1108                           
  1109                           
  1110                           ;main.c: 145:     ADCON0bits.CHS2 = 1, ADCON0bits.CHS1 = 0, ADCON0bits.CHS0 = 1;;main.c:
      +                           146: 
  1111  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0618  1706               	bsf	6,6	;volatile
  1114  0619                     l3353:
  1115                           
  1116                           ;main.c: 147:     ADCON1bits.ADFM = 1;
  1117  0619  3000               	movlw	0
  1118  061A  00A0               	movwf	Servo_MoveTo@a
  1119  061B  00A1               	movwf	Servo_MoveTo@a+1
  1120  061C  120A  158A  22D9  120A  118A  	fcall	_Servo_MoveTo
  1121  0621                     l3355:
  1122                           
  1123                           ;main.c: 150: 
  1124  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0623  034C               	decf	_samp,w
  1127  0624  044D               	iorwf	_samp+1,w
  1128  0625  1D03               	btfss	3,2
  1129  0626  2E28               	goto	u4581
  1130  0627  2E29               	goto	u4580
  1131  0628                     u4581:
  1132  0628  2E32               	goto	l3361
  1133  0629                     u4580:
  1134  0629                     l3357:
  1135                           
  1136                           ;main.c: 151:     ADCON0bits.ADON = 1;;main.c: 152: }
  1137  0629  120A  158A  2699  120A  118A  	fcall	_Cal_PID
  1138  062E                     l3359:
  1139                           
  1140                           ;main.c: 153: 
  1141  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1142  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0630  01CC               	clrf	_samp
  1144  0631  01CD               	clrf	_samp+1
  1145  0632                     l3361:
  1146                           
  1147                           ;main.c: 156:     float TempValue = 0;
  1148  0632  120A  158A  22B7  120A  118A  	fcall	_Lcd_Clear
  1149  0637                     l3363:
  1150                           
  1151                           ;main.c: 157:     ADCON0bits.GO_nDONE = 1;
  1152  0637  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1153  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1155  063A  00CB               	movwf	??_main
  1156  063B  084B               	movf	??_main,w
  1157  063C  00AE               	movwf	sprintf@f
  1158  063D  0863               	movf	_setPoint+1,w
  1159  063E  00B0               	movwf	?_sprintf+2
  1160  063F  0862               	movf	_setPoint,w
  1161  0640  00AF               	movwf	?_sprintf+1
  1162  0641  30A0               	movlw	(low (main@str| 0))& (0+255)
  1163  0642  120A  118A  269D  120A  118A  	fcall	_sprintf
  1164  0647                     l3365:
  1165                           
  1166                           ;main.c: 158:     while(ADCON0bits.GO_nDONE);
  1167  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0649  01A4               	clrf	Lcd_Set_Cursor@b
  1170  064A  0AA4               	incf	Lcd_Set_Cursor@b,f
  1171  064B  3001               	movlw	1
  1172  064C  120A  158A  2461  120A  118A  	fcall	_Lcd_Set_Cursor
  1173  0651                     l3367:
  1174                           
  1175                           ;main.c: 159:     TempValue = ADRESH*256 + ADRESL;
  1176  0651  30A0               	movlw	(low (main@str| 0))& (0+255)
  1177  0652  120A  158A  232D  120A  118A  	fcall	_Lcd_Write_String
  1178  0657                     l3369:
  1179                           
  1180                           ;main.c: 160:     TempValue = 5000.0f / 1023 * TempValue;
  1181  0657  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1182  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1184  065A  00CB               	movwf	??_main
  1185  065B  084B               	movf	??_main,w
  1186  065C  00AE               	movwf	sprintf@f
  1187  065D  085D               	movf	_Temperature+1,w
  1188  065E  00B0               	movwf	?_sprintf+2
  1189  065F  085C               	movf	_Temperature,w
  1190  0660  00AF               	movwf	?_sprintf+1
  1191  0661  30A0               	movlw	(low (main@str| 0))& (0+255)
  1192  0662  120A  118A  269D  120A  118A  	fcall	_sprintf
  1193  0667                     l3371:
  1194                           
  1195                           ;main.c: 161:     Temperature = TempValue / 10;
  1196  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0669  01A4               	clrf	Lcd_Set_Cursor@b
  1199  066A  0AA4               	incf	Lcd_Set_Cursor@b,f
  1200  066B  3002               	movlw	2
  1201  066C  120A  158A  2461  120A  118A  	fcall	_Lcd_Set_Cursor
  1202  0671                     l3373:
  1203                           
  1204                           ;main.c: 162: }
  1205  0671  30A0               	movlw	(low (main@str| 0))& (0+255)
  1206  0672  120A  158A  232D  120A  118A  	fcall	_Lcd_Write_String
  1207  0677                     l3375:
  1208                           
  1209                           ;main.c: 163: 
  1210  0677  3012               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
  1211  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1213  067A  00CB               	movwf	??_main
  1214  067B  084B               	movf	??_main,w
  1215  067C  00AE               	movwf	sprintf@f
  1216  067D  0859               	movf	_PID_value+1,w
  1217  067E  00B0               	movwf	?_sprintf+2
  1218  067F  0858               	movf	_PID_value,w
  1219  0680  00AF               	movwf	?_sprintf+1
  1220  0681  30A0               	movlw	(low (main@str| 0))& (0+255)
  1221  0682  120A  118A  269D  120A  118A  	fcall	_sprintf
  1222  0687                     l3377:
  1223                           
  1224                           ;main.c: 164: void Cal_PID(void)
  1225  0687  300C               	movlw	12
  1226  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1228  068A  00CB               	movwf	??_main
  1229  068B  084B               	movf	??_main,w
  1230  068C  00A4               	movwf	Lcd_Set_Cursor@b
  1231  068D  3001               	movlw	1
  1232  068E  120A  158A  2461  120A  118A  	fcall	_Lcd_Set_Cursor
  1233  0693                     l3379:
  1234                           
  1235                           ;main.c: 165: {
  1236  0693  30A0               	movlw	(low (main@str| 0))& (0+255)
  1237  0694  120A  158A  232D  120A  118A  	fcall	_Lcd_Write_String
  1238  0699  2DF4               	goto	l3345
  1239  069A  120A  118A  280C   	ljmp	start
  1240  069D                     __end_of_main:
  1241                           
  1242                           	psect	text1
  1243  069D                     __ptext1:	
  1244 ;; *************** function _sprintf *****************
  1245 ;; Defined at:
  1246 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  sp              1    wreg     PTR unsigned char 
  1249 ;;		 -> main@str(16), 
  1250 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1251 ;;		 -> STR_3(4), STR_2(11), STR_1(11), 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1254 ;;		 -> main@str(16), 
  1255 ;;  tmpval          4    0        struct .
  1256 ;;  val             2   23[BANK0 ] unsigned int 
  1257 ;;  cp              2    0        PTR const unsigned char 
  1258 ;;  len             2    0        unsigned int 
  1259 ;;  c               1   26[BANK0 ] unsigned char 
  1260 ;;  prec            1   22[BANK0 ] char 
  1261 ;;  flag            1   21[BANK0 ] unsigned char 
  1262 ;;  ap              1   20[BANK0 ] PTR void [1]
  1263 ;;		 -> ?_sprintf(2), 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  2   14[BANK0 ] int 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       3       0       0       0
  1274 ;;      Locals:         0       7       0       0       0
  1275 ;;      Temps:          0       3       0       0       0
  1276 ;;      Totals:         0      13       0       0       0
  1277 ;;Total ram usage:       13 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 2
  1280 ;; This function calls:
  1281 ;;		___lwdiv
  1282 ;;		___lwmod
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _sprintf
  1290  069D                     _sprintf:
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1294                           ;sprintf@sp stored from wreg
  1295  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1296  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1297  069F  00B9               	movwf	sprintf@sp
  1298  06A0                     l3205:
  1299                           
  1300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1301  06A0  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1302  06A1  00B1               	movwf	??_sprintf
  1303  06A2  0831               	movf	??_sprintf,w
  1304  06A3  00B4               	movwf	sprintf@ap
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1307  06A4  2F70               	goto	l3257
  1308  06A5                     l3207:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1311  06A5  3025               	movlw	37
  1312  06A6  063A               	xorwf	sprintf@c,w
  1313  06A7  1903               	btfsc	3,2
  1314  06A8  2EAA               	goto	u4501
  1315  06A9  2EAB               	goto	u4500
  1316  06AA                     u4501:
  1317  06AA  2EB7               	goto	l3213
  1318  06AB                     u4500:
  1319  06AB                     l3209:
  1320                           
  1321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1322  06AB  083A               	movf	sprintf@c,w
  1323  06AC  00B1               	movwf	??_sprintf
  1324  06AD  0839               	movf	sprintf@sp,w
  1325  06AE  0084               	movwf	4
  1326  06AF  0831               	movf	??_sprintf,w
  1327  06B0  1383               	bcf	3,7	;select IRP bank0
  1328  06B1  0080               	movwf	0
  1329  06B2                     l3211:
  1330  06B2  3001               	movlw	1
  1331  06B3  00B1               	movwf	??_sprintf
  1332  06B4  0831               	movf	??_sprintf,w
  1333  06B5  07B9               	addwf	sprintf@sp,f
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1336  06B6  2F70               	goto	l3257
  1337  06B7                     l3213:
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1340  06B7  01B5               	clrf	sprintf@flag
  1341  06B8                     l3217:	
  1342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1343                           
  1344  06B8  3001               	movlw	1
  1345  06B9  07AE               	addwf	sprintf@f,f
  1346  06BA  30FF               	movlw	-1
  1347  06BB  072E               	addwf	sprintf@f,w
  1348  06BC  0084               	movwf	4
  1349  06BD  120A  158A  2000  120A  118A  	fcall	stringdir
  1350  06C2  00BA               	movwf	sprintf@c
  1351  06C3  00B1               	movwf	??_sprintf
  1352  06C4  01B2               	clrf	??_sprintf+1
  1353                           
  1354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1355                           ; Switch size 1, requested type "simple"
  1356                           ; Number of cases is 1, Range of values is 0 to 0
  1357                           ; switch strategies available:
  1358                           ; Name         Instructions Cycles
  1359                           ; simple_byte            4     3 (average)
  1360                           ; direct_byte           11     8 (fixed)
  1361                           ; jumptable            260     6 (fixed)
  1362                           ;	Chosen strategy is simple_byte
  1363  06C5  0832               	movf	??_sprintf+1,w
  1364  06C6  3A00               	xorlw	0	; case 0
  1365  06C7  1903               	skipnz
  1366  06C8  2ECA               	goto	l3411
  1367  06C9  2F70               	goto	l3257
  1368  06CA                     l3411:
  1369                           
  1370                           ; Switch size 1, requested type "simple"
  1371                           ; Number of cases is 3, Range of values is 0 to 105
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte           10     6 (average)
  1375                           ; jumptable            260     6 (fixed)
  1376                           ;	Chosen strategy is simple_byte
  1377  06CA  0831               	movf	??_sprintf,w
  1378  06CB  3A00               	xorlw	0	; case 0
  1379  06CC  1903               	skipnz
  1380  06CD  2F82               	goto	l3259
  1381  06CE  3A64               	xorlw	100	; case 100
  1382  06CF  1903               	skipnz
  1383  06D0  2ED5               	goto	l3219
  1384  06D1  3A0D               	xorlw	13	; case 105
  1385  06D2  1903               	skipnz
  1386  06D3  2ED5               	goto	l3219
  1387  06D4  2F70               	goto	l3257
  1388  06D5                     l3219:
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1391  06D5  0834               	movf	sprintf@ap,w
  1392  06D6  0084               	movwf	4
  1393  06D7  1383               	bcf	3,7	;select IRP bank0
  1394  06D8  0800               	movf	0,w
  1395  06D9  00B7               	movwf	sprintf@val
  1396  06DA  0A84               	incf	4,f
  1397  06DB  0800               	movf	0,w
  1398  06DC  00B8               	movwf	sprintf@val+1
  1399  06DD                     l3221:
  1400  06DD  3002               	movlw	2
  1401  06DE  00B1               	movwf	??_sprintf
  1402  06DF  0831               	movf	??_sprintf,w
  1403  06E0  07B4               	addwf	sprintf@ap,f
  1404  06E1                     l3223:
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1407  06E1  1FB8               	btfss	sprintf@val+1,7
  1408  06E2  2EE4               	goto	u4511
  1409  06E3  2EE5               	goto	u4510
  1410  06E4                     u4511:
  1411  06E4  2EEE               	goto	l3229
  1412  06E5                     u4510:
  1413  06E5                     l3225:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1416  06E5  3003               	movlw	3
  1417  06E6  00B1               	movwf	??_sprintf
  1418  06E7  0831               	movf	??_sprintf,w
  1419  06E8  04B5               	iorwf	sprintf@flag,f
  1420  06E9                     l3227:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1423  06E9  09B7               	comf	sprintf@val,f
  1424  06EA  09B8               	comf	sprintf@val+1,f
  1425  06EB  0AB7               	incf	sprintf@val,f
  1426  06EC  1903               	skipnz
  1427  06ED  0AB8               	incf	sprintf@val+1,f
  1428  06EE                     l3229:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1431  06EE  01BA               	clrf	sprintf@c
  1432  06EF  0ABA               	incf	sprintf@c,f
  1433  06F0                     l3235:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1436  06F0  083A               	movf	sprintf@c,w
  1437  06F1  00B1               	movwf	??_sprintf
  1438  06F2  0731               	addwf	??_sprintf,w
  1439  06F3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1440  06F4  0084               	movwf	4
  1441  06F5  120A  158A  2000  120A  118A  	fcall	stringdir
  1442  06FA  00B2               	movwf	??_sprintf+1
  1443  06FB  120A  158A  2000  120A  118A  	fcall	stringdir
  1444  0700  00B3               	movwf	??_sprintf+2
  1445  0701  0833               	movf	??_sprintf+2,w
  1446  0702  0238               	subwf	sprintf@val+1,w
  1447  0703  1D03               	skipz
  1448  0704  2F07               	goto	u4525
  1449  0705  0832               	movf	??_sprintf+1,w
  1450  0706  0237               	subwf	sprintf@val,w
  1451  0707                     u4525:
  1452  0707  1803               	skipnc
  1453  0708  2F0A               	goto	u4521
  1454  0709  2F0B               	goto	u4520
  1455  070A                     u4521:
  1456  070A  2F0C               	goto	l3239
  1457  070B                     u4520:
  1458  070B  2F16               	goto	l3241
  1459  070C                     l3239:
  1460  070C  3001               	movlw	1
  1461  070D  00B1               	movwf	??_sprintf
  1462  070E  0831               	movf	??_sprintf,w
  1463  070F  07BA               	addwf	sprintf@c,f
  1464  0710  3005               	movlw	5
  1465  0711  063A               	xorwf	sprintf@c,w
  1466  0712  1D03               	btfss	3,2
  1467  0713  2F15               	goto	u4531
  1468  0714  2F16               	goto	u4530
  1469  0715                     u4531:
  1470  0715  2EF0               	goto	l3235
  1471  0716                     u4530:
  1472  0716                     l3241:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1475  0716  0835               	movf	sprintf@flag,w
  1476  0717  3903               	andlw	3
  1477  0718  1903               	btfsc	3,2
  1478  0719  2F1B               	goto	u4541
  1479  071A  2F1C               	goto	u4540
  1480  071B                     u4541:
  1481  071B  2F27               	goto	l3247
  1482  071C                     u4540:
  1483  071C                     l3243:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1486  071C  302D               	movlw	45
  1487  071D  00B1               	movwf	??_sprintf
  1488  071E  0839               	movf	sprintf@sp,w
  1489  071F  0084               	movwf	4
  1490  0720  0831               	movf	??_sprintf,w
  1491  0721  1383               	bcf	3,7	;select IRP bank0
  1492  0722  0080               	movwf	0
  1493  0723                     l3245:
  1494  0723  3001               	movlw	1
  1495  0724  00B1               	movwf	??_sprintf
  1496  0725  0831               	movf	??_sprintf,w
  1497  0726  07B9               	addwf	sprintf@sp,f
  1498  0727                     l3247:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1501  0727  083A               	movf	sprintf@c,w
  1502  0728  00B1               	movwf	??_sprintf
  1503  0729  0831               	movf	??_sprintf,w
  1504  072A  00B6               	movwf	sprintf@prec
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1507  072B  2F67               	goto	l3255
  1508  072C                     l3249:
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1511  072C  300A               	movlw	10
  1512  072D  00A8               	movwf	___lwmod@divisor
  1513  072E  3000               	movlw	0
  1514  072F  00A9               	movwf	___lwmod@divisor+1
  1515  0730  0836               	movf	sprintf@prec,w
  1516  0731  00B1               	movwf	??_sprintf
  1517  0732  0731               	addwf	??_sprintf,w
  1518  0733  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1519  0734  0084               	movwf	4
  1520  0735  120A  158A  2000  120A  118A  	fcall	stringdir
  1521  073A  00A0               	movwf	___lwdiv@divisor
  1522  073B  120A  158A  2000  120A  118A  	fcall	stringdir
  1523  0740  00A1               	movwf	___lwdiv@divisor+1
  1524  0741  0838               	movf	sprintf@val+1,w
  1525  0742  00A3               	movwf	___lwdiv@dividend+1
  1526  0743  0837               	movf	sprintf@val,w
  1527  0744  00A2               	movwf	___lwdiv@dividend
  1528  0745  120A  158A  241B  120A  118A  	fcall	___lwdiv
  1529  074A  1283               	bcf	3,5	;RP0=0, select bank0
  1530  074B  1303               	bcf	3,6	;RP1=0, select bank0
  1531  074C  0821               	movf	?___lwdiv+1,w
  1532  074D  00AB               	movwf	___lwmod@dividend+1
  1533  074E  0820               	movf	?___lwdiv,w
  1534  074F  00AA               	movwf	___lwmod@dividend
  1535  0750  120A  158A  23A2  120A  118A  	fcall	___lwmod
  1536  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0757  0828               	movf	?___lwmod,w
  1539  0758  3E30               	addlw	48
  1540  0759  00B2               	movwf	??_sprintf+1
  1541  075A  0832               	movf	??_sprintf+1,w
  1542  075B  00BA               	movwf	sprintf@c
  1543  075C                     l3251:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1546  075C  083A               	movf	sprintf@c,w
  1547  075D  00B1               	movwf	??_sprintf
  1548  075E  0839               	movf	sprintf@sp,w
  1549  075F  0084               	movwf	4
  1550  0760  0831               	movf	??_sprintf,w
  1551  0761  1383               	bcf	3,7	;select IRP bank0
  1552  0762  0080               	movwf	0
  1553  0763                     l3253:
  1554  0763  3001               	movlw	1
  1555  0764  00B1               	movwf	??_sprintf
  1556  0765  0831               	movf	??_sprintf,w
  1557  0766  07B9               	addwf	sprintf@sp,f
  1558  0767                     l3255:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1561  0767  30FF               	movlw	255
  1562  0768  00B1               	movwf	??_sprintf
  1563  0769  0831               	movf	??_sprintf,w
  1564  076A  07B6               	addwf	sprintf@prec,f
  1565  076B  0A36               	incf	sprintf@prec,w
  1566  076C  1D03               	btfss	3,2
  1567  076D  2F6F               	goto	u4551
  1568  076E  2F70               	goto	u4550
  1569  076F                     u4551:
  1570  076F  2F2C               	goto	l3249
  1571  0770                     u4550:
  1572  0770                     l3257:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1575  0770  3001               	movlw	1
  1576  0771  07AE               	addwf	sprintf@f,f
  1577  0772  30FF               	movlw	-1
  1578  0773  072E               	addwf	sprintf@f,w
  1579  0774  0084               	movwf	4
  1580  0775  120A  158A  2000  120A  118A  	fcall	stringdir
  1581  077A  00B1               	movwf	??_sprintf
  1582  077B  0831               	movf	??_sprintf,w
  1583  077C  00BA               	movwf	sprintf@c
  1584  077D  083A               	movf	sprintf@c,w
  1585  077E  1D03               	btfss	3,2
  1586  077F  2F81               	goto	u4561
  1587  0780  2F82               	goto	u4560
  1588  0781                     u4561:
  1589  0781  2EA5               	goto	l3207
  1590  0782                     u4560:
  1591  0782                     l3259:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1594  0782  0839               	movf	sprintf@sp,w
  1595  0783  0084               	movwf	4
  1596  0784  1383               	bcf	3,7	;select IRP bank0
  1597  0785  0180               	clrf	0
  1598  0786                     l349:
  1599  0786  0008               	return
  1600  0787                     __end_of_sprintf:
  1601                           
  1602                           	psect	text2
  1603  0BA2                     __ptext2:	
  1604 ;; *************** function ___lwmod *****************
  1605 ;; Defined at:
  1606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  divisor         2    8[BANK0 ] unsigned int 
  1609 ;;  dividend        2   10[BANK0 ] unsigned int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  counter         1   13[BANK0 ] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  2    8[BANK0 ] unsigned int 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       4       0       0       0
  1622 ;;      Locals:         0       1       0       0       0
  1623 ;;      Temps:          0       1       0       0       0
  1624 ;;      Totals:         0       6       0       0       0
  1625 ;;Total ram usage:        6 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_sprintf
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function ___lwmod
  1637  0BA2                     ___lwmod:
  1638  0BA2                     l2773:	
  1639                           ;incstack = 0
  1640                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1641                           
  1642  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0BA4  0828               	movf	___lwmod@divisor,w
  1645  0BA5  0429               	iorwf	___lwmod@divisor+1,w
  1646  0BA6  1903               	btfsc	3,2
  1647  0BA7  2BA9               	goto	u3531
  1648  0BA8  2BAA               	goto	u3530
  1649  0BA9                     u3531:
  1650  0BA9  2BD9               	goto	l2791
  1651  0BAA                     u3530:
  1652  0BAA                     l2775:
  1653  0BAA  01AD               	clrf	___lwmod@counter
  1654  0BAB  0AAD               	incf	___lwmod@counter,f
  1655  0BAC  2BB8               	goto	l2781
  1656  0BAD                     l2777:
  1657  0BAD  3001               	movlw	1
  1658  0BAE                     u3545:
  1659  0BAE  1003               	clrc
  1660  0BAF  0DA8               	rlf	___lwmod@divisor,f
  1661  0BB0  0DA9               	rlf	___lwmod@divisor+1,f
  1662  0BB1  3EFF               	addlw	-1
  1663  0BB2  1D03               	skipz
  1664  0BB3  2BAE               	goto	u3545
  1665  0BB4                     l2779:
  1666  0BB4  3001               	movlw	1
  1667  0BB5  00AC               	movwf	??___lwmod
  1668  0BB6  082C               	movf	??___lwmod,w
  1669  0BB7  07AD               	addwf	___lwmod@counter,f
  1670  0BB8                     l2781:
  1671  0BB8  1FA9               	btfss	___lwmod@divisor+1,7
  1672  0BB9  2BBB               	goto	u3551
  1673  0BBA  2BBC               	goto	u3550
  1674  0BBB                     u3551:
  1675  0BBB  2BAD               	goto	l2777
  1676  0BBC                     u3550:
  1677  0BBC                     l2783:
  1678  0BBC  0829               	movf	___lwmod@divisor+1,w
  1679  0BBD  022B               	subwf	___lwmod@dividend+1,w
  1680  0BBE  1D03               	skipz
  1681  0BBF  2BC2               	goto	u3565
  1682  0BC0  0828               	movf	___lwmod@divisor,w
  1683  0BC1  022A               	subwf	___lwmod@dividend,w
  1684  0BC2                     u3565:
  1685  0BC2  1C03               	skipc
  1686  0BC3  2BC5               	goto	u3561
  1687  0BC4  2BC6               	goto	u3560
  1688  0BC5                     u3561:
  1689  0BC5  2BCC               	goto	l2787
  1690  0BC6                     u3560:
  1691  0BC6                     l2785:
  1692  0BC6  0828               	movf	___lwmod@divisor,w
  1693  0BC7  02AA               	subwf	___lwmod@dividend,f
  1694  0BC8  0829               	movf	___lwmod@divisor+1,w
  1695  0BC9  1C03               	skipc
  1696  0BCA  03AB               	decf	___lwmod@dividend+1,f
  1697  0BCB  02AB               	subwf	___lwmod@dividend+1,f
  1698  0BCC                     l2787:
  1699  0BCC  3001               	movlw	1
  1700  0BCD                     u3575:
  1701  0BCD  1003               	clrc
  1702  0BCE  0CA9               	rrf	___lwmod@divisor+1,f
  1703  0BCF  0CA8               	rrf	___lwmod@divisor,f
  1704  0BD0  3EFF               	addlw	-1
  1705  0BD1  1D03               	skipz
  1706  0BD2  2BCD               	goto	u3575
  1707  0BD3                     l2789:
  1708  0BD3  3001               	movlw	1
  1709  0BD4  02AD               	subwf	___lwmod@counter,f
  1710  0BD5  1D03               	btfss	3,2
  1711  0BD6  2BD8               	goto	u3581
  1712  0BD7  2BD9               	goto	u3580
  1713  0BD8                     u3581:
  1714  0BD8  2BBC               	goto	l2783
  1715  0BD9                     u3580:
  1716  0BD9                     l2791:
  1717  0BD9  082B               	movf	___lwmod@dividend+1,w
  1718  0BDA  00A9               	movwf	?___lwmod+1
  1719  0BDB  082A               	movf	___lwmod@dividend,w
  1720  0BDC  00A8               	movwf	?___lwmod
  1721  0BDD                     l635:
  1722  0BDD  0008               	return
  1723  0BDE                     __end_of___lwmod:
  1724                           
  1725                           	psect	text3
  1726  0C1B                     __ptext3:	
  1727 ;; *************** function ___lwdiv *****************
  1728 ;; Defined at:
  1729 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  divisor         2    0[BANK0 ] unsigned int 
  1732 ;;  dividend        2    2[BANK0 ] unsigned int 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  quotient        2    6[BANK0 ] unsigned int 
  1735 ;;  counter         1    5[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2    0[BANK0 ] unsigned int 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       4       0       0       0
  1746 ;;      Locals:         0       3       0       0       0
  1747 ;;      Temps:          0       1       0       0       0
  1748 ;;      Totals:         0       8       0       0       0
  1749 ;;Total ram usage:        8 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_sprintf
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function ___lwdiv
  1761  0C1B                     ___lwdiv:
  1762  0C1B                     l2747:	
  1763                           ;incstack = 0
  1764                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1765                           
  1766  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0C1D  01A6               	clrf	___lwdiv@quotient
  1769  0C1E  01A7               	clrf	___lwdiv@quotient+1
  1770  0C1F                     l2749:
  1771  0C1F  0820               	movf	___lwdiv@divisor,w
  1772  0C20  0421               	iorwf	___lwdiv@divisor+1,w
  1773  0C21  1903               	btfsc	3,2
  1774  0C22  2C24               	goto	u3461
  1775  0C23  2C25               	goto	u3460
  1776  0C24                     u3461:
  1777  0C24  2C5C               	goto	l2769
  1778  0C25                     u3460:
  1779  0C25                     l2751:
  1780  0C25  01A5               	clrf	___lwdiv@counter
  1781  0C26  0AA5               	incf	___lwdiv@counter,f
  1782  0C27  2C33               	goto	l2757
  1783  0C28                     l2753:
  1784  0C28  3001               	movlw	1
  1785  0C29                     u3475:
  1786  0C29  1003               	clrc
  1787  0C2A  0DA0               	rlf	___lwdiv@divisor,f
  1788  0C2B  0DA1               	rlf	___lwdiv@divisor+1,f
  1789  0C2C  3EFF               	addlw	-1
  1790  0C2D  1D03               	skipz
  1791  0C2E  2C29               	goto	u3475
  1792  0C2F                     l2755:
  1793  0C2F  3001               	movlw	1
  1794  0C30  00A4               	movwf	??___lwdiv
  1795  0C31  0824               	movf	??___lwdiv,w
  1796  0C32  07A5               	addwf	___lwdiv@counter,f
  1797  0C33                     l2757:
  1798  0C33  1FA1               	btfss	___lwdiv@divisor+1,7
  1799  0C34  2C36               	goto	u3481
  1800  0C35  2C37               	goto	u3480
  1801  0C36                     u3481:
  1802  0C36  2C28               	goto	l2753
  1803  0C37                     u3480:
  1804  0C37                     l2759:
  1805  0C37  3001               	movlw	1
  1806  0C38                     u3495:
  1807  0C38  1003               	clrc
  1808  0C39  0DA6               	rlf	___lwdiv@quotient,f
  1809  0C3A  0DA7               	rlf	___lwdiv@quotient+1,f
  1810  0C3B  3EFF               	addlw	-1
  1811  0C3C  1D03               	skipz
  1812  0C3D  2C38               	goto	u3495
  1813  0C3E  0821               	movf	___lwdiv@divisor+1,w
  1814  0C3F  0223               	subwf	___lwdiv@dividend+1,w
  1815  0C40  1D03               	skipz
  1816  0C41  2C44               	goto	u3505
  1817  0C42  0820               	movf	___lwdiv@divisor,w
  1818  0C43  0222               	subwf	___lwdiv@dividend,w
  1819  0C44                     u3505:
  1820  0C44  1C03               	skipc
  1821  0C45  2C47               	goto	u3501
  1822  0C46  2C48               	goto	u3500
  1823  0C47                     u3501:
  1824  0C47  2C4F               	goto	l2765
  1825  0C48                     u3500:
  1826  0C48                     l2761:
  1827  0C48  0820               	movf	___lwdiv@divisor,w
  1828  0C49  02A2               	subwf	___lwdiv@dividend,f
  1829  0C4A  0821               	movf	___lwdiv@divisor+1,w
  1830  0C4B  1C03               	skipc
  1831  0C4C  03A3               	decf	___lwdiv@dividend+1,f
  1832  0C4D  02A3               	subwf	___lwdiv@dividend+1,f
  1833  0C4E                     l2763:
  1834  0C4E  1426               	bsf	___lwdiv@quotient,0
  1835  0C4F                     l2765:
  1836  0C4F  3001               	movlw	1
  1837  0C50                     u3515:
  1838  0C50  1003               	clrc
  1839  0C51  0CA1               	rrf	___lwdiv@divisor+1,f
  1840  0C52  0CA0               	rrf	___lwdiv@divisor,f
  1841  0C53  3EFF               	addlw	-1
  1842  0C54  1D03               	skipz
  1843  0C55  2C50               	goto	u3515
  1844  0C56                     l2767:
  1845  0C56  3001               	movlw	1
  1846  0C57  02A5               	subwf	___lwdiv@counter,f
  1847  0C58  1D03               	btfss	3,2
  1848  0C59  2C5B               	goto	u3521
  1849  0C5A  2C5C               	goto	u3520
  1850  0C5B                     u3521:
  1851  0C5B  2C37               	goto	l2759
  1852  0C5C                     u3520:
  1853  0C5C                     l2769:
  1854  0C5C  0827               	movf	___lwdiv@quotient+1,w
  1855  0C5D  00A1               	movwf	?___lwdiv+1
  1856  0C5E  0826               	movf	___lwdiv@quotient,w
  1857  0C5F  00A0               	movwf	?___lwdiv
  1858  0C60                     l625:
  1859  0C60  0008               	return
  1860  0C61                     __end_of___lwdiv:
  1861                           
  1862                           	psect	text4
  1863  0AC4                     __ptext4:	
  1864 ;; *************** function _init_ADC *****************
  1865 ;; Defined at:
  1866 ;;		line 171 in file "main.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		None
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0
  1883 ;;      Totals:         0       0       0       0       0
  1884 ;;Total ram usage:        0 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _init_ADC
  1896  0AC4                     _init_ADC:
  1897  0AC4                     l3161:	
  1898                           ;incstack = 0
  1899                           ; Regs used in _init_ADC: []
  1900                           
  1901                           
  1902                           ;main.c: 174:     if(PID_value < 1600)
  1903  0AC4  1683               	bsf	3,5	;RP0=1, select bank1
  1904  0AC5  1303               	bcf	3,6	;RP1=0, select bank1
  1905  0AC6  131F               	bcf	31,6	;volatile
  1906  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0AC9  139F               	bcf	31,7	;volatile
  1909  0ACA  171F               	bsf	31,6	;volatile
  1910                           
  1911                           ;main.c: 176:     if(PID_value > 8400)
  1912  0ACB  169F               	bsf	31,5	;volatile
  1913  0ACC  121F               	bcf	31,4	;volatile
  1914  0ACD  159F               	bsf	31,3	;volatile
  1915                           
  1916                           ;main.c: 178:     PID_value = (10000 - PID_value);
  1917  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0AD0  179F               	bsf	31,7	;volatile
  1920                           
  1921                           ;main.c: 180: }
  1922  0AD1  159F               	bsf	31,3	;volatile
  1923  0AD2  151F               	bsf	31,2	;volatile
  1924  0AD3  149F               	bsf	31,1	;volatile
  1925  0AD4  101F               	bcf	31,0	;volatile
  1926                           
  1927                           ;main.c: 182: void __attribute__((picinterrupt(("")))) ISR(void)
  1928  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0AD6  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0AD7  141F               	bsf	31,0	;volatile
  1931  0AD8                     l203:
  1932  0AD8  0008               	return
  1933  0AD9                     __end_of_init_ADC:
  1934                           
  1935                           	psect	text5
  1936  0AD9                     __ptext5:	
  1937 ;; *************** function _Servo_MoveTo *****************
  1938 ;; Defined at:
  1939 ;;		line 284 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  a               2    0[BANK0 ] int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         0       2       0       0       0
  1954 ;;      Locals:         0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0
  1956 ;;      Totals:         0       2       0       0       0
  1957 ;;Total ram usage:        2 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _Servo_MoveTo
  1969  0AD9                     _Servo_MoveTo:
  1970  0AD9                     l3163:	
  1971                           ;incstack = 0
  1972                           ; Regs used in _Servo_MoveTo: [wreg+status,2+status,0]
  1973                           
  1974  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  1976  0ADB  0820               	movf	Servo_MoveTo@a,w
  1977  0ADC  0421               	iorwf	Servo_MoveTo@a+1,w
  1978  0ADD  1D03               	btfss	3,2
  1979  0ADE  2AE0               	goto	u4441
  1980  0ADF  2AE1               	goto	u4440
  1981  0AE0                     u4441:
  1982  0AE0  2AE5               	goto	l3167
  1983  0AE1                     u4440:
  1984  0AE1                     l3165:
  1985  0AE1  30B4               	movlw	180
  1986  0AE2  0096               	movwf	22	;volatile
  1987  0AE3  3030               	movlw	48
  1988  0AE4  0095               	movwf	21	;volatile
  1989  0AE5                     l3167:
  1990  0AE5  305A               	movlw	90
  1991  0AE6  0620               	xorwf	Servo_MoveTo@a,w
  1992  0AE7  0421               	iorwf	Servo_MoveTo@a+1,w
  1993  0AE8  1D03               	btfss	3,2
  1994  0AE9  2AEB               	goto	u4451
  1995  0AEA  2AEC               	goto	u4450
  1996  0AEB                     u4451:
  1997  0AEB  2AF0               	goto	l239
  1998  0AEC                     u4450:
  1999  0AEC                     l3169:
  2000  0AEC  30B7               	movlw	183
  2001  0AED  0096               	movwf	22	;volatile
  2002  0AEE  30A8               	movlw	168
  2003  0AEF  0095               	movwf	21	;volatile
  2004  0AF0                     l239:
  2005  0AF0  0008               	return
  2006  0AF1                     __end_of_Servo_MoveTo:
  2007                           
  2008                           	psect	text6
  2009  0787                     __ptext6:	
  2010 ;; *************** function _Read_Temp *****************
  2011 ;; Defined at:
  2012 ;;		line 185 in file "main.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  TempValue       4   39[BANK0 ] float 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       0       0       0
  2027 ;;      Locals:         0       4       0       0       0
  2028 ;;      Temps:          0       2       0       0       0
  2029 ;;      Totals:         0       6       0       0       0
  2030 ;;Total ram usage:        6 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 3
  2033 ;; This function calls:
  2034 ;;		___fldiv
  2035 ;;		___flmul
  2036 ;;		___fltol
  2037 ;;		___xxtofl
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _Read_Temp
  2045  0787                     _Read_Temp:
  2046  0787                     l3171:	
  2047                           ;incstack = 0
  2048                           ; Regs used in _Read_Temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2049                           
  2050  0787                     l3173:
  2051                           
  2052                           ;main.c: 188:             _delay((unsigned long)((180)*(16000000/4000.0)));
  2053  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0789  151F               	bsf	31,2	;volatile
  2056  078A                     l206:	
  2057                           ;main.c: 189:             setPoint++;
  2058                           
  2059  078A  191F               	btfsc	31,2	;volatile
  2060  078B  2F8D               	goto	u4461
  2061  078C  2F8E               	goto	u4460
  2062  078D                     u4461:
  2063  078D  2F8A               	goto	l206
  2064  078E                     u4460:
  2065  078E                     l3175:
  2066                           
  2067                           ;main.c: 190:         }
  2068  078E  081E               	movf	30,w	;volatile
  2069  078F  00C5               	movwf	??_Read_Temp
  2070  0790  01C6               	clrf	??_Read_Temp+1
  2071  0791  0845               	movf	??_Read_Temp,w
  2072  0792  00C6               	movwf	??_Read_Temp+1
  2073  0793  01C5               	clrf	??_Read_Temp
  2074  0794  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0795  1303               	bcf	3,6	;RP1=0, select bank1
  2076  0796  081E               	movf	30,w	;volatile
  2077  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0799  0745               	addwf	??_Read_Temp,w
  2080  079A  00A0               	movwf	___xxtofl@val
  2081  079B  3000               	movlw	0
  2082  079C  1803               	skipnc
  2083  079D  3001               	movlw	1
  2084  079E  0746               	addwf	??_Read_Temp+1,w
  2085  079F  00A1               	movwf	___xxtofl@val+1
  2086  07A0  01A2               	clrf	___xxtofl@val+2
  2087  07A1  1BA1               	btfsc	___xxtofl@val+1,7
  2088  07A2  03A2               	decf	___xxtofl@val+2,f
  2089  07A3  0822               	movf	___xxtofl@val+2,w
  2090  07A4  00A3               	movwf	___xxtofl@val+3
  2091  07A5  3001               	movlw	1
  2092  07A6  120A  158A  2744  120A  118A  	fcall	___xxtofl
  2093  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  2094  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  2095  07AD  0823               	movf	?___xxtofl+3,w
  2096  07AE  00CA               	movwf	Read_Temp@TempValue+3
  2097  07AF  0822               	movf	?___xxtofl+2,w
  2098  07B0  00C9               	movwf	Read_Temp@TempValue+2
  2099  07B1  0821               	movf	?___xxtofl+1,w
  2100  07B2  00C8               	movwf	Read_Temp@TempValue+1
  2101  07B3  0820               	movf	?___xxtofl,w
  2102  07B4  00C7               	movwf	Read_Temp@TempValue
  2103                           
  2104                           ;main.c: 191:         if(RB5 == 0)
  2105  07B5  3040               	movlw	64
  2106  07B6  00AC               	movwf	___flmul@b+3
  2107  07B7  309C               	movlw	156
  2108  07B8  00AB               	movwf	___flmul@b+2
  2109  07B9  3067               	movlw	103
  2110  07BA  00AA               	movwf	___flmul@b+1
  2111  07BB  301A               	movlw	26
  2112  07BC  00A9               	movwf	___flmul@b
  2113  07BD  084A               	movf	Read_Temp@TempValue+3,w
  2114  07BE  00B0               	movwf	___flmul@a+3
  2115  07BF  0849               	movf	Read_Temp@TempValue+2,w
  2116  07C0  00AF               	movwf	___flmul@a+2
  2117  07C1  0848               	movf	Read_Temp@TempValue+1,w
  2118  07C2  00AE               	movwf	___flmul@a+1
  2119  07C3  0847               	movf	Read_Temp@TempValue,w
  2120  07C4  00AD               	movwf	___flmul@a
  2121  07C5  120A  118A  2058  120A  118A  	fcall	___flmul
  2122  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  2123  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  2124  07CC  082C               	movf	?___flmul+3,w
  2125  07CD  00CA               	movwf	Read_Temp@TempValue+3
  2126  07CE  082B               	movf	?___flmul+2,w
  2127  07CF  00C9               	movwf	Read_Temp@TempValue+2
  2128  07D0  082A               	movf	?___flmul+1,w
  2129  07D1  00C8               	movwf	Read_Temp@TempValue+1
  2130  07D2  0829               	movf	?___flmul,w
  2131  07D3  00C7               	movwf	Read_Temp@TempValue
  2132                           
  2133                           ;main.c: 192:         {
  2134  07D4  084A               	movf	Read_Temp@TempValue+3,w
  2135  07D5  00A7               	movwf	___fldiv@b+3
  2136  07D6  0849               	movf	Read_Temp@TempValue+2,w
  2137  07D7  00A6               	movwf	___fldiv@b+2
  2138  07D8  0848               	movf	Read_Temp@TempValue+1,w
  2139  07D9  00A5               	movwf	___fldiv@b+1
  2140  07DA  0847               	movf	Read_Temp@TempValue,w
  2141  07DB  00A4               	movwf	___fldiv@b
  2142  07DC  3041               	movlw	65
  2143  07DD  00A3               	movwf	___fldiv@a+3
  2144  07DE  3020               	movlw	32
  2145  07DF  00A2               	movwf	___fldiv@a+2
  2146  07E0  3000               	movlw	0
  2147  07E1  00A1               	movwf	___fldiv@a+1
  2148  07E2  3000               	movlw	0
  2149  07E3  00A0               	movwf	___fldiv@a
  2150  07E4  120A  118A  23B9  120A  118A  	fcall	___fldiv
  2151  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  2152  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  2153  07EB  0823               	movf	?___fldiv+3,w
  2154  07EC  00BD               	movwf	___fltol@f1+3
  2155  07ED  0822               	movf	?___fldiv+2,w
  2156  07EE  00BC               	movwf	___fltol@f1+2
  2157  07EF  0821               	movf	?___fldiv+1,w
  2158  07F0  00BB               	movwf	___fltol@f1+1
  2159  07F1  0820               	movf	?___fldiv,w
  2160  07F2  00BA               	movwf	___fltol@f1
  2161  07F3  120A  158A  2586  120A  118A  	fcall	___fltol
  2162  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  2163  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  2164  07FA  083B               	movf	?___fltol+1,w
  2165  07FB  00DD               	movwf	_Temperature+1
  2166  07FC  083A               	movf	?___fltol,w
  2167  07FD  00DC               	movwf	_Temperature
  2168  07FE                     l209:
  2169  07FE  0008               	return
  2170  07FF                     __end_of_Read_Temp:
  2171                           
  2172                           	psect	text7
  2173  0F44                     __ptext7:	
  2174 ;; *************** function ___xxtofl *****************
  2175 ;; Defined at:
  2176 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  sign            1    wreg     unsigned char 
  2179 ;;  val             4    0[BANK0 ] long 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  sign            1    8[BANK0 ] unsigned char 
  2182 ;;  arg             4   10[BANK0 ] unsigned long 
  2183 ;;  exp             1    9[BANK0 ] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  4    0[BANK0 ] unsigned char 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       4       0       0       0
  2194 ;;      Locals:         0       6       0       0       0
  2195 ;;      Temps:          0       4       0       0       0
  2196 ;;      Totals:         0      14       0       0       0
  2197 ;;Total ram usage:       14 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_Read_Temp
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function ___xxtofl
  2209  0F44                     ___xxtofl:
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2213                           ;___xxtofl@sign stored from wreg
  2214  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0F46  00A8               	movwf	___xxtofl@sign
  2217  0F47                     l3077:
  2218  0F47  0828               	movf	___xxtofl@sign,w
  2219  0F48  1903               	btfsc	3,2
  2220  0F49  2F4B               	goto	u4251
  2221  0F4A  2F4C               	goto	u4250
  2222  0F4B                     u4251:
  2223  0F4B  2F60               	goto	l3083
  2224  0F4C                     u4250:
  2225  0F4C                     l3079:
  2226  0F4C  1FA3               	btfss	___xxtofl@val+3,7
  2227  0F4D  2F4F               	goto	u4261
  2228  0F4E  2F50               	goto	u4260
  2229  0F4F                     u4261:
  2230  0F4F  2F60               	goto	l3083
  2231  0F50                     u4260:
  2232  0F50                     l3081:
  2233  0F50  0920               	comf	___xxtofl@val,w
  2234  0F51  00AA               	movwf	___xxtofl@arg
  2235  0F52  0921               	comf	___xxtofl@val+1,w
  2236  0F53  00AB               	movwf	___xxtofl@arg+1
  2237  0F54  0922               	comf	___xxtofl@val+2,w
  2238  0F55  00AC               	movwf	___xxtofl@arg+2
  2239  0F56  0923               	comf	___xxtofl@val+3,w
  2240  0F57  00AD               	movwf	___xxtofl@arg+3
  2241  0F58  0AAA               	incf	___xxtofl@arg,f
  2242  0F59  1903               	skipnz
  2243  0F5A  0AAB               	incf	___xxtofl@arg+1,f
  2244  0F5B  1903               	skipnz
  2245  0F5C  0AAC               	incf	___xxtofl@arg+2,f
  2246  0F5D  1903               	skipnz
  2247  0F5E  0AAD               	incf	___xxtofl@arg+3,f
  2248  0F5F  2F68               	goto	l786
  2249  0F60                     l3083:
  2250  0F60  0823               	movf	___xxtofl@val+3,w
  2251  0F61  00AD               	movwf	___xxtofl@arg+3
  2252  0F62  0822               	movf	___xxtofl@val+2,w
  2253  0F63  00AC               	movwf	___xxtofl@arg+2
  2254  0F64  0821               	movf	___xxtofl@val+1,w
  2255  0F65  00AB               	movwf	___xxtofl@arg+1
  2256  0F66  0820               	movf	___xxtofl@val,w
  2257  0F67  00AA               	movwf	___xxtofl@arg
  2258  0F68                     l786:
  2259  0F68  0823               	movf	___xxtofl@val+3,w
  2260  0F69  0422               	iorwf	___xxtofl@val+2,w
  2261  0F6A  0421               	iorwf	___xxtofl@val+1,w
  2262  0F6B  0420               	iorwf	___xxtofl@val,w
  2263  0F6C  1D03               	skipz
  2264  0F6D  2F6F               	goto	u4271
  2265  0F6E  2F70               	goto	u4270
  2266  0F6F                     u4271:
  2267  0F6F  2F79               	goto	l3089
  2268  0F70                     u4270:
  2269  0F70                     l3085:
  2270  0F70  3000               	movlw	0
  2271  0F71  00A3               	movwf	?___xxtofl+3
  2272  0F72  3000               	movlw	0
  2273  0F73  00A2               	movwf	?___xxtofl+2
  2274  0F74  3000               	movlw	0
  2275  0F75  00A1               	movwf	?___xxtofl+1
  2276  0F76  3000               	movlw	0
  2277  0F77  00A0               	movwf	?___xxtofl
  2278  0F78  2FFF               	goto	l788
  2279  0F79                     l3089:
  2280  0F79  3096               	movlw	150
  2281  0F7A  00A4               	movwf	??___xxtofl
  2282  0F7B  0824               	movf	??___xxtofl,w
  2283  0F7C  00A9               	movwf	___xxtofl@exp
  2284  0F7D  2F8B               	goto	l3093
  2285  0F7E                     l3091:
  2286  0F7E  3001               	movlw	1
  2287  0F7F  00A4               	movwf	??___xxtofl
  2288  0F80  0824               	movf	??___xxtofl,w
  2289  0F81  07A9               	addwf	___xxtofl@exp,f
  2290  0F82  3001               	movlw	1
  2291  0F83                     u4285:
  2292  0F83  1003               	clrc
  2293  0F84  0CAD               	rrf	___xxtofl@arg+3,f
  2294  0F85  0CAC               	rrf	___xxtofl@arg+2,f
  2295  0F86  0CAB               	rrf	___xxtofl@arg+1,f
  2296  0F87  0CAA               	rrf	___xxtofl@arg,f
  2297  0F88  3EFF               	addlw	-1
  2298  0F89  1D03               	skipz
  2299  0F8A  2F83               	goto	u4285
  2300  0F8B                     l3093:
  2301  0F8B  30FE               	movlw	254
  2302  0F8C  052D               	andwf	___xxtofl@arg+3,w
  2303  0F8D  1D03               	btfss	3,2
  2304  0F8E  2F90               	goto	u4291
  2305  0F8F  2F91               	goto	u4290
  2306  0F90                     u4291:
  2307  0F90  2F7E               	goto	l3091
  2308  0F91                     u4290:
  2309  0F91  2FAD               	goto	l792
  2310  0F92                     l3095:
  2311  0F92  3001               	movlw	1
  2312  0F93  00A4               	movwf	??___xxtofl
  2313  0F94  0824               	movf	??___xxtofl,w
  2314  0F95  07A9               	addwf	___xxtofl@exp,f
  2315  0F96                     l3097:
  2316  0F96  3001               	movlw	1
  2317  0F97  07AA               	addwf	___xxtofl@arg,f
  2318  0F98  3000               	movlw	0
  2319  0F99  1803               	skipnc
  2320  0F9A  3001               	movlw	1
  2321  0F9B  07AB               	addwf	___xxtofl@arg+1,f
  2322  0F9C  3000               	movlw	0
  2323  0F9D  1803               	skipnc
  2324  0F9E  3001               	movlw	1
  2325  0F9F  07AC               	addwf	___xxtofl@arg+2,f
  2326  0FA0  3000               	movlw	0
  2327  0FA1  1803               	skipnc
  2328  0FA2  3001               	movlw	1
  2329  0FA3  07AD               	addwf	___xxtofl@arg+3,f
  2330  0FA4                     l3099:
  2331  0FA4  3001               	movlw	1
  2332  0FA5                     u4305:
  2333  0FA5  1003               	clrc
  2334  0FA6  0CAD               	rrf	___xxtofl@arg+3,f
  2335  0FA7  0CAC               	rrf	___xxtofl@arg+2,f
  2336  0FA8  0CAB               	rrf	___xxtofl@arg+1,f
  2337  0FA9  0CAA               	rrf	___xxtofl@arg,f
  2338  0FAA  3EFF               	addlw	-1
  2339  0FAB  1D03               	skipz
  2340  0FAC  2FA5               	goto	u4305
  2341  0FAD                     l792:
  2342  0FAD  30FF               	movlw	255
  2343  0FAE  052D               	andwf	___xxtofl@arg+3,w
  2344  0FAF  1D03               	btfss	3,2
  2345  0FB0  2FB2               	goto	u4311
  2346  0FB1  2FB3               	goto	u4310
  2347  0FB2                     u4311:
  2348  0FB2  2F92               	goto	l3095
  2349  0FB3                     u4310:
  2350  0FB3  2FBF               	goto	l3103
  2351  0FB4                     l3101:
  2352  0FB4  3001               	movlw	1
  2353  0FB5  02A9               	subwf	___xxtofl@exp,f
  2354  0FB6  3001               	movlw	1
  2355  0FB7  00A4               	movwf	??___xxtofl
  2356  0FB8                     u4325:
  2357  0FB8  1003               	clrc
  2358  0FB9  0DAA               	rlf	___xxtofl@arg,f
  2359  0FBA  0DAB               	rlf	___xxtofl@arg+1,f
  2360  0FBB  0DAC               	rlf	___xxtofl@arg+2,f
  2361  0FBC  0DAD               	rlf	___xxtofl@arg+3,f
  2362  0FBD  0BA4               	decfsz	??___xxtofl,f
  2363  0FBE  2FB8               	goto	u4325
  2364  0FBF                     l3103:
  2365  0FBF  1BAC               	btfsc	___xxtofl@arg+2,7
  2366  0FC0  2FC2               	goto	u4331
  2367  0FC1  2FC3               	goto	u4330
  2368  0FC2                     u4331:
  2369  0FC2  2FC9               	goto	l799
  2370  0FC3                     u4330:
  2371  0FC3                     l3105:
  2372  0FC3  3002               	movlw	2
  2373  0FC4  0229               	subwf	___xxtofl@exp,w
  2374  0FC5  1803               	skipnc
  2375  0FC6  2FC8               	goto	u4341
  2376  0FC7  2FC9               	goto	u4340
  2377  0FC8                     u4341:
  2378  0FC8  2FB4               	goto	l3101
  2379  0FC9                     u4340:
  2380  0FC9                     l799:
  2381  0FC9  1829               	btfsc	___xxtofl@exp,0
  2382  0FCA  2FCC               	goto	u4351
  2383  0FCB  2FCD               	goto	u4350
  2384  0FCC                     u4351:
  2385  0FCC  2FD5               	goto	l800
  2386  0FCD                     u4350:
  2387  0FCD                     l3107:
  2388  0FCD  30FF               	movlw	255
  2389  0FCE  05AA               	andwf	___xxtofl@arg,f
  2390  0FCF  30FF               	movlw	255
  2391  0FD0  05AB               	andwf	___xxtofl@arg+1,f
  2392  0FD1  307F               	movlw	127
  2393  0FD2  05AC               	andwf	___xxtofl@arg+2,f
  2394  0FD3  30FF               	movlw	255
  2395  0FD4  05AD               	andwf	___xxtofl@arg+3,f
  2396  0FD5                     l800:
  2397  0FD5  1003               	clrc
  2398  0FD6  0CA9               	rrf	___xxtofl@exp,f
  2399  0FD7                     l3109:
  2400  0FD7  0829               	movf	___xxtofl@exp,w
  2401  0FD8  00A4               	movwf	??___xxtofl
  2402  0FD9  01A5               	clrf	??___xxtofl+1
  2403  0FDA  01A6               	clrf	??___xxtofl+2
  2404  0FDB  01A7               	clrf	??___xxtofl+3
  2405  0FDC  3018               	movlw	24
  2406  0FDD                     u4365:
  2407  0FDD  1003               	clrc
  2408  0FDE  0DA4               	rlf	??___xxtofl,f
  2409  0FDF  0DA5               	rlf	??___xxtofl+1,f
  2410  0FE0  0DA6               	rlf	??___xxtofl+2,f
  2411  0FE1  0DA7               	rlf	??___xxtofl+3,f
  2412  0FE2                     u4360:
  2413  0FE2  3EFF               	addlw	-1
  2414  0FE3  1D03               	skipz
  2415  0FE4  2FDD               	goto	u4365
  2416  0FE5  0824               	movf	??___xxtofl,w
  2417  0FE6  04AA               	iorwf	___xxtofl@arg,f
  2418  0FE7  0825               	movf	??___xxtofl+1,w
  2419  0FE8  04AB               	iorwf	___xxtofl@arg+1,f
  2420  0FE9  0826               	movf	??___xxtofl+2,w
  2421  0FEA  04AC               	iorwf	___xxtofl@arg+2,f
  2422  0FEB  0827               	movf	??___xxtofl+3,w
  2423  0FEC  04AD               	iorwf	___xxtofl@arg+3,f
  2424  0FED                     l3111:
  2425  0FED  0828               	movf	___xxtofl@sign,w
  2426  0FEE  1903               	btfsc	3,2
  2427  0FEF  2FF1               	goto	u4371
  2428  0FF0  2FF2               	goto	u4370
  2429  0FF1                     u4371:
  2430  0FF1  2FF7               	goto	l3117
  2431  0FF2                     u4370:
  2432  0FF2                     l3113:
  2433  0FF2  1FA3               	btfss	___xxtofl@val+3,7
  2434  0FF3  2FF5               	goto	u4381
  2435  0FF4  2FF6               	goto	u4380
  2436  0FF5                     u4381:
  2437  0FF5  2FF7               	goto	l3117
  2438  0FF6                     u4380:
  2439  0FF6                     l3115:
  2440  0FF6  17AD               	bsf	___xxtofl@arg+3,7
  2441  0FF7                     l3117:
  2442  0FF7  082D               	movf	___xxtofl@arg+3,w
  2443  0FF8  00A3               	movwf	?___xxtofl+3
  2444  0FF9  082C               	movf	___xxtofl@arg+2,w
  2445  0FFA  00A2               	movwf	?___xxtofl+2
  2446  0FFB  082B               	movf	___xxtofl@arg+1,w
  2447  0FFC  00A1               	movwf	?___xxtofl+1
  2448  0FFD  082A               	movf	___xxtofl@arg,w
  2449  0FFE  00A0               	movwf	?___xxtofl
  2450  0FFF                     l788:
  2451  0FFF  0008               	return
  2452  1000                     __end_of___xxtofl:
  2453                           
  2454                           	psect	text8
  2455  0D86                     __ptext8:	
  2456 ;; *************** function ___fltol *****************
  2457 ;; Defined at:
  2458 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  f1              4   26[BANK0 ] unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  exp1            1   36[BANK0 ] unsigned char 
  2463 ;;  sign1           1   35[BANK0 ] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  4   26[BANK0 ] long 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       4       0       0       0
  2474 ;;      Locals:         0       2       0       0       0
  2475 ;;      Temps:          0       5       0       0       0
  2476 ;;      Totals:         0      11       0       0       0
  2477 ;;Total ram usage:       11 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_Read_Temp
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function ___fltol
  2489  0D86                     ___fltol:
  2490  0D86                     l2711:	
  2491                           ;incstack = 0
  2492                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2493                           
  2494  0D86  1003               	clrc
  2495  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0D89  0D3C               	rlf	___fltol@f1+2,w
  2498  0D8A  0D3D               	rlf	___fltol@f1+3,w
  2499  0D8B  00BE               	movwf	??___fltol
  2500  0D8C  083E               	movf	??___fltol,w
  2501  0D8D  00C4               	movwf	___fltol@exp1
  2502  0D8E  0844               	movf	___fltol@exp1,w
  2503  0D8F  1D03               	btfss	3,2
  2504  0D90  2D92               	goto	u3361
  2505  0D91  2D93               	goto	u3360
  2506  0D92                     u3361:
  2507  0D92  2D9C               	goto	l2717
  2508  0D93                     u3360:
  2509  0D93                     l2713:
  2510  0D93  3000               	movlw	0
  2511  0D94  00BD               	movwf	?___fltol+3
  2512  0D95  3000               	movlw	0
  2513  0D96  00BC               	movwf	?___fltol+2
  2514  0D97  3000               	movlw	0
  2515  0D98  00BB               	movwf	?___fltol+1
  2516  0D99  3000               	movlw	0
  2517  0D9A  00BA               	movwf	?___fltol
  2518  0D9B  2E01               	goto	l539
  2519  0D9C                     l2717:
  2520  0D9C  083A               	movf	___fltol@f1,w
  2521  0D9D  00BE               	movwf	??___fltol
  2522  0D9E  083B               	movf	___fltol@f1+1,w
  2523  0D9F  00BF               	movwf	??___fltol+1
  2524  0DA0  083C               	movf	___fltol@f1+2,w
  2525  0DA1  00C0               	movwf	??___fltol+2
  2526  0DA2  083D               	movf	___fltol@f1+3,w
  2527  0DA3  00C1               	movwf	??___fltol+3
  2528  0DA4  301F               	movlw	31
  2529  0DA5                     u3375:
  2530  0DA5  1003               	clrc
  2531  0DA6  0CC1               	rrf	??___fltol+3,f
  2532  0DA7  0CC0               	rrf	??___fltol+2,f
  2533  0DA8  0CBF               	rrf	??___fltol+1,f
  2534  0DA9  0CBE               	rrf	??___fltol,f
  2535  0DAA                     u3370:
  2536  0DAA  3EFF               	addlw	-1
  2537  0DAB  1D03               	skipz
  2538  0DAC  2DA5               	goto	u3375
  2539  0DAD  083E               	movf	??___fltol,w
  2540  0DAE  00C2               	movwf	??___fltol+4
  2541  0DAF  0842               	movf	??___fltol+4,w
  2542  0DB0  00C3               	movwf	___fltol@sign1
  2543  0DB1                     l2719:
  2544  0DB1  17BC               	bsf	___fltol@f1+2,7
  2545  0DB2                     l2721:
  2546  0DB2  30FF               	movlw	255
  2547  0DB3  05BA               	andwf	___fltol@f1,f
  2548  0DB4  30FF               	movlw	255
  2549  0DB5  05BB               	andwf	___fltol@f1+1,f
  2550  0DB6  30FF               	movlw	255
  2551  0DB7  05BC               	andwf	___fltol@f1+2,f
  2552  0DB8  3000               	movlw	0
  2553  0DB9  05BD               	andwf	___fltol@f1+3,f
  2554  0DBA                     l2723:
  2555  0DBA  3096               	movlw	150
  2556  0DBB  02C4               	subwf	___fltol@exp1,f
  2557  0DBC                     l2725:
  2558  0DBC  1FC4               	btfss	___fltol@exp1,7
  2559  0DBD  2DBF               	goto	u3381
  2560  0DBE  2DC0               	goto	u3380
  2561  0DBF                     u3381:
  2562  0DBF  2DDA               	goto	l2735
  2563  0DC0                     u3380:
  2564  0DC0                     l2727:
  2565  0DC0  0844               	movf	___fltol@exp1,w
  2566  0DC1  3A80               	xorlw	128
  2567  0DC2  3E97               	addlw	151
  2568  0DC3  1803               	skipnc
  2569  0DC4  2DC6               	goto	u3391
  2570  0DC5  2DC7               	goto	u3390
  2571  0DC6                     u3391:
  2572  0DC6  2DC8               	goto	l2733
  2573  0DC7                     u3390:
  2574  0DC7  2D93               	goto	l2713
  2575  0DC8                     l2733:
  2576  0DC8  3001               	movlw	1
  2577  0DC9                     u3405:
  2578  0DC9  1003               	clrc
  2579  0DCA  0CBD               	rrf	___fltol@f1+3,f
  2580  0DCB  0CBC               	rrf	___fltol@f1+2,f
  2581  0DCC  0CBB               	rrf	___fltol@f1+1,f
  2582  0DCD  0CBA               	rrf	___fltol@f1,f
  2583  0DCE  3EFF               	addlw	-1
  2584  0DCF  1D03               	skipz
  2585  0DD0  2DC9               	goto	u3405
  2586  0DD1  3001               	movlw	1
  2587  0DD2  00BE               	movwf	??___fltol
  2588  0DD3  083E               	movf	??___fltol,w
  2589  0DD4  07C4               	addwf	___fltol@exp1,f
  2590  0DD5  1D03               	btfss	3,2
  2591  0DD6  2DD8               	goto	u3411
  2592  0DD7  2DD9               	goto	u3410
  2593  0DD8                     u3411:
  2594  0DD8  2DC8               	goto	l2733
  2595  0DD9                     u3410:
  2596  0DD9  2DF1               	goto	l2743
  2597  0DDA                     l2735:
  2598  0DDA  3020               	movlw	32
  2599  0DDB  0244               	subwf	___fltol@exp1,w
  2600  0DDC  1C03               	skipc
  2601  0DDD  2DDF               	goto	u3421
  2602  0DDE  2DE0               	goto	u3420
  2603  0DDF                     u3421:
  2604  0DDF  2DEC               	goto	l546
  2605  0DE0                     u3420:
  2606  0DE0  2D93               	goto	l2713
  2607  0DE1                     l2741:
  2608  0DE1  3001               	movlw	1
  2609  0DE2  00BE               	movwf	??___fltol
  2610  0DE3                     u3435:
  2611  0DE3  1003               	clrc
  2612  0DE4  0DBA               	rlf	___fltol@f1,f
  2613  0DE5  0DBB               	rlf	___fltol@f1+1,f
  2614  0DE6  0DBC               	rlf	___fltol@f1+2,f
  2615  0DE7  0DBD               	rlf	___fltol@f1+3,f
  2616  0DE8  0BBE               	decfsz	??___fltol,f
  2617  0DE9  2DE3               	goto	u3435
  2618  0DEA  3001               	movlw	1
  2619  0DEB  02C4               	subwf	___fltol@exp1,f
  2620  0DEC                     l546:
  2621  0DEC  0844               	movf	___fltol@exp1,w
  2622  0DED  1D03               	btfss	3,2
  2623  0DEE  2DF0               	goto	u3441
  2624  0DEF  2DF1               	goto	u3440
  2625  0DF0                     u3441:
  2626  0DF0  2DE1               	goto	l2741
  2627  0DF1                     u3440:
  2628  0DF1                     l2743:
  2629  0DF1  0843               	movf	___fltol@sign1,w
  2630  0DF2  1903               	btfsc	3,2
  2631  0DF3  2DF5               	goto	u3451
  2632  0DF4  2DF6               	goto	u3450
  2633  0DF5                     u3451:
  2634  0DF5  2E01               	goto	l549
  2635  0DF6                     u3450:
  2636  0DF6                     l2745:
  2637  0DF6  09BA               	comf	___fltol@f1,f
  2638  0DF7  09BB               	comf	___fltol@f1+1,f
  2639  0DF8  09BC               	comf	___fltol@f1+2,f
  2640  0DF9  09BD               	comf	___fltol@f1+3,f
  2641  0DFA  0ABA               	incf	___fltol@f1,f
  2642  0DFB  1903               	skipnz
  2643  0DFC  0ABB               	incf	___fltol@f1+1,f
  2644  0DFD  1903               	skipnz
  2645  0DFE  0ABC               	incf	___fltol@f1+2,f
  2646  0DFF  1903               	skipnz
  2647  0E00  0ABD               	incf	___fltol@f1+3,f
  2648  0E01                     l549:
  2649  0E01                     l539:
  2650  0E01  0008               	return
  2651  0E02                     __end_of___fltol:
  2652                           
  2653                           	psect	text9
  2654  0058                     __ptext9:	
  2655 ;; *************** function ___flmul *****************
  2656 ;; Defined at:
  2657 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  b               4    9[BANK0 ] long 
  2660 ;;  a               4   13[BANK0 ] long 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  prod            4   29[BANK0 ] struct .
  2663 ;;  grs             4   24[BANK0 ] unsigned long 
  2664 ;;  temp            2   33[BANK0 ] struct .
  2665 ;;  bexp            1   28[BANK0 ] unsigned char 
  2666 ;;  aexp            1   23[BANK0 ] unsigned char 
  2667 ;;  sign            1   22[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  4    9[BANK0 ] unsigned char 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2677 ;;      Params:         0       8       0       0       0
  2678 ;;      Locals:         0      13       0       0       0
  2679 ;;      Temps:          0       5       0       0       0
  2680 ;;      Totals:         0      26       0       0       0
  2681 ;;Total ram usage:       26 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 2
  2684 ;; This function calls:
  2685 ;;		__Umul8_16
  2686 ;; This function is called by:
  2687 ;;		_Read_Temp
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function ___flmul
  2693  0058                     ___flmul:
  2694  0058                     l2937:	
  2695                           ;incstack = 0
  2696                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2697                           
  2698  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2700  005A  082C               	movf	___flmul@b+3,w
  2701  005B  3980               	andlw	128
  2702  005C  00B1               	movwf	??___flmul
  2703  005D  0831               	movf	??___flmul,w
  2704  005E  00B6               	movwf	___flmul@sign
  2705  005F                     l2939:
  2706  005F  082C               	movf	___flmul@b+3,w
  2707  0060  00B1               	movwf	??___flmul
  2708  0061  0731               	addwf	??___flmul,w
  2709  0062  00B2               	movwf	??___flmul+1
  2710  0063  0832               	movf	??___flmul+1,w
  2711  0064  00BC               	movwf	___flmul@bexp
  2712  0065                     l2941:
  2713  0065  1FAB               	btfss	___flmul@b+2,7
  2714  0066  2868               	goto	u3881
  2715  0067  2869               	goto	u3880
  2716  0068                     u3881:
  2717  0068  286A               	goto	l2945
  2718  0069                     u3880:
  2719  0069                     l2943:
  2720  0069  143C               	bsf	___flmul@bexp,0
  2721  006A                     l2945:
  2722  006A  083C               	movf	___flmul@bexp,w
  2723  006B  1903               	btfsc	3,2
  2724  006C  286E               	goto	u3891
  2725  006D  286F               	goto	u3890
  2726  006E                     u3891:
  2727  006E  287E               	goto	l2953
  2728  006F                     u3890:
  2729  006F                     l2947:
  2730  006F  0A3C               	incf	___flmul@bexp,w
  2731  0070  1D03               	btfss	3,2
  2732  0071  2873               	goto	u3901
  2733  0072  2874               	goto	u3900
  2734  0073                     u3901:
  2735  0073  287C               	goto	l2951
  2736  0074                     u3900:
  2737  0074                     l2949:
  2738  0074  3000               	movlw	0
  2739  0075  00AC               	movwf	___flmul@b+3
  2740  0076  3000               	movlw	0
  2741  0077  00AB               	movwf	___flmul@b+2
  2742  0078  3000               	movlw	0
  2743  0079  00AA               	movwf	___flmul@b+1
  2744  007A  3000               	movlw	0
  2745  007B  00A9               	movwf	___flmul@b
  2746  007C                     l2951:
  2747  007C  17AB               	bsf	___flmul@b+2,7
  2748  007D  2886               	goto	l2955
  2749  007E                     l2953:
  2750  007E  3000               	movlw	0
  2751  007F  00AC               	movwf	___flmul@b+3
  2752  0080  3000               	movlw	0
  2753  0081  00AB               	movwf	___flmul@b+2
  2754  0082  3000               	movlw	0
  2755  0083  00AA               	movwf	___flmul@b+1
  2756  0084  3000               	movlw	0
  2757  0085  00A9               	movwf	___flmul@b
  2758  0086                     l2955:
  2759  0086  0830               	movf	___flmul@a+3,w
  2760  0087  3980               	andlw	128
  2761  0088  00B1               	movwf	??___flmul
  2762  0089  0831               	movf	??___flmul,w
  2763  008A  06B6               	xorwf	___flmul@sign,f
  2764  008B                     l2957:
  2765  008B  0830               	movf	___flmul@a+3,w
  2766  008C  00B1               	movwf	??___flmul
  2767  008D  0731               	addwf	??___flmul,w
  2768  008E  00B2               	movwf	??___flmul+1
  2769  008F  0832               	movf	??___flmul+1,w
  2770  0090  00B7               	movwf	___flmul@aexp
  2771  0091                     l2959:
  2772  0091  1FAF               	btfss	___flmul@a+2,7
  2773  0092  2894               	goto	u3911
  2774  0093  2895               	goto	u3910
  2775  0094                     u3911:
  2776  0094  2896               	goto	l2963
  2777  0095                     u3910:
  2778  0095                     l2961:
  2779  0095  1437               	bsf	___flmul@aexp,0
  2780  0096                     l2963:
  2781  0096  0837               	movf	___flmul@aexp,w
  2782  0097  1903               	btfsc	3,2
  2783  0098  289A               	goto	u3921
  2784  0099  289B               	goto	u3920
  2785  009A                     u3921:
  2786  009A  28AA               	goto	l2971
  2787  009B                     u3920:
  2788  009B                     l2965:
  2789  009B  0A37               	incf	___flmul@aexp,w
  2790  009C  1D03               	btfss	3,2
  2791  009D  289F               	goto	u3931
  2792  009E  28A0               	goto	u3930
  2793  009F                     u3931:
  2794  009F  28A8               	goto	l2969
  2795  00A0                     u3930:
  2796  00A0                     l2967:
  2797  00A0  3000               	movlw	0
  2798  00A1  00B0               	movwf	___flmul@a+3
  2799  00A2  3000               	movlw	0
  2800  00A3  00AF               	movwf	___flmul@a+2
  2801  00A4  3000               	movlw	0
  2802  00A5  00AE               	movwf	___flmul@a+1
  2803  00A6  3000               	movlw	0
  2804  00A7  00AD               	movwf	___flmul@a
  2805  00A8                     l2969:
  2806  00A8  17AF               	bsf	___flmul@a+2,7
  2807  00A9  28B2               	goto	l2973
  2808  00AA                     l2971:
  2809  00AA  3000               	movlw	0
  2810  00AB  00B0               	movwf	___flmul@a+3
  2811  00AC  3000               	movlw	0
  2812  00AD  00AF               	movwf	___flmul@a+2
  2813  00AE  3000               	movlw	0
  2814  00AF  00AE               	movwf	___flmul@a+1
  2815  00B0  3000               	movlw	0
  2816  00B1  00AD               	movwf	___flmul@a
  2817  00B2                     l2973:
  2818  00B2  0837               	movf	___flmul@aexp,w
  2819  00B3  1903               	btfsc	3,2
  2820  00B4  28B6               	goto	u3941
  2821  00B5  28B7               	goto	u3940
  2822  00B6                     u3941:
  2823  00B6  28BC               	goto	l2977
  2824  00B7                     u3940:
  2825  00B7                     l2975:
  2826  00B7  083C               	movf	___flmul@bexp,w
  2827  00B8  1D03               	btfss	3,2
  2828  00B9  28BB               	goto	u3951
  2829  00BA  28BC               	goto	u3950
  2830  00BB                     u3951:
  2831  00BB  28C5               	goto	l2981
  2832  00BC                     u3950:
  2833  00BC                     l2977:
  2834  00BC  3000               	movlw	0
  2835  00BD  00AC               	movwf	?___flmul+3
  2836  00BE  3000               	movlw	0
  2837  00BF  00AB               	movwf	?___flmul+2
  2838  00C0  3000               	movlw	0
  2839  00C1  00AA               	movwf	?___flmul+1
  2840  00C2  3000               	movlw	0
  2841  00C3  00A9               	movwf	?___flmul
  2842  00C4  2BB8               	goto	l742
  2843  00C5                     l2981:
  2844  00C5  0829               	movf	___flmul@b,w
  2845  00C6  00B1               	movwf	??___flmul
  2846  00C7  0831               	movf	??___flmul,w
  2847  00C8  00A0               	movwf	__Umul8_16@multiplicand
  2848  00C9  082F               	movf	___flmul@a+2,w
  2849  00CA  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  2850  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2851  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2852  00D1  0821               	movf	?__Umul8_16+1,w
  2853  00D2  00C2               	movwf	___flmul@temp+1
  2854  00D3  0820               	movf	?__Umul8_16,w
  2855  00D4  00C1               	movwf	___flmul@temp
  2856  00D5                     l2983:
  2857  00D5  0841               	movf	___flmul@temp,w
  2858  00D6  00B1               	movwf	??___flmul
  2859  00D7  01B2               	clrf	??___flmul+1
  2860  00D8  01B3               	clrf	??___flmul+2
  2861  00D9  01B4               	clrf	??___flmul+3
  2862  00DA  0834               	movf	??___flmul+3,w
  2863  00DB  00BB               	movwf	___flmul@grs+3
  2864  00DC  0833               	movf	??___flmul+2,w
  2865  00DD  00BA               	movwf	___flmul@grs+2
  2866  00DE  0832               	movf	??___flmul+1,w
  2867  00DF  00B9               	movwf	___flmul@grs+1
  2868  00E0  0831               	movf	??___flmul,w
  2869  00E1  00B8               	movwf	___flmul@grs
  2870  00E2                     l2985:
  2871  00E2  0842               	movf	___flmul@temp+1,w
  2872  00E3  00B1               	movwf	??___flmul
  2873  00E4  01B2               	clrf	??___flmul+1
  2874  00E5  01B3               	clrf	??___flmul+2
  2875  00E6  01B4               	clrf	??___flmul+3
  2876  00E7  0834               	movf	??___flmul+3,w
  2877  00E8  00C0               	movwf	___flmul@prod+3
  2878  00E9  0833               	movf	??___flmul+2,w
  2879  00EA  00BF               	movwf	___flmul@prod+2
  2880  00EB  0832               	movf	??___flmul+1,w
  2881  00EC  00BE               	movwf	___flmul@prod+1
  2882  00ED  0831               	movf	??___flmul,w
  2883  00EE  00BD               	movwf	___flmul@prod
  2884  00EF  082A               	movf	___flmul@b+1,w
  2885  00F0  00B1               	movwf	??___flmul
  2886  00F1  0831               	movf	??___flmul,w
  2887  00F2  00A0               	movwf	__Umul8_16@multiplicand
  2888  00F3  082E               	movf	___flmul@a+1,w
  2889  00F4  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  2890  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  2891  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  2892  00FB  0821               	movf	?__Umul8_16+1,w
  2893  00FC  00C2               	movwf	___flmul@temp+1
  2894  00FD  0820               	movf	?__Umul8_16,w
  2895  00FE  00C1               	movwf	___flmul@temp
  2896  00FF                     l2987:
  2897  00FF  0841               	movf	___flmul@temp,w
  2898  0100  00B1               	movwf	??___flmul
  2899  0101  01B2               	clrf	??___flmul+1
  2900  0102  01B3               	clrf	??___flmul+2
  2901  0103  01B4               	clrf	??___flmul+3
  2902  0104  0831               	movf	??___flmul,w
  2903  0105  07B8               	addwf	___flmul@grs,f
  2904  0106  0832               	movf	??___flmul+1,w
  2905  0107  1103               	clrz
  2906  0108  1803               	skipnc
  2907  0109  3E01               	addlw	1
  2908  010A  1903               	skipnz
  2909  010B  290D               	goto	u3961
  2910  010C  07B9               	addwf	___flmul@grs+1,f
  2911  010D                     u3961:
  2912  010D  0833               	movf	??___flmul+2,w
  2913  010E  1103               	clrz
  2914  010F  1803               	skipnc
  2915  0110  3E01               	addlw	1
  2916  0111  1903               	skipnz
  2917  0112  2914               	goto	u3962
  2918  0113  07BA               	addwf	___flmul@grs+2,f
  2919  0114                     u3962:
  2920  0114  0834               	movf	??___flmul+3,w
  2921  0115  1103               	clrz
  2922  0116  1803               	skipnc
  2923  0117  3E01               	addlw	1
  2924  0118  1903               	skipnz
  2925  0119  291B               	goto	u3963
  2926  011A  07BB               	addwf	___flmul@grs+3,f
  2927  011B                     u3963:
  2928  011B                     l2989:
  2929  011B  0842               	movf	___flmul@temp+1,w
  2930  011C  00B1               	movwf	??___flmul
  2931  011D  01B2               	clrf	??___flmul+1
  2932  011E  01B3               	clrf	??___flmul+2
  2933  011F  01B4               	clrf	??___flmul+3
  2934  0120  0831               	movf	??___flmul,w
  2935  0121  07BD               	addwf	___flmul@prod,f
  2936  0122  0832               	movf	??___flmul+1,w
  2937  0123  1103               	clrz
  2938  0124  1803               	skipnc
  2939  0125  3E01               	addlw	1
  2940  0126  1903               	skipnz
  2941  0127  2929               	goto	u3971
  2942  0128  07BE               	addwf	___flmul@prod+1,f
  2943  0129                     u3971:
  2944  0129  0833               	movf	??___flmul+2,w
  2945  012A  1103               	clrz
  2946  012B  1803               	skipnc
  2947  012C  3E01               	addlw	1
  2948  012D  1903               	skipnz
  2949  012E  2930               	goto	u3972
  2950  012F  07BF               	addwf	___flmul@prod+2,f
  2951  0130                     u3972:
  2952  0130  0834               	movf	??___flmul+3,w
  2953  0131  1103               	clrz
  2954  0132  1803               	skipnc
  2955  0133  3E01               	addlw	1
  2956  0134  1903               	skipnz
  2957  0135  2937               	goto	u3973
  2958  0136  07C0               	addwf	___flmul@prod+3,f
  2959  0137                     u3973:
  2960  0137  082B               	movf	___flmul@b+2,w
  2961  0138  00B1               	movwf	??___flmul
  2962  0139  0831               	movf	??___flmul,w
  2963  013A  00A0               	movwf	__Umul8_16@multiplicand
  2964  013B  082D               	movf	___flmul@a,w
  2965  013C  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  2966  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0143  0821               	movf	?__Umul8_16+1,w
  2969  0144  00C2               	movwf	___flmul@temp+1
  2970  0145  0820               	movf	?__Umul8_16,w
  2971  0146  00C1               	movwf	___flmul@temp
  2972  0147                     l2991:
  2973  0147  0841               	movf	___flmul@temp,w
  2974  0148  00B1               	movwf	??___flmul
  2975  0149  01B2               	clrf	??___flmul+1
  2976  014A  01B3               	clrf	??___flmul+2
  2977  014B  01B4               	clrf	??___flmul+3
  2978  014C  0831               	movf	??___flmul,w
  2979  014D  07B8               	addwf	___flmul@grs,f
  2980  014E  0832               	movf	??___flmul+1,w
  2981  014F  1103               	clrz
  2982  0150  1803               	skipnc
  2983  0151  3E01               	addlw	1
  2984  0152  1903               	skipnz
  2985  0153  2955               	goto	u3981
  2986  0154  07B9               	addwf	___flmul@grs+1,f
  2987  0155                     u3981:
  2988  0155  0833               	movf	??___flmul+2,w
  2989  0156  1103               	clrz
  2990  0157  1803               	skipnc
  2991  0158  3E01               	addlw	1
  2992  0159  1903               	skipnz
  2993  015A  295C               	goto	u3982
  2994  015B  07BA               	addwf	___flmul@grs+2,f
  2995  015C                     u3982:
  2996  015C  0834               	movf	??___flmul+3,w
  2997  015D  1103               	clrz
  2998  015E  1803               	skipnc
  2999  015F  3E01               	addlw	1
  3000  0160  1903               	skipnz
  3001  0161  2963               	goto	u3983
  3002  0162  07BB               	addwf	___flmul@grs+3,f
  3003  0163                     u3983:
  3004  0163                     l2993:
  3005  0163  0842               	movf	___flmul@temp+1,w
  3006  0164  00B1               	movwf	??___flmul
  3007  0165  01B2               	clrf	??___flmul+1
  3008  0166  01B3               	clrf	??___flmul+2
  3009  0167  01B4               	clrf	??___flmul+3
  3010  0168  0831               	movf	??___flmul,w
  3011  0169  07BD               	addwf	___flmul@prod,f
  3012  016A  0832               	movf	??___flmul+1,w
  3013  016B  1103               	clrz
  3014  016C  1803               	skipnc
  3015  016D  3E01               	addlw	1
  3016  016E  1903               	skipnz
  3017  016F  2971               	goto	u3991
  3018  0170  07BE               	addwf	___flmul@prod+1,f
  3019  0171                     u3991:
  3020  0171  0833               	movf	??___flmul+2,w
  3021  0172  1103               	clrz
  3022  0173  1803               	skipnc
  3023  0174  3E01               	addlw	1
  3024  0175  1903               	skipnz
  3025  0176  2978               	goto	u3992
  3026  0177  07BF               	addwf	___flmul@prod+2,f
  3027  0178                     u3992:
  3028  0178  0834               	movf	??___flmul+3,w
  3029  0179  1103               	clrz
  3030  017A  1803               	skipnc
  3031  017B  3E01               	addlw	1
  3032  017C  1903               	skipnz
  3033  017D  297F               	goto	u3993
  3034  017E  07C0               	addwf	___flmul@prod+3,f
  3035  017F                     u3993:
  3036  017F                     l2995:
  3037  017F  3008               	movlw	8
  3038  0180  00B1               	movwf	??___flmul
  3039  0181                     u4005:
  3040  0181  1003               	clrc
  3041  0182  0DB8               	rlf	___flmul@grs,f
  3042  0183  0DB9               	rlf	___flmul@grs+1,f
  3043  0184  0DBA               	rlf	___flmul@grs+2,f
  3044  0185  0DBB               	rlf	___flmul@grs+3,f
  3045  0186  0BB1               	decfsz	??___flmul,f
  3046  0187  2981               	goto	u4005
  3047  0188                     l2997:
  3048  0188  082A               	movf	___flmul@b+1,w
  3049  0189  00B1               	movwf	??___flmul
  3050  018A  0831               	movf	??___flmul,w
  3051  018B  00A0               	movwf	__Umul8_16@multiplicand
  3052  018C  082D               	movf	___flmul@a,w
  3053  018D  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  3054  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0194  0821               	movf	?__Umul8_16+1,w
  3057  0195  00C2               	movwf	___flmul@temp+1
  3058  0196  0820               	movf	?__Umul8_16,w
  3059  0197  00C1               	movwf	___flmul@temp
  3060  0198                     l2999:
  3061  0198  0841               	movf	___flmul@temp,w
  3062  0199  00B1               	movwf	??___flmul
  3063  019A  0842               	movf	___flmul@temp+1,w
  3064  019B  00B2               	movwf	??___flmul+1
  3065  019C  01B3               	clrf	??___flmul+2
  3066  019D  01B4               	clrf	??___flmul+3
  3067  019E  0831               	movf	??___flmul,w
  3068  019F  07B8               	addwf	___flmul@grs,f
  3069  01A0  0832               	movf	??___flmul+1,w
  3070  01A1  1103               	clrz
  3071  01A2  1803               	skipnc
  3072  01A3  3E01               	addlw	1
  3073  01A4  1903               	skipnz
  3074  01A5  29A7               	goto	u4011
  3075  01A6  07B9               	addwf	___flmul@grs+1,f
  3076  01A7                     u4011:
  3077  01A7  0833               	movf	??___flmul+2,w
  3078  01A8  1103               	clrz
  3079  01A9  1803               	skipnc
  3080  01AA  3E01               	addlw	1
  3081  01AB  1903               	skipnz
  3082  01AC  29AE               	goto	u4012
  3083  01AD  07BA               	addwf	___flmul@grs+2,f
  3084  01AE                     u4012:
  3085  01AE  0834               	movf	??___flmul+3,w
  3086  01AF  1103               	clrz
  3087  01B0  1803               	skipnc
  3088  01B1  3E01               	addlw	1
  3089  01B2  1903               	skipnz
  3090  01B3  29B5               	goto	u4013
  3091  01B4  07BB               	addwf	___flmul@grs+3,f
  3092  01B5                     u4013:
  3093  01B5                     l3001:
  3094  01B5  0829               	movf	___flmul@b,w
  3095  01B6  00B1               	movwf	??___flmul
  3096  01B7  0831               	movf	??___flmul,w
  3097  01B8  00A0               	movwf	__Umul8_16@multiplicand
  3098  01B9  082E               	movf	___flmul@a+1,w
  3099  01BA  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  3100  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  3101  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  3102  01C1  0821               	movf	?__Umul8_16+1,w
  3103  01C2  00C2               	movwf	___flmul@temp+1
  3104  01C3  0820               	movf	?__Umul8_16,w
  3105  01C4  00C1               	movwf	___flmul@temp
  3106  01C5                     l3003:
  3107  01C5  0841               	movf	___flmul@temp,w
  3108  01C6  00B1               	movwf	??___flmul
  3109  01C7  0842               	movf	___flmul@temp+1,w
  3110  01C8  00B2               	movwf	??___flmul+1
  3111  01C9  01B3               	clrf	??___flmul+2
  3112  01CA  01B4               	clrf	??___flmul+3
  3113  01CB  0831               	movf	??___flmul,w
  3114  01CC  07B8               	addwf	___flmul@grs,f
  3115  01CD  0832               	movf	??___flmul+1,w
  3116  01CE  1103               	clrz
  3117  01CF  1803               	skipnc
  3118  01D0  3E01               	addlw	1
  3119  01D1  1903               	skipnz
  3120  01D2  29D4               	goto	u4021
  3121  01D3  07B9               	addwf	___flmul@grs+1,f
  3122  01D4                     u4021:
  3123  01D4  0833               	movf	??___flmul+2,w
  3124  01D5  1103               	clrz
  3125  01D6  1803               	skipnc
  3126  01D7  3E01               	addlw	1
  3127  01D8  1903               	skipnz
  3128  01D9  29DB               	goto	u4022
  3129  01DA  07BA               	addwf	___flmul@grs+2,f
  3130  01DB                     u4022:
  3131  01DB  0834               	movf	??___flmul+3,w
  3132  01DC  1103               	clrz
  3133  01DD  1803               	skipnc
  3134  01DE  3E01               	addlw	1
  3135  01DF  1903               	skipnz
  3136  01E0  29E2               	goto	u4023
  3137  01E1  07BB               	addwf	___flmul@grs+3,f
  3138  01E2                     u4023:
  3139  01E2                     l3005:
  3140  01E2  3008               	movlw	8
  3141  01E3  00B1               	movwf	??___flmul
  3142  01E4                     u4035:
  3143  01E4  1003               	clrc
  3144  01E5  0DB8               	rlf	___flmul@grs,f
  3145  01E6  0DB9               	rlf	___flmul@grs+1,f
  3146  01E7  0DBA               	rlf	___flmul@grs+2,f
  3147  01E8  0DBB               	rlf	___flmul@grs+3,f
  3148  01E9  0BB1               	decfsz	??___flmul,f
  3149  01EA  29E4               	goto	u4035
  3150  01EB  0829               	movf	___flmul@b,w
  3151  01EC  00B1               	movwf	??___flmul
  3152  01ED  0831               	movf	??___flmul,w
  3153  01EE  00A0               	movwf	__Umul8_16@multiplicand
  3154  01EF  082D               	movf	___flmul@a,w
  3155  01F0  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  3156  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  3157  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  3158  01F7  0821               	movf	?__Umul8_16+1,w
  3159  01F8  00C2               	movwf	___flmul@temp+1
  3160  01F9  0820               	movf	?__Umul8_16,w
  3161  01FA  00C1               	movwf	___flmul@temp
  3162  01FB                     l3007:
  3163  01FB  0841               	movf	___flmul@temp,w
  3164  01FC  00B1               	movwf	??___flmul
  3165  01FD  0842               	movf	___flmul@temp+1,w
  3166  01FE  00B2               	movwf	??___flmul+1
  3167  01FF  01B3               	clrf	??___flmul+2
  3168  0200  01B4               	clrf	??___flmul+3
  3169  0201  0831               	movf	??___flmul,w
  3170  0202  07B8               	addwf	___flmul@grs,f
  3171  0203  0832               	movf	??___flmul+1,w
  3172  0204  1103               	clrz
  3173  0205  1803               	skipnc
  3174  0206  3E01               	addlw	1
  3175  0207  1903               	skipnz
  3176  0208  2A0A               	goto	u4041
  3177  0209  07B9               	addwf	___flmul@grs+1,f
  3178  020A                     u4041:
  3179  020A  0833               	movf	??___flmul+2,w
  3180  020B  1103               	clrz
  3181  020C  1803               	skipnc
  3182  020D  3E01               	addlw	1
  3183  020E  1903               	skipnz
  3184  020F  2A11               	goto	u4042
  3185  0210  07BA               	addwf	___flmul@grs+2,f
  3186  0211                     u4042:
  3187  0211  0834               	movf	??___flmul+3,w
  3188  0212  1103               	clrz
  3189  0213  1803               	skipnc
  3190  0214  3E01               	addlw	1
  3191  0215  1903               	skipnz
  3192  0216  2A18               	goto	u4043
  3193  0217  07BB               	addwf	___flmul@grs+3,f
  3194  0218                     u4043:
  3195  0218                     l3009:
  3196  0218  082A               	movf	___flmul@b+1,w
  3197  0219  00B1               	movwf	??___flmul
  3198  021A  0831               	movf	??___flmul,w
  3199  021B  00A0               	movwf	__Umul8_16@multiplicand
  3200  021C  082F               	movf	___flmul@a+2,w
  3201  021D  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  3202  0222  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0223  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0224  0821               	movf	?__Umul8_16+1,w
  3205  0225  00C2               	movwf	___flmul@temp+1
  3206  0226  0820               	movf	?__Umul8_16,w
  3207  0227  00C1               	movwf	___flmul@temp
  3208  0228  0841               	movf	___flmul@temp,w
  3209  0229  00B1               	movwf	??___flmul
  3210  022A  0842               	movf	___flmul@temp+1,w
  3211  022B  00B2               	movwf	??___flmul+1
  3212  022C  01B3               	clrf	??___flmul+2
  3213  022D  01B4               	clrf	??___flmul+3
  3214  022E  0831               	movf	??___flmul,w
  3215  022F  07BD               	addwf	___flmul@prod,f
  3216  0230  0832               	movf	??___flmul+1,w
  3217  0231  1103               	clrz
  3218  0232  1803               	skipnc
  3219  0233  3E01               	addlw	1
  3220  0234  1903               	skipnz
  3221  0235  2A37               	goto	u4051
  3222  0236  07BE               	addwf	___flmul@prod+1,f
  3223  0237                     u4051:
  3224  0237  0833               	movf	??___flmul+2,w
  3225  0238  1103               	clrz
  3226  0239  1803               	skipnc
  3227  023A  3E01               	addlw	1
  3228  023B  1903               	skipnz
  3229  023C  2A3E               	goto	u4052
  3230  023D  07BF               	addwf	___flmul@prod+2,f
  3231  023E                     u4052:
  3232  023E  0834               	movf	??___flmul+3,w
  3233  023F  1103               	clrz
  3234  0240  1803               	skipnc
  3235  0241  3E01               	addlw	1
  3236  0242  1903               	skipnz
  3237  0243  2A45               	goto	u4053
  3238  0244  07C0               	addwf	___flmul@prod+3,f
  3239  0245                     u4053:
  3240  0245                     l3011:
  3241  0245  082B               	movf	___flmul@b+2,w
  3242  0246  00B1               	movwf	??___flmul
  3243  0247  0831               	movf	??___flmul,w
  3244  0248  00A0               	movwf	__Umul8_16@multiplicand
  3245  0249  082E               	movf	___flmul@a+1,w
  3246  024A  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  3247  024F  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0250  1303               	bcf	3,6	;RP1=0, select bank0
  3249  0251  0821               	movf	?__Umul8_16+1,w
  3250  0252  00C2               	movwf	___flmul@temp+1
  3251  0253  0820               	movf	?__Umul8_16,w
  3252  0254  00C1               	movwf	___flmul@temp
  3253  0255                     l3013:
  3254  0255  0841               	movf	___flmul@temp,w
  3255  0256  00B1               	movwf	??___flmul
  3256  0257  0842               	movf	___flmul@temp+1,w
  3257  0258  00B2               	movwf	??___flmul+1
  3258  0259  01B3               	clrf	??___flmul+2
  3259  025A  01B4               	clrf	??___flmul+3
  3260  025B  0831               	movf	??___flmul,w
  3261  025C  07BD               	addwf	___flmul@prod,f
  3262  025D  0832               	movf	??___flmul+1,w
  3263  025E  1103               	clrz
  3264  025F  1803               	skipnc
  3265  0260  3E01               	addlw	1
  3266  0261  1903               	skipnz
  3267  0262  2A64               	goto	u4061
  3268  0263  07BE               	addwf	___flmul@prod+1,f
  3269  0264                     u4061:
  3270  0264  0833               	movf	??___flmul+2,w
  3271  0265  1103               	clrz
  3272  0266  1803               	skipnc
  3273  0267  3E01               	addlw	1
  3274  0268  1903               	skipnz
  3275  0269  2A6B               	goto	u4062
  3276  026A  07BF               	addwf	___flmul@prod+2,f
  3277  026B                     u4062:
  3278  026B  0834               	movf	??___flmul+3,w
  3279  026C  1103               	clrz
  3280  026D  1803               	skipnc
  3281  026E  3E01               	addlw	1
  3282  026F  1903               	skipnz
  3283  0270  2A72               	goto	u4063
  3284  0271  07C0               	addwf	___flmul@prod+3,f
  3285  0272                     u4063:
  3286  0272  082B               	movf	___flmul@b+2,w
  3287  0273  00B1               	movwf	??___flmul
  3288  0274  0831               	movf	??___flmul,w
  3289  0275  00A0               	movwf	__Umul8_16@multiplicand
  3290  0276  082F               	movf	___flmul@a+2,w
  3291  0277  120A  158A  2379  120A  118A  	fcall	__Umul8_16
  3292  027C  1283               	bcf	3,5	;RP0=0, select bank0
  3293  027D  1303               	bcf	3,6	;RP1=0, select bank0
  3294  027E  0821               	movf	?__Umul8_16+1,w
  3295  027F  00C2               	movwf	___flmul@temp+1
  3296  0280  0820               	movf	?__Umul8_16,w
  3297  0281  00C1               	movwf	___flmul@temp
  3298  0282                     l3015:
  3299  0282  0841               	movf	___flmul@temp,w
  3300  0283  00B1               	movwf	??___flmul
  3301  0284  0842               	movf	___flmul@temp+1,w
  3302  0285  00B2               	movwf	??___flmul+1
  3303  0286  01B3               	clrf	??___flmul+2
  3304  0287  01B4               	clrf	??___flmul+3
  3305  0288  3008               	movlw	8
  3306  0289                     u4075:
  3307  0289  1003               	clrc
  3308  028A  0DB1               	rlf	??___flmul,f
  3309  028B  0DB2               	rlf	??___flmul+1,f
  3310  028C  0DB3               	rlf	??___flmul+2,f
  3311  028D  0DB4               	rlf	??___flmul+3,f
  3312  028E                     u4070:
  3313  028E  3EFF               	addlw	-1
  3314  028F  1D03               	skipz
  3315  0290  2A89               	goto	u4075
  3316  0291  0831               	movf	??___flmul,w
  3317  0292  07BD               	addwf	___flmul@prod,f
  3318  0293  0832               	movf	??___flmul+1,w
  3319  0294  1103               	clrz
  3320  0295  1803               	skipnc
  3321  0296  3E01               	addlw	1
  3322  0297  1903               	skipnz
  3323  0298  2A9A               	goto	u4081
  3324  0299  07BE               	addwf	___flmul@prod+1,f
  3325  029A                     u4081:
  3326  029A  0833               	movf	??___flmul+2,w
  3327  029B  1103               	clrz
  3328  029C  1803               	skipnc
  3329  029D  3E01               	addlw	1
  3330  029E  1903               	skipnz
  3331  029F  2AA1               	goto	u4082
  3332  02A0  07BF               	addwf	___flmul@prod+2,f
  3333  02A1                     u4082:
  3334  02A1  0834               	movf	??___flmul+3,w
  3335  02A2  1103               	clrz
  3336  02A3  1803               	skipnc
  3337  02A4  3E01               	addlw	1
  3338  02A5  1903               	skipnz
  3339  02A6  2AA8               	goto	u4083
  3340  02A7  07C0               	addwf	___flmul@prod+3,f
  3341  02A8                     u4083:
  3342  02A8                     l3017:
  3343  02A8  0838               	movf	___flmul@grs,w
  3344  02A9  00B1               	movwf	??___flmul
  3345  02AA  0839               	movf	___flmul@grs+1,w
  3346  02AB  00B2               	movwf	??___flmul+1
  3347  02AC  083A               	movf	___flmul@grs+2,w
  3348  02AD  00B3               	movwf	??___flmul+2
  3349  02AE  083B               	movf	___flmul@grs+3,w
  3350  02AF  00B4               	movwf	??___flmul+3
  3351  02B0  3018               	movlw	24
  3352  02B1                     u4095:
  3353  02B1  1003               	clrc
  3354  02B2  0CB4               	rrf	??___flmul+3,f
  3355  02B3  0CB3               	rrf	??___flmul+2,f
  3356  02B4  0CB2               	rrf	??___flmul+1,f
  3357  02B5  0CB1               	rrf	??___flmul,f
  3358  02B6                     u4090:
  3359  02B6  3EFF               	addlw	-1
  3360  02B7  1D03               	skipz
  3361  02B8  2AB1               	goto	u4095
  3362  02B9  0831               	movf	??___flmul,w
  3363  02BA  07BD               	addwf	___flmul@prod,f
  3364  02BB  0832               	movf	??___flmul+1,w
  3365  02BC  1103               	clrz
  3366  02BD  1803               	skipnc
  3367  02BE  3E01               	addlw	1
  3368  02BF  1903               	skipnz
  3369  02C0  2AC2               	goto	u4101
  3370  02C1  07BE               	addwf	___flmul@prod+1,f
  3371  02C2                     u4101:
  3372  02C2  0833               	movf	??___flmul+2,w
  3373  02C3  1103               	clrz
  3374  02C4  1803               	skipnc
  3375  02C5  3E01               	addlw	1
  3376  02C6  1903               	skipnz
  3377  02C7  2AC9               	goto	u4102
  3378  02C8  07BF               	addwf	___flmul@prod+2,f
  3379  02C9                     u4102:
  3380  02C9  0834               	movf	??___flmul+3,w
  3381  02CA  1103               	clrz
  3382  02CB  1803               	skipnc
  3383  02CC  3E01               	addlw	1
  3384  02CD  1903               	skipnz
  3385  02CE  2AD0               	goto	u4103
  3386  02CF  07C0               	addwf	___flmul@prod+3,f
  3387  02D0                     u4103:
  3388  02D0                     l3019:
  3389  02D0  3008               	movlw	8
  3390  02D1  00B1               	movwf	??___flmul
  3391  02D2                     u4115:
  3392  02D2  1003               	clrc
  3393  02D3  0DB8               	rlf	___flmul@grs,f
  3394  02D4  0DB9               	rlf	___flmul@grs+1,f
  3395  02D5  0DBA               	rlf	___flmul@grs+2,f
  3396  02D6  0DBB               	rlf	___flmul@grs+3,f
  3397  02D7  0BB1               	decfsz	??___flmul,f
  3398  02D8  2AD2               	goto	u4115
  3399  02D9                     l3021:
  3400  02D9  083C               	movf	___flmul@bexp,w
  3401  02DA  0737               	addwf	___flmul@aexp,w
  3402  02DB  00B1               	movwf	??___flmul
  3403  02DC  01B2               	clrf	??___flmul+1
  3404  02DD  0DB2               	rlf	??___flmul+1,f
  3405  02DE  0831               	movf	??___flmul,w
  3406  02DF  3E82               	addlw	130
  3407  02E0  00C1               	movwf	___flmul@temp
  3408  02E1  0832               	movf	??___flmul+1,w
  3409  02E2  1803               	skipnc
  3410  02E3  3E01               	addlw	1
  3411  02E4  3EFF               	addlw	255
  3412  02E5  00C2               	movwf	___flmul@temp+1
  3413  02E6  2B04               	goto	l3033
  3414  02E7                     l3023:
  3415  02E7  3001               	movlw	1
  3416  02E8  00B1               	movwf	??___flmul
  3417  02E9                     u4125:
  3418  02E9  1003               	clrc
  3419  02EA  0DBD               	rlf	___flmul@prod,f
  3420  02EB  0DBE               	rlf	___flmul@prod+1,f
  3421  02EC  0DBF               	rlf	___flmul@prod+2,f
  3422  02ED  0DC0               	rlf	___flmul@prod+3,f
  3423  02EE  0BB1               	decfsz	??___flmul,f
  3424  02EF  2AE9               	goto	u4125
  3425  02F0                     l3025:
  3426  02F0  1FBB               	btfss	___flmul@grs+3,7
  3427  02F1  2AF3               	goto	u4131
  3428  02F2  2AF4               	goto	u4130
  3429  02F3                     u4131:
  3430  02F3  2AF5               	goto	l3029
  3431  02F4                     u4130:
  3432  02F4                     l3027:
  3433  02F4  143D               	bsf	___flmul@prod,0
  3434  02F5                     l3029:
  3435  02F5  3001               	movlw	1
  3436  02F6  00B1               	movwf	??___flmul
  3437  02F7                     u4145:
  3438  02F7  1003               	clrc
  3439  02F8  0DB8               	rlf	___flmul@grs,f
  3440  02F9  0DB9               	rlf	___flmul@grs+1,f
  3441  02FA  0DBA               	rlf	___flmul@grs+2,f
  3442  02FB  0DBB               	rlf	___flmul@grs+3,f
  3443  02FC  0BB1               	decfsz	??___flmul,f
  3444  02FD  2AF7               	goto	u4145
  3445  02FE                     l3031:
  3446  02FE  30FF               	movlw	255
  3447  02FF  07C1               	addwf	___flmul@temp,f
  3448  0300  1803               	skipnc
  3449  0301  0AC2               	incf	___flmul@temp+1,f
  3450  0302  30FF               	movlw	255
  3451  0303  07C2               	addwf	___flmul@temp+1,f
  3452  0304                     l3033:
  3453  0304  1FBF               	btfss	___flmul@prod+2,7
  3454  0305  2B07               	goto	u4151
  3455  0306  2B08               	goto	u4150
  3456  0307                     u4151:
  3457  0307  2AE7               	goto	l3023
  3458  0308                     u4150:
  3459  0308                     l3035:
  3460  0308  01B7               	clrf	___flmul@aexp
  3461  0309                     l3037:
  3462  0309  1FBB               	btfss	___flmul@grs+3,7
  3463  030A  2B0C               	goto	u4161
  3464  030B  2B0D               	goto	u4160
  3465  030C                     u4161:
  3466  030C  2B29               	goto	l3045
  3467  030D                     u4160:
  3468  030D                     l3039:
  3469  030D  30FF               	movlw	255
  3470  030E  0538               	andwf	___flmul@grs,w
  3471  030F  00B1               	movwf	??___flmul
  3472  0310  30FF               	movlw	255
  3473  0311  0539               	andwf	___flmul@grs+1,w
  3474  0312  00B2               	movwf	??___flmul+1
  3475  0313  30FF               	movlw	255
  3476  0314  053A               	andwf	___flmul@grs+2,w
  3477  0315  00B3               	movwf	??___flmul+2
  3478  0316  307F               	movlw	127
  3479  0317  053B               	andwf	___flmul@grs+3,w
  3480  0318  00B4               	movwf	??___flmul+3
  3481  0319  0834               	movf	??___flmul+3,w
  3482  031A  0433               	iorwf	??___flmul+2,w
  3483  031B  0432               	iorwf	??___flmul+1,w
  3484  031C  0431               	iorwf	??___flmul,w
  3485  031D  1903               	skipnz
  3486  031E  2B20               	goto	u4171
  3487  031F  2B21               	goto	u4170
  3488  0320                     u4171:
  3489  0320  2B24               	goto	l748
  3490  0321                     u4170:
  3491  0321                     l3041:
  3492  0321  01B7               	clrf	___flmul@aexp
  3493  0322  0AB7               	incf	___flmul@aexp,f
  3494  0323  2B29               	goto	l3045
  3495  0324                     l748:
  3496  0324  1C3D               	btfss	___flmul@prod,0
  3497  0325  2B27               	goto	u4181
  3498  0326  2B28               	goto	u4180
  3499  0327                     u4181:
  3500  0327  2B29               	goto	l3045
  3501  0328                     u4180:
  3502  0328  2B21               	goto	l3041
  3503  0329                     l3045:
  3504  0329  0837               	movf	___flmul@aexp,w
  3505  032A  1903               	btfsc	3,2
  3506  032B  2B2D               	goto	u4191
  3507  032C  2B2E               	goto	u4190
  3508  032D                     u4191:
  3509  032D  2B5F               	goto	l3055
  3510  032E                     u4190:
  3511  032E                     l3047:
  3512  032E  3001               	movlw	1
  3513  032F  07BD               	addwf	___flmul@prod,f
  3514  0330  3000               	movlw	0
  3515  0331  1803               	skipnc
  3516  0332  3001               	movlw	1
  3517  0333  07BE               	addwf	___flmul@prod+1,f
  3518  0334  3000               	movlw	0
  3519  0335  1803               	skipnc
  3520  0336  3001               	movlw	1
  3521  0337  07BF               	addwf	___flmul@prod+2,f
  3522  0338  3000               	movlw	0
  3523  0339  1803               	skipnc
  3524  033A  3001               	movlw	1
  3525  033B  07C0               	addwf	___flmul@prod+3,f
  3526  033C                     l3049:
  3527  033C  1C40               	btfss	___flmul@prod+3,0
  3528  033D  2B3F               	goto	u4201
  3529  033E  2B40               	goto	u4200
  3530  033F                     u4201:
  3531  033F  2B5F               	goto	l3055
  3532  0340                     u4200:
  3533  0340                     l3051:
  3534  0340  083D               	movf	___flmul@prod,w
  3535  0341  00B1               	movwf	??___flmul
  3536  0342  083E               	movf	___flmul@prod+1,w
  3537  0343  00B2               	movwf	??___flmul+1
  3538  0344  083F               	movf	___flmul@prod+2,w
  3539  0345  00B3               	movwf	??___flmul+2
  3540  0346  0840               	movf	___flmul@prod+3,w
  3541  0347  00B4               	movwf	??___flmul+3
  3542  0348  3001               	movlw	1
  3543  0349  00B5               	movwf	??___flmul+4
  3544  034A                     u4215:
  3545  034A  0D34               	rlf	??___flmul+3,w
  3546  034B  0CB4               	rrf	??___flmul+3,f
  3547  034C  0CB3               	rrf	??___flmul+2,f
  3548  034D  0CB2               	rrf	??___flmul+1,f
  3549  034E  0CB1               	rrf	??___flmul,f
  3550  034F                     u4210:
  3551  034F  0BB5               	decfsz	??___flmul+4,f
  3552  0350  2B4A               	goto	u4215
  3553  0351  0834               	movf	??___flmul+3,w
  3554  0352  00C0               	movwf	___flmul@prod+3
  3555  0353  0833               	movf	??___flmul+2,w
  3556  0354  00BF               	movwf	___flmul@prod+2
  3557  0355  0832               	movf	??___flmul+1,w
  3558  0356  00BE               	movwf	___flmul@prod+1
  3559  0357  0831               	movf	??___flmul,w
  3560  0358  00BD               	movwf	___flmul@prod
  3561  0359                     l3053:
  3562  0359  3001               	movlw	1
  3563  035A  07C1               	addwf	___flmul@temp,f
  3564  035B  1803               	skipnc
  3565  035C  0AC2               	incf	___flmul@temp+1,f
  3566  035D  3000               	movlw	0
  3567  035E  07C2               	addwf	___flmul@temp+1,f
  3568  035F                     l3055:
  3569  035F  0842               	movf	___flmul@temp+1,w
  3570  0360  3A80               	xorlw	128
  3571  0361  00FF               	movwf	btemp+1
  3572  0362  3080               	movlw	128
  3573  0363  027F               	subwf	btemp+1,w
  3574  0364  1D03               	skipz
  3575  0365  2B68               	goto	u4225
  3576  0366  30FF               	movlw	255
  3577  0367  0241               	subwf	___flmul@temp,w
  3578  0368                     u4225:
  3579  0368  1C03               	skipc
  3580  0369  2B6B               	goto	u4221
  3581  036A  2B6C               	goto	u4220
  3582  036B                     u4221:
  3583  036B  2B77               	goto	l3059
  3584  036C                     u4220:
  3585  036C                     l3057:
  3586  036C  307F               	movlw	127
  3587  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3588  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3589  036F  00C0               	movwf	___flmul@prod+3
  3590  0370  3080               	movlw	128
  3591  0371  00BF               	movwf	___flmul@prod+2
  3592  0372  3000               	movlw	0
  3593  0373  00BE               	movwf	___flmul@prod+1
  3594  0374  3000               	movlw	0
  3595  0375  00BD               	movwf	___flmul@prod
  3596  0376  2BAC               	goto	l754
  3597  0377                     l3059:
  3598  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0379  0842               	movf	___flmul@temp+1,w
  3601  037A  3A80               	xorlw	128
  3602  037B  00FF               	movwf	btemp+1
  3603  037C  3080               	movlw	128
  3604  037D  027F               	subwf	btemp+1,w
  3605  037E  1D03               	skipz
  3606  037F  2B82               	goto	u4235
  3607  0380  3001               	movlw	1
  3608  0381  0241               	subwf	___flmul@temp,w
  3609  0382                     u4235:
  3610  0382  1803               	skipnc
  3611  0383  2B85               	goto	u4231
  3612  0384  2B86               	goto	u4230
  3613  0385                     u4231:
  3614  0385  2B92               	goto	l3065
  3615  0386                     u4230:
  3616  0386                     l3061:
  3617  0386  3000               	movlw	0
  3618  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0389  00C0               	movwf	___flmul@prod+3
  3621  038A  3000               	movlw	0
  3622  038B  00BF               	movwf	___flmul@prod+2
  3623  038C  3000               	movlw	0
  3624  038D  00BE               	movwf	___flmul@prod+1
  3625  038E  3000               	movlw	0
  3626  038F  00BD               	movwf	___flmul@prod
  3627  0390                     l3063:
  3628  0390  01B6               	clrf	___flmul@sign
  3629  0391  2BAC               	goto	l754
  3630  0392                     l3065:
  3631  0392  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0393  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0394  0841               	movf	___flmul@temp,w
  3634  0395  00B1               	movwf	??___flmul
  3635  0396  0831               	movf	??___flmul,w
  3636  0397  00BC               	movwf	___flmul@bexp
  3637  0398  30FF               	movlw	255
  3638  0399  05BD               	andwf	___flmul@prod,f
  3639  039A  30FF               	movlw	255
  3640  039B  05BE               	andwf	___flmul@prod+1,f
  3641  039C  307F               	movlw	127
  3642  039D  05BF               	andwf	___flmul@prod+2,f
  3643  039E  3000               	movlw	0
  3644  039F  05C0               	andwf	___flmul@prod+3,f
  3645  03A0                     l3067:
  3646  03A0  1C3C               	btfss	___flmul@bexp,0
  3647  03A1  2BA3               	goto	u4241
  3648  03A2  2BA4               	goto	u4240
  3649  03A3                     u4241:
  3650  03A3  2BA5               	goto	l3071
  3651  03A4                     u4240:
  3652  03A4                     l3069:
  3653  03A4  17BF               	bsf	___flmul@prod+2,7
  3654  03A5                     l3071:
  3655  03A5  083C               	movf	___flmul@bexp,w
  3656  03A6  00B1               	movwf	??___flmul
  3657  03A7  1003               	clrc
  3658  03A8  0C31               	rrf	??___flmul,w
  3659  03A9  00B2               	movwf	??___flmul+1
  3660  03AA  0832               	movf	??___flmul+1,w
  3661  03AB  00C0               	movwf	___flmul@prod+3
  3662  03AC                     l754:
  3663  03AC  0836               	movf	___flmul@sign,w
  3664  03AD  00B1               	movwf	??___flmul
  3665  03AE  0831               	movf	??___flmul,w
  3666  03AF  04C0               	iorwf	___flmul@prod+3,f
  3667  03B0                     l3073:
  3668  03B0  0840               	movf	___flmul@prod+3,w
  3669  03B1  00AC               	movwf	?___flmul+3
  3670  03B2  083F               	movf	___flmul@prod+2,w
  3671  03B3  00AB               	movwf	?___flmul+2
  3672  03B4  083E               	movf	___flmul@prod+1,w
  3673  03B5  00AA               	movwf	?___flmul+1
  3674  03B6  083D               	movf	___flmul@prod,w
  3675  03B7  00A9               	movwf	?___flmul
  3676  03B8                     l742:
  3677  03B8  0008               	return
  3678  03B9                     __end_of___flmul:
  3679                           
  3680                           	psect	text10
  3681  0B79                     __ptext10:	
  3682 ;; *************** function __Umul8_16 *****************
  3683 ;; Defined at:
  3684 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  multiplier      1    wreg     unsigned char 
  3687 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3690 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  3691 ;;  product         2    4[BANK0 ] unsigned int 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2    0[BANK0 ] unsigned int 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       2       0       0       0
  3702 ;;      Locals:         0       5       0       0       0
  3703 ;;      Temps:          0       2       0       0       0
  3704 ;;      Totals:         0       9       0       0       0
  3705 ;;Total ram usage:        9 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		___flmul
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function __Umul8_16
  3717  0B79                     __Umul8_16:
  3718                           
  3719                           ;incstack = 0
  3720                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3721                           ;__Umul8_16@multiplier stored from wreg
  3722  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0B7B  00A8               	movwf	__Umul8_16@multiplier
  3725  0B7C                     l2609:
  3726  0B7C  01A4               	clrf	__Umul8_16@product
  3727  0B7D  01A5               	clrf	__Umul8_16@product+1
  3728  0B7E                     l2611:
  3729  0B7E  0820               	movf	__Umul8_16@multiplicand,w
  3730  0B7F  00A2               	movwf	??__Umul8_16
  3731  0B80  01A3               	clrf	??__Umul8_16+1
  3732  0B81  0822               	movf	??__Umul8_16,w
  3733  0B82  00A6               	movwf	__Umul8_16@word_mpld
  3734  0B83  0823               	movf	??__Umul8_16+1,w
  3735  0B84  00A7               	movwf	__Umul8_16@word_mpld+1
  3736  0B85                     l2613:
  3737  0B85  1C28               	btfss	__Umul8_16@multiplier,0
  3738  0B86  2B88               	goto	u3181
  3739  0B87  2B89               	goto	u3180
  3740  0B88                     u3181:
  3741  0B88  2B8F               	goto	l761
  3742  0B89                     u3180:
  3743  0B89                     l2615:
  3744  0B89  0826               	movf	__Umul8_16@word_mpld,w
  3745  0B8A  07A4               	addwf	__Umul8_16@product,f
  3746  0B8B  1803               	skipnc
  3747  0B8C  0AA5               	incf	__Umul8_16@product+1,f
  3748  0B8D  0827               	movf	__Umul8_16@word_mpld+1,w
  3749  0B8E  07A5               	addwf	__Umul8_16@product+1,f
  3750  0B8F                     l761:
  3751  0B8F  3001               	movlw	1
  3752  0B90                     u3195:
  3753  0B90  1003               	clrc
  3754  0B91  0DA6               	rlf	__Umul8_16@word_mpld,f
  3755  0B92  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  3756  0B93  3EFF               	addlw	-1
  3757  0B94  1D03               	skipz
  3758  0B95  2B90               	goto	u3195
  3759  0B96  1003               	clrc
  3760  0B97  0CA8               	rrf	__Umul8_16@multiplier,f
  3761  0B98                     l2617:
  3762  0B98  0828               	movf	__Umul8_16@multiplier,w
  3763  0B99  1D03               	btfss	3,2
  3764  0B9A  2B9C               	goto	u3201
  3765  0B9B  2B9D               	goto	u3200
  3766  0B9C                     u3201:
  3767  0B9C  2B85               	goto	l2613
  3768  0B9D                     u3200:
  3769  0B9D                     l2619:
  3770  0B9D  0825               	movf	__Umul8_16@product+1,w
  3771  0B9E  00A1               	movwf	?__Umul8_16+1
  3772  0B9F  0824               	movf	__Umul8_16@product,w
  3773  0BA0  00A0               	movwf	?__Umul8_16
  3774  0BA1                     l763:
  3775  0BA1  0008               	return
  3776  0BA2                     __end_of__Umul8_16:
  3777                           
  3778                           	psect	text11
  3779  03B9                     __ptext11:	
  3780 ;; *************** function ___fldiv *****************
  3781 ;; Defined at:
  3782 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  a               4    0[BANK0 ] unsigned int 
  3785 ;;  b               4    4[BANK0 ] unsigned int 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  grs             4   20[BANK0 ] unsigned long 
  3788 ;;  rem             4   13[BANK0 ] unsigned long 
  3789 ;;  new_exp         2   18[BANK0 ] int 
  3790 ;;  aexp            1   25[BANK0 ] unsigned char 
  3791 ;;  bexp            1   24[BANK0 ] unsigned char 
  3792 ;;  sign            1   17[BANK0 ] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  4    0[BANK0 ] unsigned char 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0, btemp+1
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         0       8       0       0       0
  3803 ;;      Locals:         0      13       0       0       0
  3804 ;;      Temps:          0       5       0       0       0
  3805 ;;      Totals:         0      26       0       0       0
  3806 ;;Total ram usage:       26 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_Read_Temp
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function ___fldiv
  3818  03B9                     ___fldiv:
  3819  03B9                     l2795:	
  3820                           ;incstack = 0
  3821                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3822                           
  3823  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3824  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3825  03BB  0827               	movf	___fldiv@b+3,w
  3826  03BC  3980               	andlw	128
  3827  03BD  00A8               	movwf	??___fldiv
  3828  03BE  0828               	movf	??___fldiv,w
  3829  03BF  00B1               	movwf	___fldiv@sign
  3830  03C0                     l2797:
  3831  03C0  0827               	movf	___fldiv@b+3,w
  3832  03C1  00A8               	movwf	??___fldiv
  3833  03C2  0728               	addwf	??___fldiv,w
  3834  03C3  00A9               	movwf	??___fldiv+1
  3835  03C4  0829               	movf	??___fldiv+1,w
  3836  03C5  00B8               	movwf	___fldiv@bexp
  3837  03C6                     l2799:
  3838  03C6  1FA6               	btfss	___fldiv@b+2,7
  3839  03C7  2BC9               	goto	u3591
  3840  03C8  2BCA               	goto	u3590
  3841  03C9                     u3591:
  3842  03C9  2BCB               	goto	l2803
  3843  03CA                     u3590:
  3844  03CA                     l2801:
  3845  03CA  1438               	bsf	___fldiv@bexp,0
  3846  03CB                     l2803:
  3847  03CB  0838               	movf	___fldiv@bexp,w
  3848  03CC  1903               	btfsc	3,2
  3849  03CD  2BCF               	goto	u3601
  3850  03CE  2BD0               	goto	u3600
  3851  03CF                     u3601:
  3852  03CF  2BE0               	goto	l2813
  3853  03D0                     u3600:
  3854  03D0                     l2805:
  3855  03D0  0A38               	incf	___fldiv@bexp,w
  3856  03D1  1D03               	btfss	3,2
  3857  03D2  2BD4               	goto	u3611
  3858  03D3  2BD5               	goto	u3610
  3859  03D4                     u3611:
  3860  03D4  2BDD               	goto	l2809
  3861  03D5                     u3610:
  3862  03D5                     l2807:
  3863  03D5  3000               	movlw	0
  3864  03D6  00A7               	movwf	___fldiv@b+3
  3865  03D7  3000               	movlw	0
  3866  03D8  00A6               	movwf	___fldiv@b+2
  3867  03D9  3000               	movlw	0
  3868  03DA  00A5               	movwf	___fldiv@b+1
  3869  03DB  3000               	movlw	0
  3870  03DC  00A4               	movwf	___fldiv@b
  3871  03DD                     l2809:
  3872  03DD  17A6               	bsf	___fldiv@b+2,7
  3873  03DE                     l2811:
  3874  03DE  01A7               	clrf	___fldiv@b+3
  3875  03DF  2BE8               	goto	l2815
  3876  03E0                     l2813:
  3877  03E0  3000               	movlw	0
  3878  03E1  00A7               	movwf	___fldiv@b+3
  3879  03E2  3000               	movlw	0
  3880  03E3  00A6               	movwf	___fldiv@b+2
  3881  03E4  3000               	movlw	0
  3882  03E5  00A5               	movwf	___fldiv@b+1
  3883  03E6  3000               	movlw	0
  3884  03E7  00A4               	movwf	___fldiv@b
  3885  03E8                     l2815:
  3886  03E8  0823               	movf	___fldiv@a+3,w
  3887  03E9  3980               	andlw	128
  3888  03EA  00A8               	movwf	??___fldiv
  3889  03EB  0828               	movf	??___fldiv,w
  3890  03EC  06B1               	xorwf	___fldiv@sign,f
  3891  03ED                     l2817:
  3892  03ED  0823               	movf	___fldiv@a+3,w
  3893  03EE  00A8               	movwf	??___fldiv
  3894  03EF  0728               	addwf	??___fldiv,w
  3895  03F0  00A9               	movwf	??___fldiv+1
  3896  03F1  0829               	movf	??___fldiv+1,w
  3897  03F2  00B9               	movwf	___fldiv@aexp
  3898  03F3                     l2819:
  3899  03F3  1FA2               	btfss	___fldiv@a+2,7
  3900  03F4  2BF6               	goto	u3621
  3901  03F5  2BF7               	goto	u3620
  3902  03F6                     u3621:
  3903  03F6  2BF8               	goto	l2823
  3904  03F7                     u3620:
  3905  03F7                     l2821:
  3906  03F7  1439               	bsf	___fldiv@aexp,0
  3907  03F8                     l2823:
  3908  03F8  0839               	movf	___fldiv@aexp,w
  3909  03F9  1903               	btfsc	3,2
  3910  03FA  2BFC               	goto	u3631
  3911  03FB  2BFD               	goto	u3630
  3912  03FC                     u3631:
  3913  03FC  2C0D               	goto	l2833
  3914  03FD                     u3630:
  3915  03FD                     l2825:
  3916  03FD  0A39               	incf	___fldiv@aexp,w
  3917  03FE  1D03               	btfss	3,2
  3918  03FF  2C01               	goto	u3641
  3919  0400  2C02               	goto	u3640
  3920  0401                     u3641:
  3921  0401  2C0A               	goto	l2829
  3922  0402                     u3640:
  3923  0402                     l2827:
  3924  0402  3000               	movlw	0
  3925  0403  00A3               	movwf	___fldiv@a+3
  3926  0404  3000               	movlw	0
  3927  0405  00A2               	movwf	___fldiv@a+2
  3928  0406  3000               	movlw	0
  3929  0407  00A1               	movwf	___fldiv@a+1
  3930  0408  3000               	movlw	0
  3931  0409  00A0               	movwf	___fldiv@a
  3932  040A                     l2829:
  3933  040A  17A2               	bsf	___fldiv@a+2,7
  3934  040B                     l2831:
  3935  040B  01A3               	clrf	___fldiv@a+3
  3936  040C  2C15               	goto	l702
  3937  040D                     l2833:
  3938  040D  3000               	movlw	0
  3939  040E  00A3               	movwf	___fldiv@a+3
  3940  040F  3000               	movlw	0
  3941  0410  00A2               	movwf	___fldiv@a+2
  3942  0411  3000               	movlw	0
  3943  0412  00A1               	movwf	___fldiv@a+1
  3944  0413  3000               	movlw	0
  3945  0414  00A0               	movwf	___fldiv@a
  3946  0415                     l702:
  3947  0415  0823               	movf	___fldiv@a+3,w
  3948  0416  0422               	iorwf	___fldiv@a+2,w
  3949  0417  0421               	iorwf	___fldiv@a+1,w
  3950  0418  0420               	iorwf	___fldiv@a,w
  3951  0419  1D03               	skipz
  3952  041A  2C1C               	goto	u3651
  3953  041B  2C1D               	goto	u3650
  3954  041C                     u3651:
  3955  041C  2C36               	goto	l2843
  3956  041D                     u3650:
  3957  041D                     l2835:
  3958  041D  3000               	movlw	0
  3959  041E  00A7               	movwf	___fldiv@b+3
  3960  041F  3000               	movlw	0
  3961  0420  00A6               	movwf	___fldiv@b+2
  3962  0421  3000               	movlw	0
  3963  0422  00A5               	movwf	___fldiv@b+1
  3964  0423  3000               	movlw	0
  3965  0424  00A4               	movwf	___fldiv@b
  3966  0425  3080               	movlw	128
  3967  0426  04A6               	iorwf	___fldiv@b+2,f
  3968  0427  307F               	movlw	127
  3969  0428  04A7               	iorwf	___fldiv@b+3,f
  3970  0429                     l2837:
  3971  0429  0831               	movf	___fldiv@sign,w
  3972  042A  00A8               	movwf	??___fldiv
  3973  042B  0828               	movf	??___fldiv,w
  3974  042C  04A7               	iorwf	___fldiv@b+3,f
  3975  042D                     l2839:
  3976  042D  0827               	movf	___fldiv@b+3,w
  3977  042E  00A3               	movwf	?___fldiv+3
  3978  042F  0826               	movf	___fldiv@b+2,w
  3979  0430  00A2               	movwf	?___fldiv+2
  3980  0431  0825               	movf	___fldiv@b+1,w
  3981  0432  00A1               	movwf	?___fldiv+1
  3982  0433  0824               	movf	___fldiv@b,w
  3983  0434  00A0               	movwf	?___fldiv
  3984  0435  2D95               	goto	l704
  3985  0436                     l2843:
  3986  0436  0838               	movf	___fldiv@bexp,w
  3987  0437  1D03               	btfss	3,2
  3988  0438  2C3A               	goto	u3661
  3989  0439  2C3B               	goto	u3660
  3990  043A                     u3661:
  3991  043A  2C44               	goto	l2849
  3992  043B                     u3660:
  3993  043B                     l2845:
  3994  043B  3000               	movlw	0
  3995  043C  00A3               	movwf	?___fldiv+3
  3996  043D  3000               	movlw	0
  3997  043E  00A2               	movwf	?___fldiv+2
  3998  043F  3000               	movlw	0
  3999  0440  00A1               	movwf	?___fldiv+1
  4000  0441  3000               	movlw	0
  4001  0442  00A0               	movwf	?___fldiv
  4002  0443  2D95               	goto	l704
  4003  0444                     l2849:
  4004  0444  0838               	movf	___fldiv@bexp,w
  4005  0445  00A8               	movwf	??___fldiv
  4006  0446  01A9               	clrf	??___fldiv+1
  4007  0447  0829               	movf	??___fldiv+1,w
  4008  0448  00AB               	movwf	??___fldiv+3
  4009  0449  0839               	movf	___fldiv@aexp,w
  4010  044A  0228               	subwf	??___fldiv,w
  4011  044B  00AA               	movwf	??___fldiv+2
  4012  044C  1C03               	skipc
  4013  044D  03AB               	decf	??___fldiv+3,f
  4014  044E  082A               	movf	??___fldiv+2,w
  4015  044F  3E7F               	addlw	127
  4016  0450  00B2               	movwf	___fldiv@new_exp
  4017  0451  082B               	movf	??___fldiv+3,w
  4018  0452  1803               	skipnc
  4019  0453  3E01               	addlw	1
  4020  0454  3E00               	addlw	0
  4021  0455  00B3               	movwf	___fldiv@new_exp+1
  4022  0456                     l2851:
  4023  0456  0827               	movf	___fldiv@b+3,w
  4024  0457  00B0               	movwf	___fldiv@rem+3
  4025  0458  0826               	movf	___fldiv@b+2,w
  4026  0459  00AF               	movwf	___fldiv@rem+2
  4027  045A  0825               	movf	___fldiv@b+1,w
  4028  045B  00AE               	movwf	___fldiv@rem+1
  4029  045C  0824               	movf	___fldiv@b,w
  4030  045D  00AD               	movwf	___fldiv@rem
  4031  045E                     l2853:
  4032  045E  3000               	movlw	0
  4033  045F  00A7               	movwf	___fldiv@b+3
  4034  0460  3000               	movlw	0
  4035  0461  00A6               	movwf	___fldiv@b+2
  4036  0462  3000               	movlw	0
  4037  0463  00A5               	movwf	___fldiv@b+1
  4038  0464  3000               	movlw	0
  4039  0465  00A4               	movwf	___fldiv@b
  4040  0466                     l2855:
  4041  0466  3000               	movlw	0
  4042  0467  00B7               	movwf	___fldiv@grs+3
  4043  0468  3000               	movlw	0
  4044  0469  00B6               	movwf	___fldiv@grs+2
  4045  046A  3000               	movlw	0
  4046  046B  00B5               	movwf	___fldiv@grs+1
  4047  046C  3000               	movlw	0
  4048  046D  00B4               	movwf	___fldiv@grs
  4049  046E                     l2857:
  4050  046E  01B9               	clrf	___fldiv@aexp
  4051  046F  2CBA               	goto	l2877
  4052  0470                     l2859:
  4053  0470  0839               	movf	___fldiv@aexp,w
  4054  0471  1903               	btfsc	3,2
  4055  0472  2C74               	goto	u3671
  4056  0473  2C75               	goto	u3670
  4057  0474                     u3671:
  4058  0474  2C95               	goto	l2869
  4059  0475                     u3670:
  4060  0475                     l2861:
  4061  0475  3001               	movlw	1
  4062  0476  00A8               	movwf	??___fldiv
  4063  0477                     u3685:
  4064  0477  1003               	clrc
  4065  0478  0DAD               	rlf	___fldiv@rem,f
  4066  0479  0DAE               	rlf	___fldiv@rem+1,f
  4067  047A  0DAF               	rlf	___fldiv@rem+2,f
  4068  047B  0DB0               	rlf	___fldiv@rem+3,f
  4069  047C  0BA8               	decfsz	??___fldiv,f
  4070  047D  2C77               	goto	u3685
  4071  047E  3001               	movlw	1
  4072  047F  00A8               	movwf	??___fldiv
  4073  0480                     u3695:
  4074  0480  1003               	clrc
  4075  0481  0DA4               	rlf	___fldiv@b,f
  4076  0482  0DA5               	rlf	___fldiv@b+1,f
  4077  0483  0DA6               	rlf	___fldiv@b+2,f
  4078  0484  0DA7               	rlf	___fldiv@b+3,f
  4079  0485  0BA8               	decfsz	??___fldiv,f
  4080  0486  2C80               	goto	u3695
  4081  0487                     l2863:
  4082  0487  1FB7               	btfss	___fldiv@grs+3,7
  4083  0488  2C8A               	goto	u3701
  4084  0489  2C8B               	goto	u3700
  4085  048A                     u3701:
  4086  048A  2C8C               	goto	l2867
  4087  048B                     u3700:
  4088  048B                     l2865:
  4089  048B  1424               	bsf	___fldiv@b,0
  4090  048C                     l2867:
  4091  048C  3001               	movlw	1
  4092  048D  00A8               	movwf	??___fldiv
  4093  048E                     u3715:
  4094  048E  1003               	clrc
  4095  048F  0DB4               	rlf	___fldiv@grs,f
  4096  0490  0DB5               	rlf	___fldiv@grs+1,f
  4097  0491  0DB6               	rlf	___fldiv@grs+2,f
  4098  0492  0DB7               	rlf	___fldiv@grs+3,f
  4099  0493  0BA8               	decfsz	??___fldiv,f
  4100  0494  2C8E               	goto	u3715
  4101  0495                     l2869:
  4102  0495  0823               	movf	___fldiv@a+3,w
  4103  0496  0230               	subwf	___fldiv@rem+3,w
  4104  0497  1D03               	skipz
  4105  0498  2CA3               	goto	u3725
  4106  0499  0822               	movf	___fldiv@a+2,w
  4107  049A  022F               	subwf	___fldiv@rem+2,w
  4108  049B  1D03               	skipz
  4109  049C  2CA3               	goto	u3725
  4110  049D  0821               	movf	___fldiv@a+1,w
  4111  049E  022E               	subwf	___fldiv@rem+1,w
  4112  049F  1D03               	skipz
  4113  04A0  2CA3               	goto	u3725
  4114  04A1  0820               	movf	___fldiv@a,w
  4115  04A2  022D               	subwf	___fldiv@rem,w
  4116  04A3                     u3725:
  4117  04A3  1C03               	skipc
  4118  04A4  2CA6               	goto	u3721
  4119  04A5  2CA7               	goto	u3720
  4120  04A6                     u3721:
  4121  04A6  2CB6               	goto	l2875
  4122  04A7                     u3720:
  4123  04A7                     l2871:
  4124  04A7  1737               	bsf	___fldiv@grs+3,6
  4125  04A8                     l2873:
  4126  04A8  0820               	movf	___fldiv@a,w
  4127  04A9  02AD               	subwf	___fldiv@rem,f
  4128  04AA  0821               	movf	___fldiv@a+1,w
  4129  04AB  1C03               	skipc
  4130  04AC  0F21               	incfsz	___fldiv@a+1,w
  4131  04AD  02AE               	subwf	___fldiv@rem+1,f
  4132  04AE  0822               	movf	___fldiv@a+2,w
  4133  04AF  1C03               	skipc
  4134  04B0  0F22               	incfsz	___fldiv@a+2,w
  4135  04B1  02AF               	subwf	___fldiv@rem+2,f
  4136  04B2  0823               	movf	___fldiv@a+3,w
  4137  04B3  1C03               	skipc
  4138  04B4  0F23               	incfsz	___fldiv@a+3,w
  4139  04B5  02B0               	subwf	___fldiv@rem+3,f
  4140  04B6                     l2875:
  4141  04B6  3001               	movlw	1
  4142  04B7  00A8               	movwf	??___fldiv
  4143  04B8  0828               	movf	??___fldiv,w
  4144  04B9  07B9               	addwf	___fldiv@aexp,f
  4145  04BA                     l2877:
  4146  04BA  301A               	movlw	26
  4147  04BB  0239               	subwf	___fldiv@aexp,w
  4148  04BC  1C03               	skipc
  4149  04BD  2CBF               	goto	u3731
  4150  04BE  2CC0               	goto	u3730
  4151  04BF                     u3731:
  4152  04BF  2C70               	goto	l2859
  4153  04C0                     u3730:
  4154  04C0                     l2879:
  4155  04C0  0830               	movf	___fldiv@rem+3,w
  4156  04C1  042F               	iorwf	___fldiv@rem+2,w
  4157  04C2  042E               	iorwf	___fldiv@rem+1,w
  4158  04C3  042D               	iorwf	___fldiv@rem,w
  4159  04C4  1903               	skipnz
  4160  04C5  2CC7               	goto	u3741
  4161  04C6  2CC8               	goto	u3740
  4162  04C7                     u3741:
  4163  04C7  2CE7               	goto	l2893
  4164  04C8                     u3740:
  4165  04C8                     l2881:
  4166  04C8  1434               	bsf	___fldiv@grs,0
  4167  04C9  2CE7               	goto	l2893
  4168  04CA                     l2883:
  4169  04CA  3001               	movlw	1
  4170  04CB  00A8               	movwf	??___fldiv
  4171  04CC                     u3755:
  4172  04CC  1003               	clrc
  4173  04CD  0DA4               	rlf	___fldiv@b,f
  4174  04CE  0DA5               	rlf	___fldiv@b+1,f
  4175  04CF  0DA6               	rlf	___fldiv@b+2,f
  4176  04D0  0DA7               	rlf	___fldiv@b+3,f
  4177  04D1  0BA8               	decfsz	??___fldiv,f
  4178  04D2  2CCC               	goto	u3755
  4179  04D3                     l2885:
  4180  04D3  1FB7               	btfss	___fldiv@grs+3,7
  4181  04D4  2CD6               	goto	u3761
  4182  04D5  2CD7               	goto	u3760
  4183  04D6                     u3761:
  4184  04D6  2CD8               	goto	l2889
  4185  04D7                     u3760:
  4186  04D7                     l2887:
  4187  04D7  1424               	bsf	___fldiv@b,0
  4188  04D8                     l2889:
  4189  04D8  3001               	movlw	1
  4190  04D9  00A8               	movwf	??___fldiv
  4191  04DA                     u3775:
  4192  04DA  1003               	clrc
  4193  04DB  0DB4               	rlf	___fldiv@grs,f
  4194  04DC  0DB5               	rlf	___fldiv@grs+1,f
  4195  04DD  0DB6               	rlf	___fldiv@grs+2,f
  4196  04DE  0DB7               	rlf	___fldiv@grs+3,f
  4197  04DF  0BA8               	decfsz	??___fldiv,f
  4198  04E0  2CDA               	goto	u3775
  4199  04E1                     l2891:
  4200  04E1  30FF               	movlw	255
  4201  04E2  07B2               	addwf	___fldiv@new_exp,f
  4202  04E3  1803               	skipnc
  4203  04E4  0AB3               	incf	___fldiv@new_exp+1,f
  4204  04E5  30FF               	movlw	255
  4205  04E6  07B3               	addwf	___fldiv@new_exp+1,f
  4206  04E7                     l2893:
  4207  04E7  1FA6               	btfss	___fldiv@b+2,7
  4208  04E8  2CEA               	goto	u3781
  4209  04E9  2CEB               	goto	u3780
  4210  04EA                     u3781:
  4211  04EA  2CCA               	goto	l2883
  4212  04EB                     u3780:
  4213  04EB                     l2895:
  4214  04EB  01B9               	clrf	___fldiv@aexp
  4215  04EC                     l2897:
  4216  04EC  1FB7               	btfss	___fldiv@grs+3,7
  4217  04ED  2CEF               	goto	u3791
  4218  04EE  2CF0               	goto	u3790
  4219  04EF                     u3791:
  4220  04EF  2D0C               	goto	l2905
  4221  04F0                     u3790:
  4222  04F0                     l2899:
  4223  04F0  30FF               	movlw	255
  4224  04F1  0534               	andwf	___fldiv@grs,w
  4225  04F2  00A8               	movwf	??___fldiv
  4226  04F3  30FF               	movlw	255
  4227  04F4  0535               	andwf	___fldiv@grs+1,w
  4228  04F5  00A9               	movwf	??___fldiv+1
  4229  04F6  30FF               	movlw	255
  4230  04F7  0536               	andwf	___fldiv@grs+2,w
  4231  04F8  00AA               	movwf	??___fldiv+2
  4232  04F9  307F               	movlw	127
  4233  04FA  0537               	andwf	___fldiv@grs+3,w
  4234  04FB  00AB               	movwf	??___fldiv+3
  4235  04FC  082B               	movf	??___fldiv+3,w
  4236  04FD  042A               	iorwf	??___fldiv+2,w
  4237  04FE  0429               	iorwf	??___fldiv+1,w
  4238  04FF  0428               	iorwf	??___fldiv,w
  4239  0500  1903               	skipnz
  4240  0501  2D03               	goto	u3801
  4241  0502  2D04               	goto	u3800
  4242  0503                     u3801:
  4243  0503  2D07               	goto	l718
  4244  0504                     u3800:
  4245  0504                     l2901:
  4246  0504  01B9               	clrf	___fldiv@aexp
  4247  0505  0AB9               	incf	___fldiv@aexp,f
  4248  0506  2D0C               	goto	l2905
  4249  0507                     l718:
  4250  0507  1C24               	btfss	___fldiv@b,0
  4251  0508  2D0A               	goto	u3811
  4252  0509  2D0B               	goto	u3810
  4253  050A                     u3811:
  4254  050A  2D0C               	goto	l2905
  4255  050B                     u3810:
  4256  050B  2D04               	goto	l2901
  4257  050C                     l2905:
  4258  050C  0839               	movf	___fldiv@aexp,w
  4259  050D  1903               	btfsc	3,2
  4260  050E  2D10               	goto	u3821
  4261  050F  2D11               	goto	u3820
  4262  0510                     u3821:
  4263  0510  2D42               	goto	l2915
  4264  0511                     u3820:
  4265  0511                     l2907:
  4266  0511  3001               	movlw	1
  4267  0512  07A4               	addwf	___fldiv@b,f
  4268  0513  3000               	movlw	0
  4269  0514  1803               	skipnc
  4270  0515  3001               	movlw	1
  4271  0516  07A5               	addwf	___fldiv@b+1,f
  4272  0517  3000               	movlw	0
  4273  0518  1803               	skipnc
  4274  0519  3001               	movlw	1
  4275  051A  07A6               	addwf	___fldiv@b+2,f
  4276  051B  3000               	movlw	0
  4277  051C  1803               	skipnc
  4278  051D  3001               	movlw	1
  4279  051E  07A7               	addwf	___fldiv@b+3,f
  4280  051F                     l2909:
  4281  051F  1C27               	btfss	___fldiv@b+3,0
  4282  0520  2D22               	goto	u3831
  4283  0521  2D23               	goto	u3830
  4284  0522                     u3831:
  4285  0522  2D42               	goto	l2915
  4286  0523                     u3830:
  4287  0523                     l2911:
  4288  0523  0824               	movf	___fldiv@b,w
  4289  0524  00A8               	movwf	??___fldiv
  4290  0525  0825               	movf	___fldiv@b+1,w
  4291  0526  00A9               	movwf	??___fldiv+1
  4292  0527  0826               	movf	___fldiv@b+2,w
  4293  0528  00AA               	movwf	??___fldiv+2
  4294  0529  0827               	movf	___fldiv@b+3,w
  4295  052A  00AB               	movwf	??___fldiv+3
  4296  052B  3001               	movlw	1
  4297  052C  00AC               	movwf	??___fldiv+4
  4298  052D                     u3845:
  4299  052D  0D2B               	rlf	??___fldiv+3,w
  4300  052E  0CAB               	rrf	??___fldiv+3,f
  4301  052F  0CAA               	rrf	??___fldiv+2,f
  4302  0530  0CA9               	rrf	??___fldiv+1,f
  4303  0531  0CA8               	rrf	??___fldiv,f
  4304  0532                     u3840:
  4305  0532  0BAC               	decfsz	??___fldiv+4,f
  4306  0533  2D2D               	goto	u3845
  4307  0534  082B               	movf	??___fldiv+3,w
  4308  0535  00A7               	movwf	___fldiv@b+3
  4309  0536  082A               	movf	??___fldiv+2,w
  4310  0537  00A6               	movwf	___fldiv@b+2
  4311  0538  0829               	movf	??___fldiv+1,w
  4312  0539  00A5               	movwf	___fldiv@b+1
  4313  053A  0828               	movf	??___fldiv,w
  4314  053B  00A4               	movwf	___fldiv@b
  4315  053C                     l2913:
  4316  053C  3001               	movlw	1
  4317  053D  07B2               	addwf	___fldiv@new_exp,f
  4318  053E  1803               	skipnc
  4319  053F  0AB3               	incf	___fldiv@new_exp+1,f
  4320  0540  3000               	movlw	0
  4321  0541  07B3               	addwf	___fldiv@new_exp+1,f
  4322  0542                     l2915:
  4323  0542  0833               	movf	___fldiv@new_exp+1,w
  4324  0543  3A80               	xorlw	128
  4325  0544  00FF               	movwf	btemp+1
  4326  0545  3080               	movlw	128
  4327  0546  027F               	subwf	btemp+1,w
  4328  0547  1D03               	skipz
  4329  0548  2D4B               	goto	u3855
  4330  0549  30FF               	movlw	255
  4331  054A  0232               	subwf	___fldiv@new_exp,w
  4332  054B                     u3855:
  4333  054B  1C03               	skipc
  4334  054C  2D4E               	goto	u3851
  4335  054D  2D4F               	goto	u3850
  4336  054E                     u3851:
  4337  054E  2D5D               	goto	l2919
  4338  054F                     u3850:
  4339  054F                     l2917:
  4340  054F  30FF               	movlw	255
  4341  0550  1283               	bcf	3,5	;RP0=0, select bank0
  4342  0551  1303               	bcf	3,6	;RP1=0, select bank0
  4343  0552  00B2               	movwf	___fldiv@new_exp
  4344  0553  3000               	movlw	0
  4345  0554  00B3               	movwf	___fldiv@new_exp+1
  4346  0555  3000               	movlw	0
  4347  0556  00A7               	movwf	___fldiv@b+3
  4348  0557  3000               	movlw	0
  4349  0558  00A6               	movwf	___fldiv@b+2
  4350  0559  3000               	movlw	0
  4351  055A  00A5               	movwf	___fldiv@b+1
  4352  055B  3000               	movlw	0
  4353  055C  00A4               	movwf	___fldiv@b
  4354  055D                     l2919:
  4355  055D  1283               	bcf	3,5	;RP0=0, select bank0
  4356  055E  1303               	bcf	3,6	;RP1=0, select bank0
  4357  055F  0833               	movf	___fldiv@new_exp+1,w
  4358  0560  3A80               	xorlw	128
  4359  0561  00FF               	movwf	btemp+1
  4360  0562  3080               	movlw	128
  4361  0563  027F               	subwf	btemp+1,w
  4362  0564  1D03               	skipz
  4363  0565  2D68               	goto	u3865
  4364  0566  3001               	movlw	1
  4365  0567  0232               	subwf	___fldiv@new_exp,w
  4366  0568                     u3865:
  4367  0568  1803               	skipnc
  4368  0569  2D6B               	goto	u3861
  4369  056A  2D6C               	goto	u3860
  4370  056B                     u3861:
  4371  056B  2D79               	goto	l724
  4372  056C                     u3860:
  4373  056C                     l2921:
  4374  056C  1283               	bcf	3,5	;RP0=0, select bank0
  4375  056D  1303               	bcf	3,6	;RP1=0, select bank0
  4376  056E  01B2               	clrf	___fldiv@new_exp
  4377  056F  01B3               	clrf	___fldiv@new_exp+1
  4378  0570                     l2923:
  4379  0570  3000               	movlw	0
  4380  0571  00A7               	movwf	___fldiv@b+3
  4381  0572  3000               	movlw	0
  4382  0573  00A6               	movwf	___fldiv@b+2
  4383  0574  3000               	movlw	0
  4384  0575  00A5               	movwf	___fldiv@b+1
  4385  0576  3000               	movlw	0
  4386  0577  00A4               	movwf	___fldiv@b
  4387  0578                     l2925:
  4388  0578  01B1               	clrf	___fldiv@sign
  4389  0579                     l724:
  4390  0579  1283               	bcf	3,5	;RP0=0, select bank0
  4391  057A  1303               	bcf	3,6	;RP1=0, select bank0
  4392  057B  0832               	movf	___fldiv@new_exp,w
  4393  057C  00A8               	movwf	??___fldiv
  4394  057D  0828               	movf	??___fldiv,w
  4395  057E  00B8               	movwf	___fldiv@bexp
  4396  057F                     l2927:
  4397  057F  1C38               	btfss	___fldiv@bexp,0
  4398  0580  2D82               	goto	u3871
  4399  0581  2D83               	goto	u3870
  4400  0582                     u3871:
  4401  0582  2D85               	goto	l2931
  4402  0583                     u3870:
  4403  0583                     l2929:
  4404  0583  17A6               	bsf	___fldiv@b+2,7
  4405  0584  2D89               	goto	l726
  4406  0585                     l2931:
  4407  0585  307F               	movlw	127
  4408  0586  00A8               	movwf	??___fldiv
  4409  0587  0828               	movf	??___fldiv,w
  4410  0588  05A6               	andwf	___fldiv@b+2,f
  4411  0589                     l726:
  4412  0589  0838               	movf	___fldiv@bexp,w
  4413  058A  00A8               	movwf	??___fldiv
  4414  058B  1003               	clrc
  4415  058C  0C28               	rrf	??___fldiv,w
  4416  058D  00A9               	movwf	??___fldiv+1
  4417  058E  0829               	movf	??___fldiv+1,w
  4418  058F  00A7               	movwf	___fldiv@b+3
  4419  0590  0831               	movf	___fldiv@sign,w
  4420  0591  00A8               	movwf	??___fldiv
  4421  0592  0828               	movf	??___fldiv,w
  4422  0593  04A7               	iorwf	___fldiv@b+3,f
  4423  0594  2C2D               	goto	l2839
  4424  0595                     l704:
  4425  0595  0008               	return
  4426  0596                     __end_of___fldiv:
  4427                           
  4428                           	psect	text12
  4429  0B2D                     __ptext12:	
  4430 ;; *************** function _Lcd_Write_String *****************
  4431 ;; Defined at:
  4432 ;;		line 95 in file "./lcd.h"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  a               1    wreg     PTR unsigned char 
  4435 ;;		 -> main@str(16), 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  a               1    8[BANK0 ] PTR unsigned char 
  4438 ;;		 -> main@str(16), 
  4439 ;;  i               2    6[BANK0 ] int 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       0       0       0       0
  4450 ;;      Locals:         0       3       0       0       0
  4451 ;;      Temps:          0       1       0       0       0
  4452 ;;      Totals:         0       4       0       0       0
  4453 ;;Total ram usage:        4 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 3
  4456 ;; This function calls:
  4457 ;;		_Lcd_Write_Char
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function _Lcd_Write_String
  4465  0B2D                     _Lcd_Write_String:
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4469                           ;Lcd_Write_String@a stored from wreg
  4470  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0B2F  00A8               	movwf	Lcd_Write_String@a
  4473  0B30                     l3153:
  4474                           
  4475                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  4476  0B30  01A6               	clrf	Lcd_Write_String@i
  4477  0B31  01A7               	clrf	Lcd_Write_String@i+1
  4478  0B32  2B46               	goto	l3159
  4479  0B33                     l3155:
  4480                           
  4481                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  4482  0B33  0826               	movf	Lcd_Write_String@i,w
  4483  0B34  0728               	addwf	Lcd_Write_String@a,w
  4484  0B35  00A5               	movwf	??_Lcd_Write_String
  4485  0B36  0825               	movf	??_Lcd_Write_String,w
  4486  0B37  0084               	movwf	4
  4487  0B38  0800               	movf	0,w
  4488  0B39  120A  158A  23DE  120A  158A  	fcall	_Lcd_Write_Char
  4489  0B3E                     l3157:
  4490  0B3E  3001               	movlw	1
  4491  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0B41  07A6               	addwf	Lcd_Write_String@i,f
  4494  0B42  1803               	skipnc
  4495  0B43  0AA7               	incf	Lcd_Write_String@i+1,f
  4496  0B44  3000               	movlw	0
  4497  0B45  07A7               	addwf	Lcd_Write_String@i+1,f
  4498  0B46                     l3159:
  4499  0B46  0826               	movf	Lcd_Write_String@i,w
  4500  0B47  0728               	addwf	Lcd_Write_String@a,w
  4501  0B48  00A5               	movwf	??_Lcd_Write_String
  4502  0B49  0825               	movf	??_Lcd_Write_String,w
  4503  0B4A  0084               	movwf	4
  4504  0B4B  1383               	bcf	3,7	;select IRP bank0
  4505  0B4C  0800               	movf	0,w
  4506  0B4D  1D03               	btfss	3,2
  4507  0B4E  2B50               	goto	u4431
  4508  0B4F  2B51               	goto	u4430
  4509  0B50                     u4431:
  4510  0B50  2B33               	goto	l3155
  4511  0B51                     u4430:
  4512  0B51                     l151:
  4513  0B51  0008               	return
  4514  0B52                     __end_of_Lcd_Write_String:
  4515                           
  4516                           	psect	text13
  4517  0BDE                     __ptext13:	
  4518 ;; *************** function _Lcd_Write_Char *****************
  4519 ;; Defined at:
  4520 ;;		line 79 in file "./lcd.h"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  a               1    wreg     unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  a               1    4[BANK0 ] unsigned char 
  4525 ;;  y               1    3[BANK0 ] unsigned char 
  4526 ;;  temp            1    2[BANK0 ] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0, pclath, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4536 ;;      Params:         0       0       0       0       0
  4537 ;;      Locals:         0       3       0       0       0
  4538 ;;      Temps:          0       1       0       0       0
  4539 ;;      Totals:         0       4       0       0       0
  4540 ;;Total ram usage:        4 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 2
  4543 ;; This function calls:
  4544 ;;		_Lcd_Port
  4545 ;; This function is called by:
  4546 ;;		_Lcd_Write_String
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           
  4551                           ;psect for function _Lcd_Write_Char
  4552  0BDE                     _Lcd_Write_Char:
  4553                           
  4554                           ;incstack = 0
  4555                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4556                           ;Lcd_Write_Char@a stored from wreg
  4557  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0BE0  00A4               	movwf	Lcd_Write_Char@a
  4560  0BE1                     l2633:
  4561                           
  4562                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  4563  0BE1  0824               	movf	Lcd_Write_Char@a,w
  4564  0BE2  390F               	andlw	15
  4565  0BE3  00A1               	movwf	??_Lcd_Write_Char
  4566  0BE4  0821               	movf	??_Lcd_Write_Char,w
  4567  0BE5  00A2               	movwf	Lcd_Write_Char@temp
  4568                           
  4569                           ;./lcd.h: 83:    y = a&0xF0;
  4570  0BE6  0824               	movf	Lcd_Write_Char@a,w
  4571  0BE7  39F0               	andlw	240
  4572  0BE8  00A1               	movwf	??_Lcd_Write_Char
  4573  0BE9  0821               	movf	??_Lcd_Write_Char,w
  4574  0BEA  00A3               	movwf	Lcd_Write_Char@y
  4575  0BEB                     l2635:
  4576                           
  4577                           ;./lcd.h: 84:    RD7 = 1;
  4578  0BEB  1788               	bsf	8,7	;volatile
  4579  0BEC                     l2637:
  4580                           
  4581                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  4582  0BEC  0823               	movf	Lcd_Write_Char@y,w
  4583  0BED  00A1               	movwf	??_Lcd_Write_Char
  4584  0BEE  3004               	movlw	4
  4585  0BEF                     u3215:
  4586  0BEF  1003               	clrc
  4587  0BF0  0CA1               	rrf	??_Lcd_Write_Char,f
  4588  0BF1  3EFF               	addlw	-1
  4589  0BF2  1D03               	skipz
  4590  0BF3  2BEF               	goto	u3215
  4591  0BF4  0821               	movf	??_Lcd_Write_Char,w
  4592  0BF5  120A  158A  230D  120A  158A  	fcall	_Lcd_Port
  4593  0BFA                     l2639:
  4594                           
  4595                           ;./lcd.h: 86:    RD6 = 1;
  4596  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  4597  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  4598  0BFC  1708               	bsf	8,6	;volatile
  4599  0BFD                     l2641:
  4600                           
  4601                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  4602  0BFD  3034               	movlw	52
  4603  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0C00  00A1               	movwf	??_Lcd_Write_Char
  4606  0C01                     u4617:
  4607  0C01  0BA1               	decfsz	??_Lcd_Write_Char,f
  4608  0C02  2C01               	goto	u4617
  4609  0C03  0000               	nop
  4610  0C04                     l2643:
  4611                           
  4612                           ;./lcd.h: 88:    RD6 = 0;
  4613  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0C06  1308               	bcf	8,6	;volatile
  4616  0C07                     l2645:
  4617                           
  4618                           ;./lcd.h: 89:    Lcd_Port(temp);
  4619  0C07  0822               	movf	Lcd_Write_Char@temp,w
  4620  0C08  120A  158A  230D  120A  158A  	fcall	_Lcd_Port
  4621  0C0D                     l2647:
  4622                           
  4623                           ;./lcd.h: 90:    RD6 = 1;
  4624  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  4625  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  4626  0C0F  1708               	bsf	8,6	;volatile
  4627  0C10                     l2649:
  4628                           
  4629                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  4630  0C10  3034               	movlw	52
  4631  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  4633  0C13  00A1               	movwf	??_Lcd_Write_Char
  4634  0C14                     u4627:
  4635  0C14  0BA1               	decfsz	??_Lcd_Write_Char,f
  4636  0C15  2C14               	goto	u4627
  4637  0C16  0000               	nop
  4638  0C17                     l2651:
  4639                           
  4640                           ;./lcd.h: 92:    RD6 = 0;
  4641  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  4642  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  4643  0C19  1308               	bcf	8,6	;volatile
  4644  0C1A                     l145:
  4645  0C1A  0008               	return
  4646  0C1B                     __end_of_Lcd_Write_Char:
  4647                           
  4648                           	psect	text14
  4649  0C61                     __ptext14:	
  4650 ;; *************** function _Lcd_Set_Cursor *****************
  4651 ;; Defined at:
  4652 ;;		line 39 in file "./lcd.h"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  a               1    wreg     unsigned char 
  4655 ;;  b               1    4[BANK0 ] unsigned char 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  a               1    7[BANK0 ] unsigned char 
  4658 ;;  temp            1   10[BANK0 ] unsigned char 
  4659 ;;  y               1    9[BANK0 ] unsigned char 
  4660 ;;  z               1    8[BANK0 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4670 ;;      Params:         0       1       0       0       0
  4671 ;;      Locals:         0       4       0       0       0
  4672 ;;      Temps:          0       2       0       0       0
  4673 ;;      Totals:         0       7       0       0       0
  4674 ;;Total ram usage:        7 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 3
  4677 ;; This function calls:
  4678 ;;		_Lcd_Cmd
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _Lcd_Set_Cursor
  4686  0C61                     _Lcd_Set_Cursor:
  4687                           
  4688                           ;incstack = 0
  4689                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4690                           ;Lcd_Set_Cursor@a stored from wreg
  4691  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  4692  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  4693  0C63  00A7               	movwf	Lcd_Set_Cursor@a
  4694  0C64                     l3123:
  4695                           
  4696                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  4697  0C64  0327               	decf	Lcd_Set_Cursor@a,w
  4698  0C65  1D03               	btfss	3,2
  4699  0C66  2C68               	goto	u4391
  4700  0C67  2C69               	goto	u4390
  4701  0C68                     u4391:
  4702  0C68  2C8E               	goto	l3133
  4703  0C69                     u4390:
  4704  0C69                     l3125:
  4705                           
  4706                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  4707  0C69  0824               	movf	Lcd_Set_Cursor@b,w
  4708  0C6A  3E7F               	addlw	127
  4709  0C6B  00A5               	movwf	??_Lcd_Set_Cursor
  4710  0C6C  0825               	movf	??_Lcd_Set_Cursor,w
  4711  0C6D  00AA               	movwf	Lcd_Set_Cursor@temp
  4712                           
  4713                           ;./lcd.h: 45:   z = temp>>4;
  4714  0C6E  082A               	movf	Lcd_Set_Cursor@temp,w
  4715  0C6F  00A5               	movwf	??_Lcd_Set_Cursor
  4716  0C70  3004               	movlw	4
  4717  0C71                     u4405:
  4718  0C71  1003               	clrc
  4719  0C72  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4720  0C73  3EFF               	addlw	-1
  4721  0C74  1D03               	skipz
  4722  0C75  2C71               	goto	u4405
  4723  0C76  0825               	movf	??_Lcd_Set_Cursor,w
  4724  0C77  00A6               	movwf	??_Lcd_Set_Cursor+1
  4725  0C78  0826               	movf	??_Lcd_Set_Cursor+1,w
  4726  0C79  00A8               	movwf	Lcd_Set_Cursor@z
  4727  0C7A                     l3127:
  4728                           
  4729                           ;./lcd.h: 46:   y = temp & 0x0F;
  4730  0C7A  082A               	movf	Lcd_Set_Cursor@temp,w
  4731  0C7B  390F               	andlw	15
  4732  0C7C  00A5               	movwf	??_Lcd_Set_Cursor
  4733  0C7D  0825               	movf	??_Lcd_Set_Cursor,w
  4734  0C7E  00A9               	movwf	Lcd_Set_Cursor@y
  4735  0C7F                     l3129:
  4736                           
  4737                           ;./lcd.h: 47:   Lcd_Cmd(z);
  4738  0C7F  0828               	movf	Lcd_Set_Cursor@z,w
  4739  0C80  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4740  0C85                     l3131:
  4741                           
  4742                           ;./lcd.h: 48:   Lcd_Cmd(y);
  4743  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  4744  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  4745  0C87  0829               	movf	Lcd_Set_Cursor@y,w
  4746  0C88  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4747                           
  4748                           ;./lcd.h: 49:  }
  4749  0C8D  2CB8               	goto	l139
  4750  0C8E                     l3133:
  4751  0C8E  3002               	movlw	2
  4752  0C8F  0627               	xorwf	Lcd_Set_Cursor@a,w
  4753  0C90  1D03               	btfss	3,2
  4754  0C91  2C93               	goto	u4411
  4755  0C92  2C94               	goto	u4410
  4756  0C93                     u4411:
  4757  0C93  2CB8               	goto	l139
  4758  0C94                     u4410:
  4759  0C94                     l3135:
  4760                           
  4761                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  4762  0C94  0824               	movf	Lcd_Set_Cursor@b,w
  4763  0C95  3EBF               	addlw	191
  4764  0C96  00A5               	movwf	??_Lcd_Set_Cursor
  4765  0C97  0825               	movf	??_Lcd_Set_Cursor,w
  4766  0C98  00AA               	movwf	Lcd_Set_Cursor@temp
  4767                           
  4768                           ;./lcd.h: 53:   z = temp>>4;
  4769  0C99  082A               	movf	Lcd_Set_Cursor@temp,w
  4770  0C9A  00A5               	movwf	??_Lcd_Set_Cursor
  4771  0C9B  3004               	movlw	4
  4772  0C9C                     u4425:
  4773  0C9C  1003               	clrc
  4774  0C9D  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4775  0C9E  3EFF               	addlw	-1
  4776  0C9F  1D03               	skipz
  4777  0CA0  2C9C               	goto	u4425
  4778  0CA1  0825               	movf	??_Lcd_Set_Cursor,w
  4779  0CA2  00A6               	movwf	??_Lcd_Set_Cursor+1
  4780  0CA3  0826               	movf	??_Lcd_Set_Cursor+1,w
  4781  0CA4  00A8               	movwf	Lcd_Set_Cursor@z
  4782  0CA5                     l3137:
  4783                           
  4784                           ;./lcd.h: 54:   y = temp & 0x0F;
  4785  0CA5  082A               	movf	Lcd_Set_Cursor@temp,w
  4786  0CA6  390F               	andlw	15
  4787  0CA7  00A5               	movwf	??_Lcd_Set_Cursor
  4788  0CA8  0825               	movf	??_Lcd_Set_Cursor,w
  4789  0CA9  00A9               	movwf	Lcd_Set_Cursor@y
  4790  0CAA                     l3139:
  4791                           
  4792                           ;./lcd.h: 55:   Lcd_Cmd(z);
  4793  0CAA  0828               	movf	Lcd_Set_Cursor@z,w
  4794  0CAB  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4795  0CB0                     l3141:
  4796                           
  4797                           ;./lcd.h: 56:   Lcd_Cmd(y);
  4798  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  4799  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  4800  0CB2  0829               	movf	Lcd_Set_Cursor@y,w
  4801  0CB3  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4802  0CB8                     l139:
  4803  0CB8  0008               	return
  4804  0CB9                     __end_of_Lcd_Set_Cursor:
  4805                           
  4806                           	psect	text15
  4807  0CB9                     __ptext15:	
  4808 ;; *************** function _Lcd_Init *****************
  4809 ;; Defined at:
  4810 ;;		line 60 in file "./lcd.h"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, pclath, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4824 ;;      Params:         0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0
  4826 ;;      Temps:          0       2       0       0       0
  4827 ;;      Totals:         0       2       0       0       0
  4828 ;;Total ram usage:        2 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 3
  4831 ;; This function calls:
  4832 ;;		_Lcd_Cmd
  4833 ;;		_Lcd_Port
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _Lcd_Init
  4841  0CB9                     _Lcd_Init:
  4842  0CB9                     l3143:	
  4843                           ;incstack = 0
  4844                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4845                           
  4846                           
  4847                           ;./lcd.h: 62:   Lcd_Port(0x00);
  4848  0CB9  3000               	movlw	0
  4849  0CBA  120A  158A  230D  120A  158A  	fcall	_Lcd_Port
  4850  0CBF                     l3145:
  4851                           
  4852                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(16000000/4000.0)));
  4853  0CBF  3068               	movlw	104
  4854  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  4856  0CC2  00A5               	movwf	??_Lcd_Init+1
  4857  0CC3  30E3               	movlw	227
  4858  0CC4  00A4               	movwf	??_Lcd_Init
  4859  0CC5                     u4637:
  4860  0CC5  0BA4               	decfsz	??_Lcd_Init,f
  4861  0CC6  2CC5               	goto	u4637
  4862  0CC7  0BA5               	decfsz	??_Lcd_Init+1,f
  4863  0CC8  2CC5               	goto	u4637
  4864  0CC9  2CCA               	nop2
  4865  0CCA                     l3147:
  4866                           
  4867                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  4868  0CCA  3003               	movlw	3
  4869  0CCB  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4870                           
  4871                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(16000000/4000.0)));
  4872  0CD0  301A               	movlw	26
  4873  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  4874  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  4875  0CD3  00A5               	movwf	??_Lcd_Init+1
  4876  0CD4  30F7               	movlw	247
  4877  0CD5  00A4               	movwf	??_Lcd_Init
  4878  0CD6                     u4647:
  4879  0CD6  0BA4               	decfsz	??_Lcd_Init,f
  4880  0CD7  2CD6               	goto	u4647
  4881  0CD8  0BA5               	decfsz	??_Lcd_Init+1,f
  4882  0CD9  2CD6               	goto	u4647
  4883  0CDA  2CDB               	nop2
  4884  0CDB                     l3149:
  4885                           
  4886                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  4887  0CDB  3003               	movlw	3
  4888  0CDC  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4889  0CE1                     l3151:
  4890                           
  4891                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(16000000/4000.0)));
  4892  0CE1  303A               	movlw	58
  4893  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0CE4  00A5               	movwf	??_Lcd_Init+1
  4896  0CE5  3022               	movlw	34
  4897  0CE6  00A4               	movwf	??_Lcd_Init
  4898  0CE7                     u4657:
  4899  0CE7  0BA4               	decfsz	??_Lcd_Init,f
  4900  0CE8  2CE7               	goto	u4657
  4901  0CE9  0BA5               	decfsz	??_Lcd_Init+1,f
  4902  0CEA  2CE7               	goto	u4657
  4903  0CEB  0000               	nop
  4904                           
  4905                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  4906  0CEC  3003               	movlw	3
  4907  0CED  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4908                           
  4909                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  4910  0CF2  3002               	movlw	2
  4911  0CF3  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4912                           
  4913                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  4914  0CF8  3002               	movlw	2
  4915  0CF9  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4916                           
  4917                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  4918  0CFE  3008               	movlw	8
  4919  0CFF  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4920                           
  4921                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  4922  0D04  3000               	movlw	0
  4923  0D05  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4924                           
  4925                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  4926  0D0A  300C               	movlw	12
  4927  0D0B  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4928                           
  4929                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  4930  0D10  3000               	movlw	0
  4931  0D11  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4932                           
  4933                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  4934  0D16  3006               	movlw	6
  4935  0D17  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4936  0D1C                     l142:
  4937  0D1C  0008               	return
  4938  0D1D                     __end_of_Lcd_Init:
  4939                           
  4940                           	psect	text16
  4941  0AB7                     __ptext16:	
  4942 ;; *************** function _Lcd_Clear *****************
  4943 ;; Defined at:
  4944 ;;		line 33 in file "./lcd.h"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0, pclath, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 3
  4965 ;; This function calls:
  4966 ;;		_Lcd_Cmd
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _Lcd_Clear
  4974  0AB7                     _Lcd_Clear:
  4975  0AB7                     l3121:	
  4976                           ;incstack = 0
  4977                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4978                           
  4979                           
  4980                           ;./lcd.h: 35:  Lcd_Cmd(0);
  4981  0AB7  3000               	movlw	0
  4982  0AB8  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4983                           
  4984                           ;./lcd.h: 36:  Lcd_Cmd(1);
  4985  0ABD  3001               	movlw	1
  4986  0ABE  120A  158A  22F1  120A  158A  	fcall	_Lcd_Cmd
  4987  0AC3                     l133:
  4988  0AC3  0008               	return
  4989  0AC4                     __end_of_Lcd_Clear:
  4990                           
  4991                           	psect	text17
  4992  0AF1                     __ptext17:	
  4993 ;; *************** function _Lcd_Cmd *****************
  4994 ;; Defined at:
  4995 ;;		line 24 in file "./lcd.h"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  a               1    wreg     unsigned char 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  a               1    3[BANK0 ] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0, pclath, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5009 ;;      Params:         0       0       0       0       0
  5010 ;;      Locals:         0       1       0       0       0
  5011 ;;      Temps:          0       2       0       0       0
  5012 ;;      Totals:         0       3       0       0       0
  5013 ;;Total ram usage:        3 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 2
  5016 ;; This function calls:
  5017 ;;		_Lcd_Port
  5018 ;; This function is called by:
  5019 ;;		_Lcd_Clear
  5020 ;;		_Lcd_Set_Cursor
  5021 ;;		_Lcd_Init
  5022 ;;		_Lcd_Shift_Right
  5023 ;;		_Lcd_Shift_Left
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           
  5028                           ;psect for function _Lcd_Cmd
  5029  0AF1                     _Lcd_Cmd:
  5030                           
  5031                           ;incstack = 0
  5032                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5033                           ;Lcd_Cmd@a stored from wreg
  5034  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0AF3  00A3               	movwf	Lcd_Cmd@a
  5037  0AF4                     l2623:
  5038                           
  5039                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD7 = 0;
  5040  0AF4  1388               	bcf	8,7	;volatile
  5041  0AF5                     l2625:
  5042                           
  5043                           ;./lcd.h: 27:  Lcd_Port(a);
  5044  0AF5  0823               	movf	Lcd_Cmd@a,w
  5045  0AF6  120A  158A  230D  120A  158A  	fcall	_Lcd_Port
  5046  0AFB                     l2627:
  5047                           
  5048                           ;./lcd.h: 28:  RD6 = 1;
  5049  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  5050  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  5051  0AFD  1708               	bsf	8,6	;volatile
  5052  0AFE                     l2629:
  5053                           
  5054                           ;./lcd.h: 29:     _delay((unsigned long)((1000)*(16000000/4000000.0)));
  5055  0AFE  3006               	movlw	6
  5056  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5058  0B01  00A2               	movwf	??_Lcd_Cmd+1
  5059  0B02  302F               	movlw	47
  5060  0B03  00A1               	movwf	??_Lcd_Cmd
  5061  0B04                     u4667:
  5062  0B04  0BA1               	decfsz	??_Lcd_Cmd,f
  5063  0B05  2B04               	goto	u4667
  5064  0B06  0BA2               	decfsz	??_Lcd_Cmd+1,f
  5065  0B07  2B04               	goto	u4667
  5066  0B08  2B09               	nop2
  5067  0B09                     l2631:
  5068                           
  5069                           ;./lcd.h: 30:     RD6 = 0;
  5070  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0B0B  1308               	bcf	8,6	;volatile
  5073  0B0C                     l130:
  5074  0B0C  0008               	return
  5075  0B0D                     __end_of_Lcd_Cmd:
  5076                           
  5077                           	psect	text18
  5078  0B0D                     __ptext18:	
  5079 ;; *************** function _Lcd_Port *****************
  5080 ;; Defined at:
  5081 ;;		line 2 in file "./lcd.h"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  a               1    wreg     unsigned char 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  a               1    0[BANK0 ] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5095 ;;      Params:         0       0       0       0       0
  5096 ;;      Locals:         0       1       0       0       0
  5097 ;;      Temps:          0       0       0       0       0
  5098 ;;      Totals:         0       1       0       0       0
  5099 ;;Total ram usage:        1 bytes
  5100 ;; Hardware stack levels used: 1
  5101 ;; Hardware stack levels required when called: 1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_Lcd_Cmd
  5106 ;;		_Lcd_Init
  5107 ;;		_Lcd_Write_Char
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function _Lcd_Port
  5113  0B0D                     _Lcd_Port:
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _Lcd_Port: [wreg]
  5117                           ;Lcd_Port@a stored from wreg
  5118  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0B0F  00A0               	movwf	Lcd_Port@a
  5121  0B10                     l2599:
  5122                           
  5123                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
  5124  0B10  1C20               	btfss	Lcd_Port@a,0
  5125  0B11  2B13               	goto	u3141
  5126  0B12  2B14               	goto	u3140
  5127  0B13                     u3141:
  5128  0B13  2B16               	goto	l119
  5129  0B14                     u3140:
  5130  0B14                     l2601:
  5131                           
  5132                           ;./lcd.h: 5:   RD5 = 1;
  5133  0B14  1688               	bsf	8,5	;volatile
  5134  0B15  2B17               	goto	l120
  5135  0B16                     l119:	
  5136                           ;./lcd.h: 6:  else
  5137                           
  5138                           
  5139                           ;./lcd.h: 7:   RD5 = 0;
  5140  0B16  1288               	bcf	8,5	;volatile
  5141  0B17                     l120:
  5142                           
  5143                           ;./lcd.h: 9:  if(a & 2)
  5144  0B17  1CA0               	btfss	Lcd_Port@a,1
  5145  0B18  2B1A               	goto	u3151
  5146  0B19  2B1B               	goto	u3150
  5147  0B1A                     u3151:
  5148  0B1A  2B1D               	goto	l121
  5149  0B1B                     u3150:
  5150  0B1B                     l2603:
  5151                           
  5152                           ;./lcd.h: 10:   RD4 = 1;
  5153  0B1B  1608               	bsf	8,4	;volatile
  5154  0B1C  2B1E               	goto	l122
  5155  0B1D                     l121:	
  5156                           ;./lcd.h: 11:  else
  5157                           
  5158                           
  5159                           ;./lcd.h: 12:   RD4 = 0;
  5160  0B1D  1208               	bcf	8,4	;volatile
  5161  0B1E                     l122:
  5162                           
  5163                           ;./lcd.h: 14:  if(a & 4)
  5164  0B1E  1D20               	btfss	Lcd_Port@a,2
  5165  0B1F  2B21               	goto	u3161
  5166  0B20  2B22               	goto	u3160
  5167  0B21                     u3161:
  5168  0B21  2B24               	goto	l123
  5169  0B22                     u3160:
  5170  0B22                     l2605:
  5171                           
  5172                           ;./lcd.h: 15:   RD3 = 1;
  5173  0B22  1588               	bsf	8,3	;volatile
  5174  0B23  2B25               	goto	l124
  5175  0B24                     l123:	
  5176                           ;./lcd.h: 16:  else
  5177                           
  5178                           
  5179                           ;./lcd.h: 17:   RD3 = 0;
  5180  0B24  1188               	bcf	8,3	;volatile
  5181  0B25                     l124:
  5182                           
  5183                           ;./lcd.h: 19:  if(a & 8)
  5184  0B25  1DA0               	btfss	Lcd_Port@a,3
  5185  0B26  2B28               	goto	u3171
  5186  0B27  2B29               	goto	u3170
  5187  0B28                     u3171:
  5188  0B28  2B2B               	goto	l125
  5189  0B29                     u3170:
  5190  0B29                     l2607:
  5191                           
  5192                           ;./lcd.h: 20:   RD2 = 1;
  5193  0B29  1508               	bsf	8,2	;volatile
  5194  0B2A  2B2C               	goto	l127
  5195  0B2B                     l125:	
  5196                           ;./lcd.h: 21:  else
  5197                           
  5198                           
  5199                           ;./lcd.h: 22:   RD2 = 0;
  5200  0B2B  1108               	bcf	8,2	;volatile
  5201  0B2C                     l127:
  5202  0B2C  0008               	return
  5203  0B2D                     __end_of_Lcd_Port:
  5204                           
  5205                           	psect	text19
  5206  0E99                     __ptext19:	
  5207 ;; *************** function _Cal_PID *****************
  5208 ;; Defined at:
  5209 ;;		line 195 in file "main.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;		None
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;		None
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         0       0       0       0       0
  5224 ;;      Locals:         0       0       0       0       0
  5225 ;;      Temps:          0       2       0       0       0
  5226 ;;      Totals:         0       2       0       0       0
  5227 ;;Total ram usage:        2 bytes
  5228 ;; Hardware stack levels used: 1
  5229 ;; Hardware stack levels required when called: 2
  5230 ;; This function calls:
  5231 ;;		___awdiv
  5232 ;;		___wmul
  5233 ;; This function is called by:
  5234 ;;		_main
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           
  5239                           ;psect for function _Cal_PID
  5240  0E99                     _Cal_PID:
  5241  0E99                     l3177:	
  5242                           ;incstack = 0
  5243                           ; Regs used in _Cal_PID: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5244                           
  5245                           
  5246                           ;main.c: 197:     }
  5247  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0E9B  085C               	movf	_Temperature,w
  5250  0E9C  0262               	subwf	_setPoint,w
  5251  0E9D  00F7               	movwf	_PID_error
  5252  0E9E  085D               	movf	_Temperature+1,w
  5253  0E9F  1C03               	skipc
  5254  0EA0  0A5D               	incf	_Temperature+1,w
  5255  0EA1  0263               	subwf	_setPoint+1,w
  5256  0EA2  00F8               	movwf	_PID_error+1
  5257  0EA3                     l3179:
  5258                           
  5259                           ;main.c: 198: 
  5260  0EA3  0878               	movf	_PID_error+1,w
  5261  0EA4  3A80               	xorlw	128
  5262  0EA5  00FF               	movwf	btemp+1
  5263  0EA6  3080               	movlw	128
  5264  0EA7  027F               	subwf	btemp+1,w
  5265  0EA8  1D03               	skipz
  5266  0EA9  2EAC               	goto	u4475
  5267  0EAA  301F               	movlw	31
  5268  0EAB  0277               	subwf	_PID_error,w
  5269  0EAC                     u4475:
  5270  0EAC  1C03               	skipc
  5271  0EAD  2EAF               	goto	u4471
  5272  0EAE  2EB0               	goto	u4470
  5273  0EAF                     u4471:
  5274  0EAF  2EB2               	goto	l3183
  5275  0EB0                     u4470:
  5276  0EB0                     l3181:
  5277                           
  5278                           ;main.c: 199:     if(TMR0IF == 1)
  5279  0EB0  01F5               	clrf	_PID_i
  5280  0EB1  01F6               	clrf	_PID_i+1
  5281  0EB2                     l3183:
  5282                           
  5283                           ;main.c: 200:     {
  5284  0EB2  0878               	movf	_PID_error+1,w
  5285  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5286  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5287  0EB5  00A1               	movwf	___wmul@multiplier+1
  5288  0EB6  0877               	movf	_PID_error,w
  5289  0EB7  00A0               	movwf	___wmul@multiplier
  5290  0EB8  302F               	movlw	47
  5291  0EB9  00A2               	movwf	___wmul@multiplicand
  5292  0EBA  3001               	movlw	1
  5293  0EBB  00A3               	movwf	___wmul@multiplicand+1
  5294  0EBC  120A  158A  2352  120A  158A  	fcall	___wmul
  5295  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  5296  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  5297  0EC3  0821               	movf	?___wmul+1,w
  5298  0EC4  00D7               	movwf	_PID_p+1
  5299  0EC5  0820               	movf	?___wmul,w
  5300  0EC6  00D6               	movwf	_PID_p
  5301  0EC7                     l3185:
  5302                           
  5303                           ;main.c: 201:         TMR0 = 0x38;
  5304  0EC7  0878               	movf	_PID_error+1,w
  5305  0EC8  00A1               	movwf	___wmul@multiplier+1
  5306  0EC9  0877               	movf	_PID_error,w
  5307  0ECA  00A0               	movwf	___wmul@multiplier
  5308  0ECB  3007               	movlw	7
  5309  0ECC  00A2               	movwf	___wmul@multiplicand
  5310  0ECD  3000               	movlw	0
  5311  0ECE  00A3               	movwf	___wmul@multiplicand+1
  5312  0ECF  120A  158A  2352  120A  158A  	fcall	___wmul
  5313  0ED4  0875               	movf	_PID_i,w
  5314  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5315  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5316  0ED7  0720               	addwf	?___wmul,w
  5317  0ED8  00F5               	movwf	_PID_i
  5318  0ED9  0876               	movf	_PID_i+1,w
  5319  0EDA  1803               	skipnc
  5320  0EDB  0A76               	incf	_PID_i+1,w
  5321  0EDC  0721               	addwf	?___wmul+1,w
  5322  0EDD  00F6               	movwf	_PID_i+1
  5323  0EDE                     l3187:
  5324                           
  5325                           ;main.c: 202:         cnt0++;
  5326  0EDE  085A               	movf	_previous_error,w
  5327  0EDF  0277               	subwf	_PID_error,w
  5328  0EE0  00D4               	movwf	_PID_d
  5329  0EE1  085B               	movf	_previous_error+1,w
  5330  0EE2  1C03               	skipc
  5331  0EE3  0A5B               	incf	_previous_error+1,w
  5332  0EE4  0278               	subwf	_PID_error+1,w
  5333  0EE5  00D5               	movwf	_PID_d+1
  5334  0EE6                     l3189:
  5335                           
  5336                           ;main.c: 203:         if(cnt0 == tmp)
  5337  0EE6  0875               	movf	_PID_i,w
  5338  0EE7  0756               	addwf	_PID_p,w
  5339  0EE8  00A9               	movwf	??_Cal_PID
  5340  0EE9  0876               	movf	_PID_i+1,w
  5341  0EEA  1803               	skipnc
  5342  0EEB  0A76               	incf	_PID_i+1,w
  5343  0EEC  0757               	addwf	_PID_p+1,w
  5344  0EED  00AA               	movwf	??_Cal_PID+1
  5345  0EEE  0854               	movf	_PID_d,w
  5346  0EEF  0729               	addwf	??_Cal_PID,w
  5347  0EF0  00D8               	movwf	_PID_value
  5348  0EF1  0855               	movf	_PID_d+1,w
  5349  0EF2  1803               	skipnc
  5350  0EF3  0A55               	incf	_PID_d+1,w
  5351  0EF4  072A               	addwf	??_Cal_PID+1,w
  5352  0EF5  00D9               	movwf	_PID_value+1
  5353  0EF6                     l3191:
  5354                           
  5355                           ;main.c: 204:         {
  5356  0EF6  0878               	movf	_PID_error+1,w
  5357  0EF7  00DB               	movwf	_previous_error+1
  5358  0EF8  0877               	movf	_PID_error,w
  5359  0EF9  00DA               	movwf	_previous_error
  5360  0EFA                     l3193:
  5361                           
  5362                           ;main.c: 205:             RB7 = 1;
  5363  0EFA  0859               	movf	_PID_value+1,w
  5364  0EFB  3A80               	xorlw	128
  5365  0EFC  00FF               	movwf	btemp+1
  5366  0EFD  3086               	movlw	134
  5367  0EFE  027F               	subwf	btemp+1,w
  5368  0EFF  1D03               	skipz
  5369  0F00  2F03               	goto	u4485
  5370  0F01  3040               	movlw	64
  5371  0F02  0258               	subwf	_PID_value,w
  5372  0F03                     u4485:
  5373  0F03  1803               	skipnc
  5374  0F04  2F06               	goto	u4481
  5375  0F05  2F07               	goto	u4480
  5376  0F06                     u4481:
  5377  0F06  2F0D               	goto	l3197
  5378  0F07                     u4480:
  5379  0F07                     l3195:
  5380                           
  5381                           ;main.c: 206:             _delay((unsigned long)((10)*(16000000/4000000.0)));
  5382  0F07  3040               	movlw	64
  5383  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5384  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5385  0F0A  00D8               	movwf	_PID_value
  5386  0F0B  3006               	movlw	6
  5387  0F0C  00D9               	movwf	_PID_value+1
  5388  0F0D                     l3197:
  5389                           
  5390                           ;main.c: 207:             RB7 = 0;
  5391  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0F0F  0859               	movf	_PID_value+1,w
  5394  0F10  3A80               	xorlw	128
  5395  0F11  00FF               	movwf	btemp+1
  5396  0F12  30A0               	movlw	160
  5397  0F13  027F               	subwf	btemp+1,w
  5398  0F14  1D03               	skipz
  5399  0F15  2F18               	goto	u4495
  5400  0F16  30D1               	movlw	209
  5401  0F17  0258               	subwf	_PID_value,w
  5402  0F18                     u4495:
  5403  0F18  1C03               	skipc
  5404  0F19  2F1B               	goto	u4491
  5405  0F1A  2F1C               	goto	u4490
  5406  0F1B                     u4491:
  5407  0F1B  2F22               	goto	l3201
  5408  0F1C                     u4490:
  5409  0F1C                     l3199:
  5410                           
  5411                           ;main.c: 208:             cnt0 = 0;
  5412  0F1C  30D0               	movlw	208
  5413  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0F1F  00D8               	movwf	_PID_value
  5416  0F20  3020               	movlw	32
  5417  0F21  00D9               	movwf	_PID_value+1
  5418  0F22                     l3201:
  5419                           
  5420                           ;main.c: 209:             TMR0IE = 0;
  5421  0F22  3010               	movlw	16
  5422  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  5423  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  5424  0F25  00A9               	movwf	??_Cal_PID
  5425  0F26  3027               	movlw	39
  5426  0F27  00AA               	movwf	??_Cal_PID+1
  5427  0F28  0858               	movf	_PID_value,w
  5428  0F29  0229               	subwf	??_Cal_PID,w
  5429  0F2A  00D8               	movwf	_PID_value
  5430  0F2B  0859               	movf	_PID_value+1,w
  5431  0F2C  1C03               	skipc
  5432  0F2D  0A59               	incf	_PID_value+1,w
  5433  0F2E  022A               	subwf	??_Cal_PID+1,w
  5434  0F2F  00D9               	movwf	_PID_value+1
  5435  0F30                     l3203:
  5436                           
  5437                           ;main.c: 210:         }
  5438  0F30  3064               	movlw	100
  5439  0F31  00A0               	movwf	___awdiv@divisor
  5440  0F32  3000               	movlw	0
  5441  0F33  00A1               	movwf	___awdiv@divisor+1
  5442  0F34  0859               	movf	_PID_value+1,w
  5443  0F35  00A3               	movwf	___awdiv@dividend+1
  5444  0F36  0858               	movf	_PID_value,w
  5445  0F37  00A2               	movwf	___awdiv@dividend
  5446  0F38  120A  158A  251D  120A  158A  	fcall	___awdiv
  5447  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0F3F  0821               	movf	?___awdiv+1,w
  5450  0F40  00CF               	movwf	_tmp+1
  5451  0F41  0820               	movf	?___awdiv,w
  5452  0F42  00CE               	movwf	_tmp
  5453  0F43                     l215:
  5454  0F43  0008               	return
  5455  0F44                     __end_of_Cal_PID:
  5456                           
  5457                           	psect	text20
  5458  0B52                     __ptext20:	
  5459 ;; *************** function ___wmul *****************
  5460 ;; Defined at:
  5461 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5464 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  product         2    4[BANK0 ] unsigned int 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  2    0[BANK0 ] unsigned int 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5476 ;;      Params:         0       4       0       0       0
  5477 ;;      Locals:         0       2       0       0       0
  5478 ;;      Temps:          0       0       0       0       0
  5479 ;;      Totals:         0       6       0       0       0
  5480 ;;Total ram usage:        6 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 1
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_Cal_PID
  5487 ;;		_map
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function ___wmul
  5493  0B52                     ___wmul:
  5494  0B52                     l2653:	
  5495                           ;incstack = 0
  5496                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5497                           
  5498  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  5499  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  5500  0B54  01A4               	clrf	___wmul@product
  5501  0B55  01A5               	clrf	___wmul@product+1
  5502  0B56                     l2655:
  5503  0B56  1C20               	btfss	___wmul@multiplier,0
  5504  0B57  2B59               	goto	u3221
  5505  0B58  2B5A               	goto	u3220
  5506  0B59                     u3221:
  5507  0B59  2B60               	goto	l353
  5508  0B5A                     u3220:
  5509  0B5A                     l2657:
  5510  0B5A  0822               	movf	___wmul@multiplicand,w
  5511  0B5B  07A4               	addwf	___wmul@product,f
  5512  0B5C  1803               	skipnc
  5513  0B5D  0AA5               	incf	___wmul@product+1,f
  5514  0B5E  0823               	movf	___wmul@multiplicand+1,w
  5515  0B5F  07A5               	addwf	___wmul@product+1,f
  5516  0B60                     l353:
  5517  0B60  3001               	movlw	1
  5518  0B61                     u3235:
  5519  0B61  1003               	clrc
  5520  0B62  0DA2               	rlf	___wmul@multiplicand,f
  5521  0B63  0DA3               	rlf	___wmul@multiplicand+1,f
  5522  0B64  3EFF               	addlw	-1
  5523  0B65  1D03               	skipz
  5524  0B66  2B61               	goto	u3235
  5525  0B67                     l2659:
  5526  0B67  3001               	movlw	1
  5527  0B68                     u3245:
  5528  0B68  1003               	clrc
  5529  0B69  0CA1               	rrf	___wmul@multiplier+1,f
  5530  0B6A  0CA0               	rrf	___wmul@multiplier,f
  5531  0B6B  3EFF               	addlw	-1
  5532  0B6C  1D03               	skipz
  5533  0B6D  2B68               	goto	u3245
  5534  0B6E                     l2661:
  5535  0B6E  0820               	movf	___wmul@multiplier,w
  5536  0B6F  0421               	iorwf	___wmul@multiplier+1,w
  5537  0B70  1D03               	btfss	3,2
  5538  0B71  2B73               	goto	u3251
  5539  0B72  2B74               	goto	u3250
  5540  0B73                     u3251:
  5541  0B73  2B56               	goto	l2655
  5542  0B74                     u3250:
  5543  0B74                     l2663:
  5544  0B74  0825               	movf	___wmul@product+1,w
  5545  0B75  00A1               	movwf	?___wmul+1
  5546  0B76  0824               	movf	___wmul@product,w
  5547  0B77  00A0               	movwf	?___wmul
  5548  0B78                     l355:
  5549  0B78  0008               	return
  5550  0B79                     __end_of___wmul:
  5551                           
  5552                           	psect	text21
  5553  0D1D                     __ptext21:	
  5554 ;; *************** function ___awdiv *****************
  5555 ;; Defined at:
  5556 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  divisor         2    0[BANK0 ] int 
  5559 ;;  dividend        2    2[BANK0 ] int 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  quotient        2    7[BANK0 ] int 
  5562 ;;  sign            1    6[BANK0 ] unsigned char 
  5563 ;;  counter         1    5[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  2    0[BANK0 ] int 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         0       4       0       0       0
  5574 ;;      Locals:         0       4       0       0       0
  5575 ;;      Temps:          0       1       0       0       0
  5576 ;;      Totals:         0       9       0       0       0
  5577 ;;Total ram usage:        9 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 1
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_Cal_PID
  5584 ;;		_map
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function ___awdiv
  5590  0D1D                     ___awdiv:
  5591  0D1D                     l2667:	
  5592                           ;incstack = 0
  5593                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5594                           
  5595  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  5596  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  5597  0D1F  01A6               	clrf	___awdiv@sign
  5598  0D20                     l2669:
  5599  0D20  1FA1               	btfss	___awdiv@divisor+1,7
  5600  0D21  2D23               	goto	u3261
  5601  0D22  2D24               	goto	u3260
  5602  0D23                     u3261:
  5603  0D23  2D2B               	goto	l2675
  5604  0D24                     u3260:
  5605  0D24                     l2671:
  5606  0D24  09A0               	comf	___awdiv@divisor,f
  5607  0D25  09A1               	comf	___awdiv@divisor+1,f
  5608  0D26  0AA0               	incf	___awdiv@divisor,f
  5609  0D27  1903               	skipnz
  5610  0D28  0AA1               	incf	___awdiv@divisor+1,f
  5611  0D29                     l2673:
  5612  0D29  01A6               	clrf	___awdiv@sign
  5613  0D2A  0AA6               	incf	___awdiv@sign,f
  5614  0D2B                     l2675:
  5615  0D2B  1FA3               	btfss	___awdiv@dividend+1,7
  5616  0D2C  2D2E               	goto	u3271
  5617  0D2D  2D2F               	goto	u3270
  5618  0D2E                     u3271:
  5619  0D2E  2D38               	goto	l2681
  5620  0D2F                     u3270:
  5621  0D2F                     l2677:
  5622  0D2F  09A2               	comf	___awdiv@dividend,f
  5623  0D30  09A3               	comf	___awdiv@dividend+1,f
  5624  0D31  0AA2               	incf	___awdiv@dividend,f
  5625  0D32  1903               	skipnz
  5626  0D33  0AA3               	incf	___awdiv@dividend+1,f
  5627  0D34                     l2679:
  5628  0D34  3001               	movlw	1
  5629  0D35  00A4               	movwf	??___awdiv
  5630  0D36  0824               	movf	??___awdiv,w
  5631  0D37  06A6               	xorwf	___awdiv@sign,f
  5632  0D38                     l2681:
  5633  0D38  01A7               	clrf	___awdiv@quotient
  5634  0D39  01A8               	clrf	___awdiv@quotient+1
  5635  0D3A                     l2683:
  5636  0D3A  0820               	movf	___awdiv@divisor,w
  5637  0D3B  0421               	iorwf	___awdiv@divisor+1,w
  5638  0D3C  1903               	btfsc	3,2
  5639  0D3D  2D3F               	goto	u3281
  5640  0D3E  2D40               	goto	u3280
  5641  0D3F                     u3281:
  5642  0D3F  2D77               	goto	l2703
  5643  0D40                     u3280:
  5644  0D40                     l2685:
  5645  0D40  01A5               	clrf	___awdiv@counter
  5646  0D41  0AA5               	incf	___awdiv@counter,f
  5647  0D42  2D4E               	goto	l2691
  5648  0D43                     l2687:
  5649  0D43  3001               	movlw	1
  5650  0D44                     u3295:
  5651  0D44  1003               	clrc
  5652  0D45  0DA0               	rlf	___awdiv@divisor,f
  5653  0D46  0DA1               	rlf	___awdiv@divisor+1,f
  5654  0D47  3EFF               	addlw	-1
  5655  0D48  1D03               	skipz
  5656  0D49  2D44               	goto	u3295
  5657  0D4A                     l2689:
  5658  0D4A  3001               	movlw	1
  5659  0D4B  00A4               	movwf	??___awdiv
  5660  0D4C  0824               	movf	??___awdiv,w
  5661  0D4D  07A5               	addwf	___awdiv@counter,f
  5662  0D4E                     l2691:
  5663  0D4E  1FA1               	btfss	___awdiv@divisor+1,7
  5664  0D4F  2D51               	goto	u3301
  5665  0D50  2D52               	goto	u3300
  5666  0D51                     u3301:
  5667  0D51  2D43               	goto	l2687
  5668  0D52                     u3300:
  5669  0D52                     l2693:
  5670  0D52  3001               	movlw	1
  5671  0D53                     u3315:
  5672  0D53  1003               	clrc
  5673  0D54  0DA7               	rlf	___awdiv@quotient,f
  5674  0D55  0DA8               	rlf	___awdiv@quotient+1,f
  5675  0D56  3EFF               	addlw	-1
  5676  0D57  1D03               	skipz
  5677  0D58  2D53               	goto	u3315
  5678  0D59  0821               	movf	___awdiv@divisor+1,w
  5679  0D5A  0223               	subwf	___awdiv@dividend+1,w
  5680  0D5B  1D03               	skipz
  5681  0D5C  2D5F               	goto	u3325
  5682  0D5D  0820               	movf	___awdiv@divisor,w
  5683  0D5E  0222               	subwf	___awdiv@dividend,w
  5684  0D5F                     u3325:
  5685  0D5F  1C03               	skipc
  5686  0D60  2D62               	goto	u3321
  5687  0D61  2D63               	goto	u3320
  5688  0D62                     u3321:
  5689  0D62  2D6A               	goto	l2699
  5690  0D63                     u3320:
  5691  0D63                     l2695:
  5692  0D63  0820               	movf	___awdiv@divisor,w
  5693  0D64  02A2               	subwf	___awdiv@dividend,f
  5694  0D65  0821               	movf	___awdiv@divisor+1,w
  5695  0D66  1C03               	skipc
  5696  0D67  03A3               	decf	___awdiv@dividend+1,f
  5697  0D68  02A3               	subwf	___awdiv@dividend+1,f
  5698  0D69                     l2697:
  5699  0D69  1427               	bsf	___awdiv@quotient,0
  5700  0D6A                     l2699:
  5701  0D6A  3001               	movlw	1
  5702  0D6B                     u3335:
  5703  0D6B  1003               	clrc
  5704  0D6C  0CA1               	rrf	___awdiv@divisor+1,f
  5705  0D6D  0CA0               	rrf	___awdiv@divisor,f
  5706  0D6E  3EFF               	addlw	-1
  5707  0D6F  1D03               	skipz
  5708  0D70  2D6B               	goto	u3335
  5709  0D71                     l2701:
  5710  0D71  3001               	movlw	1
  5711  0D72  02A5               	subwf	___awdiv@counter,f
  5712  0D73  1D03               	btfss	3,2
  5713  0D74  2D76               	goto	u3341
  5714  0D75  2D77               	goto	u3340
  5715  0D76                     u3341:
  5716  0D76  2D52               	goto	l2693
  5717  0D77                     u3340:
  5718  0D77                     l2703:
  5719  0D77  0826               	movf	___awdiv@sign,w
  5720  0D78  1903               	btfsc	3,2
  5721  0D79  2D7B               	goto	u3351
  5722  0D7A  2D7C               	goto	u3350
  5723  0D7B                     u3351:
  5724  0D7B  2D81               	goto	l2707
  5725  0D7C                     u3350:
  5726  0D7C                     l2705:
  5727  0D7C  09A7               	comf	___awdiv@quotient,f
  5728  0D7D  09A8               	comf	___awdiv@quotient+1,f
  5729  0D7E  0AA7               	incf	___awdiv@quotient,f
  5730  0D7F  1903               	skipnz
  5731  0D80  0AA8               	incf	___awdiv@quotient+1,f
  5732  0D81                     l2707:
  5733  0D81  0828               	movf	___awdiv@quotient+1,w
  5734  0D82  00A1               	movwf	?___awdiv+1
  5735  0D83  0827               	movf	___awdiv@quotient,w
  5736  0D84  00A0               	movwf	?___awdiv
  5737  0D85                     l506:
  5738  0D85  0008               	return
  5739  0D86                     __end_of___awdiv:
  5740                           
  5741                           	psect	text22
  5742  0E02                     __ptext22:	
  5743 ;; *************** function _ISR *****************
  5744 ;; Defined at:
  5745 ;;		line 213 in file "main.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5759 ;;      Params:         0       0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0
  5761 ;;      Temps:          5       0       0       0       0
  5762 ;;      Totals:         5       0       0       0       0
  5763 ;;Total ram usage:        5 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		Interrupt level 1
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _ISR
  5774  0E02                     _ISR:
  5775  0E02                     i1l2511:
  5776                           
  5777                           ;main.c: 215:     {
  5778  0E02  1C0B               	btfss	11,0	;volatile
  5779  0E03  2E05               	goto	u303_21
  5780  0E04  2E06               	goto	u303_20
  5781  0E05                     u303_21:
  5782  0E05  2E3B               	goto	i1l2523
  5783  0E06                     u303_20:
  5784  0E06                     i1l2513:
  5785                           
  5786                           ;main.c: 216:         CCP1CON = 0x00;;main.c: 217:         RC2 = 1;
  5787  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  5788  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0E08  1A06               	btfsc	6,4	;volatile
  5790  0E09  2E0B               	goto	u304_21
  5791  0E0A  2E0C               	goto	u304_20
  5792  0E0B                     u304_21:
  5793  0E0B  2E21               	goto	i1l2517
  5794  0E0C                     u304_20:
  5795  0E0C                     i1l2515:
  5796                           
  5797                           ;main.c: 218:         CCP1CON = 0x09;;main.c: 219:         TMR1 = 0xB1E0;
  5798  0E0C  3004               	movlw	4
  5799  0E0D  00F2               	movwf	??_ISR+2
  5800  0E0E  30A8               	movlw	168
  5801  0E0F  00F1               	movwf	??_ISR+1
  5802  0E10  300B               	movlw	11
  5803  0E11  00F0               	movwf	??_ISR
  5804  0E12                     u467_27:
  5805  0E12  0BF0               	decfsz	??_ISR,f
  5806  0E13  2E12               	goto	u467_27
  5807  0E14  0BF1               	decfsz	??_ISR+1,f
  5808  0E15  2E12               	goto	u467_27
  5809  0E16  0BF2               	decfsz	??_ISR+2,f
  5810  0E17  2E12               	goto	u467_27
  5811  0E18  2E19               	nop2
  5812                           
  5813                           ;main.c: 220:         TMR1IF = 0;
  5814  0E19  3001               	movlw	1
  5815  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0E1C  07E2               	addwf	_setPoint,f
  5818  0E1D  1803               	skipnc
  5819  0E1E  0AE3               	incf	_setPoint+1,f
  5820  0E1F  3000               	movlw	0
  5821  0E20  07E3               	addwf	_setPoint+1,f
  5822  0E21                     i1l2517:
  5823                           
  5824                           ;main.c: 222: 
  5825  0E21  1A86               	btfsc	6,5	;volatile
  5826  0E22  2E24               	goto	u305_21
  5827  0E23  2E25               	goto	u305_20
  5828  0E24                     u305_21:
  5829  0E24  2E3A               	goto	i1l2521
  5830  0E25                     u305_20:
  5831  0E25                     i1l2519:
  5832                           
  5833                           ;main.c: 223:     if(TMR2IF == 1);main.c: 224:     {
  5834  0E25  3004               	movlw	4
  5835  0E26  00F2               	movwf	??_ISR+2
  5836  0E27  30A8               	movlw	168
  5837  0E28  00F1               	movwf	??_ISR+1
  5838  0E29  300B               	movlw	11
  5839  0E2A  00F0               	movwf	??_ISR
  5840  0E2B                     u468_27:
  5841  0E2B  0BF0               	decfsz	??_ISR,f
  5842  0E2C  2E2B               	goto	u468_27
  5843  0E2D  0BF1               	decfsz	??_ISR+1,f
  5844  0E2E  2E2B               	goto	u468_27
  5845  0E2F  0BF2               	decfsz	??_ISR+2,f
  5846  0E30  2E2B               	goto	u468_27
  5847  0E31  2E32               	nop2
  5848                           
  5849                           ;main.c: 225:         TMR2 = 0x06;
  5850  0E32  30FF               	movlw	255
  5851  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  5852  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  5853  0E35  07E2               	addwf	_setPoint,f
  5854  0E36  1803               	skipnc
  5855  0E37  0AE3               	incf	_setPoint+1,f
  5856  0E38  30FF               	movlw	255
  5857  0E39  07E3               	addwf	_setPoint+1,f
  5858  0E3A                     i1l2521:
  5859                           
  5860                           ;main.c: 227:         if(cnt2 == 1000)
  5861  0E3A  100B               	bcf	11,0	;volatile
  5862  0E3B                     i1l2523:
  5863                           
  5864                           ;main.c: 230:             cnt2 = 0;
  5865  0E3B  1D0B               	btfss	11,2	;volatile
  5866  0E3C  2E3E               	goto	u306_21
  5867  0E3D  2E3F               	goto	u306_20
  5868  0E3E                     u306_21:
  5869  0E3E  2E5F               	goto	i1l2539
  5870  0E3F                     u306_20:
  5871  0E3F                     i1l2525:
  5872                           
  5873                           ;main.c: 231:             samp = 1;;main.c: 232:         }
  5874  0E3F  3038               	movlw	56
  5875  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  5876  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  5877  0E42  0081               	movwf	1	;volatile
  5878                           
  5879                           ;main.c: 233:         TMR2IF = 0;
  5880  0E43  3001               	movlw	1
  5881  0E44  07D2               	addwf	_cnt0,f
  5882  0E45  1803               	skipnc
  5883  0E46  0AD3               	incf	_cnt0+1,f
  5884  0E47  3000               	movlw	0
  5885  0E48  07D3               	addwf	_cnt0+1,f
  5886                           
  5887                           ;main.c: 234:     }
  5888  0E49  0853               	movf	_cnt0+1,w
  5889  0E4A  064F               	xorwf	_tmp+1,w
  5890  0E4B  1D03               	skipz
  5891  0E4C  2E4F               	goto	u307_25
  5892  0E4D  0852               	movf	_cnt0,w
  5893  0E4E  064E               	xorwf	_tmp,w
  5894  0E4F                     u307_25:
  5895  0E4F  1D03               	skipz
  5896  0E50  2E52               	goto	u307_21
  5897  0E51  2E53               	goto	u307_20
  5898  0E52                     u307_21:
  5899  0E52  2E5E               	goto	i1l2537
  5900  0E53                     u307_20:
  5901  0E53                     i1l2527:
  5902                           
  5903                           ;main.c: 235: ;main.c: 236:     if(INTF == 1)
  5904  0E53  1786               	bsf	6,7	;volatile
  5905  0E54                     i1l2529:
  5906                           
  5907                           ;main.c: 237:     {
  5908  0E54  300D               	movlw	13
  5909  0E55  00F0               	movwf	??_ISR
  5910  0E56                     u469_27:
  5911  0E56  0BF0               	decfsz	??_ISR,f
  5912  0E57  2E56               	goto	u469_27
  5913  0E58                     i1l2531:
  5914                           
  5915                           ;main.c: 238:         TMR0IE = 1;
  5916  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  5917  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  5918  0E5A  1386               	bcf	6,7	;volatile
  5919  0E5B                     i1l2533:
  5920                           
  5921                           ;main.c: 239:         INTF = 0;
  5922  0E5B  01D2               	clrf	_cnt0
  5923  0E5C  01D3               	clrf	_cnt0+1
  5924  0E5D                     i1l2535:
  5925                           
  5926                           ;main.c: 240:     }
  5927  0E5D  128B               	bcf	11,5	;volatile
  5928  0E5E                     i1l2537:
  5929                           
  5930                           ;main.c: 242: 
  5931  0E5E  110B               	bcf	11,2	;volatile
  5932  0E5F                     i1l2539:
  5933                           
  5934                           ;main.c: 245:     x = (x - in_min)*(out_max - out_min) / (in_max - in_min) + out_min;
  5935  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  5936  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  5937  0E61  1C0C               	btfss	12,0	;volatile
  5938  0E62  2E64               	goto	u308_21
  5939  0E63  2E65               	goto	u308_20
  5940  0E64                     u308_21:
  5941  0E64  2E6E               	goto	i1l2551
  5942  0E65                     u308_20:
  5943  0E65                     i1l2541:
  5944                           
  5945                           ;main.c: 246:     if(x<out_min);main.c: 247:         x = out_min;
  5946  0E65  0197               	clrf	23	;volatile
  5947  0E66                     i1l2543:
  5948                           
  5949                           ;main.c: 248:     if(x>out_max)
  5950  0E66  1507               	bsf	7,2	;volatile
  5951  0E67                     i1l2545:
  5952                           
  5953                           ;main.c: 249:         x = out_max;
  5954  0E67  3009               	movlw	9
  5955  0E68  0097               	movwf	23	;volatile
  5956  0E69                     i1l2547:
  5957                           
  5958                           ;main.c: 250:     return x;
  5959  0E69  30B1               	movlw	177
  5960  0E6A  008F               	movwf	15	;volatile
  5961  0E6B  30E0               	movlw	224
  5962  0E6C  008E               	movwf	14	;volatile
  5963  0E6D                     i1l2549:
  5964                           
  5965                           ;main.c: 251: }
  5966  0E6D  100C               	bcf	12,0	;volatile
  5967  0E6E                     i1l2551:
  5968                           
  5969                           ;main.c: 254: {
  5970  0E6E  1C8C               	btfss	12,1	;volatile
  5971  0E6F  2E71               	goto	u309_21
  5972  0E70  2E72               	goto	u309_20
  5973  0E71                     u309_21:
  5974  0E71  2E8C               	goto	i1l2565
  5975  0E72                     u309_20:
  5976  0E72                     i1l2553:
  5977                           
  5978                           ;main.c: 255:     if(a==0);main.c: 256:     {
  5979  0E72  3006               	movlw	6
  5980  0E73  0091               	movwf	17	;volatile
  5981                           
  5982                           ;main.c: 257:         CCPR1 = 0xB430;
  5983  0E74  3001               	movlw	1
  5984  0E75  07D0               	addwf	_cnt2,f
  5985  0E76  1803               	skipnc
  5986  0E77  0AD1               	incf	_cnt2+1,f
  5987  0E78  3000               	movlw	0
  5988  0E79  07D1               	addwf	_cnt2+1,f
  5989  0E7A                     i1l2555:
  5990                           
  5991                           ;main.c: 258:     }
  5992  0E7A  30E8               	movlw	232
  5993  0E7B  0650               	xorwf	_cnt2,w
  5994  0E7C  3003               	movlw	3
  5995  0E7D  1903               	skipnz
  5996  0E7E  0651               	xorwf	_cnt2+1,w
  5997  0E7F  1D03               	btfss	3,2
  5998  0E80  2E82               	goto	u310_21
  5999  0E81  2E83               	goto	u310_20
  6000  0E82                     u310_21:
  6001  0E82  2E8B               	goto	i1l2563
  6002  0E83                     u310_20:
  6003  0E83                     i1l2557:
  6004                           
  6005                           ;main.c: 259:     if(a==90);main.c: 260:     {
  6006  0E83  3001               	movlw	1
  6007  0E84  0688               	xorwf	8,f
  6008  0E85                     i1l2559:
  6009                           
  6010                           ;main.c: 261:         CCPR1 = 0xB7A8;
  6011  0E85  01D0               	clrf	_cnt2
  6012  0E86  01D1               	clrf	_cnt2+1
  6013  0E87                     i1l2561:
  6014                           
  6015                           ;main.c: 262:     }
  6016  0E87  3001               	movlw	1
  6017  0E88  00CC               	movwf	_samp
  6018  0E89  3000               	movlw	0
  6019  0E8A  00CD               	movwf	_samp+1
  6020  0E8B                     i1l2563:
  6021  0E8B  108C               	bcf	12,1	;volatile
  6022  0E8C                     i1l2565:
  6023  0E8C  1C8B               	btfss	11,1	;volatile
  6024  0E8D  2E8F               	goto	u311_21
  6025  0E8E  2E90               	goto	u311_20
  6026  0E8F                     u311_21:
  6027  0E8F  2E92               	goto	i1l229
  6028  0E90                     u311_20:
  6029  0E90                     i1l2567:
  6030  0E90  168B               	bsf	11,5	;volatile
  6031  0E91  108B               	bcf	11,1	;volatile
  6032  0E92                     i1l229:
  6033  0E92  0874               	movf	??_ISR+4,w
  6034  0E93  008A               	movwf	10
  6035  0E94  0E73               	swapf	??_ISR+3,w
  6036  0E95  0083               	movwf	3
  6037  0E96  0EFE               	swapf	btemp,f
  6038  0E97  0E7E               	swapf	btemp,w
  6039  0E98  0009               	retfie
  6040  0E99                     __end_of_ISR:
  6041  007E                     btemp	set	126	;btemp
  6042  007E                     wtemp0	set	126
  6043                           
  6044                           	psect	intentry
  6045  0004                     __pintentry:	
  6046                           ;incstack = 0
  6047                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6048                           
  6049  0004                     interrupt_function:
  6050  007E                     saved_w	set	btemp
  6051  0004  00FE               	movwf	btemp
  6052  0005  0E03               	swapf	3,w
  6053  0006  00F3               	movwf	??_ISR+3
  6054  0007  080A               	movf	10,w
  6055  0008  00F4               	movwf	??_ISR+4
  6056  0009  120A  158A  2E02   	ljmp	_ISR
  6057                           
  6058                           	psect	config
  6059                           
  6060                           ;Config register CONFIG @ 0x2007
  6061                           ;	Oscillator Selection bits
  6062                           ;	FOSC = HS, HS oscillator
  6063                           ;	Watchdog Timer Enable bit
  6064                           ;	WDTE = OFF, WDT disabled
  6065                           ;	Power-up Timer Enable bit
  6066                           ;	PWRTE = ON, PWRT enabled
  6067                           ;	Brown-out Reset Enable bit
  6068                           ;	BOREN = ON, BOR enabled
  6069                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6070                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6071                           ;	Data EEPROM Memory Code Protection bit
  6072                           ;	CPD = OFF, Data EEPROM code protection off
  6073                           ;	Flash Program Memory Write Enable bits
  6074                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6075                           ;	In-Circuit Debugger Mode bit
  6076                           ;	DEBUG = 0x1, unprogrammed default
  6077                           ;	Flash Program Memory Code Protection bit
  6078                           ;	CP = OFF, Code protection off
  6079  2007                     	org	8199
  6080  2007  3F72               	dw	16242

Data Sizes:
    Strings     22
    Constant    10
    Data        8
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     44      68
    BANK1            80     16      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[4]), STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK1[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Read_Temp
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Read_Temp->___fltol
    ___fltol->___fldiv
    ___flmul->__Umul8_16
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Cal_PID->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   12109
                                             43 BANK0      1     1      0
                                              0 BANK1     16    16      0
                            _Cal_PID
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Read_Temp
                       _Servo_MoveTo
                           _init_ADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1907
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_MoveTo                                         2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_Temp                                            6     6      0    6280
                                             37 BANK0      6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     427
                                             26 BANK0     11     7      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     492
                                              5 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     815
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Cal_PID                                              2     2      0    1633
                                              9 BANK0      2     2      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     828
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cal_PID
     ___awdiv
     ___wmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Temp
     ___fldiv
     ___flmul
       __Umul8_16
     ___fltol
       ___fldiv (ARG)
     ___xxtofl
   _Servo_MoveTo
   _init_ADC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     10      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 09 22:17:02 2021

             ___fldiv@aexp 0039               ___fldiv@bexp 0038                          pc 0002  
             ___fldiv@sign 0031               ___awdiv@sign 0026                         _kd 00B2  
                       _ki 005E                         _kp 0060                         fsr 0004  
      ___wmul@multiplicand 0022        __Umul8_16@word_mpld 0026                        l120 0B17  
                      l121 0B1D                        l122 0B1E                        l130 0B0C  
                      l123 0B24                        l203 0AD8                        l124 0B25  
                      l125 0B2B                        l133 0AC3                        l142 0D1C  
                      l206 078A                        l215 0F43                        l127 0B2C  
                      l119 0B16                        l151 0B51                        l145 0C1A  
                      l209 07FE                        l139 0CB8                        l239 0AF0  
                      l353 0B60                        l506 0D85                        l355 0B78  
                      l195 0616                        l349 0786                        l702 0415  
                      l704 0595                        l800 0FD5                        l625 0C60  
                      l546 0DEC                        l539 0E01                        l635 0BDD  
                      l724 0579                        l549 0E01                        l726 0589  
                      l718 0507                        l742 03B8                        l761 0B8F  
                      l754 03AC                        l763 0BA1                        l748 0324  
                      l792 0FAD                        l786 0F68                        l788 0FFF  
                      l799 0FC9                        _GIE 005F                        _RB3 0033  
                      _RC2 003A                        _RD0 0040                        _RB4 0034  
                      _RB5 0035                        _RD2 0042                        _RB6 0036  
                      _RD3 0043                        _RB7 0037                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _ISR 0E02                        fsr0 0004                        _tmp 004E  
                      indf 0000               ___flmul@aexp 0037               ___flmul@bexp 003C  
             ___flmul@sign 0036               ___flmul@temp 0041               ___flmul@prod 003D  
                     ?_ISR 0070               ___fltol@exp1 0044                       l3001 01B5  
                     l3011 0245                       l3003 01C5                       l3021 02D9  
                     l3013 0255                       l3005 01E2                       l3101 0FB4  
                     l3031 02FE                       l3023 02E7                       l3015 0282  
                     l3007 01FB                       l3111 0FED                       l3103 0FBF  
                     l3201 0F22                       l3121 0AB7                       l3041 0321  
                     l3025 02F0                       l3033 0304                       l3017 02A8  
                     l3009 0218                       l3113 0FF2                       l3105 0FC3  
                     l3203 0F30                       l3131 0C85                       l3123 0C64  
                     l3051 0340                       l3035 0308                       l3027 02F4  
                     l3019 02D0                       l3115 0FF6                       l3107 0FCD  
                     l3211 06B2                       l3141 0CB0                       l3125 0C69  
                     l3133 0C8E                       l3061 0386                       l3053 0359  
                     l3045 0329                       l3037 0309                       l3029 02F5  
                     l3117 0FF7                       l3109 0FD7                       l3221 06DD  
                     l3213 06B7                       l3205 06A0                       l3301 05C4  
                     l3151 0CE1                       l3143 0CB9                       l3135 0C94  
                     l3127 0C7A                       l3071 03A5                       l3063 0390  
                     l3047 032E                       l3055 035F                       l3039 030D  
                     l3223 06E1                       l3207 06A5                       l3311 05D0  
                     l3303 05C7                       l2601 0B14                       l3145 0CBF  
                     l3137 0CA5                       l3129 0C7F                       l3153 0B30  
                     l3073 03B0                       l3065 0392                       l3057 036C  
                     l3049 033C                       l3081 0F50                       l3161 0AC4  
                     l3241 0716                       l3225 06E5                       l3217 06B8  
                     l3209 06AB                       l3321 05DC                       l3313 05D3  
                     l3305 05C8                       l2603 0B1B                       l3147 0CCA  
                     l3139 0CAA                       l3155 0B33                       l2611 0B7E  
                     l3067 03A0                       l3059 0377                       l3091 0F7E  
                     l3083 0F60                       l3171 0787                       l3163 0AD9  
                     l3251 075C                       l3243 071C                       l3235 06F0  
                     l3227 06E9                       l3219 06D5                       l3411 06CA  
                     l3331 05E7                       l3323 05E1                       l3315 05D9  
                     l3307 05CB                       l2701 0D71                       l3181 0EB0  
                     l2605 0B22                       l3149 0CDB                       l3157 0B3E  
                     l2613 0B85                       l3069 03A4                       l3093 0F8B  
                     l3085 0F70                       l3077 0F47                       l3173 0787  
                     l3165 0AE1                       l3253 0763                       l3245 0723  
                     l3229 06EE                       l3341 05EE                       l3333 05E8  
                     l3325 05E2                       l3317 05DA                       l3309 05CE  
                     l2703 0D77                       l3191 0EF6                       l3183 0EB2  
                     l2607 0B29                       l2631 0B09                       l2623 0AF4  
                     l3159 0B46                       l2615 0B89                       l2711 0D86  
                     l3095 0F92                       l3079 0F4C                       l3175 078E  
                     l3167 0AE5                       l3255 0767                       l3247 0727  
                     l3239 070C                       l3351 060C                       l3343 05F1  
                     l3335 05E9                       l3327 05E3                       l3319 05DB  
                     l3271 0596                       l2705 0D7C                       l3193 0EFA  
                     l3185 0EC7                       l3177 0E99                       l2625 0AF5  
                     l2641 0BFD                       l2633 0BE1                       l2801 03CA  
                     l2617 0B98                       l2609 0B7C                       l2721 0DB2  
                     l2713 0D93                       l3097 0F96                       l3089 0F79  
                     l3169 0AEC                       l3249 072C                       l3257 0770  
                     l3361 0632                       l3353 0619                       l3345 05F4  
                     l3337 05EA                       l3329 05E6                       l3281 05A4  
                     l3273 059B                       l2707 0D81                       l3195 0F07  
                     l3187 0EDE                       l3179 0EA3                       l2627 0AFB  
                     l2651 0C17                       l2643 0C04                       l2635 0BEB  
                     l2811 03DE                       l2803 03CB                       l2619 0B9D  
                     l2723 0DBA                       l3099 0FA4                       l3259 0782  
                     l3371 0667                       l3363 0637                       l3355 0621  
                     l3347 05F9                       l3339 05EB                       l3291 05BD  
                     l3283 05A7                       l3275 059E                       l2661 0B6E  
                     l2653 0B52                       l3197 0F0D                       l3189 0EE6  
                     l2629 0AFE                       l2645 0C07                       l2637 0BEC  
                     l2901 0504                       l2821 03F7                       l2805 03D0  
                     l2813 03E0                       l2741 0DE1                       l2733 0DC8  
                     l2725 0DBC                       l2717 0D9C                       l3373 0671  
                     l3365 0647                       l3357 0629                       l3349 0609  
                     l3293 05C0                       l3285 05B2                       l3277 059F  
                     l2671 0D24                       l2663 0B74                       l2655 0B56  
                     l3199 0F1C                       l2647 0C0D                       l2639 0BFA  
                     l2911 0523                       l2831 040B                       l2823 03F8  
                     l2815 03E8                       l2807 03D5                       l2743 0DF1  
                     l2727 0DC0                       l2735 0DDA                       l2719 0DB1  
                     l2751 0C25                       l3375 0677                       l3367 0651  
                     l3359 062E                       l3295 05C1                       l3287 05B5  
                     l3279 05A2                       l2681 0D38                       l2673 0D29  
                     l2657 0B5A                       l2649 0C10                       l2921 056C  
                     l2913 053C                       l2905 050C                       l2825 03FD  
                     l2833 040D                       l2817 03ED                       l2809 03DD  
                     l2745 0DF6                       l2761 0C48                       l2753 0C28  
                     l3377 0687                       l3369 0657                       l3297 05C2  
                     l3289 05B8                       l2691 0D4E                       l2683 0D3A  
                     l2675 0D2B                       l2667 0D1D                       l2659 0B67  
                     l2931 0585                       l2923 0570                       l2907 0511  
                     l2915 0542                       l2851 0456                       l2835 041D  
                     l2843 0436                       l2827 0402                       l2819 03F3  
                     l2763 0C4E                       l2755 0C2F                       l2747 0C1B  
                     l3379 0693                       l3299 05C3                       l2693 0D52  
                     l2685 0D40                       l2677 0D2F                       l2669 0D20  
                     l2925 0578                       l2917 054F                       l2909 051F  
                     l2861 0475                       l2853 045E                       l2845 043B  
                     l2837 0429                       l2829 040A                       l2941 0065  
                     l2765 0C4F                       l2757 0C33                       l2749 0C1F  
                     l2781 0BB8                       l2773 0BA2                       l2695 0D63  
                     l2687 0D43                       l2679 0D34                       l2599 0B10  
                     l2927 057F                       l2919 055D                       l2871 04A7  
                     l2863 0487                       l2855 0466                       l2839 042D  
                     l2951 007C                       l2943 0069                       l2767 0C56  
                     l2759 0C37                       l2783 0BBC                       l2775 0BAA  
                     l2791 0BD9                       l2697 0D69                       l2689 0D4A  
                     l2929 0583                       l2881 04C8                       l2873 04A8  
                     l2865 048B                       l2857 046E                       l2849 0444  
                     l2961 0095                       l2953 007E                       l2945 006A  
                     l2937 0058                       l2769 0C5C                       l2785 0BC6  
                     l2777 0BAD                       l2699 0D6A                       l2891 04E1  
                     l2883 04CA                       l2875 04B6                       l2867 048C  
                     l2859 0470                       l2795 03B9                       l2971 00AA  
                     l2963 0096                       l2955 0086                       l2947 006F  
                     l2939 005F                       l2787 0BCC                       l2779 0BB4  
                     l2885 04D3                       l2893 04E7                       l2869 0495  
                     l2877 04BA                       l2797 03C0                       l2981 00C5  
                     l2973 00B2                       l2965 009B                       l2957 008B  
                     l2949 0074                       l2789 0BD3                       l2895 04EB  
                     l2887 04D7                       l2879 04C0                       l2799 03C6  
                     l2991 0147                       l2983 00D5                       l2975 00B7  
                     l2967 00A0                       l2959 0091                       l2897 04EC  
                     l2889 04D8                       l2993 0163                       l2985 00E2  
                     l2977 00BC                       l2969 00A8                       l2899 04F0  
                     l2995 017F                       l2987 00FF                       l2997 0188  
                     l2989 011B                       l2999 0198                       STR_1 0810  
                     STR_2 081B                       STR_3 0817                       u3200 0B9D  
                     u3201 0B9C                       u4011 01A7                       u3300 0D52  
                     u3220 0B5A                       u3140 0B14                       u4012 01AE  
                     u3301 0D51                       u3221 0B59                       u3141 0B13  
                     u4101 02C2                       u4021 01D4                       u4013 01B5  
                     u4005 0181                       u3150 0B1B                       u4102 02C9  
                     u4022 01DB                       u3151 0B1A                       u3215 0BEF  
                     u4103 02D0                       u4023 01E2                       u3320 0D63  
                     u3160 0B22                       u4200 0340                       u3321 0D62  
                     u3161 0B21                       u4201 033F                       u4041 020A  
                     u3250 0B74                       u3170 0B29                       u4210 034F  
                     u4130 02F4                       u4042 0211                       u3410 0DD9  
                     u3315 0D53                       u3251 0B73                       u3235 0B61  
                     u3171 0B28                       u4131 02F3                       u4115 02D2  
                     u4051 0237                       u4043 0218                       u4035 01E4  
                     u3411 0DD8                       u3340 0D77                       u3260 0D24  
                     u3180 0B89                       u4220 036C                       u4052 023E  
                     u3420 0DE0                       u3500 0C48                       u3341 0D76  
                     u3325 0D5F                       u3261 0D23                       u3245 0B68  
                     u3181 0B88                       u4221 036B                       u4125 02E9  
                     u4061 0264                       u4053 0245                       u3421 0DDF  
                     u3405 0DC9                       u3501 0C47                       u3350 0D7C  
                     u3270 0D2F                       u4230 0386                       u4150 0308  
                     u4070 028E                       u4062 026B                       u4310 0FB3  
                     u3351 0D7B                       u3335 0D6B                       u3271 0D2E  
                     u4231 0385                       u4215 034A                       u4151 0307  
                     u4063 0272                       u4311 0FB2                       u3280 0D40  
                     u3600 03D0                       u4240 03A4                       u4160 030D  
                     u3440 0DF1                       u3360 0D93                       u3520 0C5C  
                     u3281 0D3F                       u3601 03CF                       u4241 03A3  
                     u4225 0368                       u4161 030C                       u4145 02F7  
                     u4081 029A                       u3441 0DF0                       u3361 0D92  
                     u4305 0FA5                       u3521 0C5B                       u3505 0C44  
                     u4410 0C94                       u3610 03D5                       u4170 0321  
                     u4090 02B6                       u4082 02A1                       u3450 0DF6  
                     u3370 0DAA                       u4330 0FC3                       u4250 0F4C  
                     u3530 0BAA                       u4411 0C93                       u3611 03D4  
                     u3195 0B90                       u4235 0382                       u4171 0320  
                     u4083 02A8                       u4075 0289                       u3451 0DF5  
                     u3435 0DE3                       u4331 0FC2                       u4251 0F4B  
                     u3515 0C50                       u3531 0BA9                       u3700 048B  
                     u3620 03F7                       u4180 0328                       u3380 0DC0  
                     u4340 0FC9                       u4260 0F50                       u3460 0C25  
                     u4500 06AB                       u4405 0C71                       u3701 048A  
                     u3621 03F6                       u4181 0327                       u3381 0DBF  
                     u4341 0FC8                       u4325 0FB8                       u4261 0F4F  
                     u3461 0C24                       u4501 06AA                       u4430 0B51  
                     u3630 03FD                       u4190 032E                       u3390 0DC7  
                     u4350 0FCD                       u4270 0F70                       u3550 0BBC  
                     u4510 06E5                       u3295 0D44                       u4431 0B50  
                     u3631 03FC                       u4191 032D                       u4095 02B1  
                     u3391 0DC6                       u3375 0DA5                       u4351 0FCC  
                     u4271 0F6F                       u3551 0BBB                       u4511 06E4  
                     u3800 0504                       u3720 04A7                       u3640 0402  
                     u4360 0FE2                       u4440 0AE1                       u3480 0C37  
                     u3560 0BC6                       u4520 070B                       u4425 0C9C  
                     u3801 0503                       u3721 04A6                       u3641 0401  
                     u4441 0AE0                       u3481 0C36                       u3561 0BC5  
                     u3545 0BAE                       u4521 070A                       u3810 050B  
                     u3730 04C0                       u3650 041D                       u4370 0FF2  
                     u4290 0F91                       u4450 0AEC                       u4530 0716  
                     u3811 050A                       u3731 04BF                       u3715 048E  
                     u3651 041C                       u4371 0FF1                       u4291 0F90  
                     u4451 0AEB                       u3475 0C29                       u4531 0715  
                     _PEIE 005E                       u3820 0511                       u3740 04C8  
                     u3660 043B                       u3900 0074                       u4380 0FF6  
                     u4460 078E                       u3580 0BD9                       u4540 071C  
                     u3821 0510                       u3741 04C7                       u3725 04A3  
                     u3661 043A                       u3901 0073                       u4381 0FF5  
                     u4365 0FDD                       u4285 0F83                       u4461 078D  
                     u3581 0BD8                       u3565 0BC2                       u4541 071B  
                     u4525 0707                       _INTE 005C                       u4470 0EB0  
                     u4390 0C69                       u3830 0523                       u3670 0475  
                     u3590 03CA                       u3910 0095                       u4550 0770  
                     _INTF 0059                       u4471 0EAF                       u4391 0C68  
                     u3831 0522                       u3671 0474                       u3591 03C9  
                     u3911 0094                       u3495 0C38                       u3575 0BCD  
                     u4551 076F                       _RBIE 005B                       u4480 0F07  
                     u3840 0532                       u3760 04D7                       u3920 009B  
                     u4560 0782                       _RBIF 0058                       u4481 0F06  
                     u4617 0C01                       u3761 04D6                       u3921 009A  
                     u4561 0781                       u4490 0F1C                       u3850 054F  
                     u3930 00A0                       u4570 0609                       u4491 0F1B  
                     u4475 0EAC                       u4627 0C14                       u3851 054E  
                     u3755 04CC                       u3931 009F                       u4571 0608  
                     u3860 056C                       u3780 04EB                       u3940 00B7  
                     u4580 0629                       u4485 0F03                       u4637 0CC5  
                     u3861 056B                       u3845 052D                       u3781 04EA  
                     u3685 0477                       u3941 00B6                       u4581 0628  
                     u3870 0583                       u3790 04F0                       u3950 00BC  
                     u4495 0F18                       u4647 0CD6                       u3871 0582  
                     u3855 054B                       u3791 04EF                       u3775 04DA  
                     u3695 0480                       u3951 00BB                       u4575 0605  
                     u3880 0069                       u4657 0CE7                       u3865 0568  
                     u3961 010D                       u3881 0068                       u3962 0114  
                     u3890 006F                       u4667 0B04                       u3971 0129  
                     u3963 011B                       u3891 006E                       u3972 0130  
                     u3981 0155                       u3973 0137                       u3982 015C  
                     u3991 0171                       u3983 0163                       u3992 0178  
                     u3993 017F                       _TMR0 0001                       _TMR1 000E  
                     _TMR2 0011                       _cnt0 0052                       _cnt1 00B0  
                     _cnt2 0050          ?_Lcd_Write_String 0070                       _main 0596  
                     _samp 004C            __end_of_Cal_PID 0F44                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0025            ___fldiv@new_exp 0032  
          __end_of_Lcd_Cmd 0B0D                      ??_ISR 0070              ___fltol@sign1 0043  
                    ?_main 0070            __end_of___fldiv 0596            __end_of___awdiv 0D86  
                    _CCPR1 0015            __end_of___flmul 03B9            __end_of___fltol 0E02  
          ___awdiv@divisor 0020                      _T2CON 0012            __end_of___lwdiv 0C61  
                    i1l229 0E92            __end_of___lwmod 0BDE            ___awdiv@counter 0025  
                    _PID_d 0054                      _PID_i 0075                      _PID_p 0056  
  __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088            __end_of_dpowers 0810  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 0787           __end_of_Lcd_Init 0D1D           __end_of_Lcd_Port 0B2D  
          __initialization 000F               __end_of_main 069D                     ??_main 004B  
       __size_of_Lcd_Clear 000D                     _CCP1IE 0462                     _CCP1IF 0062  
                   _ADRESH 001E                     _ADRESL 009E                  ??_Cal_PID 0029  
         ___awdiv@dividend 0022                     i1l2511 0E02                     i1l2521 0E3A  
                   i1l2513 0E06                     i1l2531 0E58                     i1l2515 0E0C  
                   i1l2523 0E3B                     i1l2541 0E65                     i1l2533 0E5B  
                   i1l2525 0E3F                     i1l2517 0E21                     i1l2543 0E66  
                   i1l2551 0E6E                     i1l2535 0E5D                     i1l2527 0E53  
                   i1l2519 0E25                     i1l2561 0E87                     i1l2553 0E72  
                   i1l2545 0E67                     i1l2529 0E54                     i1l2537 0E5E  
                   i1l2563 0E8B                     i1l2555 0E7A                     i1l2547 0E69  
                   i1l2539 0E5F                     i1l2557 0E83                     i1l2565 0E8C  
                   i1l2549 0E6D                     i1l2567 0E90                     i1l2559 0E85  
                   u310_20 0E83                     u310_21 0E82                     _INTEDG 040E  
                   u311_20 0E90                     u303_20 0E06                     u311_21 0E8F  
                   u303_21 0E05                     u304_20 0E0C                     u304_21 0E0B  
                   u305_20 0E25                     u305_21 0E24                     u306_20 0E3F  
                   u306_21 0E3E                     u307_20 0E53                     u307_21 0E52  
                   u307_25 0E4F                     u308_20 0E65                     u308_21 0E64  
                   u309_20 0E72                     u309_21 0E71                     u467_27 0E12  
                   u468_27 0E2B                     u469_27 0E56                  ??_Lcd_Cmd 0021  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR1CS 0081                     _TMR2IE 0461  
                   _TMR2IF 0061                     _TMR1ON 0080    __size_of_Lcd_Write_Char 003D  
                   _TRISA0 0428                     _TRISB0 0430                     _TRISB3 0433  
                   _TRISC2 043A                     _TRISB4 0434                     _TRISB5 0435  
                   _TRISB6 0436                     _TRISB7 0437           __end_of___xxtofl 1000  
       __size_of_Read_Temp 0078                     ___wmul 0B52                  ??___fldiv 0028  
                ??___awdiv 0024                  ??___flmul 0031                  ??___fltol 003E  
         __end_of_init_ADC 0AD9                  ??___lwdiv 0024                  ??___lwmod 002C  
         ___awdiv@quotient 0027         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 0031            Lcd_Set_Cursor@a 0027            Lcd_Set_Cursor@b 0024  
          Lcd_Set_Cursor@y 0029            Lcd_Set_Cursor@z 0028               ___xxtofl@arg 002A  
             ___xxtofl@exp 0029               ___xxtofl@val 0020    __end_of__initialization 0054  
        __end_of_Lcd_Clear 0AC4                 ___fltol@f1 003A             __pcstackCOMMON 0070  
             __pidataBANK0 0AA9               __pidataBANK1 0AA7          __end_of_Read_Temp 07FF  
           _Lcd_Set_Cursor 0C61                  ?_Lcd_Init 0070         Read_Temp@TempValue 0047  
                ?_Lcd_Port 0070                 __pbssBANK0 004C                 __pbssBANK1 00B0  
        __end_of__Umul8_16 0BA2                 __pmaintext 0596                    ?___wmul 0020  
               __pintentry 0004                    _CCP1CON 0017  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0CB9                    _T1CKPS0 0084                    _T1CKPS1 0085  
                ?___xxtofl 0020                 ??_Lcd_Init 0024                 ??_Lcd_Port 0075  
                  _Cal_PID 0E99                 __stringtab 0800              ?_Servo_MoveTo 0020  
                ?_init_ADC 0070             _Lcd_Write_Char 0BDE                    _Lcd_Cmd 0AF1  
                  ___fldiv 03B9                    ___awdiv 0D1D                    ___flmul 0058  
                  ___fltol 0D86            __size_of___wmul 0027                    ___lwdiv 0C1B  
                  ___lwmod 0BA2                _Temperature 005C            ?_Lcd_Set_Cursor 0024  
                  __ptext1 069D                    __ptext2 0BA2                    __ptext3 0C1B  
                  __ptext4 0AC4                    __ptext5 0AD9                    __ptext6 0787  
                  __ptext7 0F44                    __ptext8 0D86                    __ptext9 0058  
             __size_of_ISR 0097                    _dpowers 0806                 ??___xxtofl 0024  
                  _sprintf 069D                    clrloop0 0AB0                    main@str 00A0  
   __end_of_Lcd_Write_Char 0C1B       end_of_initialization 0054             ??_Servo_MoveTo 0075  
               ??_init_ADC 0075                  Lcd_Port@a 0020                  _PID_error 0077  
                _PID_value 0058              ___xxtofl@sign 0028                ___fldiv@grs 0034  
              ___fldiv@rem 002D            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0028  
        Lcd_Write_String@i 0026                ___flmul@grs 0038                  _Lcd_Clear 0AB7  
           __end_of___wmul 0B79           _Lcd_Write_String 0B2D        start_initialization 000F  
              __end_of_ISR 0E99                  _Read_Temp 0787          __size_of_Lcd_Init 0064  
        __size_of_Lcd_Port 0020                 ?_Lcd_Clear 0070                   ??___wmul 0075  
                __Umul8_16 0B79                __pdataBANK0 005E                __pdataBANK1 00B2  
          Lcd_Write_Char@a 0024            Lcd_Write_Char@y 0023       __end_of_Servo_MoveTo 0AF1  
                ___fldiv@a 0020                  ___fldiv@b 0024                  ___flmul@a 002D  
                ___flmul@b 0029                __pbssCOMMON 0075                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0                 ?_Read_Temp 0070  
        __size_of___xxtofl 00BC                   ?_Cal_PID 0070                   ?_Lcd_Cmd 0070  
              sprintf@flag 0035                sprintf@prec 0036          __size_of_init_ADC 0015  
         ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0025              Servo_MoveTo@a 0020  
                 ?___fldiv 0020                   ?___awdiv 0020                   ?___flmul 0029  
                 ?___fltol 003A                 ?__Umul8_16 0020                   ?___lwdiv 0020  
                 ?___lwmod 0028                  __pstrings 0800           ___lwdiv@quotient 0026  
                 ?_sprintf 002E          interrupt_function 0004             ___wmul@product 0024  
                clear_ram0 0AAF                   Lcd_Cmd@a 0023                ??_Lcd_Clear 0075  
               _ADCON0bits 001F                __stringbase 0805                 _ADCON1bits 009F  
        ___wmul@multiplier 0020           ??_Lcd_Write_Char 0021                   _Lcd_Init 0CB9  
              ??_Read_Temp 0045                   _Lcd_Port 0B0D           __size_of_Cal_PID 00AB  
 __end_of_Lcd_Write_String 0B52           __size_of_Lcd_Cmd 001C      __size_of_Servo_MoveTo 0018  
              ??__Umul8_16 0022           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0806                 sprintf@val 0037  
                 ___xxtofl 0F44            ___lwdiv@divisor 0020            ___lwdiv@counter 0025  
                 __ptext10 0B79                   __ptext11 03B9                   __ptext20 0B52  
                 __ptext12 0B2D                   __ptext21 0D1D                   __ptext13 0BDE  
                 __ptext22 0E02                   __ptext14 0C61                   __ptext15 0CB9  
                 __ptext16 0AB7                   __ptext17 0AF1                   __ptext18 0B0D  
                 __ptext19 0E99           __size_of_sprintf 00EA                   _init_ADC 0AC4  
             _Servo_MoveTo 0AD9              __size_of_main 0107                   _setPoint 0062  
           _previous_error 005A         Lcd_Write_Char@temp 0022                   intlevel1 0000  
                sprintf@ap 0034                  sprintf@sp 0039           ___lwmod@dividend 002A  
                stringcode 0800         Lcd_Set_Cursor@temp 002A     __Umul8_16@multiplicand 0020  
               _OPTION_REG 0081                   sprintf@c 003A                   sprintf@f 002E  
          ___lwmod@divisor 0028            ___lwmod@counter 002D                   stringdir 0800  
                 stringtab 0800       __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
