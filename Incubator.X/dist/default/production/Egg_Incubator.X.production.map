Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Egg_Incubator.X.production.sym \
  --cmf=dist/default/production\Egg_Incubator.X.production.cmf -z -Q16F877A \
  -oC:\Users\Admin\AppData\Local\Temp\se3k.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Egg_Incubator.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\Admin\AppData\Local\Temp\se3k.o \
  dist/default/production\Egg_Incubator.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Admin\AppData\Local\Temp\se3k.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\Egg_Incubator.X.production.o
                cinit                                 F        F       47        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        1        0       4
                text20                              EBB      EBB       89     1D76       0
                text19                              D5E      D5E       69     1ABC       0
                text18                              B7D      B7D       25     16FA       0
                text17                              754      754       AB        8       0
                text16                              B5B      B5B       22     16B6       0
                text15                              B43      B43       18     1686       0
                text14                              D01      D01       5D     1A02       0
                text13                              CA9      CA9       58     1952       0
                text12                              BF0      BF0       37     17E0       0
                text11                              BA2      BA2       25     1744       0
                text10                              3B7      3B7      1DD        8       0
                text9                               BC7      BC7       29     178E       0
                text8                                56       56      361        8       0
                text7                               E3F      E3F       7C     1C7E       0
                text6                               F44      F44       BC     1E88       0
                text5                               DC7      DC7       78     1B8E       0
                text4                               B2E      B2E       15     165C       0
                text3                               C63      C63       46     18C6       0
                text2                               C27      C27       3C     184E       0
                text1                               594      594       EA        8       0
                maintext                            67E      67E       D6        8       0
                cstackBANK0                          20       20       29       20       1
                cstackCOMMON                         70       70        9       70       1
                cstackBANK1                          A0       A0       10       A0       1
                clrtext                             B26      B26        8     164C       0
                dataBANK1                            B0       B0        4       A0       1
                bssBANK1                             B4       B4        2       A0       1
                dataBANK0                            5D       5D        4       20       1
                bssBANK0                             49       49       14       20       1
                bssCOMMON                            79       79        2       70       1
                strings                             800      800       26     1000       0
                idataBANK1                          B1E      B1E        4     163C       0
                idataBANK0                          B22      B22        4     1644       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       47         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text20                              EBB      EBB       89         0
                text19                              D5E      D5E       69         0
                text18                              B7D      B7D       25         0
                text17                              754      754       AB         0
                text16                              B5B      B5B       22         0
                text15                              B43      B43       18         0
                text14                              D01      D01       5D         0
                text13                              CA9      CA9       58         0
                text12                              BF0      BF0       37         0
                text11                              BA2      BA2       25         0
                text10                              3B7      3B7      1DD         0
                text9                               BC7      BC7       29         0
                text8                                56       56      361         0
                text7                               E3F      E3F       7C         0
                text6                               F44      F44       BC         0
                text5                               DC7      DC7       78         0
                text4                               B2E      B2E       15         0
                text3                               C63      C63       46         0
                text2                               C27      C27       3C         0
                text1                               594      594       EA         0
                maintext                            67E      67E       D6         0
                clrtext                             B26      B26        8         0
                idataBANK1                          B1E      B1E        4         0
                idataBANK0                          B22      B22        4         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800       26         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        2         1

        CLASS   BANK0          
                cstackBANK0                          20       20       29         1
                dataBANK0                            5D       5D        4         1
                bssBANK0                             49       49       14         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       10         1
                dataBANK1                            B0       B0        4         1
                bssBANK1                             B4       B4        2         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007FB  0007FF         8       0  CODE        2
                cstackBANK0                    000020  000041  000061        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                cstackBANK1                    0000A0  000016  0000B6        A0       1  BANK1       1
                strings                        000800  000026  000826      1000       0  STRING      2
                idataBANK1                     000B1E  000004  000B22      163C       0  CODE        2
                idataBANK0                     000B22  000004  000B26      1644       0  CODE        2
                clrtext                        000B26  000008  000B2E      164C       0  CODE        2
                text4                          000B2E  000015  000B43      165C       0  CODE        2
                text15                         000B43  000018  000B5B      1686       0  CODE        2
                text16                         000B5B  000022  000B7D      16B6       0  CODE        2
                text18                         000B7D  000025  000BA2      16FA       0  CODE        2
                text11                         000BA2  000025  000BC7      1744       0  CODE        2
                text9                          000BC7  000029  000BF0      178E       0  CODE        2
                text12                         000BF0  000037  000C27      17E0       0  CODE        2
                text2                          000C27  00003C  000C63      184E       0  CODE        2
                text3                          000C63  000046  000CA9      18C6       0  CODE        2
                text13                         000CA9  000058  000D01      1952       0  CODE        2
                text14                         000D01  00005D  000D5E      1A02       0  CODE        2
                text19                         000D5E  000069  000DC7      1ABC       0  CODE        2
                text5                          000DC7  000078  000E3F      1B8E       0  CODE        2
                text7                          000E3F  00007C  000EBB      1C7E       0  CODE        2
                text20                         000EBB  000089  000F44      1D76       0  CODE        2
                text6                          000F44  0000BC  001000      1E88       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0061-006F              F           1
        BANK1            00B6-00EF             3A           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         07FF-07FF              1
                         0826-0B1D            2F8
                         1000-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         07FF-07FF              1
                         0826-0B1D            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FF-07FF              1
                         0826-0B1D            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0061-006F              F           1
                         00B6-00EF             3A
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FF-07FF              1
                         0826-0B1D            2F8
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FF-07FF              1
                         0826-0B1D            100
                         1000-1FFF            100

                                  Symbol Table

?__Umul8_16                cstackCOMMON 0073
?___awdiv                  cstackCOMMON 0073
?___fldiv                  cstackBANK0  0020
?___flmul                  cstackBANK0  0025
?___fltol                  cstackBANK0  0035
?___lwdiv                  cstackCOMMON 0073
?___lwmod                  cstackBANK0  0023
?___wmul                   cstackCOMMON 0073
?___xxtofl                 cstackCOMMON 0073
?_sprintf                  cstackBANK0  0028
Lcd_Cmd@a                  cstackCOMMON 0075
Lcd_Port@a                 cstackCOMMON 0073
Lcd_Set_Cursor@a           cstackBANK0  0020
Lcd_Set_Cursor@b           cstackCOMMON 0076
Lcd_Set_Cursor@temp        cstackBANK0  0023
Lcd_Set_Cursor@y           cstackBANK0  0022
Lcd_Set_Cursor@z           cstackBANK0  0021
Lcd_Write_Char@a           cstackCOMMON 0077
Lcd_Write_Char@temp        cstackCOMMON 0075
Lcd_Write_Char@y           cstackCOMMON 0076
Lcd_Write_String@a         cstackBANK0  0022
Lcd_Write_String@i         cstackBANK0  0020
Read_Temp@TempValue        cstackBANK0  0042
_ADCON0bits                (abs)        001F
_ADCON1bits                (abs)        009F
_ADRESH                    (abs)        001E
_ADRESL                    (abs)        009E
_Cal_PID                   text17       0754
_GIE                       (abs)        005F
_INTE                      (abs)        005C
_INTEDG                    (abs)        040E
_INTF                      (abs)        0059
_ISR                       text20       0EBB
_Lcd_Cmd                   text15       0B43
_Lcd_Init                  text14       0D01
_Lcd_Port                  text16       0B5B
_Lcd_Set_Cursor            text13       0CA9
_Lcd_Write_Char            text12       0BF0
_Lcd_Write_String          text11       0BA2
_OPTION_REG                (abs)        0081
_PEIE                      (abs)        005E
_PID_d                     bssBANK0     0051
_PID_error                 bssCOMMON    0079
_PID_i                     bssBANK0     0053
_PID_p                     bssBANK0     0055
_PID_value                 bssBANK0     0057
_RB4                       (abs)        0034
_RB5                       (abs)        0035
_RB6                       (abs)        0036
_RB7                       (abs)        0037
_RBIE                      (abs)        005B
_RBIF                      (abs)        0058
_RD0                       (abs)        0040
_RD2                       (abs)        0042
_RD3                       (abs)        0043
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_RD6                       (abs)        0046
_RD7                       (abs)        0047
_Read_Temp                 text5        0DC7
_T1CKPS0                   (abs)        0084
_T1CKPS1                   (abs)        0085
_T2CON                     (abs)        0012
_TMR0                      (abs)        0001
_TMR0IE                    (abs)        005D
_TMR0IF                    (abs)        005A
_TMR1                      (abs)        000E
_TMR1CS                    (abs)        0081
_TMR1IE                    (abs)        0460
_TMR1IF                    (abs)        0060
_TMR1ON                    (abs)        0080
_TMR2                      (abs)        0011
_TMR2IE                    (abs)        0461
_TMR2IF                    (abs)        0061
_TRISA0                    (abs)        0428
_TRISB0                    (abs)        0430
_TRISB4                    (abs)        0434
_TRISB5                    (abs)        0435
_TRISB6                    (abs)        0436
_TRISB7                    (abs)        0437
_TRISD                     (abs)        0088
_Temperature               bssBANK0     005B
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssBANK1                bssBANK1     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        0056
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackBANK1             cstackBANK1  0000
__HcstackCOMMON            cstackCOMMON 0000
__HdataBANK0               dataBANK0    0000
__HdataBANK1               dataBANK1    0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     000F
__Hfunctab                 functab      0000
__HidataBANK0              idataBANK0   0000
__HidataBANK1              idataBANK1   0000
__Hinit                    init         000C
__Hintentry                intentry     000C
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        1000
__Hspace_1                 (abs)        00B6
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        400F
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssBANK1                bssBANK1     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        000F
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackBANK1             cstackBANK1  0000
__LcstackCOMMON            cstackCOMMON 0000
__LdataBANK0               dataBANK0    0000
__LdataBANK1               dataBANK1    0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000C
__Lfunctab                 functab      0000
__LidataBANK0              idataBANK0   0000
__LidataBANK1              idataBANK1   0000
__Linit                    init         000C
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        1000
__S1                       (abs)        00B6
__S2                       (abs)        0000
__S3                       (abs)        0000
__Umul8_16                 text9        0BC7
__Umul8_16@multiplicand    cstackCOMMON 0073
__Umul8_16@multiplier      cstackBANK0  0024
__Umul8_16@product         cstackBANK0  0020
__Umul8_16@word_mpld       cstackBANK0  0022
___awdiv                   text19       0D5E
___awdiv@counter           cstackBANK0  0020
___awdiv@dividend          cstackCOMMON 0075
___awdiv@divisor           cstackCOMMON 0073
___awdiv@quotient          cstackBANK0  0022
___awdiv@sign              cstackBANK0  0021
___fldiv                   text10       03B7
___fldiv@a                 cstackBANK0  0020
___fldiv@aexp              cstackBANK0  0034
___fldiv@b                 cstackBANK0  0024
___fldiv@bexp              cstackBANK0  0033
___fldiv@grs               cstackBANK0  002F
___fldiv@new_exp           cstackBANK0  002D
___fldiv@rem               cstackBANK0  0028
___fldiv@sign              cstackBANK0  002C
___flmul                   text8        0056
___flmul@a                 cstackBANK0  0029
___flmul@aexp              cstackBANK0  0033
___flmul@b                 cstackBANK0  0025
___flmul@bexp              cstackBANK0  0038
___flmul@grs               cstackBANK0  0034
___flmul@prod              cstackBANK0  0039
___flmul@sign              cstackBANK0  0032
___flmul@temp              cstackBANK0  003D
___fltol                   text7        0E3F
___fltol@exp1              cstackBANK0  003F
___fltol@f1                cstackBANK0  0035
___fltol@sign1             cstackBANK0  003E
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text3        0C63
___lwdiv@counter           cstackBANK0  0020
___lwdiv@dividend          cstackCOMMON 0075
___lwdiv@divisor           cstackCOMMON 0073
___lwdiv@quotient          cstackBANK0  0021
___lwmod                   text2        0C27
___lwmod@counter           cstackBANK0  0027
___lwmod@dividend          cstackBANK0  0025
___lwmod@divisor           cstackBANK0  0023
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___wmul                    text18       0B7D
___wmul@multiplicand       cstackCOMMON 0075
___wmul@multiplier         cstackCOMMON 0073
___wmul@product            cstackCOMMON 0077
___xxtofl                  text6        0F44
___xxtofl@arg              cstackBANK0  0026
___xxtofl@exp              cstackBANK0  0025
___xxtofl@sign             cstackBANK0  0024
___xxtofl@val              cstackCOMMON 0073
__end_of_Cal_PID           text17       07FF
__end_of_ISR               text20       0F44
__end_of_Lcd_Cmd           text15       0B5B
__end_of_Lcd_Init          text14       0D5E
__end_of_Lcd_Port          text16       0B7D
__end_of_Lcd_Set_Cursor    text13       0D01
__end_of_Lcd_Write_Char    text12       0C27
__end_of_Lcd_Write_String  text11       0BC7
__end_of_Read_Temp         text5        0E3F
__end_of__Umul8_16         text9        0BF0
__end_of___awdiv           text19       0DC7
__end_of___fldiv           text10       0594
__end_of___flmul           text8        03B7
__end_of___fltol           text7        0EBB
__end_of___lwdiv           text3        0CA9
__end_of___lwmod           text2        0C63
__end_of___wmul            text18       0BA2
__end_of___xxtofl          text6        1000
__end_of__initialization   cinit        0052
__end_of__stringtab        strings      0806
__end_of_dpowers           strings      0810
__end_of_init_ADC          text4        0B43
__end_of_main              maintext     0754
__end_of_sprintf           text1        067E
__initialization           cinit        000F
__pbssBANK0                bssBANK0     0049
__pbssBANK1                bssBANK1     00B4
__pbssCOMMON               bssCOMMON    0079
__pcstackBANK0             cstackBANK0  0020
__pcstackBANK1             cstackBANK1  00A0
__pcstackCOMMON            cstackCOMMON 0070
__pdataBANK0               dataBANK0    005D
__pdataBANK1               dataBANK1    00B0
__pidataBANK0              idataBANK0   0B22
__pidataBANK1              idataBANK1   0B1E
__pintentry                intentry     0004
__pmaintext                maintext     067E
__pstrings                 strings      0800
__ptext1                   text1        0594
__ptext10                  text10       03B7
__ptext11                  text11       0BA2
__ptext12                  text12       0BF0
__ptext13                  text13       0CA9
__ptext14                  text14       0D01
__ptext15                  text15       0B43
__ptext16                  text16       0B5B
__ptext17                  text17       0754
__ptext18                  text18       0B7D
__ptext19                  text19       0D5E
__ptext2                   text2        0C27
__ptext20                  text20       0EBB
__ptext3                   text3        0C63
__ptext4                   text4        0B2E
__ptext5                   text5        0DC7
__ptext6                   text6        0F44
__ptext7                   text7        0E3F
__ptext8                   text8        0056
__ptext9                   text9        0BC7
__size_of_Cal_PID          (abs)        0000
__size_of_ISR              (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_Read_Temp        (abs)        0000
__size_of__Umul8_16        (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___fldiv          (abs)        0000
__size_of___flmul          (abs)        0000
__size_of___fltol          (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of___wmul           (abs)        0000
__size_of___xxtofl         (abs)        0000
__size_of_init_ADC         (abs)        0000
__size_of_main             (abs)        0000
__size_of_sprintf          (abs)        0000
__stringbase               strings      0805
__stringtab                strings      0800
_cnt0                      bssBANK0     004D
_cnt1                      bssBANK0     004F
_cnt2                      bssBANK0     004B
_dpowers                   strings      0806
_init_ADC                  text4        0B2E
_main                      maintext     067E
_previous_error            bssBANK0     0059
_samp                      bssBANK0     0049
_setPoint                  dataBANK0    005F
_sprintf                   text1        0594
_tmp                       bssBANK1     00B4
btemp                      (abs)        007E
clear_ram0                 clrtext      0B26
end_of_initialization      cinit        0052
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
main@str                   cstackBANK1  00A0
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
sprintf@ap                 cstackBANK0  002E
sprintf@c                  cstackBANK0  0034
sprintf@f                  cstackBANK0  0028
sprintf@flag               cstackBANK0  002F
sprintf@prec               cstackBANK0  0030
sprintf@sp                 cstackBANK0  0033
sprintf@val                cstackBANK0  0031
start                      init         000C
start_initialization       cinit        000F
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 51 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  str            16    0[BANK1 ] unsigned char [16]
 Return value:  Size  Location     Type
                  2  175[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0      16       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3      16       0       0
Total ram usage:       19 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_Cal_PID
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
		_Read_Temp
		_init_ADC
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> main@str(16), 
  f               1    8[BANK0 ] PTR const unsigned char 
		 -> STR_3(4), STR_2(11), STR_1(11), 
 Auto vars:     Size  Location     Type
  sp              1   19[BANK0 ] PTR unsigned char 
		 -> main@str(16), 
  tmpval          4    0        struct .
  val             2   17[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   20[BANK0 ] unsigned char 
  prec            1   16[BANK0 ] char 
  flag            1   15[BANK0 ] unsigned char 
  ap              1   14[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] unsigned int 
  dividend        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       5       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] unsigned int 
  dividend        2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    1[BANK0 ] unsigned int 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       3       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _init_ADC *****************
 Defined at:
		line 143 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Read_Temp *****************
 Defined at:
		line 157 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  TempValue       4   34[BANK0 ] float 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___fldiv
		___flmul
		___fltol
		___xxtofl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4    3[COMMON] long 
 Auto vars:     Size  Location     Type
  sign            1    4[BANK0 ] unsigned char 
  arg             4    6[BANK0 ] unsigned long 
  exp             1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    3[COMMON] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         4      10       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Read_Temp
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4   21[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  exp1            1   31[BANK0 ] unsigned char 
  sign1           1   30[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   21[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Read_Temp
 This function uses a non-reentrant model


 *************** function ___flmul *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 Parameters:    Size  Location     Type
  b               4    5[BANK0 ] long 
  a               4    9[BANK0 ] long 
 Auto vars:     Size  Location     Type
  prod            4   25[BANK0 ] struct .
  grs             4   20[BANK0 ] unsigned long 
  temp            2   29[BANK0 ] struct .
  bexp            1   24[BANK0 ] unsigned char 
  aexp            1   19[BANK0 ] unsigned char 
  sign            1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    5[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0      13       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		__Umul8_16
 This function is called by:
		_Read_Temp
 This function uses a non-reentrant model


 *************** function __Umul8_16 *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    4[BANK0 ] unsigned char 
  word_mpld       2    2[BANK0 ] unsigned int 
  product         2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       5       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___flmul
 This function uses a non-reentrant model


 *************** function ___fldiv *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 Parameters:    Size  Location     Type
  a               4    0[BANK0 ] unsigned int 
  b               4    4[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  grs             4   15[BANK0 ] unsigned long 
  rem             4    8[BANK0 ] unsigned long 
  new_exp         2   13[BANK0 ] int 
  aexp            1   20[BANK0 ] unsigned char 
  bexp            1   19[BANK0 ] unsigned char 
  sign            1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0      13       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5      21       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Read_Temp
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 95 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> main@str(16), 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] PTR unsigned char 
		 -> main@str(16), 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       3       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 79 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] unsigned char 
  y               1    6[COMMON] unsigned char 
  temp            1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 39 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    6[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[BANK0 ] unsigned char 
  temp            1    3[BANK0 ] unsigned char 
  y               1    2[BANK0 ] unsigned char 
  z               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       4       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 60 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 24 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Clear
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 2 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _Cal_PID *****************
 Defined at:
		line 167 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    3[COMMON] unsigned int 
  multiplicand    2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    7[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Cal_PID
		_map
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] int 
  dividend        2    5[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    2[BANK0 ] int 
  sign            1    1[BANK0 ] unsigned char 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       4       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Cal_PID
		_map
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 185 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c
		___flmul       		CODE           	0056	0000	865

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c estimated size: 865

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c
		___fldiv       		CODE           	03B7	0000	477

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c estimated size: 477

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c
		__Umul8_16     		CODE           	0BC7	0000	41

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c estimated size: 41

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	0594	0000	234

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c estimated size: 234

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	0C27	0000	60

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c estimated size: 60

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0B7D	0000	37

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c estimated size: 37

./lcd.h
		_Lcd_Write_String		CODE           	0BA2	0000	37
		_Lcd_Init      		CODE           	0D01	0000	93
		_Lcd_Write_Char		CODE           	0BF0	0000	55
		_Lcd_Cmd       		CODE           	0B43	0000	24
		_Lcd_Set_Cursor		CODE           	0CA9	0000	88
		_Lcd_Port      		CODE           	0B5B	0000	34

./lcd.h estimated size: 331

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	0C63	0000	70

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c estimated size: 70

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	0D5E	0000	105

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c estimated size: 105

shared
		__stringtab    		STRING         	0800	0000	6
		_dpowers       		STRING         	0806	0000	10
		__initialization		CODE           	000F	0000	67

shared estimated size: 83

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c
		___fltol       		CODE           	0E3F	0000	124

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c estimated size: 124

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c
		___xxtofl      		CODE           	0F44	0000	188

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c estimated size: 188

main.c
		_ISR           		CODE           	0EBB	0000	137
		_main          		CODE           	067E	0000	214
		_Cal_PID       		CODE           	0754	0000	171
		_init_ADC      		CODE           	0B2E	0000	21
		_Read_Temp     		CODE           	0DC7	0000	120

main.c estimated size: 663

