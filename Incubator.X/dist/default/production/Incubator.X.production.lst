

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 05 22:09:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199                           
   200                           	psect	idataBANK0
   201  0AB1                     __pidataBANK0:
   202                           
   203                           ;initializer for _kp
   204  0AB1  34CB               	retlw	203
   205  0AB2  3400               	retlw	0
   206                           
   207                           ;initializer for _setPoint
   208  0AB3  3425               	retlw	37
   209  0AB4  3400               	retlw	0
   210                           
   211                           	psect	idataBANK1
   212  0AB5                     __pidataBANK1:
   213                           
   214                           ;initializer for _T
   215  0AB5  34E8               	retlw	232
   216  0AB6  3403               	retlw	3
   217                           
   218                           ;initializer for _kd
   219  0AB7  3401               	retlw	1
   220  0AB8  3400               	retlw	0
   221                           
   222                           ;initializer for _ki
   223  0AB9  3407               	retlw	7
   224  0ABA  3400               	retlw	0
   225                           
   226                           	psect	strings
   227  0800                     __pstrings:
   228  0800                     stringtab:
   229  0800                     __stringtab:
   230  0800                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0800                     stringdir:
   234  0800  3008               	movlw	high stringdir
   235  0801  008A               	movwf	10
   236  0802  0804               	movf	4,w
   237  0803  0A84               	incf	4,f
   238  0804  0782               	addwf	2,f
   239  0805                     __stringbase:
   240  0805  3400               	retlw	0
   241  0806                     __end_of__stringtab:
   242  0806                     _dpowers:
   243  0806  3401               	retlw	1
   244  0807  3400               	retlw	0
   245  0808  340A               	retlw	10
   246  0809  3400               	retlw	0
   247  080A  3464               	retlw	100
   248  080B  3400               	retlw	0
   249  080C  34E8               	retlw	232
   250  080D  3403               	retlw	3
   251  080E  3410               	retlw	16
   252  080F  3427               	retlw	39
   253  0810                     __end_of_dpowers:
   254  0015                     _CCPR1	set	21
   255  000E                     _TMR1	set	14
   256  001E                     _ADRESH	set	30
   257  001F                     _ADCON0bits	set	31
   258  0012                     _T2CON	set	18
   259  0011                     _TMR2	set	17
   260  0001                     _TMR0	set	1
   261  0017                     _CCP1CON	set	23
   262  0059                     _INTF	set	89
   263  0035                     _RB5	set	53
   264  0034                     _RB4	set	52
   265  0058                     _RBIF	set	88
   266  0061                     _TMR2IF	set	97
   267  0060                     _TMR1IF	set	96
   268  005A                     _TMR0IF	set	90
   269  005D                     _TMR0IE	set	93
   270  005B                     _RBIE	set	91
   271  005C                     _INTE	set	92
   272  005E                     _PEIE	set	94
   273  005F                     _GIE	set	95
   274  0080                     _TMR1ON	set	128
   275  0085                     _T1CKPS1	set	133
   276  0084                     _T1CKPS0	set	132
   277  0081                     _TMR1CS	set	129
   278  0036                     _RB6	set	54
   279  0037                     _RB7	set	55
   280  0033                     _RB3	set	51
   281  0040                     _RD0	set	64
   282  0062                     _CCP1IF	set	98
   283  003A                     _RC2	set	58
   284  0046                     _RD6	set	70
   285  0047                     _RD7	set	71
   286  0042                     _RD2	set	66
   287  0043                     _RD3	set	67
   288  0044                     _RD4	set	68
   289  0045                     _RD5	set	69
   290  009E                     _ADRESL	set	158
   291  009F                     _ADCON1bits	set	159
   292  0081                     _OPTION_REG	set	129
   293  0088                     _TRISD	set	136
   294  0461                     _TMR2IE	set	1121
   295  0460                     _TMR1IE	set	1120
   296  040E                     _INTEDG	set	1038
   297  0436                     _TRISB6	set	1078
   298  0437                     _TRISB7	set	1079
   299  0433                     _TRISB3	set	1075
   300  0430                     _TRISB0	set	1072
   301  0435                     _TRISB5	set	1077
   302  0434                     _TRISB4	set	1076
   303  0462                     _CCP1IE	set	1122
   304  043A                     _TRISC2	set	1082
   305  0428                     _TRISA0	set	1064
   306  0810                     STR_1:
   307  0810  3453               	retlw	83	;'S'
   308  0811  3465               	retlw	101	;'e'
   309  0812  3474               	retlw	116	;'t'
   310  0813  3420               	retlw	32	;' '
   311  0814  3420               	retlw	32	;' '
   312  0815  343D               	retlw	61	;'='
   313  0816  3420               	retlw	32	;' '
   314  0817  3425               	retlw	37	;'%'
   315  0818  3464               	retlw	100	;'d'
   316  0819  3420               	retlw	32	;' '
   317  081A  3400               	retlw	0
   318  081B                     STR_2:
   319  081B  3452               	retlw	82	;'R'
   320  081C  3465               	retlw	101	;'e'
   321  081D  3461               	retlw	97	;'a'
   322  081E  346C               	retlw	108	;'l'
   323  081F  3420               	retlw	32	;' '
   324  0820  343D               	retlw	61	;'='
   325  0821  3420               	retlw	32	;' '
   326  0822  3425               	retlw	37	;'%'
   327  0823  3464               	retlw	100	;'d'
   328  0824  3420               	retlw	32	;' '
   329  0825  3400               	retlw	0
   330  0817                     
   331                           	psect	cinit
   332  000F                     start_initialization:	
   333                           ; #config settings
   334                           
   335  000F                     __initialization:
   336                           
   337                           ; Initialize objects allocated to BANK1
   338  000F  1383               	bcf	3,7	;select IRP bank0
   339  0010  30B6               	movlw	low (__pdataBANK1+6)
   340  0011  00FD               	movwf	btemp+-1
   341  0012  300A               	movlw	high __pidataBANK1
   342  0013  00FE               	movwf	btemp
   343  0014  30B5               	movlw	low __pidataBANK1
   344  0015  00FF               	movwf	btemp+1
   345  0016  30B0               	movlw	low __pdataBANK1
   346  0017  0084               	movwf	4
   347  0018  120A  158A  22D4  120A  118A  	fcall	init_ram0
   348                           
   349                           ; Initialize objects allocated to BANK0
   350  001D  3064               	movlw	low (__pdataBANK0+4)
   351  001E  00FD               	movwf	btemp+-1
   352  001F  300A               	movlw	high __pidataBANK0
   353  0020  00FE               	movwf	btemp
   354  0021  30B1               	movlw	low __pidataBANK0
   355  0022  00FF               	movwf	btemp+1
   356  0023  3060               	movlw	low __pdataBANK0
   357  0024  0084               	movwf	4
   358  0025  120A  158A  22D4  120A  118A  	fcall	init_ram0
   359                           
   360                           ; Clear objects allocated to BANK1
   361  002A  1683               	bsf	3,5	;RP0=1, select bank1
   362  002B  1303               	bcf	3,6	;RP1=0, select bank1
   363  002C  01B6               	clrf	__pbssBANK1& (0+127)
   364  002D  01B7               	clrf	(__pbssBANK1+1)& (0+127)
   365                           
   366                           ; Clear objects allocated to BANK0
   367  002E  304C               	movlw	low __pbssBANK0
   368  002F  0084               	movwf	4
   369  0030  3060               	movlw	low (__pbssBANK0+20)
   370  0031  120A  158A  22BB  120A  118A  	fcall	clear_ram0
   371                           
   372                           ; Clear objects allocated to COMMON
   373  0036  01F5               	clrf	__pbssCOMMON& (0+127)
   374  0037  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   375  0038  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   376  0039  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   377  003A                     end_of_initialization:	
   378                           ;End of C runtime variable initialization code
   379                           
   380  003A                     __end_of__initialization:
   381  003A  0183               	clrf	3
   382  003B  120A  118A  2D7C   	ljmp	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMMON
   385  0075                     __pbssCOMMON:
   386  0075                     _PID_i:
   387  0075                     	ds	2
   388  0077                     _PID_error:
   389  0077                     	ds	2
   390                           
   391                           	psect	bssBANK0
   392  004C                     __pbssBANK0:
   393  004C                     _samp:
   394  004C                     	ds	2
   395  004E                     _cnt2:
   396  004E                     	ds	2
   397  0050                     _cnt0:
   398  0050                     	ds	2
   399  0052                     _PID_d:
   400  0052                     	ds	2
   401  0054                     _PID_p:
   402  0054                     	ds	2
   403  0056                     _PID_value_1:
   404  0056                     	ds	2
   405  0058                     _PID_value:
   406  0058                     	ds	2
   407  005A                     _PID_error_2:
   408  005A                     	ds	2
   409  005C                     _PID_error_1:
   410  005C                     	ds	2
   411  005E                     _realValue:
   412  005E                     	ds	2
   413                           
   414                           	psect	dataBANK0
   415  0060                     __pdataBANK0:
   416  0060                     _kp:
   417  0060                     	ds	2
   418  0062                     _setPoint:
   419  0062                     	ds	2
   420                           
   421                           	psect	bssBANK1
   422  00B6                     __pbssBANK1:
   423  00B6                     _cnt1:
   424  00B6                     	ds	2
   425                           
   426                           	psect	dataBANK1
   427  00B0                     __pdataBANK1:
   428  00B0                     _T:
   429  00B0                     	ds	2
   430  00B2                     _kd:
   431  00B2                     	ds	2
   432  00B4                     _ki:
   433  00B4                     	ds	2
   434                           
   435                           	psect	inittext
   436  0AD0                     init_fetch0:	
   437                           ;	Called with low address in FSR and high address in W
   438                           
   439  0AD0  087E               	movf	btemp,w
   440  0AD1  008A               	movwf	10
   441  0AD2  087F               	movf	btemp+1,w
   442  0AD3  0082               	movwf	2
   443  0AD4                     init_ram0:	
   444                           ;Called with:
   445                           ;	high address of idata address in btemp 
   446                           ;	low address of idata address in btemp+1 
   447                           ;	low address of data in FSR
   448                           ;	high address + 1 of data in btemp-1
   449                           
   450  0AD4  120A  158A  22D0  120A  158A  	fcall	init_fetch0
   451  0AD9  0080               	movwf	0
   452  0ADA  0A84               	incf	4,f
   453  0ADB  0804               	movf	4,w
   454  0ADC  067D               	xorwf	btemp+-1,w
   455  0ADD  1903               	btfsc	3,2
   456  0ADE  3400               	retlw	0
   457  0ADF  0AFF               	incf	btemp+1,f
   458  0AE0  1903               	btfsc	3,2
   459  0AE1  0AFE               	incf	btemp,f
   460  0AE2  2AD4               	goto	init_ram0
   461                           
   462                           	psect	clrtext
   463  0ABB                     clear_ram0:	
   464                           ;	Called with FSR containing the base address, and
   465                           ;	W with the last address+1
   466                           
   467  0ABB  0064               	clrwdt	;clear the watchdog before getting into this loop
   468  0ABC                     clrloop0:
   469  0ABC  0180               	clrf	0	;clear RAM location pointed to by FSR
   470  0ABD  0A84               	incf	4,f	;increment pointer
   471  0ABE  0604               	xorwf	4,w	;XOR with final address
   472  0ABF  1903               	btfsc	3,2	;have we reached the end yet?
   473  0AC0  3400               	retlw	0	;all done for this memory range, return
   474  0AC1  0604               	xorwf	4,w	;XOR again to restore value
   475  0AC2  2ABC               	goto	clrloop0	;do the next byte
   476                           
   477                           	psect	cstackBANK1
   478  00A0                     __pcstackBANK1:
   479  00A0                     main@str:
   480                           
   481                           ; 16 bytes @ 0x0
   482  00A0                     	ds	16
   483                           
   484                           	psect	cstackCOMMON
   485  0070                     __pcstackCOMMON:
   486  0070                     ?_init_ADC:
   487  0070                     ?_Read_Temp:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_Cal_PID:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_Lcd_Port:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_Lcd_Cmd:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_Lcd_Clear:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_Lcd_Init:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_Lcd_Write_Char:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Lcd_Write_String:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_ISR:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ??_ISR:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_main:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 2 bytes @ 0x0
   522  0070                     	ds	5
   523  0075                     ??_init_ADC:
   524  0075                     ??_Servo_MoveTo:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     ??_Lcd_Port:	
   528                           ; 1 bytes @ 0x5
   529                           
   530  0075                     ??_Lcd_Clear:	
   531                           ; 1 bytes @ 0x5
   532                           
   533  0075                     ??___wmul:	
   534                           ; 1 bytes @ 0x5
   535                           
   536                           
   537                           	psect	cstackBANK0
   538  0020                     __pcstackBANK0:	
   539                           ; 1 bytes @ 0x5
   540                           
   541  0020                     ?_Servo_MoveTo:
   542  0020                     ?__Umul8_16:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0020                     ?___wmul:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0020                     ?___awdiv:	
   549                           ; 2 bytes @ 0x0
   550                           
   551  0020                     ?___lwdiv:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0020                     ?___fldiv:	
   555                           ; 2 bytes @ 0x0
   556                           
   557  0020                     ?___xxtofl:	
   558                           ; 4 bytes @ 0x0
   559                           
   560  0020                     Lcd_Port@a:	
   561                           ; 4 bytes @ 0x0
   562                           
   563  0020                     __Umul8_16@multiplicand:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0020                     Servo_MoveTo@a:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0020                     ___wmul@multiplier:	
   570                           ; 2 bytes @ 0x0
   571                           
   572  0020                     ___awdiv@divisor:	
   573                           ; 2 bytes @ 0x0
   574                           
   575  0020                     ___lwdiv@divisor:	
   576                           ; 2 bytes @ 0x0
   577                           
   578  0020                     ___fldiv@a:	
   579                           ; 2 bytes @ 0x0
   580                           
   581  0020                     ___xxtofl@val:	
   582                           ; 4 bytes @ 0x0
   583                           
   584                           
   585                           ; 4 bytes @ 0x0
   586  0020                     	ds	1
   587  0021                     ??_Lcd_Cmd:
   588  0021                     ??_Lcd_Write_Char:	
   589                           ; 1 bytes @ 0x1
   590                           
   591                           
   592                           ; 1 bytes @ 0x1
   593  0021                     	ds	1
   594  0022                     ??__Umul8_16:
   595  0022                     Lcd_Write_Char@temp:	
   596                           ; 1 bytes @ 0x2
   597                           
   598  0022                     ___wmul@multiplicand:	
   599                           ; 1 bytes @ 0x2
   600                           
   601  0022                     ___awdiv@dividend:	
   602                           ; 2 bytes @ 0x2
   603                           
   604  0022                     ___lwdiv@dividend:	
   605                           ; 2 bytes @ 0x2
   606                           
   607                           
   608                           ; 2 bytes @ 0x2
   609  0022                     	ds	1
   610  0023                     Lcd_Cmd@a:
   611  0023                     Lcd_Write_Char@y:	
   612                           ; 1 bytes @ 0x3
   613                           
   614                           
   615                           ; 1 bytes @ 0x3
   616  0023                     	ds	1
   617  0024                     ?_Lcd_Set_Cursor:
   618  0024                     ??_Lcd_Init:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0024                     ??___awdiv:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0024                     ??___lwdiv:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0024                     ??___xxtofl:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0024                     Lcd_Set_Cursor@b:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0024                     Lcd_Write_Char@a:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0024                     ___wmul@product:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0024                     __Umul8_16@product:	
   640                           ; 2 bytes @ 0x4
   641                           
   642  0024                     ___fldiv@b:	
   643                           ; 2 bytes @ 0x4
   644                           
   645                           
   646                           ; 4 bytes @ 0x4
   647  0024                     	ds	1
   648  0025                     ??_Lcd_Set_Cursor:
   649  0025                     ??_Lcd_Write_String:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0025                     ___awdiv@counter:	
   653                           ; 1 bytes @ 0x5
   654                           
   655  0025                     ___lwdiv@counter:	
   656                           ; 1 bytes @ 0x5
   657                           
   658                           
   659                           ; 1 bytes @ 0x5
   660  0025                     	ds	1
   661  0026                     ___awdiv@sign:
   662  0026                     Lcd_Write_String@i:	
   663                           ; 1 bytes @ 0x6
   664                           
   665  0026                     ___lwdiv@quotient:	
   666                           ; 2 bytes @ 0x6
   667                           
   668  0026                     __Umul8_16@word_mpld:	
   669                           ; 2 bytes @ 0x6
   670                           
   671                           
   672                           ; 2 bytes @ 0x6
   673  0026                     	ds	1
   674  0027                     Lcd_Set_Cursor@a:
   675  0027                     ___awdiv@quotient:	
   676                           ; 1 bytes @ 0x7
   677                           
   678                           
   679                           ; 2 bytes @ 0x7
   680  0027                     	ds	1
   681  0028                     ??___fldiv:
   682  0028                     ?___lwmod:	
   683                           ; 1 bytes @ 0x8
   684                           
   685  0028                     Lcd_Set_Cursor@z:	
   686                           ; 2 bytes @ 0x8
   687                           
   688  0028                     Lcd_Write_String@a:	
   689                           ; 1 bytes @ 0x8
   690                           
   691  0028                     __Umul8_16@multiplier:	
   692                           ; 1 bytes @ 0x8
   693                           
   694  0028                     ___xxtofl@sign:	
   695                           ; 1 bytes @ 0x8
   696                           
   697  0028                     ___lwmod@divisor:	
   698                           ; 1 bytes @ 0x8
   699                           
   700                           
   701                           ; 2 bytes @ 0x8
   702  0028                     	ds	1
   703  0029                     ??_Cal_PID:
   704  0029                     ?___flmul:	
   705                           ; 1 bytes @ 0x9
   706                           
   707  0029                     Lcd_Set_Cursor@y:	
   708                           ; 4 bytes @ 0x9
   709                           
   710  0029                     ___xxtofl@exp:	
   711                           ; 1 bytes @ 0x9
   712                           
   713  0029                     ___flmul@b:	
   714                           ; 1 bytes @ 0x9
   715                           
   716                           
   717                           ; 4 bytes @ 0x9
   718  0029                     	ds	1
   719  002A                     Lcd_Set_Cursor@temp:
   720  002A                     ___lwmod@dividend:	
   721                           ; 1 bytes @ 0xA
   722                           
   723  002A                     ___xxtofl@arg:	
   724                           ; 2 bytes @ 0xA
   725                           
   726                           
   727                           ; 4 bytes @ 0xA
   728  002A                     	ds	2
   729  002C                     ??___lwmod:
   730                           
   731                           ; 1 bytes @ 0xC
   732  002C                     	ds	1
   733  002D                     ___lwmod@counter:
   734  002D                     ___fldiv@rem:	
   735                           ; 1 bytes @ 0xD
   736                           
   737  002D                     ___flmul@a:	
   738                           ; 4 bytes @ 0xD
   739                           
   740                           
   741                           ; 4 bytes @ 0xD
   742  002D                     	ds	1
   743  002E                     ?_sprintf:
   744  002E                     sprintf@f:	
   745                           ; 2 bytes @ 0xE
   746                           
   747                           
   748                           ; 1 bytes @ 0xE
   749  002E                     	ds	3
   750  0031                     ??_sprintf:
   751  0031                     ??___flmul:	
   752                           ; 1 bytes @ 0x11
   753                           
   754  0031                     ___fldiv@sign:	
   755                           ; 1 bytes @ 0x11
   756                           
   757                           
   758                           ; 1 bytes @ 0x11
   759  0031                     	ds	1
   760  0032                     ___fldiv@new_exp:
   761                           
   762                           ; 2 bytes @ 0x12
   763  0032                     	ds	2
   764  0034                     sprintf@ap:
   765  0034                     ___fldiv@grs:	
   766                           ; 1 bytes @ 0x14
   767                           
   768                           
   769                           ; 4 bytes @ 0x14
   770  0034                     	ds	1
   771  0035                     sprintf@flag:
   772                           
   773                           ; 1 bytes @ 0x15
   774  0035                     	ds	1
   775  0036                     sprintf@prec:
   776  0036                     ___flmul@sign:	
   777                           ; 1 bytes @ 0x16
   778                           
   779                           
   780                           ; 1 bytes @ 0x16
   781  0036                     	ds	1
   782  0037                     ___flmul@aexp:
   783  0037                     sprintf@val:	
   784                           ; 1 bytes @ 0x17
   785                           
   786                           
   787                           ; 2 bytes @ 0x17
   788  0037                     	ds	1
   789  0038                     ___fldiv@bexp:
   790  0038                     ___flmul@grs:	
   791                           ; 1 bytes @ 0x18
   792                           
   793                           
   794                           ; 4 bytes @ 0x18
   795  0038                     	ds	1
   796  0039                     sprintf@sp:
   797  0039                     ___fldiv@aexp:	
   798                           ; 1 bytes @ 0x19
   799                           
   800                           
   801                           ; 1 bytes @ 0x19
   802  0039                     	ds	1
   803  003A                     ?___fltol:
   804  003A                     sprintf@c:	
   805                           ; 4 bytes @ 0x1A
   806                           
   807  003A                     ___fltol@f1:	
   808                           ; 1 bytes @ 0x1A
   809                           
   810                           
   811                           ; 4 bytes @ 0x1A
   812  003A                     	ds	2
   813  003C                     ___flmul@bexp:
   814                           
   815                           ; 1 bytes @ 0x1C
   816  003C                     	ds	1
   817  003D                     ___flmul@prod:
   818                           
   819                           ; 4 bytes @ 0x1D
   820  003D                     	ds	1
   821  003E                     ??___fltol:
   822                           
   823                           ; 1 bytes @ 0x1E
   824  003E                     	ds	3
   825  0041                     ___flmul@temp:
   826                           
   827                           ; 2 bytes @ 0x21
   828  0041                     	ds	2
   829  0043                     ___fltol@sign1:
   830                           
   831                           ; 1 bytes @ 0x23
   832  0043                     	ds	1
   833  0044                     ___fltol@exp1:
   834                           
   835                           ; 1 bytes @ 0x24
   836  0044                     	ds	1
   837  0045                     ??_Read_Temp:
   838                           
   839                           ; 1 bytes @ 0x25
   840  0045                     	ds	2
   841  0047                     Read_Temp@TempValue:
   842                           
   843                           ; 4 bytes @ 0x27
   844  0047                     	ds	4
   845  004B                     ??_main:
   846                           
   847                           ; 1 bytes @ 0x2B
   848  004B                     	ds	1
   849                           
   850                           	psect	maintext
   851  057C                     __pmaintext:	
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 62 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  str            16    0[BANK1 ] unsigned char [16]
   862 ;; Return value:  Size  Location     Type
   863 ;;                  2  197[None  ] int 
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : B00/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0      16       0       0
   873 ;;      Temps:          0       1       0       0       0
   874 ;;      Totals:         0       1      16       0       0
   875 ;;Total ram usage:       17 bytes
   876 ;; Hardware stack levels required when called: 4
   877 ;; This function calls:
   878 ;;		_Cal_PID
   879 ;;		_Lcd_Clear
   880 ;;		_Lcd_Init
   881 ;;		_Lcd_Set_Cursor
   882 ;;		_Lcd_Write_String
   883 ;;		_Read_Temp
   884 ;;		_Servo_MoveTo
   885 ;;		_init_ADC
   886 ;;		_sprintf
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _main
   894  057C                     _main:
   895  057C                     l3246:	
   896                           ;incstack = 0
   897                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   898                           
   899                           
   900                           ;main.c: 64: ;main.c: 67:     RB3 = 1;
   901  057C  120A  158A  22E3  120A  118A  	fcall	_init_ADC
   902  0581                     l3248:
   903                           
   904                           ;main.c: 68:     RB7 = 0;
   905  0581  1683               	bsf	3,5	;RP0=1, select bank1
   906  0582  1303               	bcf	3,6	;RP1=0, select bank1
   907  0583  1405               	bsf	5,0	;volatile
   908  0584                     l3250:
   909                           
   910                           ;main.c: 72:     TRISB6 = 0;
   911  0584  1107               	bcf	7,2	;volatile
   912  0585                     l3252:
   913                           
   914                           ;main.c: 73:     RB6 = 1;
   915  0585  1283               	bcf	3,5	;RP0=0, select bank0
   916  0586  1303               	bcf	3,6	;RP1=0, select bank0
   917  0587  1507               	bsf	7,2	;volatile
   918  0588                     l3254:
   919                           
   920                           ;main.c: 74: 
   921  0588  3009               	movlw	9
   922  0589  0097               	movwf	23	;volatile
   923  058A                     l3256:
   924                           
   925                           ;main.c: 75: 
   926  058A  1683               	bsf	3,5	;RP0=1, select bank1
   927  058B  1303               	bcf	3,6	;RP1=0, select bank1
   928  058C  110C               	bcf	12,2	;volatile
   929  058D                     l3258:
   930                           
   931                           ;main.c: 76: 
   932  058D  1283               	bcf	3,5	;RP0=0, select bank0
   933  058E  1303               	bcf	3,6	;RP1=0, select bank0
   934  058F  110C               	bcf	12,2	;volatile
   935                           
   936                           ;main.c: 77: 
   937  0590  3000               	movlw	0
   938  0591  00A0               	movwf	Servo_MoveTo@a
   939  0592  00A1               	movwf	Servo_MoveTo@a+1
   940  0593  120A  158A  22F8  120A  118A  	fcall	_Servo_MoveTo
   941  0598                     l3260:
   942                           
   943                           ;main.c: 81: 
   944  0598  1683               	bsf	3,5	;RP0=1, select bank1
   945  0599  1303               	bcf	3,6	;RP1=0, select bank1
   946  059A  0188               	clrf	8	;volatile
   947  059B                     l3262:
   948                           
   949                           ;main.c: 82: 
   950  059B  1283               	bcf	3,5	;RP0=0, select bank0
   951  059C  1303               	bcf	3,6	;RP1=0, select bank0
   952  059D  1008               	bcf	8,0	;volatile
   953  059E                     l3264:
   954                           
   955                           ;main.c: 83: 
   956  059E  120A  158A  24D8  120A  118A  	fcall	_Lcd_Init
   957  05A3                     l3266:
   958                           
   959                           ;main.c: 87:     T1CKPS1 = 1;
   960  05A3  1683               	bsf	3,5	;RP0=1, select bank1
   961  05A4  1303               	bcf	3,6	;RP1=0, select bank1
   962  05A5  1606               	bsf	6,4	;volatile
   963  05A6                     l3268:
   964                           
   965                           ;main.c: 88:     TMR1ON = 1;
   966  05A6  1686               	bsf	6,5	;volatile
   967  05A7                     l3270:
   968                           
   969                           ;main.c: 93:     TMR2 = 0x06;
   970  05A7  1406               	bsf	6,0	;volatile
   971  05A8                     l3272:
   972                           
   973                           ;main.c: 97: 
   974  05A8  1186               	bcf	6,3	;volatile
   975  05A9                     l3274:
   976                           
   977                           ;main.c: 98: 
   978  05A9  1386               	bcf	6,7	;volatile
   979  05AA                     l3276:
   980                           
   981                           ;main.c: 99:     GIE = 1;
   982  05AA  1283               	bcf	3,5	;RP0=0, select bank0
   983  05AB  1303               	bcf	3,6	;RP1=0, select bank0
   984  05AC  1586               	bsf	6,3	;volatile
   985  05AD                     l3278:
   986                           
   987                           ;main.c: 100:     PEIE = 1;
   988  05AD  1386               	bcf	6,7	;volatile
   989  05AE                     l3280:
   990                           
   991                           ;main.c: 104:     TMR0IE = 0;
   992  05AE  1683               	bsf	3,5	;RP0=1, select bank1
   993  05AF  1303               	bcf	3,6	;RP1=0, select bank1
   994  05B0  1306               	bcf	6,6	;volatile
   995  05B1                     l3282:
   996                           
   997                           ;main.c: 105:     TMR0IF = 0;
   998  05B1  1283               	bcf	3,5	;RP0=0, select bank0
   999  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1000  05B3  1706               	bsf	6,6	;volatile
  1001  05B4                     l3284:
  1002                           
  1003                           ;main.c: 110: 
  1004  05B4  3038               	movlw	56
  1005  05B5  0081               	movwf	1	;volatile
  1006  05B6                     l3286:
  1007                           
  1008                           ;main.c: 111: 
  1009  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  1010  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  1011  05B8  0181               	clrf	1	;volatile
  1012  05B9                     l3288:
  1013                           
  1014                           ;main.c: 116:         Lcd_Clear();
  1015  05B9  30B1               	movlw	177
  1016  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1017  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1018  05BC  008F               	movwf	15	;volatile
  1019  05BD  30E0               	movlw	224
  1020  05BE  008E               	movwf	14	;volatile
  1021  05BF                     l3290:
  1022                           
  1023                           ;main.c: 117:         sprintf(str, "Set  = %d ", setPoint);
  1024  05BF  1090               	bcf	16,1	;volatile
  1025  05C0                     l3292:
  1026                           
  1027                           ;main.c: 118:         Lcd_Set_Cursor(1,1);
  1028  05C0  1210               	bcf	16,4	;volatile
  1029  05C1                     l3294:
  1030                           
  1031                           ;main.c: 119:         Lcd_Write_String(str);
  1032  05C1  1690               	bsf	16,5	;volatile
  1033  05C2                     l3296:
  1034                           
  1035                           ;main.c: 120:         sprintf(str, "Real = %d ", realValue);
  1036  05C2  1410               	bsf	16,0	;volatile
  1037                           
  1038                           ;main.c: 125:         Lcd_Write_String(str);
  1039  05C3  3006               	movlw	6
  1040  05C4  0091               	movwf	17	;volatile
  1041                           
  1042                           ;main.c: 126: 
  1043  05C5  3006               	movlw	6
  1044  05C6  0092               	movwf	18	;volatile
  1045  05C7                     l3298:
  1046                           
  1047                           ;main.c: 131:         }
  1048  05C7  178B               	bsf	11,7	;volatile
  1049  05C8                     l3300:
  1050                           
  1051                           ;main.c: 132:         else
  1052  05C8  170B               	bsf	11,6	;volatile
  1053  05C9                     l3302:
  1054                           
  1055                           ;main.c: 133:         {
  1056  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  1057  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  1058  05CB  1701               	bsf	1,6	;volatile
  1059  05CC                     l3304:
  1060                           
  1061                           ;main.c: 134:             RB6 = 1;
  1062  05CC  160B               	bsf	11,4	;volatile
  1063  05CD                     l3306:
  1064                           
  1065                           ;main.c: 135:             Servo_MoveTo(0);
  1066  05CD  158B               	bsf	11,3	;volatile
  1067  05CE                     l3308:
  1068                           
  1069                           ;main.c: 136:         }
  1070  05CE  128B               	bcf	11,5	;volatile
  1071  05CF                     l3310:
  1072                           
  1073                           ;main.c: 137: 
  1074  05CF  110B               	bcf	11,2	;volatile
  1075  05D0                     l3312:
  1076                           
  1077                           ;main.c: 138:         if(samp == 1)
  1078  05D0  140C               	bsf	12,0	;volatile
  1079  05D1                     l3314:
  1080                           
  1081                           ;main.c: 139:         {
  1082  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1083  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1084  05D3  100C               	bcf	12,0	;volatile
  1085  05D4                     l3316:
  1086                           
  1087                           ;main.c: 140:             Cal_PID();
  1088  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  1089  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  1090  05D6  148C               	bsf	12,1	;volatile
  1091  05D7                     l3318:
  1092                           
  1093                           ;main.c: 141:             samp = 0;
  1094  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1095  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1096  05D9  108C               	bcf	12,1	;volatile
  1097  05DA                     l3320:
  1098                           
  1099                           ;main.c: 145:     return 0;;main.c: 146: }
  1100  05DA  120A  158A  25A5  120A  118A  	fcall	_Read_Temp
  1101  05DF                     l3322:
  1102                           
  1103                           ;main.c: 148: void init_ADC (void)
  1104  05DF  120A  158A  22C3  120A  118A  	fcall	_Lcd_Clear
  1105  05E4                     l3324:
  1106                           
  1107                           ;main.c: 149: {
  1108  05E4  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1109  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1110  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1111  05E7  00CB               	movwf	??_main
  1112  05E8  084B               	movf	??_main,w
  1113  05E9  00AE               	movwf	sprintf@f
  1114  05EA  0863               	movf	_setPoint+1,w
  1115  05EB  00B0               	movwf	?_sprintf+2
  1116  05EC  0862               	movf	_setPoint,w
  1117  05ED  00AF               	movwf	?_sprintf+1
  1118  05EE  30A0               	movlw	(low (main@str| 0))& (0+255)
  1119  05EF  120A  118A  2683  120A  118A  	fcall	_sprintf
  1120  05F4                     l3326:
  1121                           
  1122                           ;main.c: 150: 
  1123  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1124  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1125  05F6  01A4               	clrf	Lcd_Set_Cursor@b
  1126  05F7  0AA4               	incf	Lcd_Set_Cursor@b,f
  1127  05F8  3001               	movlw	1
  1128  05F9  120A  158A  2480  120A  118A  	fcall	_Lcd_Set_Cursor
  1129  05FE                     l3328:
  1130                           
  1131                           ;main.c: 151:     ADCON1bits.ADCS2 = 0, ADCON0bits.ADCS1 = 1,ADCON0bits.ADCS0 = 0;
  1132  05FE  30A0               	movlw	(low (main@str| 0))& (0+255)
  1133  05FF  120A  158A  234C  120A  118A  	fcall	_Lcd_Write_String
  1134  0604                     l3330:
  1135                           
  1136                           ;main.c: 152: 
  1137  0604  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1138  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0607  00CB               	movwf	??_main
  1141  0608  084B               	movf	??_main,w
  1142  0609  00AE               	movwf	sprintf@f
  1143  060A  085F               	movf	_realValue+1,w
  1144  060B  00B0               	movwf	?_sprintf+2
  1145  060C  085E               	movf	_realValue,w
  1146  060D  00AF               	movwf	?_sprintf+1
  1147  060E  30A0               	movlw	(low (main@str| 0))& (0+255)
  1148  060F  120A  118A  2683  120A  118A  	fcall	_sprintf
  1149  0614                     l3332:
  1150                           
  1151                           ;main.c: 153:     ADCON0bits.CHS2 = 1, ADCON0bits.CHS1 = 0, ADCON0bits.CHS0 = 1;
  1152  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0616  01A4               	clrf	Lcd_Set_Cursor@b
  1155  0617  0AA4               	incf	Lcd_Set_Cursor@b,f
  1156  0618  3002               	movlw	2
  1157  0619  120A  158A  2480  120A  118A  	fcall	_Lcd_Set_Cursor
  1158  061E                     l3334:
  1159                           
  1160                           ;main.c: 154: 
  1161  061E  30A0               	movlw	(low (main@str| 0))& (0+255)
  1162  061F  120A  158A  234C  120A  118A  	fcall	_Lcd_Write_String
  1163  0624                     l3336:
  1164                           
  1165                           ;main.c: 155:     ADCON1bits.ADFM = 1;
  1166  0624  3012               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
  1167  0625  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0626  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0627  00CB               	movwf	??_main
  1170  0628  084B               	movf	??_main,w
  1171  0629  00AE               	movwf	sprintf@f
  1172  062A  0859               	movf	_PID_value+1,w
  1173  062B  00B0               	movwf	?_sprintf+2
  1174  062C  0858               	movf	_PID_value,w
  1175  062D  00AF               	movwf	?_sprintf+1
  1176  062E  30A0               	movlw	(low (main@str| 0))& (0+255)
  1177  062F  120A  118A  2683  120A  118A  	fcall	_sprintf
  1178  0634                     l3338:
  1179                           
  1180                           ;main.c: 156: 
  1181  0634  300C               	movlw	12
  1182  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0637  00CB               	movwf	??_main
  1185  0638  084B               	movf	??_main,w
  1186  0639  00A4               	movwf	Lcd_Set_Cursor@b
  1187  063A  3001               	movlw	1
  1188  063B  120A  158A  2480  120A  118A  	fcall	_Lcd_Set_Cursor
  1189  0640                     l3340:
  1190                           
  1191                           ;main.c: 157:     ADCON1bits.PCFG3 = 0, ADCON1bits.PCFG2 = 0, ADCON1bits.PCFG1 = 0, ADCO
      +                          N1bits.PCFG0 = 0;
  1192  0640  30A0               	movlw	(low (main@str| 0))& (0+255)
  1193  0641  120A  158A  234C  120A  118A  	fcall	_Lcd_Write_String
  1194  0646                     l3342:
  1195                           
  1196                           ;main.c: 159:     ADCON0bits.ADON = 1;
  1197  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0648  0863               	movf	_setPoint+1,w
  1200  0649  3A80               	xorlw	128
  1201  064A  00CB               	movwf	??_main
  1202  064B  085F               	movf	_realValue+1,w
  1203  064C  3A80               	xorlw	128
  1204  064D  024B               	subwf	??_main,w
  1205  064E  1D03               	skipz
  1206  064F  2E52               	goto	u4535
  1207  0650  085E               	movf	_realValue,w
  1208  0651  0262               	subwf	_setPoint,w
  1209  0652                     u4535:
  1210  0652  1803               	skipnc
  1211  0653  2E55               	goto	u4531
  1212  0654  2E56               	goto	u4530
  1213  0655                     u4531:
  1214  0655  2E63               	goto	l199
  1215  0656                     u4530:
  1216  0656                     l3344:
  1217                           
  1218                           ;main.c: 160: };main.c: 161: 
  1219  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0658  1306               	bcf	6,6	;volatile
  1222  0659                     l3346:
  1223                           
  1224                           ;main.c: 162: void Read_Temp (void)
  1225  0659  305A               	movlw	90
  1226  065A  00A0               	movwf	Servo_MoveTo@a
  1227  065B  3000               	movlw	0
  1228  065C  00A1               	movwf	Servo_MoveTo@a+1
  1229  065D  120A  158A  22F8  120A  118A  	fcall	_Servo_MoveTo
  1230                           
  1231                           ;main.c: 163: {
  1232  0662  2E6E               	goto	l3350
  1233  0663                     l199:	
  1234                           ;main.c: 164:     float TempValue = 0;
  1235                           
  1236                           
  1237                           ;main.c: 165:     ADCON0bits.GO_nDONE = 1;;main.c: 166:     while(ADCON0bits.GO_nDONE);
  1238  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0665  1706               	bsf	6,6	;volatile
  1241  0666                     l3348:
  1242                           
  1243                           ;main.c: 167:     TempValue = ADRESH*256 + ADRESL;
  1244  0666  3000               	movlw	0
  1245  0667  00A0               	movwf	Servo_MoveTo@a
  1246  0668  00A1               	movwf	Servo_MoveTo@a+1
  1247  0669  120A  158A  22F8  120A  118A  	fcall	_Servo_MoveTo
  1248  066E                     l3350:
  1249                           
  1250                           ;main.c: 170: }
  1251  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1252  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0670  034C               	decf	_samp,w
  1254  0671  044D               	iorwf	_samp+1,w
  1255  0672  1D03               	btfss	3,2
  1256  0673  2E75               	goto	u4541
  1257  0674  2E76               	goto	u4540
  1258  0675                     u4541:
  1259  0675  2DDA               	goto	l3320
  1260  0676                     u4540:
  1261  0676                     l3352:
  1262                           
  1263                           ;main.c: 171: ;main.c: 172: void Cal_PID(void)
  1264  0676  120A  158A  2699  120A  118A  	fcall	_Cal_PID
  1265  067B                     l3354:
  1266                           
  1267                           ;main.c: 173: {
  1268  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1269  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1270  067D  01CC               	clrf	_samp
  1271  067E  01CD               	clrf	_samp+1
  1272  067F  2DDA               	goto	l3320
  1273  0680  120A  118A  280C   	ljmp	start
  1274  0683                     __end_of_main:
  1275                           
  1276                           	psect	text1
  1277  0683                     __ptext1:	
  1278 ;; *************** function _sprintf *****************
  1279 ;; Defined at:
  1280 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  sp              1    wreg     PTR unsigned char 
  1283 ;;		 -> main@str(16), 
  1284 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1285 ;;		 -> STR_3(4), STR_2(11), STR_1(11), 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1288 ;;		 -> main@str(16), 
  1289 ;;  tmpval          4    0        struct .
  1290 ;;  val             2   23[BANK0 ] unsigned int 
  1291 ;;  cp              2    0        PTR const unsigned char 
  1292 ;;  len             2    0        unsigned int 
  1293 ;;  c               1   26[BANK0 ] unsigned char 
  1294 ;;  prec            1   22[BANK0 ] char 
  1295 ;;  flag            1   21[BANK0 ] unsigned char 
  1296 ;;  ap              1   20[BANK0 ] PTR void [1]
  1297 ;;		 -> ?_sprintf(2), 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2   14[BANK0 ] int 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       3       0       0       0
  1308 ;;      Locals:         0       7       0       0       0
  1309 ;;      Temps:          0       3       0       0       0
  1310 ;;      Totals:         0      13       0       0       0
  1311 ;;Total ram usage:       13 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 2
  1314 ;; This function calls:
  1315 ;;		___lwdiv
  1316 ;;		___lwmod
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _sprintf
  1324  0683                     _sprintf:
  1325                           
  1326                           ;incstack = 0
  1327                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1328                           ;sprintf@sp stored from wreg
  1329  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0685  00B9               	movwf	sprintf@sp
  1332  0686                     l3152:
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1335  0686  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1336  0687  00B1               	movwf	??_sprintf
  1337  0688  0831               	movf	??_sprintf,w
  1338  0689  00B4               	movwf	sprintf@ap
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1341  068A  2F56               	goto	l3204
  1342  068B                     l3154:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1345  068B  3025               	movlw	37
  1346  068C  063A               	xorwf	sprintf@c,w
  1347  068D  1903               	btfsc	3,2
  1348  068E  2E90               	goto	u4431
  1349  068F  2E91               	goto	u4430
  1350  0690                     u4431:
  1351  0690  2E9D               	goto	l3160
  1352  0691                     u4430:
  1353  0691                     l3156:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1356  0691  083A               	movf	sprintf@c,w
  1357  0692  00B1               	movwf	??_sprintf
  1358  0693  0839               	movf	sprintf@sp,w
  1359  0694  0084               	movwf	4
  1360  0695  0831               	movf	??_sprintf,w
  1361  0696  1383               	bcf	3,7	;select IRP bank0
  1362  0697  0080               	movwf	0
  1363  0698                     l3158:
  1364  0698  3001               	movlw	1
  1365  0699  00B1               	movwf	??_sprintf
  1366  069A  0831               	movf	??_sprintf,w
  1367  069B  07B9               	addwf	sprintf@sp,f
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1370  069C  2F56               	goto	l3204
  1371  069D                     l3160:
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1374  069D  01B5               	clrf	sprintf@flag
  1375  069E                     l3164:	
  1376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1377                           
  1378  069E  3001               	movlw	1
  1379  069F  07AE               	addwf	sprintf@f,f
  1380  06A0  30FF               	movlw	-1
  1381  06A1  072E               	addwf	sprintf@f,w
  1382  06A2  0084               	movwf	4
  1383  06A3  120A  158A  2000  120A  118A  	fcall	stringdir
  1384  06A8  00BA               	movwf	sprintf@c
  1385  06A9  00B1               	movwf	??_sprintf
  1386  06AA  01B2               	clrf	??_sprintf+1
  1387                           
  1388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1389                           ; Switch size 1, requested type "simple"
  1390                           ; Number of cases is 1, Range of values is 0 to 0
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte            4     3 (average)
  1394                           ; direct_byte           11     8 (fixed)
  1395                           ; jumptable            260     6 (fixed)
  1396                           ;	Chosen strategy is simple_byte
  1397  06AB  0832               	movf	??_sprintf+1,w
  1398  06AC  3A00               	xorlw	0	; case 0
  1399  06AD  1903               	skipnz
  1400  06AE  2EB0               	goto	l3376
  1401  06AF  2F56               	goto	l3204
  1402  06B0                     l3376:
  1403                           
  1404                           ; Switch size 1, requested type "simple"
  1405                           ; Number of cases is 3, Range of values is 0 to 105
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte           10     6 (average)
  1409                           ; jumptable            260     6 (fixed)
  1410                           ;	Chosen strategy is simple_byte
  1411  06B0  0831               	movf	??_sprintf,w
  1412  06B1  3A00               	xorlw	0	; case 0
  1413  06B2  1903               	skipnz
  1414  06B3  2F68               	goto	l3206
  1415  06B4  3A64               	xorlw	100	; case 100
  1416  06B5  1903               	skipnz
  1417  06B6  2EBB               	goto	l3166
  1418  06B7  3A0D               	xorlw	13	; case 105
  1419  06B8  1903               	skipnz
  1420  06B9  2EBB               	goto	l3166
  1421  06BA  2F56               	goto	l3204
  1422  06BB                     l3166:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1425  06BB  0834               	movf	sprintf@ap,w
  1426  06BC  0084               	movwf	4
  1427  06BD  1383               	bcf	3,7	;select IRP bank0
  1428  06BE  0800               	movf	0,w
  1429  06BF  00B7               	movwf	sprintf@val
  1430  06C0  0A84               	incf	4,f
  1431  06C1  0800               	movf	0,w
  1432  06C2  00B8               	movwf	sprintf@val+1
  1433  06C3                     l3168:
  1434  06C3  3002               	movlw	2
  1435  06C4  00B1               	movwf	??_sprintf
  1436  06C5  0831               	movf	??_sprintf,w
  1437  06C6  07B4               	addwf	sprintf@ap,f
  1438  06C7                     l3170:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1441  06C7  1FB8               	btfss	sprintf@val+1,7
  1442  06C8  2ECA               	goto	u4441
  1443  06C9  2ECB               	goto	u4440
  1444  06CA                     u4441:
  1445  06CA  2ED4               	goto	l3176
  1446  06CB                     u4440:
  1447  06CB                     l3172:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1450  06CB  3003               	movlw	3
  1451  06CC  00B1               	movwf	??_sprintf
  1452  06CD  0831               	movf	??_sprintf,w
  1453  06CE  04B5               	iorwf	sprintf@flag,f
  1454  06CF                     l3174:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1457  06CF  09B7               	comf	sprintf@val,f
  1458  06D0  09B8               	comf	sprintf@val+1,f
  1459  06D1  0AB7               	incf	sprintf@val,f
  1460  06D2  1903               	skipnz
  1461  06D3  0AB8               	incf	sprintf@val+1,f
  1462  06D4                     l3176:
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1465  06D4  01BA               	clrf	sprintf@c
  1466  06D5  0ABA               	incf	sprintf@c,f
  1467  06D6                     l3182:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1470  06D6  083A               	movf	sprintf@c,w
  1471  06D7  00B1               	movwf	??_sprintf
  1472  06D8  0731               	addwf	??_sprintf,w
  1473  06D9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1474  06DA  0084               	movwf	4
  1475  06DB  120A  158A  2000  120A  118A  	fcall	stringdir
  1476  06E0  00B2               	movwf	??_sprintf+1
  1477  06E1  120A  158A  2000  120A  118A  	fcall	stringdir
  1478  06E6  00B3               	movwf	??_sprintf+2
  1479  06E7  0833               	movf	??_sprintf+2,w
  1480  06E8  0238               	subwf	sprintf@val+1,w
  1481  06E9  1D03               	skipz
  1482  06EA  2EED               	goto	u4455
  1483  06EB  0832               	movf	??_sprintf+1,w
  1484  06EC  0237               	subwf	sprintf@val,w
  1485  06ED                     u4455:
  1486  06ED  1803               	skipnc
  1487  06EE  2EF0               	goto	u4451
  1488  06EF  2EF1               	goto	u4450
  1489  06F0                     u4451:
  1490  06F0  2EF2               	goto	l3186
  1491  06F1                     u4450:
  1492  06F1  2EFC               	goto	l3188
  1493  06F2                     l3186:
  1494  06F2  3001               	movlw	1
  1495  06F3  00B1               	movwf	??_sprintf
  1496  06F4  0831               	movf	??_sprintf,w
  1497  06F5  07BA               	addwf	sprintf@c,f
  1498  06F6  3005               	movlw	5
  1499  06F7  063A               	xorwf	sprintf@c,w
  1500  06F8  1D03               	btfss	3,2
  1501  06F9  2EFB               	goto	u4461
  1502  06FA  2EFC               	goto	u4460
  1503  06FB                     u4461:
  1504  06FB  2ED6               	goto	l3182
  1505  06FC                     u4460:
  1506  06FC                     l3188:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1509  06FC  0835               	movf	sprintf@flag,w
  1510  06FD  3903               	andlw	3
  1511  06FE  1903               	btfsc	3,2
  1512  06FF  2F01               	goto	u4471
  1513  0700  2F02               	goto	u4470
  1514  0701                     u4471:
  1515  0701  2F0D               	goto	l3194
  1516  0702                     u4470:
  1517  0702                     l3190:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1520  0702  302D               	movlw	45
  1521  0703  00B1               	movwf	??_sprintf
  1522  0704  0839               	movf	sprintf@sp,w
  1523  0705  0084               	movwf	4
  1524  0706  0831               	movf	??_sprintf,w
  1525  0707  1383               	bcf	3,7	;select IRP bank0
  1526  0708  0080               	movwf	0
  1527  0709                     l3192:
  1528  0709  3001               	movlw	1
  1529  070A  00B1               	movwf	??_sprintf
  1530  070B  0831               	movf	??_sprintf,w
  1531  070C  07B9               	addwf	sprintf@sp,f
  1532  070D                     l3194:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1535  070D  083A               	movf	sprintf@c,w
  1536  070E  00B1               	movwf	??_sprintf
  1537  070F  0831               	movf	??_sprintf,w
  1538  0710  00B6               	movwf	sprintf@prec
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1541  0711  2F4D               	goto	l3202
  1542  0712                     l3196:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1545  0712  300A               	movlw	10
  1546  0713  00A8               	movwf	___lwmod@divisor
  1547  0714  3000               	movlw	0
  1548  0715  00A9               	movwf	___lwmod@divisor+1
  1549  0716  0836               	movf	sprintf@prec,w
  1550  0717  00B1               	movwf	??_sprintf
  1551  0718  0731               	addwf	??_sprintf,w
  1552  0719  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1553  071A  0084               	movwf	4
  1554  071B  120A  158A  2000  120A  118A  	fcall	stringdir
  1555  0720  00A0               	movwf	___lwdiv@divisor
  1556  0721  120A  158A  2000  120A  118A  	fcall	stringdir
  1557  0726  00A1               	movwf	___lwdiv@divisor+1
  1558  0727  0838               	movf	sprintf@val+1,w
  1559  0728  00A3               	movwf	___lwdiv@dividend+1
  1560  0729  0837               	movf	sprintf@val,w
  1561  072A  00A2               	movwf	___lwdiv@dividend
  1562  072B  120A  158A  243A  120A  118A  	fcall	___lwdiv
  1563  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0732  0821               	movf	?___lwdiv+1,w
  1566  0733  00AB               	movwf	___lwmod@dividend+1
  1567  0734  0820               	movf	?___lwdiv,w
  1568  0735  00AA               	movwf	___lwmod@dividend
  1569  0736  120A  158A  23C1  120A  118A  	fcall	___lwmod
  1570  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1571  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1572  073D  0828               	movf	?___lwmod,w
  1573  073E  3E30               	addlw	48
  1574  073F  00B2               	movwf	??_sprintf+1
  1575  0740  0832               	movf	??_sprintf+1,w
  1576  0741  00BA               	movwf	sprintf@c
  1577  0742                     l3198:
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1580  0742  083A               	movf	sprintf@c,w
  1581  0743  00B1               	movwf	??_sprintf
  1582  0744  0839               	movf	sprintf@sp,w
  1583  0745  0084               	movwf	4
  1584  0746  0831               	movf	??_sprintf,w
  1585  0747  1383               	bcf	3,7	;select IRP bank0
  1586  0748  0080               	movwf	0
  1587  0749                     l3200:
  1588  0749  3001               	movlw	1
  1589  074A  00B1               	movwf	??_sprintf
  1590  074B  0831               	movf	??_sprintf,w
  1591  074C  07B9               	addwf	sprintf@sp,f
  1592  074D                     l3202:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1595  074D  30FF               	movlw	255
  1596  074E  00B1               	movwf	??_sprintf
  1597  074F  0831               	movf	??_sprintf,w
  1598  0750  07B6               	addwf	sprintf@prec,f
  1599  0751  0A36               	incf	sprintf@prec,w
  1600  0752  1D03               	btfss	3,2
  1601  0753  2F55               	goto	u4481
  1602  0754  2F56               	goto	u4480
  1603  0755                     u4481:
  1604  0755  2F12               	goto	l3196
  1605  0756                     u4480:
  1606  0756                     l3204:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1609  0756  3001               	movlw	1
  1610  0757  07AE               	addwf	sprintf@f,f
  1611  0758  30FF               	movlw	-1
  1612  0759  072E               	addwf	sprintf@f,w
  1613  075A  0084               	movwf	4
  1614  075B  120A  158A  2000  120A  118A  	fcall	stringdir
  1615  0760  00B1               	movwf	??_sprintf
  1616  0761  0831               	movf	??_sprintf,w
  1617  0762  00BA               	movwf	sprintf@c
  1618  0763  083A               	movf	sprintf@c,w
  1619  0764  1D03               	btfss	3,2
  1620  0765  2F67               	goto	u4491
  1621  0766  2F68               	goto	u4490
  1622  0767                     u4491:
  1623  0767  2E8B               	goto	l3154
  1624  0768                     u4490:
  1625  0768                     l3206:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1628  0768  0839               	movf	sprintf@sp,w
  1629  0769  0084               	movwf	4
  1630  076A  1383               	bcf	3,7	;select IRP bank0
  1631  076B  0180               	clrf	0
  1632  076C                     l348:
  1633  076C  0008               	return
  1634  076D                     __end_of_sprintf:
  1635                           
  1636                           	psect	text2
  1637  0BC1                     __ptext2:	
  1638 ;; *************** function ___lwmod *****************
  1639 ;; Defined at:
  1640 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  divisor         2    8[BANK0 ] unsigned int 
  1643 ;;  dividend        2   10[BANK0 ] unsigned int 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  counter         1   13[BANK0 ] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2    8[BANK0 ] unsigned int 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       4       0       0       0
  1656 ;;      Locals:         0       1       0       0       0
  1657 ;;      Temps:          0       1       0       0       0
  1658 ;;      Totals:         0       6       0       0       0
  1659 ;;Total ram usage:        6 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_sprintf
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function ___lwmod
  1671  0BC1                     ___lwmod:
  1672  0BC1                     l2748:	
  1673                           ;incstack = 0
  1674                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1675                           
  1676  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0BC3  0828               	movf	___lwmod@divisor,w
  1679  0BC4  0429               	iorwf	___lwmod@divisor+1,w
  1680  0BC5  1903               	btfsc	3,2
  1681  0BC6  2BC8               	goto	u3491
  1682  0BC7  2BC9               	goto	u3490
  1683  0BC8                     u3491:
  1684  0BC8  2BF8               	goto	l2766
  1685  0BC9                     u3490:
  1686  0BC9                     l2750:
  1687  0BC9  01AD               	clrf	___lwmod@counter
  1688  0BCA  0AAD               	incf	___lwmod@counter,f
  1689  0BCB  2BD7               	goto	l2756
  1690  0BCC                     l2752:
  1691  0BCC  3001               	movlw	1
  1692  0BCD                     u3505:
  1693  0BCD  1003               	clrc
  1694  0BCE  0DA8               	rlf	___lwmod@divisor,f
  1695  0BCF  0DA9               	rlf	___lwmod@divisor+1,f
  1696  0BD0  3EFF               	addlw	-1
  1697  0BD1  1D03               	skipz
  1698  0BD2  2BCD               	goto	u3505
  1699  0BD3                     l2754:
  1700  0BD3  3001               	movlw	1
  1701  0BD4  00AC               	movwf	??___lwmod
  1702  0BD5  082C               	movf	??___lwmod,w
  1703  0BD6  07AD               	addwf	___lwmod@counter,f
  1704  0BD7                     l2756:
  1705  0BD7  1FA9               	btfss	___lwmod@divisor+1,7
  1706  0BD8  2BDA               	goto	u3511
  1707  0BD9  2BDB               	goto	u3510
  1708  0BDA                     u3511:
  1709  0BDA  2BCC               	goto	l2752
  1710  0BDB                     u3510:
  1711  0BDB                     l2758:
  1712  0BDB  0829               	movf	___lwmod@divisor+1,w
  1713  0BDC  022B               	subwf	___lwmod@dividend+1,w
  1714  0BDD  1D03               	skipz
  1715  0BDE  2BE1               	goto	u3525
  1716  0BDF  0828               	movf	___lwmod@divisor,w
  1717  0BE0  022A               	subwf	___lwmod@dividend,w
  1718  0BE1                     u3525:
  1719  0BE1  1C03               	skipc
  1720  0BE2  2BE4               	goto	u3521
  1721  0BE3  2BE5               	goto	u3520
  1722  0BE4                     u3521:
  1723  0BE4  2BEB               	goto	l2762
  1724  0BE5                     u3520:
  1725  0BE5                     l2760:
  1726  0BE5  0828               	movf	___lwmod@divisor,w
  1727  0BE6  02AA               	subwf	___lwmod@dividend,f
  1728  0BE7  0829               	movf	___lwmod@divisor+1,w
  1729  0BE8  1C03               	skipc
  1730  0BE9  03AB               	decf	___lwmod@dividend+1,f
  1731  0BEA  02AB               	subwf	___lwmod@dividend+1,f
  1732  0BEB                     l2762:
  1733  0BEB  3001               	movlw	1
  1734  0BEC                     u3535:
  1735  0BEC  1003               	clrc
  1736  0BED  0CA9               	rrf	___lwmod@divisor+1,f
  1737  0BEE  0CA8               	rrf	___lwmod@divisor,f
  1738  0BEF  3EFF               	addlw	-1
  1739  0BF0  1D03               	skipz
  1740  0BF1  2BEC               	goto	u3535
  1741  0BF2                     l2764:
  1742  0BF2  3001               	movlw	1
  1743  0BF3  02AD               	subwf	___lwmod@counter,f
  1744  0BF4  1D03               	btfss	3,2
  1745  0BF5  2BF7               	goto	u3541
  1746  0BF6  2BF8               	goto	u3540
  1747  0BF7                     u3541:
  1748  0BF7  2BDB               	goto	l2758
  1749  0BF8                     u3540:
  1750  0BF8                     l2766:
  1751  0BF8  082B               	movf	___lwmod@dividend+1,w
  1752  0BF9  00A9               	movwf	?___lwmod+1
  1753  0BFA  082A               	movf	___lwmod@dividend,w
  1754  0BFB  00A8               	movwf	?___lwmod
  1755  0BFC                     l634:
  1756  0BFC  0008               	return
  1757  0BFD                     __end_of___lwmod:
  1758                           
  1759                           	psect	text3
  1760  0C3A                     __ptext3:	
  1761 ;; *************** function ___lwdiv *****************
  1762 ;; Defined at:
  1763 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  divisor         2    0[BANK0 ] unsigned int 
  1766 ;;  dividend        2    2[BANK0 ] unsigned int 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  quotient        2    6[BANK0 ] unsigned int 
  1769 ;;  counter         1    5[BANK0 ] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2    0[BANK0 ] unsigned int 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       4       0       0       0
  1780 ;;      Locals:         0       3       0       0       0
  1781 ;;      Temps:          0       1       0       0       0
  1782 ;;      Totals:         0       8       0       0       0
  1783 ;;Total ram usage:        8 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_sprintf
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function ___lwdiv
  1795  0C3A                     ___lwdiv:
  1796  0C3A                     l2722:	
  1797                           ;incstack = 0
  1798                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1799                           
  1800  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0C3C  01A6               	clrf	___lwdiv@quotient
  1803  0C3D  01A7               	clrf	___lwdiv@quotient+1
  1804  0C3E                     l2724:
  1805  0C3E  0820               	movf	___lwdiv@divisor,w
  1806  0C3F  0421               	iorwf	___lwdiv@divisor+1,w
  1807  0C40  1903               	btfsc	3,2
  1808  0C41  2C43               	goto	u3421
  1809  0C42  2C44               	goto	u3420
  1810  0C43                     u3421:
  1811  0C43  2C7B               	goto	l2744
  1812  0C44                     u3420:
  1813  0C44                     l2726:
  1814  0C44  01A5               	clrf	___lwdiv@counter
  1815  0C45  0AA5               	incf	___lwdiv@counter,f
  1816  0C46  2C52               	goto	l2732
  1817  0C47                     l2728:
  1818  0C47  3001               	movlw	1
  1819  0C48                     u3435:
  1820  0C48  1003               	clrc
  1821  0C49  0DA0               	rlf	___lwdiv@divisor,f
  1822  0C4A  0DA1               	rlf	___lwdiv@divisor+1,f
  1823  0C4B  3EFF               	addlw	-1
  1824  0C4C  1D03               	skipz
  1825  0C4D  2C48               	goto	u3435
  1826  0C4E                     l2730:
  1827  0C4E  3001               	movlw	1
  1828  0C4F  00A4               	movwf	??___lwdiv
  1829  0C50  0824               	movf	??___lwdiv,w
  1830  0C51  07A5               	addwf	___lwdiv@counter,f
  1831  0C52                     l2732:
  1832  0C52  1FA1               	btfss	___lwdiv@divisor+1,7
  1833  0C53  2C55               	goto	u3441
  1834  0C54  2C56               	goto	u3440
  1835  0C55                     u3441:
  1836  0C55  2C47               	goto	l2728
  1837  0C56                     u3440:
  1838  0C56                     l2734:
  1839  0C56  3001               	movlw	1
  1840  0C57                     u3455:
  1841  0C57  1003               	clrc
  1842  0C58  0DA6               	rlf	___lwdiv@quotient,f
  1843  0C59  0DA7               	rlf	___lwdiv@quotient+1,f
  1844  0C5A  3EFF               	addlw	-1
  1845  0C5B  1D03               	skipz
  1846  0C5C  2C57               	goto	u3455
  1847  0C5D  0821               	movf	___lwdiv@divisor+1,w
  1848  0C5E  0223               	subwf	___lwdiv@dividend+1,w
  1849  0C5F  1D03               	skipz
  1850  0C60  2C63               	goto	u3465
  1851  0C61  0820               	movf	___lwdiv@divisor,w
  1852  0C62  0222               	subwf	___lwdiv@dividend,w
  1853  0C63                     u3465:
  1854  0C63  1C03               	skipc
  1855  0C64  2C66               	goto	u3461
  1856  0C65  2C67               	goto	u3460
  1857  0C66                     u3461:
  1858  0C66  2C6E               	goto	l2740
  1859  0C67                     u3460:
  1860  0C67                     l2736:
  1861  0C67  0820               	movf	___lwdiv@divisor,w
  1862  0C68  02A2               	subwf	___lwdiv@dividend,f
  1863  0C69  0821               	movf	___lwdiv@divisor+1,w
  1864  0C6A  1C03               	skipc
  1865  0C6B  03A3               	decf	___lwdiv@dividend+1,f
  1866  0C6C  02A3               	subwf	___lwdiv@dividend+1,f
  1867  0C6D                     l2738:
  1868  0C6D  1426               	bsf	___lwdiv@quotient,0
  1869  0C6E                     l2740:
  1870  0C6E  3001               	movlw	1
  1871  0C6F                     u3475:
  1872  0C6F  1003               	clrc
  1873  0C70  0CA1               	rrf	___lwdiv@divisor+1,f
  1874  0C71  0CA0               	rrf	___lwdiv@divisor,f
  1875  0C72  3EFF               	addlw	-1
  1876  0C73  1D03               	skipz
  1877  0C74  2C6F               	goto	u3475
  1878  0C75                     l2742:
  1879  0C75  3001               	movlw	1
  1880  0C76  02A5               	subwf	___lwdiv@counter,f
  1881  0C77  1D03               	btfss	3,2
  1882  0C78  2C7A               	goto	u3481
  1883  0C79  2C7B               	goto	u3480
  1884  0C7A                     u3481:
  1885  0C7A  2C56               	goto	l2734
  1886  0C7B                     u3480:
  1887  0C7B                     l2744:
  1888  0C7B  0827               	movf	___lwdiv@quotient+1,w
  1889  0C7C  00A1               	movwf	?___lwdiv+1
  1890  0C7D  0826               	movf	___lwdiv@quotient,w
  1891  0C7E  00A0               	movwf	?___lwdiv
  1892  0C7F                     l624:
  1893  0C7F  0008               	return
  1894  0C80                     __end_of___lwdiv:
  1895                           
  1896                           	psect	text4
  1897  0AE3                     __ptext4:	
  1898 ;; *************** function _init_ADC *****************
  1899 ;; Defined at:
  1900 ;;		line 180 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		None
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _init_ADC
  1930  0AE3                     _init_ADC:
  1931  0AE3                     l3136:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _init_ADC: []
  1934                           
  1935                           
  1936                           ;main.c: 183:     PID_d = kd*(PID_error - PID_error_1);
  1937  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0AE4  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0AE5  131F               	bcf	31,6	;volatile
  1940  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0AE8  179F               	bsf	31,7	;volatile
  1943  0AE9  131F               	bcf	31,6	;volatile
  1944                           
  1945                           ;main.c: 185:     PID_value = PID_p + PID_i + PID_d;
  1946  0AEA  169F               	bsf	31,5	;volatile
  1947  0AEB  121F               	bcf	31,4	;volatile
  1948  0AEC  159F               	bsf	31,3	;volatile
  1949                           
  1950                           ;main.c: 187:     PID_error_1 = PID_error;
  1951  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0AEF  179F               	bsf	31,7	;volatile
  1954                           
  1955                           ;main.c: 189:         PID_value = 1600;
  1956  0AF0  119F               	bcf	31,3	;volatile
  1957  0AF1  111F               	bcf	31,2	;volatile
  1958  0AF2  109F               	bcf	31,1	;volatile
  1959  0AF3  101F               	bcf	31,0	;volatile
  1960                           
  1961                           ;main.c: 191:         PID_value = 8400;
  1962  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0AF6  141F               	bsf	31,0	;volatile
  1965  0AF7                     l207:
  1966  0AF7  0008               	return
  1967  0AF8                     __end_of_init_ADC:
  1968                           
  1969                           	psect	text5
  1970  0AF8                     __ptext5:	
  1971 ;; *************** function _Servo_MoveTo *****************
  1972 ;; Defined at:
  1973 ;;		line 305 in file "main.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  a               2    0[BANK0 ] int 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       2       0       0       0
  1988 ;;      Locals:         0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0
  1990 ;;      Totals:         0       2       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _Servo_MoveTo
  2003  0AF8                     _Servo_MoveTo:
  2004  0AF8                     l3138:	
  2005                           ;incstack = 0
  2006                           ; Regs used in _Servo_MoveTo: [wreg+status,2+status,0]
  2007                           
  2008                           
  2009                           ;main.c: 305: void Servo_MoveTo(int a);main.c: 306: {;main.c: 307:     if(a==0)
  2010  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0AFA  0820               	movf	Servo_MoveTo@a,w
  2013  0AFB  0421               	iorwf	Servo_MoveTo@a+1,w
  2014  0AFC  1D03               	btfss	3,2
  2015  0AFD  2AFF               	goto	u4401
  2016  0AFE  2B00               	goto	u4400
  2017  0AFF                     u4401:
  2018  0AFF  2B04               	goto	l3142
  2019  0B00                     u4400:
  2020  0B00                     l3140:
  2021                           
  2022                           ;main.c: 308:     {;main.c: 309:         CCPR1 = 0xB430;
  2023  0B00  30B4               	movlw	180
  2024  0B01  0096               	movwf	22	;volatile
  2025  0B02  3030               	movlw	48
  2026  0B03  0095               	movwf	21	;volatile
  2027  0B04                     l3142:
  2028                           
  2029                           ;main.c: 311:     if(a==90)
  2030  0B04  305A               	movlw	90
  2031  0B05  0620               	xorwf	Servo_MoveTo@a,w
  2032  0B06  0421               	iorwf	Servo_MoveTo@a+1,w
  2033  0B07  1D03               	btfss	3,2
  2034  0B08  2B0A               	goto	u4411
  2035  0B09  2B0B               	goto	u4410
  2036  0B0A                     u4411:
  2037  0B0A  2B0F               	goto	l238
  2038  0B0B                     u4410:
  2039  0B0B                     l3144:
  2040                           
  2041                           ;main.c: 312:     {;main.c: 313:         CCPR1 = 0xB7A8;
  2042  0B0B  30B7               	movlw	183
  2043  0B0C  0096               	movwf	22	;volatile
  2044  0B0D  30A8               	movlw	168
  2045  0B0E  0095               	movwf	21	;volatile
  2046  0B0F                     l238:
  2047  0B0F  0008               	return
  2048  0B10                     __end_of_Servo_MoveTo:
  2049                           
  2050                           	psect	text6
  2051  0DA5                     __ptext6:	
  2052 ;; *************** function _Read_Temp *****************
  2053 ;; Defined at:
  2054 ;;		line 194 in file "main.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  TempValue       4   39[BANK0 ] float 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         0       0       0       0       0
  2069 ;;      Locals:         0       4       0       0       0
  2070 ;;      Temps:          0       2       0       0       0
  2071 ;;      Totals:         0       6       0       0       0
  2072 ;;Total ram usage:        6 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 3
  2075 ;; This function calls:
  2076 ;;		___fldiv
  2077 ;;		___flmul
  2078 ;;		___fltol
  2079 ;;		___xxtofl
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _Read_Temp
  2087  0DA5                     _Read_Temp:
  2088  0DA5                     l3146:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _Read_Temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2091                           
  2092  0DA5                     l3148:
  2093  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0DA7  151F               	bsf	31,2	;volatile
  2096  0DA8                     l210:
  2097  0DA8  191F               	btfsc	31,2	;volatile
  2098  0DA9  2DAB               	goto	u4421
  2099  0DAA  2DAC               	goto	u4420
  2100  0DAB                     u4421:
  2101  0DAB  2DA8               	goto	l210
  2102  0DAC                     u4420:
  2103  0DAC                     l3150:
  2104  0DAC  081E               	movf	30,w	;volatile
  2105  0DAD  00C5               	movwf	??_Read_Temp
  2106  0DAE  01C6               	clrf	??_Read_Temp+1
  2107  0DAF  0845               	movf	??_Read_Temp,w
  2108  0DB0  00C6               	movwf	??_Read_Temp+1
  2109  0DB1  01C5               	clrf	??_Read_Temp
  2110  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0DB4  081E               	movf	30,w	;volatile
  2113  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0DB7  0745               	addwf	??_Read_Temp,w
  2116  0DB8  00A0               	movwf	___xxtofl@val
  2117  0DB9  3000               	movlw	0
  2118  0DBA  1803               	skipnc
  2119  0DBB  3001               	movlw	1
  2120  0DBC  0746               	addwf	??_Read_Temp+1,w
  2121  0DBD  00A1               	movwf	___xxtofl@val+1
  2122  0DBE  01A2               	clrf	___xxtofl@val+2
  2123  0DBF  1BA1               	btfsc	___xxtofl@val+1,7
  2124  0DC0  03A2               	decf	___xxtofl@val+2,f
  2125  0DC1  0822               	movf	___xxtofl@val+2,w
  2126  0DC2  00A3               	movwf	___xxtofl@val+3
  2127  0DC3  3001               	movlw	1
  2128  0DC4  120A  158A  2744  120A  158A  	fcall	___xxtofl
  2129  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2130  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0DCB  0823               	movf	?___xxtofl+3,w
  2132  0DCC  00CA               	movwf	Read_Temp@TempValue+3
  2133  0DCD  0822               	movf	?___xxtofl+2,w
  2134  0DCE  00C9               	movwf	Read_Temp@TempValue+2
  2135  0DCF  0821               	movf	?___xxtofl+1,w
  2136  0DD0  00C8               	movwf	Read_Temp@TempValue+1
  2137  0DD1  0820               	movf	?___xxtofl,w
  2138  0DD2  00C7               	movwf	Read_Temp@TempValue
  2139  0DD3  3040               	movlw	64
  2140  0DD4  00AC               	movwf	___flmul@b+3
  2141  0DD5  309C               	movlw	156
  2142  0DD6  00AB               	movwf	___flmul@b+2
  2143  0DD7  3067               	movlw	103
  2144  0DD8  00AA               	movwf	___flmul@b+1
  2145  0DD9  301A               	movlw	26
  2146  0DDA  00A9               	movwf	___flmul@b
  2147  0DDB  084A               	movf	Read_Temp@TempValue+3,w
  2148  0DDC  00B0               	movwf	___flmul@a+3
  2149  0DDD  0849               	movf	Read_Temp@TempValue+2,w
  2150  0DDE  00AF               	movwf	___flmul@a+2
  2151  0DDF  0848               	movf	Read_Temp@TempValue+1,w
  2152  0DE0  00AE               	movwf	___flmul@a+1
  2153  0DE1  0847               	movf	Read_Temp@TempValue,w
  2154  0DE2  00AD               	movwf	___flmul@a
  2155  0DE3  120A  118A  203E  120A  158A  	fcall	___flmul
  2156  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0DEA  082C               	movf	?___flmul+3,w
  2159  0DEB  00CA               	movwf	Read_Temp@TempValue+3
  2160  0DEC  082B               	movf	?___flmul+2,w
  2161  0DED  00C9               	movwf	Read_Temp@TempValue+2
  2162  0DEE  082A               	movf	?___flmul+1,w
  2163  0DEF  00C8               	movwf	Read_Temp@TempValue+1
  2164  0DF0  0829               	movf	?___flmul,w
  2165  0DF1  00C7               	movwf	Read_Temp@TempValue
  2166  0DF2  084A               	movf	Read_Temp@TempValue+3,w
  2167  0DF3  00A7               	movwf	___fldiv@b+3
  2168  0DF4  0849               	movf	Read_Temp@TempValue+2,w
  2169  0DF5  00A6               	movwf	___fldiv@b+2
  2170  0DF6  0848               	movf	Read_Temp@TempValue+1,w
  2171  0DF7  00A5               	movwf	___fldiv@b+1
  2172  0DF8  0847               	movf	Read_Temp@TempValue,w
  2173  0DF9  00A4               	movwf	___fldiv@b
  2174  0DFA  3041               	movlw	65
  2175  0DFB  00A3               	movwf	___fldiv@a+3
  2176  0DFC  3020               	movlw	32
  2177  0DFD  00A2               	movwf	___fldiv@a+2
  2178  0DFE  3000               	movlw	0
  2179  0DFF  00A1               	movwf	___fldiv@a+1
  2180  0E00  3000               	movlw	0
  2181  0E01  00A0               	movwf	___fldiv@a
  2182  0E02  120A  118A  239F  120A  158A  	fcall	___fldiv
  2183  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0E09  0823               	movf	?___fldiv+3,w
  2186  0E0A  00BD               	movwf	___fltol@f1+3
  2187  0E0B  0822               	movf	?___fldiv+2,w
  2188  0E0C  00BC               	movwf	___fltol@f1+2
  2189  0E0D  0821               	movf	?___fldiv+1,w
  2190  0E0E  00BB               	movwf	___fltol@f1+1
  2191  0E0F  0820               	movf	?___fldiv,w
  2192  0E10  00BA               	movwf	___fltol@f1
  2193  0E11  120A  158A  261D  120A  158A  	fcall	___fltol
  2194  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0E18  083B               	movf	?___fltol+1,w
  2197  0E19  00DF               	movwf	_realValue+1
  2198  0E1A  083A               	movf	?___fltol,w
  2199  0E1B  00DE               	movwf	_realValue
  2200  0E1C                     l213:
  2201  0E1C  0008               	return
  2202  0E1D                     __end_of_Read_Temp:
  2203                           
  2204                           	psect	text7
  2205  0F44                     __ptext7:	
  2206 ;; *************** function ___xxtofl *****************
  2207 ;; Defined at:
  2208 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  sign            1    wreg     unsigned char 
  2211 ;;  val             4    0[BANK0 ] long 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  sign            1    8[BANK0 ] unsigned char 
  2214 ;;  arg             4   10[BANK0 ] unsigned long 
  2215 ;;  exp             1    9[BANK0 ] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  4    0[BANK0 ] unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       4       0       0       0
  2226 ;;      Locals:         0       6       0       0       0
  2227 ;;      Temps:          0       4       0       0       0
  2228 ;;      Totals:         0      14       0       0       0
  2229 ;;Total ram usage:       14 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_Read_Temp
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function ___xxtofl
  2241  0F44                     ___xxtofl:
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2245                           ;___xxtofl@sign stored from wreg
  2246  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0F46  00A8               	movwf	___xxtofl@sign
  2249  0F47                     l3052:
  2250  0F47  0828               	movf	___xxtofl@sign,w
  2251  0F48  1903               	btfsc	3,2
  2252  0F49  2F4B               	goto	u4211
  2253  0F4A  2F4C               	goto	u4210
  2254  0F4B                     u4211:
  2255  0F4B  2F60               	goto	l3058
  2256  0F4C                     u4210:
  2257  0F4C                     l3054:
  2258  0F4C  1FA3               	btfss	___xxtofl@val+3,7
  2259  0F4D  2F4F               	goto	u4221
  2260  0F4E  2F50               	goto	u4220
  2261  0F4F                     u4221:
  2262  0F4F  2F60               	goto	l3058
  2263  0F50                     u4220:
  2264  0F50                     l3056:
  2265  0F50  0920               	comf	___xxtofl@val,w
  2266  0F51  00AA               	movwf	___xxtofl@arg
  2267  0F52  0921               	comf	___xxtofl@val+1,w
  2268  0F53  00AB               	movwf	___xxtofl@arg+1
  2269  0F54  0922               	comf	___xxtofl@val+2,w
  2270  0F55  00AC               	movwf	___xxtofl@arg+2
  2271  0F56  0923               	comf	___xxtofl@val+3,w
  2272  0F57  00AD               	movwf	___xxtofl@arg+3
  2273  0F58  0AAA               	incf	___xxtofl@arg,f
  2274  0F59  1903               	skipnz
  2275  0F5A  0AAB               	incf	___xxtofl@arg+1,f
  2276  0F5B  1903               	skipnz
  2277  0F5C  0AAC               	incf	___xxtofl@arg+2,f
  2278  0F5D  1903               	skipnz
  2279  0F5E  0AAD               	incf	___xxtofl@arg+3,f
  2280  0F5F  2F68               	goto	l785
  2281  0F60                     l3058:
  2282  0F60  0823               	movf	___xxtofl@val+3,w
  2283  0F61  00AD               	movwf	___xxtofl@arg+3
  2284  0F62  0822               	movf	___xxtofl@val+2,w
  2285  0F63  00AC               	movwf	___xxtofl@arg+2
  2286  0F64  0821               	movf	___xxtofl@val+1,w
  2287  0F65  00AB               	movwf	___xxtofl@arg+1
  2288  0F66  0820               	movf	___xxtofl@val,w
  2289  0F67  00AA               	movwf	___xxtofl@arg
  2290  0F68                     l785:
  2291  0F68  0823               	movf	___xxtofl@val+3,w
  2292  0F69  0422               	iorwf	___xxtofl@val+2,w
  2293  0F6A  0421               	iorwf	___xxtofl@val+1,w
  2294  0F6B  0420               	iorwf	___xxtofl@val,w
  2295  0F6C  1D03               	skipz
  2296  0F6D  2F6F               	goto	u4231
  2297  0F6E  2F70               	goto	u4230
  2298  0F6F                     u4231:
  2299  0F6F  2F79               	goto	l3064
  2300  0F70                     u4230:
  2301  0F70                     l3060:
  2302  0F70  3000               	movlw	0
  2303  0F71  00A3               	movwf	?___xxtofl+3
  2304  0F72  3000               	movlw	0
  2305  0F73  00A2               	movwf	?___xxtofl+2
  2306  0F74  3000               	movlw	0
  2307  0F75  00A1               	movwf	?___xxtofl+1
  2308  0F76  3000               	movlw	0
  2309  0F77  00A0               	movwf	?___xxtofl
  2310  0F78  2FFF               	goto	l787
  2311  0F79                     l3064:
  2312  0F79  3096               	movlw	150
  2313  0F7A  00A4               	movwf	??___xxtofl
  2314  0F7B  0824               	movf	??___xxtofl,w
  2315  0F7C  00A9               	movwf	___xxtofl@exp
  2316  0F7D  2F8B               	goto	l3068
  2317  0F7E                     l3066:
  2318  0F7E  3001               	movlw	1
  2319  0F7F  00A4               	movwf	??___xxtofl
  2320  0F80  0824               	movf	??___xxtofl,w
  2321  0F81  07A9               	addwf	___xxtofl@exp,f
  2322  0F82  3001               	movlw	1
  2323  0F83                     u4245:
  2324  0F83  1003               	clrc
  2325  0F84  0CAD               	rrf	___xxtofl@arg+3,f
  2326  0F85  0CAC               	rrf	___xxtofl@arg+2,f
  2327  0F86  0CAB               	rrf	___xxtofl@arg+1,f
  2328  0F87  0CAA               	rrf	___xxtofl@arg,f
  2329  0F88  3EFF               	addlw	-1
  2330  0F89  1D03               	skipz
  2331  0F8A  2F83               	goto	u4245
  2332  0F8B                     l3068:
  2333  0F8B  30FE               	movlw	254
  2334  0F8C  052D               	andwf	___xxtofl@arg+3,w
  2335  0F8D  1D03               	btfss	3,2
  2336  0F8E  2F90               	goto	u4251
  2337  0F8F  2F91               	goto	u4250
  2338  0F90                     u4251:
  2339  0F90  2F7E               	goto	l3066
  2340  0F91                     u4250:
  2341  0F91  2FAD               	goto	l791
  2342  0F92                     l3070:
  2343  0F92  3001               	movlw	1
  2344  0F93  00A4               	movwf	??___xxtofl
  2345  0F94  0824               	movf	??___xxtofl,w
  2346  0F95  07A9               	addwf	___xxtofl@exp,f
  2347  0F96                     l3072:
  2348  0F96  3001               	movlw	1
  2349  0F97  07AA               	addwf	___xxtofl@arg,f
  2350  0F98  3000               	movlw	0
  2351  0F99  1803               	skipnc
  2352  0F9A  3001               	movlw	1
  2353  0F9B  07AB               	addwf	___xxtofl@arg+1,f
  2354  0F9C  3000               	movlw	0
  2355  0F9D  1803               	skipnc
  2356  0F9E  3001               	movlw	1
  2357  0F9F  07AC               	addwf	___xxtofl@arg+2,f
  2358  0FA0  3000               	movlw	0
  2359  0FA1  1803               	skipnc
  2360  0FA2  3001               	movlw	1
  2361  0FA3  07AD               	addwf	___xxtofl@arg+3,f
  2362  0FA4                     l3074:
  2363  0FA4  3001               	movlw	1
  2364  0FA5                     u4265:
  2365  0FA5  1003               	clrc
  2366  0FA6  0CAD               	rrf	___xxtofl@arg+3,f
  2367  0FA7  0CAC               	rrf	___xxtofl@arg+2,f
  2368  0FA8  0CAB               	rrf	___xxtofl@arg+1,f
  2369  0FA9  0CAA               	rrf	___xxtofl@arg,f
  2370  0FAA  3EFF               	addlw	-1
  2371  0FAB  1D03               	skipz
  2372  0FAC  2FA5               	goto	u4265
  2373  0FAD                     l791:
  2374  0FAD  30FF               	movlw	255
  2375  0FAE  052D               	andwf	___xxtofl@arg+3,w
  2376  0FAF  1D03               	btfss	3,2
  2377  0FB0  2FB2               	goto	u4271
  2378  0FB1  2FB3               	goto	u4270
  2379  0FB2                     u4271:
  2380  0FB2  2F92               	goto	l3070
  2381  0FB3                     u4270:
  2382  0FB3  2FBF               	goto	l3078
  2383  0FB4                     l3076:
  2384  0FB4  3001               	movlw	1
  2385  0FB5  02A9               	subwf	___xxtofl@exp,f
  2386  0FB6  3001               	movlw	1
  2387  0FB7  00A4               	movwf	??___xxtofl
  2388  0FB8                     u4285:
  2389  0FB8  1003               	clrc
  2390  0FB9  0DAA               	rlf	___xxtofl@arg,f
  2391  0FBA  0DAB               	rlf	___xxtofl@arg+1,f
  2392  0FBB  0DAC               	rlf	___xxtofl@arg+2,f
  2393  0FBC  0DAD               	rlf	___xxtofl@arg+3,f
  2394  0FBD  0BA4               	decfsz	??___xxtofl,f
  2395  0FBE  2FB8               	goto	u4285
  2396  0FBF                     l3078:
  2397  0FBF  1BAC               	btfsc	___xxtofl@arg+2,7
  2398  0FC0  2FC2               	goto	u4291
  2399  0FC1  2FC3               	goto	u4290
  2400  0FC2                     u4291:
  2401  0FC2  2FC9               	goto	l798
  2402  0FC3                     u4290:
  2403  0FC3                     l3080:
  2404  0FC3  3002               	movlw	2
  2405  0FC4  0229               	subwf	___xxtofl@exp,w
  2406  0FC5  1803               	skipnc
  2407  0FC6  2FC8               	goto	u4301
  2408  0FC7  2FC9               	goto	u4300
  2409  0FC8                     u4301:
  2410  0FC8  2FB4               	goto	l3076
  2411  0FC9                     u4300:
  2412  0FC9                     l798:
  2413  0FC9  1829               	btfsc	___xxtofl@exp,0
  2414  0FCA  2FCC               	goto	u4311
  2415  0FCB  2FCD               	goto	u4310
  2416  0FCC                     u4311:
  2417  0FCC  2FD5               	goto	l799
  2418  0FCD                     u4310:
  2419  0FCD                     l3082:
  2420  0FCD  30FF               	movlw	255
  2421  0FCE  05AA               	andwf	___xxtofl@arg,f
  2422  0FCF  30FF               	movlw	255
  2423  0FD0  05AB               	andwf	___xxtofl@arg+1,f
  2424  0FD1  307F               	movlw	127
  2425  0FD2  05AC               	andwf	___xxtofl@arg+2,f
  2426  0FD3  30FF               	movlw	255
  2427  0FD4  05AD               	andwf	___xxtofl@arg+3,f
  2428  0FD5                     l799:
  2429  0FD5  1003               	clrc
  2430  0FD6  0CA9               	rrf	___xxtofl@exp,f
  2431  0FD7                     l3084:
  2432  0FD7  0829               	movf	___xxtofl@exp,w
  2433  0FD8  00A4               	movwf	??___xxtofl
  2434  0FD9  01A5               	clrf	??___xxtofl+1
  2435  0FDA  01A6               	clrf	??___xxtofl+2
  2436  0FDB  01A7               	clrf	??___xxtofl+3
  2437  0FDC  3018               	movlw	24
  2438  0FDD                     u4325:
  2439  0FDD  1003               	clrc
  2440  0FDE  0DA4               	rlf	??___xxtofl,f
  2441  0FDF  0DA5               	rlf	??___xxtofl+1,f
  2442  0FE0  0DA6               	rlf	??___xxtofl+2,f
  2443  0FE1  0DA7               	rlf	??___xxtofl+3,f
  2444  0FE2                     u4320:
  2445  0FE2  3EFF               	addlw	-1
  2446  0FE3  1D03               	skipz
  2447  0FE4  2FDD               	goto	u4325
  2448  0FE5  0824               	movf	??___xxtofl,w
  2449  0FE6  04AA               	iorwf	___xxtofl@arg,f
  2450  0FE7  0825               	movf	??___xxtofl+1,w
  2451  0FE8  04AB               	iorwf	___xxtofl@arg+1,f
  2452  0FE9  0826               	movf	??___xxtofl+2,w
  2453  0FEA  04AC               	iorwf	___xxtofl@arg+2,f
  2454  0FEB  0827               	movf	??___xxtofl+3,w
  2455  0FEC  04AD               	iorwf	___xxtofl@arg+3,f
  2456  0FED                     l3086:
  2457  0FED  0828               	movf	___xxtofl@sign,w
  2458  0FEE  1903               	btfsc	3,2
  2459  0FEF  2FF1               	goto	u4331
  2460  0FF0  2FF2               	goto	u4330
  2461  0FF1                     u4331:
  2462  0FF1  2FF7               	goto	l3092
  2463  0FF2                     u4330:
  2464  0FF2                     l3088:
  2465  0FF2  1FA3               	btfss	___xxtofl@val+3,7
  2466  0FF3  2FF5               	goto	u4341
  2467  0FF4  2FF6               	goto	u4340
  2468  0FF5                     u4341:
  2469  0FF5  2FF7               	goto	l3092
  2470  0FF6                     u4340:
  2471  0FF6                     l3090:
  2472  0FF6  17AD               	bsf	___xxtofl@arg+3,7
  2473  0FF7                     l3092:
  2474  0FF7  082D               	movf	___xxtofl@arg+3,w
  2475  0FF8  00A3               	movwf	?___xxtofl+3
  2476  0FF9  082C               	movf	___xxtofl@arg+2,w
  2477  0FFA  00A2               	movwf	?___xxtofl+2
  2478  0FFB  082B               	movf	___xxtofl@arg+1,w
  2479  0FFC  00A1               	movwf	?___xxtofl+1
  2480  0FFD  082A               	movf	___xxtofl@arg,w
  2481  0FFE  00A0               	movwf	?___xxtofl
  2482  0FFF                     l787:
  2483  0FFF  0008               	return
  2484  1000                     __end_of___xxtofl:
  2485                           
  2486                           	psect	text8
  2487  0E1D                     __ptext8:	
  2488 ;; *************** function ___fltol *****************
  2489 ;; Defined at:
  2490 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  f1              4   26[BANK0 ] unsigned char 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  exp1            1   36[BANK0 ] unsigned char 
  2495 ;;  sign1           1   35[BANK0 ] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  4   26[BANK0 ] long 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         0       4       0       0       0
  2506 ;;      Locals:         0       2       0       0       0
  2507 ;;      Temps:          0       5       0       0       0
  2508 ;;      Totals:         0      11       0       0       0
  2509 ;;Total ram usage:       11 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_Read_Temp
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function ___fltol
  2521  0E1D                     ___fltol:
  2522  0E1D                     l2686:	
  2523                           ;incstack = 0
  2524                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2525                           
  2526  0E1D  1003               	clrc
  2527  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0E20  0D3C               	rlf	___fltol@f1+2,w
  2530  0E21  0D3D               	rlf	___fltol@f1+3,w
  2531  0E22  00BE               	movwf	??___fltol
  2532  0E23  083E               	movf	??___fltol,w
  2533  0E24  00C4               	movwf	___fltol@exp1
  2534  0E25  0844               	movf	___fltol@exp1,w
  2535  0E26  1D03               	btfss	3,2
  2536  0E27  2E29               	goto	u3321
  2537  0E28  2E2A               	goto	u3320
  2538  0E29                     u3321:
  2539  0E29  2E33               	goto	l2692
  2540  0E2A                     u3320:
  2541  0E2A                     l2688:
  2542  0E2A  3000               	movlw	0
  2543  0E2B  00BD               	movwf	?___fltol+3
  2544  0E2C  3000               	movlw	0
  2545  0E2D  00BC               	movwf	?___fltol+2
  2546  0E2E  3000               	movlw	0
  2547  0E2F  00BB               	movwf	?___fltol+1
  2548  0E30  3000               	movlw	0
  2549  0E31  00BA               	movwf	?___fltol
  2550  0E32  2E98               	goto	l538
  2551  0E33                     l2692:
  2552  0E33  083A               	movf	___fltol@f1,w
  2553  0E34  00BE               	movwf	??___fltol
  2554  0E35  083B               	movf	___fltol@f1+1,w
  2555  0E36  00BF               	movwf	??___fltol+1
  2556  0E37  083C               	movf	___fltol@f1+2,w
  2557  0E38  00C0               	movwf	??___fltol+2
  2558  0E39  083D               	movf	___fltol@f1+3,w
  2559  0E3A  00C1               	movwf	??___fltol+3
  2560  0E3B  301F               	movlw	31
  2561  0E3C                     u3335:
  2562  0E3C  1003               	clrc
  2563  0E3D  0CC1               	rrf	??___fltol+3,f
  2564  0E3E  0CC0               	rrf	??___fltol+2,f
  2565  0E3F  0CBF               	rrf	??___fltol+1,f
  2566  0E40  0CBE               	rrf	??___fltol,f
  2567  0E41                     u3330:
  2568  0E41  3EFF               	addlw	-1
  2569  0E42  1D03               	skipz
  2570  0E43  2E3C               	goto	u3335
  2571  0E44  083E               	movf	??___fltol,w
  2572  0E45  00C2               	movwf	??___fltol+4
  2573  0E46  0842               	movf	??___fltol+4,w
  2574  0E47  00C3               	movwf	___fltol@sign1
  2575  0E48                     l2694:
  2576  0E48  17BC               	bsf	___fltol@f1+2,7
  2577  0E49                     l2696:
  2578  0E49  30FF               	movlw	255
  2579  0E4A  05BA               	andwf	___fltol@f1,f
  2580  0E4B  30FF               	movlw	255
  2581  0E4C  05BB               	andwf	___fltol@f1+1,f
  2582  0E4D  30FF               	movlw	255
  2583  0E4E  05BC               	andwf	___fltol@f1+2,f
  2584  0E4F  3000               	movlw	0
  2585  0E50  05BD               	andwf	___fltol@f1+3,f
  2586  0E51                     l2698:
  2587  0E51  3096               	movlw	150
  2588  0E52  02C4               	subwf	___fltol@exp1,f
  2589  0E53                     l2700:
  2590  0E53  1FC4               	btfss	___fltol@exp1,7
  2591  0E54  2E56               	goto	u3341
  2592  0E55  2E57               	goto	u3340
  2593  0E56                     u3341:
  2594  0E56  2E71               	goto	l2710
  2595  0E57                     u3340:
  2596  0E57                     l2702:
  2597  0E57  0844               	movf	___fltol@exp1,w
  2598  0E58  3A80               	xorlw	128
  2599  0E59  3E97               	addlw	151
  2600  0E5A  1803               	skipnc
  2601  0E5B  2E5D               	goto	u3351
  2602  0E5C  2E5E               	goto	u3350
  2603  0E5D                     u3351:
  2604  0E5D  2E5F               	goto	l2708
  2605  0E5E                     u3350:
  2606  0E5E  2E2A               	goto	l2688
  2607  0E5F                     l2708:
  2608  0E5F  3001               	movlw	1
  2609  0E60                     u3365:
  2610  0E60  1003               	clrc
  2611  0E61  0CBD               	rrf	___fltol@f1+3,f
  2612  0E62  0CBC               	rrf	___fltol@f1+2,f
  2613  0E63  0CBB               	rrf	___fltol@f1+1,f
  2614  0E64  0CBA               	rrf	___fltol@f1,f
  2615  0E65  3EFF               	addlw	-1
  2616  0E66  1D03               	skipz
  2617  0E67  2E60               	goto	u3365
  2618  0E68  3001               	movlw	1
  2619  0E69  00BE               	movwf	??___fltol
  2620  0E6A  083E               	movf	??___fltol,w
  2621  0E6B  07C4               	addwf	___fltol@exp1,f
  2622  0E6C  1D03               	btfss	3,2
  2623  0E6D  2E6F               	goto	u3371
  2624  0E6E  2E70               	goto	u3370
  2625  0E6F                     u3371:
  2626  0E6F  2E5F               	goto	l2708
  2627  0E70                     u3370:
  2628  0E70  2E88               	goto	l2718
  2629  0E71                     l2710:
  2630  0E71  3020               	movlw	32
  2631  0E72  0244               	subwf	___fltol@exp1,w
  2632  0E73  1C03               	skipc
  2633  0E74  2E76               	goto	u3381
  2634  0E75  2E77               	goto	u3380
  2635  0E76                     u3381:
  2636  0E76  2E83               	goto	l545
  2637  0E77                     u3380:
  2638  0E77  2E2A               	goto	l2688
  2639  0E78                     l2716:
  2640  0E78  3001               	movlw	1
  2641  0E79  00BE               	movwf	??___fltol
  2642  0E7A                     u3395:
  2643  0E7A  1003               	clrc
  2644  0E7B  0DBA               	rlf	___fltol@f1,f
  2645  0E7C  0DBB               	rlf	___fltol@f1+1,f
  2646  0E7D  0DBC               	rlf	___fltol@f1+2,f
  2647  0E7E  0DBD               	rlf	___fltol@f1+3,f
  2648  0E7F  0BBE               	decfsz	??___fltol,f
  2649  0E80  2E7A               	goto	u3395
  2650  0E81  3001               	movlw	1
  2651  0E82  02C4               	subwf	___fltol@exp1,f
  2652  0E83                     l545:
  2653  0E83  0844               	movf	___fltol@exp1,w
  2654  0E84  1D03               	btfss	3,2
  2655  0E85  2E87               	goto	u3401
  2656  0E86  2E88               	goto	u3400
  2657  0E87                     u3401:
  2658  0E87  2E78               	goto	l2716
  2659  0E88                     u3400:
  2660  0E88                     l2718:
  2661  0E88  0843               	movf	___fltol@sign1,w
  2662  0E89  1903               	btfsc	3,2
  2663  0E8A  2E8C               	goto	u3411
  2664  0E8B  2E8D               	goto	u3410
  2665  0E8C                     u3411:
  2666  0E8C  2E98               	goto	l548
  2667  0E8D                     u3410:
  2668  0E8D                     l2720:
  2669  0E8D  09BA               	comf	___fltol@f1,f
  2670  0E8E  09BB               	comf	___fltol@f1+1,f
  2671  0E8F  09BC               	comf	___fltol@f1+2,f
  2672  0E90  09BD               	comf	___fltol@f1+3,f
  2673  0E91  0ABA               	incf	___fltol@f1,f
  2674  0E92  1903               	skipnz
  2675  0E93  0ABB               	incf	___fltol@f1+1,f
  2676  0E94  1903               	skipnz
  2677  0E95  0ABC               	incf	___fltol@f1+2,f
  2678  0E96  1903               	skipnz
  2679  0E97  0ABD               	incf	___fltol@f1+3,f
  2680  0E98                     l548:
  2681  0E98                     l538:
  2682  0E98  0008               	return
  2683  0E99                     __end_of___fltol:
  2684                           
  2685                           	psect	text9
  2686  003E                     __ptext9:	
  2687 ;; *************** function ___flmul *****************
  2688 ;; Defined at:
  2689 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  b               4    9[BANK0 ] long 
  2692 ;;  a               4   13[BANK0 ] long 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  prod            4   29[BANK0 ] struct .
  2695 ;;  grs             4   24[BANK0 ] unsigned long 
  2696 ;;  temp            2   33[BANK0 ] struct .
  2697 ;;  bexp            1   28[BANK0 ] unsigned char 
  2698 ;;  aexp            1   23[BANK0 ] unsigned char 
  2699 ;;  sign            1   22[BANK0 ] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  4    9[BANK0 ] unsigned char 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       8       0       0       0
  2710 ;;      Locals:         0      13       0       0       0
  2711 ;;      Temps:          0       5       0       0       0
  2712 ;;      Totals:         0      26       0       0       0
  2713 ;;Total ram usage:       26 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 2
  2716 ;; This function calls:
  2717 ;;		__Umul8_16
  2718 ;; This function is called by:
  2719 ;;		_Read_Temp
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function ___flmul
  2725  003E                     ___flmul:
  2726  003E                     l2912:	
  2727                           ;incstack = 0
  2728                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2729                           
  2730  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2731  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0040  082C               	movf	___flmul@b+3,w
  2733  0041  3980               	andlw	128
  2734  0042  00B1               	movwf	??___flmul
  2735  0043  0831               	movf	??___flmul,w
  2736  0044  00B6               	movwf	___flmul@sign
  2737  0045                     l2914:
  2738  0045  082C               	movf	___flmul@b+3,w
  2739  0046  00B1               	movwf	??___flmul
  2740  0047  0731               	addwf	??___flmul,w
  2741  0048  00B2               	movwf	??___flmul+1
  2742  0049  0832               	movf	??___flmul+1,w
  2743  004A  00BC               	movwf	___flmul@bexp
  2744  004B                     l2916:
  2745  004B  1FAB               	btfss	___flmul@b+2,7
  2746  004C  284E               	goto	u3841
  2747  004D  284F               	goto	u3840
  2748  004E                     u3841:
  2749  004E  2850               	goto	l2920
  2750  004F                     u3840:
  2751  004F                     l2918:
  2752  004F  143C               	bsf	___flmul@bexp,0
  2753  0050                     l2920:
  2754  0050  083C               	movf	___flmul@bexp,w
  2755  0051  1903               	btfsc	3,2
  2756  0052  2854               	goto	u3851
  2757  0053  2855               	goto	u3850
  2758  0054                     u3851:
  2759  0054  2864               	goto	l2928
  2760  0055                     u3850:
  2761  0055                     l2922:
  2762  0055  0A3C               	incf	___flmul@bexp,w
  2763  0056  1D03               	btfss	3,2
  2764  0057  2859               	goto	u3861
  2765  0058  285A               	goto	u3860
  2766  0059                     u3861:
  2767  0059  2862               	goto	l2926
  2768  005A                     u3860:
  2769  005A                     l2924:
  2770  005A  3000               	movlw	0
  2771  005B  00AC               	movwf	___flmul@b+3
  2772  005C  3000               	movlw	0
  2773  005D  00AB               	movwf	___flmul@b+2
  2774  005E  3000               	movlw	0
  2775  005F  00AA               	movwf	___flmul@b+1
  2776  0060  3000               	movlw	0
  2777  0061  00A9               	movwf	___flmul@b
  2778  0062                     l2926:
  2779  0062  17AB               	bsf	___flmul@b+2,7
  2780  0063  286C               	goto	l2930
  2781  0064                     l2928:
  2782  0064  3000               	movlw	0
  2783  0065  00AC               	movwf	___flmul@b+3
  2784  0066  3000               	movlw	0
  2785  0067  00AB               	movwf	___flmul@b+2
  2786  0068  3000               	movlw	0
  2787  0069  00AA               	movwf	___flmul@b+1
  2788  006A  3000               	movlw	0
  2789  006B  00A9               	movwf	___flmul@b
  2790  006C                     l2930:
  2791  006C  0830               	movf	___flmul@a+3,w
  2792  006D  3980               	andlw	128
  2793  006E  00B1               	movwf	??___flmul
  2794  006F  0831               	movf	??___flmul,w
  2795  0070  06B6               	xorwf	___flmul@sign,f
  2796  0071                     l2932:
  2797  0071  0830               	movf	___flmul@a+3,w
  2798  0072  00B1               	movwf	??___flmul
  2799  0073  0731               	addwf	??___flmul,w
  2800  0074  00B2               	movwf	??___flmul+1
  2801  0075  0832               	movf	??___flmul+1,w
  2802  0076  00B7               	movwf	___flmul@aexp
  2803  0077                     l2934:
  2804  0077  1FAF               	btfss	___flmul@a+2,7
  2805  0078  287A               	goto	u3871
  2806  0079  287B               	goto	u3870
  2807  007A                     u3871:
  2808  007A  287C               	goto	l2938
  2809  007B                     u3870:
  2810  007B                     l2936:
  2811  007B  1437               	bsf	___flmul@aexp,0
  2812  007C                     l2938:
  2813  007C  0837               	movf	___flmul@aexp,w
  2814  007D  1903               	btfsc	3,2
  2815  007E  2880               	goto	u3881
  2816  007F  2881               	goto	u3880
  2817  0080                     u3881:
  2818  0080  2890               	goto	l2946
  2819  0081                     u3880:
  2820  0081                     l2940:
  2821  0081  0A37               	incf	___flmul@aexp,w
  2822  0082  1D03               	btfss	3,2
  2823  0083  2885               	goto	u3891
  2824  0084  2886               	goto	u3890
  2825  0085                     u3891:
  2826  0085  288E               	goto	l2944
  2827  0086                     u3890:
  2828  0086                     l2942:
  2829  0086  3000               	movlw	0
  2830  0087  00B0               	movwf	___flmul@a+3
  2831  0088  3000               	movlw	0
  2832  0089  00AF               	movwf	___flmul@a+2
  2833  008A  3000               	movlw	0
  2834  008B  00AE               	movwf	___flmul@a+1
  2835  008C  3000               	movlw	0
  2836  008D  00AD               	movwf	___flmul@a
  2837  008E                     l2944:
  2838  008E  17AF               	bsf	___flmul@a+2,7
  2839  008F  2898               	goto	l2948
  2840  0090                     l2946:
  2841  0090  3000               	movlw	0
  2842  0091  00B0               	movwf	___flmul@a+3
  2843  0092  3000               	movlw	0
  2844  0093  00AF               	movwf	___flmul@a+2
  2845  0094  3000               	movlw	0
  2846  0095  00AE               	movwf	___flmul@a+1
  2847  0096  3000               	movlw	0
  2848  0097  00AD               	movwf	___flmul@a
  2849  0098                     l2948:
  2850  0098  0837               	movf	___flmul@aexp,w
  2851  0099  1903               	btfsc	3,2
  2852  009A  289C               	goto	u3901
  2853  009B  289D               	goto	u3900
  2854  009C                     u3901:
  2855  009C  28A2               	goto	l2952
  2856  009D                     u3900:
  2857  009D                     l2950:
  2858  009D  083C               	movf	___flmul@bexp,w
  2859  009E  1D03               	btfss	3,2
  2860  009F  28A1               	goto	u3911
  2861  00A0  28A2               	goto	u3910
  2862  00A1                     u3911:
  2863  00A1  28AB               	goto	l2956
  2864  00A2                     u3910:
  2865  00A2                     l2952:
  2866  00A2  3000               	movlw	0
  2867  00A3  00AC               	movwf	?___flmul+3
  2868  00A4  3000               	movlw	0
  2869  00A5  00AB               	movwf	?___flmul+2
  2870  00A6  3000               	movlw	0
  2871  00A7  00AA               	movwf	?___flmul+1
  2872  00A8  3000               	movlw	0
  2873  00A9  00A9               	movwf	?___flmul
  2874  00AA  2B9E               	goto	l741
  2875  00AB                     l2956:
  2876  00AB  0829               	movf	___flmul@b,w
  2877  00AC  00B1               	movwf	??___flmul
  2878  00AD  0831               	movf	??___flmul,w
  2879  00AE  00A0               	movwf	__Umul8_16@multiplicand
  2880  00AF  082F               	movf	___flmul@a+2,w
  2881  00B0  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  2882  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  2883  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  2884  00B7  0821               	movf	?__Umul8_16+1,w
  2885  00B8  00C2               	movwf	___flmul@temp+1
  2886  00B9  0820               	movf	?__Umul8_16,w
  2887  00BA  00C1               	movwf	___flmul@temp
  2888  00BB                     l2958:
  2889  00BB  0841               	movf	___flmul@temp,w
  2890  00BC  00B1               	movwf	??___flmul
  2891  00BD  01B2               	clrf	??___flmul+1
  2892  00BE  01B3               	clrf	??___flmul+2
  2893  00BF  01B4               	clrf	??___flmul+3
  2894  00C0  0834               	movf	??___flmul+3,w
  2895  00C1  00BB               	movwf	___flmul@grs+3
  2896  00C2  0833               	movf	??___flmul+2,w
  2897  00C3  00BA               	movwf	___flmul@grs+2
  2898  00C4  0832               	movf	??___flmul+1,w
  2899  00C5  00B9               	movwf	___flmul@grs+1
  2900  00C6  0831               	movf	??___flmul,w
  2901  00C7  00B8               	movwf	___flmul@grs
  2902  00C8                     l2960:
  2903  00C8  0842               	movf	___flmul@temp+1,w
  2904  00C9  00B1               	movwf	??___flmul
  2905  00CA  01B2               	clrf	??___flmul+1
  2906  00CB  01B3               	clrf	??___flmul+2
  2907  00CC  01B4               	clrf	??___flmul+3
  2908  00CD  0834               	movf	??___flmul+3,w
  2909  00CE  00C0               	movwf	___flmul@prod+3
  2910  00CF  0833               	movf	??___flmul+2,w
  2911  00D0  00BF               	movwf	___flmul@prod+2
  2912  00D1  0832               	movf	??___flmul+1,w
  2913  00D2  00BE               	movwf	___flmul@prod+1
  2914  00D3  0831               	movf	??___flmul,w
  2915  00D4  00BD               	movwf	___flmul@prod
  2916  00D5  082A               	movf	___flmul@b+1,w
  2917  00D6  00B1               	movwf	??___flmul
  2918  00D7  0831               	movf	??___flmul,w
  2919  00D8  00A0               	movwf	__Umul8_16@multiplicand
  2920  00D9  082E               	movf	___flmul@a+1,w
  2921  00DA  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  2922  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2923  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  2924  00E1  0821               	movf	?__Umul8_16+1,w
  2925  00E2  00C2               	movwf	___flmul@temp+1
  2926  00E3  0820               	movf	?__Umul8_16,w
  2927  00E4  00C1               	movwf	___flmul@temp
  2928  00E5                     l2962:
  2929  00E5  0841               	movf	___flmul@temp,w
  2930  00E6  00B1               	movwf	??___flmul
  2931  00E7  01B2               	clrf	??___flmul+1
  2932  00E8  01B3               	clrf	??___flmul+2
  2933  00E9  01B4               	clrf	??___flmul+3
  2934  00EA  0831               	movf	??___flmul,w
  2935  00EB  07B8               	addwf	___flmul@grs,f
  2936  00EC  0832               	movf	??___flmul+1,w
  2937  00ED  1103               	clrz
  2938  00EE  1803               	skipnc
  2939  00EF  3E01               	addlw	1
  2940  00F0  1903               	skipnz
  2941  00F1  28F3               	goto	u3921
  2942  00F2  07B9               	addwf	___flmul@grs+1,f
  2943  00F3                     u3921:
  2944  00F3  0833               	movf	??___flmul+2,w
  2945  00F4  1103               	clrz
  2946  00F5  1803               	skipnc
  2947  00F6  3E01               	addlw	1
  2948  00F7  1903               	skipnz
  2949  00F8  28FA               	goto	u3922
  2950  00F9  07BA               	addwf	___flmul@grs+2,f
  2951  00FA                     u3922:
  2952  00FA  0834               	movf	??___flmul+3,w
  2953  00FB  1103               	clrz
  2954  00FC  1803               	skipnc
  2955  00FD  3E01               	addlw	1
  2956  00FE  1903               	skipnz
  2957  00FF  2901               	goto	u3923
  2958  0100  07BB               	addwf	___flmul@grs+3,f
  2959  0101                     u3923:
  2960  0101                     l2964:
  2961  0101  0842               	movf	___flmul@temp+1,w
  2962  0102  00B1               	movwf	??___flmul
  2963  0103  01B2               	clrf	??___flmul+1
  2964  0104  01B3               	clrf	??___flmul+2
  2965  0105  01B4               	clrf	??___flmul+3
  2966  0106  0831               	movf	??___flmul,w
  2967  0107  07BD               	addwf	___flmul@prod,f
  2968  0108  0832               	movf	??___flmul+1,w
  2969  0109  1103               	clrz
  2970  010A  1803               	skipnc
  2971  010B  3E01               	addlw	1
  2972  010C  1903               	skipnz
  2973  010D  290F               	goto	u3931
  2974  010E  07BE               	addwf	___flmul@prod+1,f
  2975  010F                     u3931:
  2976  010F  0833               	movf	??___flmul+2,w
  2977  0110  1103               	clrz
  2978  0111  1803               	skipnc
  2979  0112  3E01               	addlw	1
  2980  0113  1903               	skipnz
  2981  0114  2916               	goto	u3932
  2982  0115  07BF               	addwf	___flmul@prod+2,f
  2983  0116                     u3932:
  2984  0116  0834               	movf	??___flmul+3,w
  2985  0117  1103               	clrz
  2986  0118  1803               	skipnc
  2987  0119  3E01               	addlw	1
  2988  011A  1903               	skipnz
  2989  011B  291D               	goto	u3933
  2990  011C  07C0               	addwf	___flmul@prod+3,f
  2991  011D                     u3933:
  2992  011D  082B               	movf	___flmul@b+2,w
  2993  011E  00B1               	movwf	??___flmul
  2994  011F  0831               	movf	??___flmul,w
  2995  0120  00A0               	movwf	__Umul8_16@multiplicand
  2996  0121  082D               	movf	___flmul@a,w
  2997  0122  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  2998  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0128  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0129  0821               	movf	?__Umul8_16+1,w
  3001  012A  00C2               	movwf	___flmul@temp+1
  3002  012B  0820               	movf	?__Umul8_16,w
  3003  012C  00C1               	movwf	___flmul@temp
  3004  012D                     l2966:
  3005  012D  0841               	movf	___flmul@temp,w
  3006  012E  00B1               	movwf	??___flmul
  3007  012F  01B2               	clrf	??___flmul+1
  3008  0130  01B3               	clrf	??___flmul+2
  3009  0131  01B4               	clrf	??___flmul+3
  3010  0132  0831               	movf	??___flmul,w
  3011  0133  07B8               	addwf	___flmul@grs,f
  3012  0134  0832               	movf	??___flmul+1,w
  3013  0135  1103               	clrz
  3014  0136  1803               	skipnc
  3015  0137  3E01               	addlw	1
  3016  0138  1903               	skipnz
  3017  0139  293B               	goto	u3941
  3018  013A  07B9               	addwf	___flmul@grs+1,f
  3019  013B                     u3941:
  3020  013B  0833               	movf	??___flmul+2,w
  3021  013C  1103               	clrz
  3022  013D  1803               	skipnc
  3023  013E  3E01               	addlw	1
  3024  013F  1903               	skipnz
  3025  0140  2942               	goto	u3942
  3026  0141  07BA               	addwf	___flmul@grs+2,f
  3027  0142                     u3942:
  3028  0142  0834               	movf	??___flmul+3,w
  3029  0143  1103               	clrz
  3030  0144  1803               	skipnc
  3031  0145  3E01               	addlw	1
  3032  0146  1903               	skipnz
  3033  0147  2949               	goto	u3943
  3034  0148  07BB               	addwf	___flmul@grs+3,f
  3035  0149                     u3943:
  3036  0149                     l2968:
  3037  0149  0842               	movf	___flmul@temp+1,w
  3038  014A  00B1               	movwf	??___flmul
  3039  014B  01B2               	clrf	??___flmul+1
  3040  014C  01B3               	clrf	??___flmul+2
  3041  014D  01B4               	clrf	??___flmul+3
  3042  014E  0831               	movf	??___flmul,w
  3043  014F  07BD               	addwf	___flmul@prod,f
  3044  0150  0832               	movf	??___flmul+1,w
  3045  0151  1103               	clrz
  3046  0152  1803               	skipnc
  3047  0153  3E01               	addlw	1
  3048  0154  1903               	skipnz
  3049  0155  2957               	goto	u3951
  3050  0156  07BE               	addwf	___flmul@prod+1,f
  3051  0157                     u3951:
  3052  0157  0833               	movf	??___flmul+2,w
  3053  0158  1103               	clrz
  3054  0159  1803               	skipnc
  3055  015A  3E01               	addlw	1
  3056  015B  1903               	skipnz
  3057  015C  295E               	goto	u3952
  3058  015D  07BF               	addwf	___flmul@prod+2,f
  3059  015E                     u3952:
  3060  015E  0834               	movf	??___flmul+3,w
  3061  015F  1103               	clrz
  3062  0160  1803               	skipnc
  3063  0161  3E01               	addlw	1
  3064  0162  1903               	skipnz
  3065  0163  2965               	goto	u3953
  3066  0164  07C0               	addwf	___flmul@prod+3,f
  3067  0165                     u3953:
  3068  0165                     l2970:
  3069  0165  3008               	movlw	8
  3070  0166  00B1               	movwf	??___flmul
  3071  0167                     u3965:
  3072  0167  1003               	clrc
  3073  0168  0DB8               	rlf	___flmul@grs,f
  3074  0169  0DB9               	rlf	___flmul@grs+1,f
  3075  016A  0DBA               	rlf	___flmul@grs+2,f
  3076  016B  0DBB               	rlf	___flmul@grs+3,f
  3077  016C  0BB1               	decfsz	??___flmul,f
  3078  016D  2967               	goto	u3965
  3079  016E                     l2972:
  3080  016E  082A               	movf	___flmul@b+1,w
  3081  016F  00B1               	movwf	??___flmul
  3082  0170  0831               	movf	??___flmul,w
  3083  0171  00A0               	movwf	__Umul8_16@multiplicand
  3084  0172  082D               	movf	___flmul@a,w
  3085  0173  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  3086  0178  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0179  1303               	bcf	3,6	;RP1=0, select bank0
  3088  017A  0821               	movf	?__Umul8_16+1,w
  3089  017B  00C2               	movwf	___flmul@temp+1
  3090  017C  0820               	movf	?__Umul8_16,w
  3091  017D  00C1               	movwf	___flmul@temp
  3092  017E                     l2974:
  3093  017E  0841               	movf	___flmul@temp,w
  3094  017F  00B1               	movwf	??___flmul
  3095  0180  0842               	movf	___flmul@temp+1,w
  3096  0181  00B2               	movwf	??___flmul+1
  3097  0182  01B3               	clrf	??___flmul+2
  3098  0183  01B4               	clrf	??___flmul+3
  3099  0184  0831               	movf	??___flmul,w
  3100  0185  07B8               	addwf	___flmul@grs,f
  3101  0186  0832               	movf	??___flmul+1,w
  3102  0187  1103               	clrz
  3103  0188  1803               	skipnc
  3104  0189  3E01               	addlw	1
  3105  018A  1903               	skipnz
  3106  018B  298D               	goto	u3971
  3107  018C  07B9               	addwf	___flmul@grs+1,f
  3108  018D                     u3971:
  3109  018D  0833               	movf	??___flmul+2,w
  3110  018E  1103               	clrz
  3111  018F  1803               	skipnc
  3112  0190  3E01               	addlw	1
  3113  0191  1903               	skipnz
  3114  0192  2994               	goto	u3972
  3115  0193  07BA               	addwf	___flmul@grs+2,f
  3116  0194                     u3972:
  3117  0194  0834               	movf	??___flmul+3,w
  3118  0195  1103               	clrz
  3119  0196  1803               	skipnc
  3120  0197  3E01               	addlw	1
  3121  0198  1903               	skipnz
  3122  0199  299B               	goto	u3973
  3123  019A  07BB               	addwf	___flmul@grs+3,f
  3124  019B                     u3973:
  3125  019B                     l2976:
  3126  019B  0829               	movf	___flmul@b,w
  3127  019C  00B1               	movwf	??___flmul
  3128  019D  0831               	movf	??___flmul,w
  3129  019E  00A0               	movwf	__Umul8_16@multiplicand
  3130  019F  082E               	movf	___flmul@a+1,w
  3131  01A0  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  3132  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  3133  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  3134  01A7  0821               	movf	?__Umul8_16+1,w
  3135  01A8  00C2               	movwf	___flmul@temp+1
  3136  01A9  0820               	movf	?__Umul8_16,w
  3137  01AA  00C1               	movwf	___flmul@temp
  3138  01AB                     l2978:
  3139  01AB  0841               	movf	___flmul@temp,w
  3140  01AC  00B1               	movwf	??___flmul
  3141  01AD  0842               	movf	___flmul@temp+1,w
  3142  01AE  00B2               	movwf	??___flmul+1
  3143  01AF  01B3               	clrf	??___flmul+2
  3144  01B0  01B4               	clrf	??___flmul+3
  3145  01B1  0831               	movf	??___flmul,w
  3146  01B2  07B8               	addwf	___flmul@grs,f
  3147  01B3  0832               	movf	??___flmul+1,w
  3148  01B4  1103               	clrz
  3149  01B5  1803               	skipnc
  3150  01B6  3E01               	addlw	1
  3151  01B7  1903               	skipnz
  3152  01B8  29BA               	goto	u3981
  3153  01B9  07B9               	addwf	___flmul@grs+1,f
  3154  01BA                     u3981:
  3155  01BA  0833               	movf	??___flmul+2,w
  3156  01BB  1103               	clrz
  3157  01BC  1803               	skipnc
  3158  01BD  3E01               	addlw	1
  3159  01BE  1903               	skipnz
  3160  01BF  29C1               	goto	u3982
  3161  01C0  07BA               	addwf	___flmul@grs+2,f
  3162  01C1                     u3982:
  3163  01C1  0834               	movf	??___flmul+3,w
  3164  01C2  1103               	clrz
  3165  01C3  1803               	skipnc
  3166  01C4  3E01               	addlw	1
  3167  01C5  1903               	skipnz
  3168  01C6  29C8               	goto	u3983
  3169  01C7  07BB               	addwf	___flmul@grs+3,f
  3170  01C8                     u3983:
  3171  01C8                     l2980:
  3172  01C8  3008               	movlw	8
  3173  01C9  00B1               	movwf	??___flmul
  3174  01CA                     u3995:
  3175  01CA  1003               	clrc
  3176  01CB  0DB8               	rlf	___flmul@grs,f
  3177  01CC  0DB9               	rlf	___flmul@grs+1,f
  3178  01CD  0DBA               	rlf	___flmul@grs+2,f
  3179  01CE  0DBB               	rlf	___flmul@grs+3,f
  3180  01CF  0BB1               	decfsz	??___flmul,f
  3181  01D0  29CA               	goto	u3995
  3182  01D1  0829               	movf	___flmul@b,w
  3183  01D2  00B1               	movwf	??___flmul
  3184  01D3  0831               	movf	??___flmul,w
  3185  01D4  00A0               	movwf	__Umul8_16@multiplicand
  3186  01D5  082D               	movf	___flmul@a,w
  3187  01D6  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  3188  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3189  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  3190  01DD  0821               	movf	?__Umul8_16+1,w
  3191  01DE  00C2               	movwf	___flmul@temp+1
  3192  01DF  0820               	movf	?__Umul8_16,w
  3193  01E0  00C1               	movwf	___flmul@temp
  3194  01E1                     l2982:
  3195  01E1  0841               	movf	___flmul@temp,w
  3196  01E2  00B1               	movwf	??___flmul
  3197  01E3  0842               	movf	___flmul@temp+1,w
  3198  01E4  00B2               	movwf	??___flmul+1
  3199  01E5  01B3               	clrf	??___flmul+2
  3200  01E6  01B4               	clrf	??___flmul+3
  3201  01E7  0831               	movf	??___flmul,w
  3202  01E8  07B8               	addwf	___flmul@grs,f
  3203  01E9  0832               	movf	??___flmul+1,w
  3204  01EA  1103               	clrz
  3205  01EB  1803               	skipnc
  3206  01EC  3E01               	addlw	1
  3207  01ED  1903               	skipnz
  3208  01EE  29F0               	goto	u4001
  3209  01EF  07B9               	addwf	___flmul@grs+1,f
  3210  01F0                     u4001:
  3211  01F0  0833               	movf	??___flmul+2,w
  3212  01F1  1103               	clrz
  3213  01F2  1803               	skipnc
  3214  01F3  3E01               	addlw	1
  3215  01F4  1903               	skipnz
  3216  01F5  29F7               	goto	u4002
  3217  01F6  07BA               	addwf	___flmul@grs+2,f
  3218  01F7                     u4002:
  3219  01F7  0834               	movf	??___flmul+3,w
  3220  01F8  1103               	clrz
  3221  01F9  1803               	skipnc
  3222  01FA  3E01               	addlw	1
  3223  01FB  1903               	skipnz
  3224  01FC  29FE               	goto	u4003
  3225  01FD  07BB               	addwf	___flmul@grs+3,f
  3226  01FE                     u4003:
  3227  01FE                     l2984:
  3228  01FE  082A               	movf	___flmul@b+1,w
  3229  01FF  00B1               	movwf	??___flmul
  3230  0200  0831               	movf	??___flmul,w
  3231  0201  00A0               	movwf	__Umul8_16@multiplicand
  3232  0202  082F               	movf	___flmul@a+2,w
  3233  0203  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  3234  0208  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0209  1303               	bcf	3,6	;RP1=0, select bank0
  3236  020A  0821               	movf	?__Umul8_16+1,w
  3237  020B  00C2               	movwf	___flmul@temp+1
  3238  020C  0820               	movf	?__Umul8_16,w
  3239  020D  00C1               	movwf	___flmul@temp
  3240  020E  0841               	movf	___flmul@temp,w
  3241  020F  00B1               	movwf	??___flmul
  3242  0210  0842               	movf	___flmul@temp+1,w
  3243  0211  00B2               	movwf	??___flmul+1
  3244  0212  01B3               	clrf	??___flmul+2
  3245  0213  01B4               	clrf	??___flmul+3
  3246  0214  0831               	movf	??___flmul,w
  3247  0215  07BD               	addwf	___flmul@prod,f
  3248  0216  0832               	movf	??___flmul+1,w
  3249  0217  1103               	clrz
  3250  0218  1803               	skipnc
  3251  0219  3E01               	addlw	1
  3252  021A  1903               	skipnz
  3253  021B  2A1D               	goto	u4011
  3254  021C  07BE               	addwf	___flmul@prod+1,f
  3255  021D                     u4011:
  3256  021D  0833               	movf	??___flmul+2,w
  3257  021E  1103               	clrz
  3258  021F  1803               	skipnc
  3259  0220  3E01               	addlw	1
  3260  0221  1903               	skipnz
  3261  0222  2A24               	goto	u4012
  3262  0223  07BF               	addwf	___flmul@prod+2,f
  3263  0224                     u4012:
  3264  0224  0834               	movf	??___flmul+3,w
  3265  0225  1103               	clrz
  3266  0226  1803               	skipnc
  3267  0227  3E01               	addlw	1
  3268  0228  1903               	skipnz
  3269  0229  2A2B               	goto	u4013
  3270  022A  07C0               	addwf	___flmul@prod+3,f
  3271  022B                     u4013:
  3272  022B                     l2986:
  3273  022B  082B               	movf	___flmul@b+2,w
  3274  022C  00B1               	movwf	??___flmul
  3275  022D  0831               	movf	??___flmul,w
  3276  022E  00A0               	movwf	__Umul8_16@multiplicand
  3277  022F  082E               	movf	___flmul@a+1,w
  3278  0230  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  3279  0235  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0236  1303               	bcf	3,6	;RP1=0, select bank0
  3281  0237  0821               	movf	?__Umul8_16+1,w
  3282  0238  00C2               	movwf	___flmul@temp+1
  3283  0239  0820               	movf	?__Umul8_16,w
  3284  023A  00C1               	movwf	___flmul@temp
  3285  023B                     l2988:
  3286  023B  0841               	movf	___flmul@temp,w
  3287  023C  00B1               	movwf	??___flmul
  3288  023D  0842               	movf	___flmul@temp+1,w
  3289  023E  00B2               	movwf	??___flmul+1
  3290  023F  01B3               	clrf	??___flmul+2
  3291  0240  01B4               	clrf	??___flmul+3
  3292  0241  0831               	movf	??___flmul,w
  3293  0242  07BD               	addwf	___flmul@prod,f
  3294  0243  0832               	movf	??___flmul+1,w
  3295  0244  1103               	clrz
  3296  0245  1803               	skipnc
  3297  0246  3E01               	addlw	1
  3298  0247  1903               	skipnz
  3299  0248  2A4A               	goto	u4021
  3300  0249  07BE               	addwf	___flmul@prod+1,f
  3301  024A                     u4021:
  3302  024A  0833               	movf	??___flmul+2,w
  3303  024B  1103               	clrz
  3304  024C  1803               	skipnc
  3305  024D  3E01               	addlw	1
  3306  024E  1903               	skipnz
  3307  024F  2A51               	goto	u4022
  3308  0250  07BF               	addwf	___flmul@prod+2,f
  3309  0251                     u4022:
  3310  0251  0834               	movf	??___flmul+3,w
  3311  0252  1103               	clrz
  3312  0253  1803               	skipnc
  3313  0254  3E01               	addlw	1
  3314  0255  1903               	skipnz
  3315  0256  2A58               	goto	u4023
  3316  0257  07C0               	addwf	___flmul@prod+3,f
  3317  0258                     u4023:
  3318  0258  082B               	movf	___flmul@b+2,w
  3319  0259  00B1               	movwf	??___flmul
  3320  025A  0831               	movf	??___flmul,w
  3321  025B  00A0               	movwf	__Umul8_16@multiplicand
  3322  025C  082F               	movf	___flmul@a+2,w
  3323  025D  120A  158A  2398  120A  118A  	fcall	__Umul8_16
  3324  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0264  0821               	movf	?__Umul8_16+1,w
  3327  0265  00C2               	movwf	___flmul@temp+1
  3328  0266  0820               	movf	?__Umul8_16,w
  3329  0267  00C1               	movwf	___flmul@temp
  3330  0268                     l2990:
  3331  0268  0841               	movf	___flmul@temp,w
  3332  0269  00B1               	movwf	??___flmul
  3333  026A  0842               	movf	___flmul@temp+1,w
  3334  026B  00B2               	movwf	??___flmul+1
  3335  026C  01B3               	clrf	??___flmul+2
  3336  026D  01B4               	clrf	??___flmul+3
  3337  026E  3008               	movlw	8
  3338  026F                     u4035:
  3339  026F  1003               	clrc
  3340  0270  0DB1               	rlf	??___flmul,f
  3341  0271  0DB2               	rlf	??___flmul+1,f
  3342  0272  0DB3               	rlf	??___flmul+2,f
  3343  0273  0DB4               	rlf	??___flmul+3,f
  3344  0274                     u4030:
  3345  0274  3EFF               	addlw	-1
  3346  0275  1D03               	skipz
  3347  0276  2A6F               	goto	u4035
  3348  0277  0831               	movf	??___flmul,w
  3349  0278  07BD               	addwf	___flmul@prod,f
  3350  0279  0832               	movf	??___flmul+1,w
  3351  027A  1103               	clrz
  3352  027B  1803               	skipnc
  3353  027C  3E01               	addlw	1
  3354  027D  1903               	skipnz
  3355  027E  2A80               	goto	u4041
  3356  027F  07BE               	addwf	___flmul@prod+1,f
  3357  0280                     u4041:
  3358  0280  0833               	movf	??___flmul+2,w
  3359  0281  1103               	clrz
  3360  0282  1803               	skipnc
  3361  0283  3E01               	addlw	1
  3362  0284  1903               	skipnz
  3363  0285  2A87               	goto	u4042
  3364  0286  07BF               	addwf	___flmul@prod+2,f
  3365  0287                     u4042:
  3366  0287  0834               	movf	??___flmul+3,w
  3367  0288  1103               	clrz
  3368  0289  1803               	skipnc
  3369  028A  3E01               	addlw	1
  3370  028B  1903               	skipnz
  3371  028C  2A8E               	goto	u4043
  3372  028D  07C0               	addwf	___flmul@prod+3,f
  3373  028E                     u4043:
  3374  028E                     l2992:
  3375  028E  0838               	movf	___flmul@grs,w
  3376  028F  00B1               	movwf	??___flmul
  3377  0290  0839               	movf	___flmul@grs+1,w
  3378  0291  00B2               	movwf	??___flmul+1
  3379  0292  083A               	movf	___flmul@grs+2,w
  3380  0293  00B3               	movwf	??___flmul+2
  3381  0294  083B               	movf	___flmul@grs+3,w
  3382  0295  00B4               	movwf	??___flmul+3
  3383  0296  3018               	movlw	24
  3384  0297                     u4055:
  3385  0297  1003               	clrc
  3386  0298  0CB4               	rrf	??___flmul+3,f
  3387  0299  0CB3               	rrf	??___flmul+2,f
  3388  029A  0CB2               	rrf	??___flmul+1,f
  3389  029B  0CB1               	rrf	??___flmul,f
  3390  029C                     u4050:
  3391  029C  3EFF               	addlw	-1
  3392  029D  1D03               	skipz
  3393  029E  2A97               	goto	u4055
  3394  029F  0831               	movf	??___flmul,w
  3395  02A0  07BD               	addwf	___flmul@prod,f
  3396  02A1  0832               	movf	??___flmul+1,w
  3397  02A2  1103               	clrz
  3398  02A3  1803               	skipnc
  3399  02A4  3E01               	addlw	1
  3400  02A5  1903               	skipnz
  3401  02A6  2AA8               	goto	u4061
  3402  02A7  07BE               	addwf	___flmul@prod+1,f
  3403  02A8                     u4061:
  3404  02A8  0833               	movf	??___flmul+2,w
  3405  02A9  1103               	clrz
  3406  02AA  1803               	skipnc
  3407  02AB  3E01               	addlw	1
  3408  02AC  1903               	skipnz
  3409  02AD  2AAF               	goto	u4062
  3410  02AE  07BF               	addwf	___flmul@prod+2,f
  3411  02AF                     u4062:
  3412  02AF  0834               	movf	??___flmul+3,w
  3413  02B0  1103               	clrz
  3414  02B1  1803               	skipnc
  3415  02B2  3E01               	addlw	1
  3416  02B3  1903               	skipnz
  3417  02B4  2AB6               	goto	u4063
  3418  02B5  07C0               	addwf	___flmul@prod+3,f
  3419  02B6                     u4063:
  3420  02B6                     l2994:
  3421  02B6  3008               	movlw	8
  3422  02B7  00B1               	movwf	??___flmul
  3423  02B8                     u4075:
  3424  02B8  1003               	clrc
  3425  02B9  0DB8               	rlf	___flmul@grs,f
  3426  02BA  0DB9               	rlf	___flmul@grs+1,f
  3427  02BB  0DBA               	rlf	___flmul@grs+2,f
  3428  02BC  0DBB               	rlf	___flmul@grs+3,f
  3429  02BD  0BB1               	decfsz	??___flmul,f
  3430  02BE  2AB8               	goto	u4075
  3431  02BF                     l2996:
  3432  02BF  083C               	movf	___flmul@bexp,w
  3433  02C0  0737               	addwf	___flmul@aexp,w
  3434  02C1  00B1               	movwf	??___flmul
  3435  02C2  01B2               	clrf	??___flmul+1
  3436  02C3  0DB2               	rlf	??___flmul+1,f
  3437  02C4  0831               	movf	??___flmul,w
  3438  02C5  3E82               	addlw	130
  3439  02C6  00C1               	movwf	___flmul@temp
  3440  02C7  0832               	movf	??___flmul+1,w
  3441  02C8  1803               	skipnc
  3442  02C9  3E01               	addlw	1
  3443  02CA  3EFF               	addlw	255
  3444  02CB  00C2               	movwf	___flmul@temp+1
  3445  02CC  2AEA               	goto	l3008
  3446  02CD                     l2998:
  3447  02CD  3001               	movlw	1
  3448  02CE  00B1               	movwf	??___flmul
  3449  02CF                     u4085:
  3450  02CF  1003               	clrc
  3451  02D0  0DBD               	rlf	___flmul@prod,f
  3452  02D1  0DBE               	rlf	___flmul@prod+1,f
  3453  02D2  0DBF               	rlf	___flmul@prod+2,f
  3454  02D3  0DC0               	rlf	___flmul@prod+3,f
  3455  02D4  0BB1               	decfsz	??___flmul,f
  3456  02D5  2ACF               	goto	u4085
  3457  02D6                     l3000:
  3458  02D6  1FBB               	btfss	___flmul@grs+3,7
  3459  02D7  2AD9               	goto	u4091
  3460  02D8  2ADA               	goto	u4090
  3461  02D9                     u4091:
  3462  02D9  2ADB               	goto	l3004
  3463  02DA                     u4090:
  3464  02DA                     l3002:
  3465  02DA  143D               	bsf	___flmul@prod,0
  3466  02DB                     l3004:
  3467  02DB  3001               	movlw	1
  3468  02DC  00B1               	movwf	??___flmul
  3469  02DD                     u4105:
  3470  02DD  1003               	clrc
  3471  02DE  0DB8               	rlf	___flmul@grs,f
  3472  02DF  0DB9               	rlf	___flmul@grs+1,f
  3473  02E0  0DBA               	rlf	___flmul@grs+2,f
  3474  02E1  0DBB               	rlf	___flmul@grs+3,f
  3475  02E2  0BB1               	decfsz	??___flmul,f
  3476  02E3  2ADD               	goto	u4105
  3477  02E4                     l3006:
  3478  02E4  30FF               	movlw	255
  3479  02E5  07C1               	addwf	___flmul@temp,f
  3480  02E6  1803               	skipnc
  3481  02E7  0AC2               	incf	___flmul@temp+1,f
  3482  02E8  30FF               	movlw	255
  3483  02E9  07C2               	addwf	___flmul@temp+1,f
  3484  02EA                     l3008:
  3485  02EA  1FBF               	btfss	___flmul@prod+2,7
  3486  02EB  2AED               	goto	u4111
  3487  02EC  2AEE               	goto	u4110
  3488  02ED                     u4111:
  3489  02ED  2ACD               	goto	l2998
  3490  02EE                     u4110:
  3491  02EE                     l3010:
  3492  02EE  01B7               	clrf	___flmul@aexp
  3493  02EF                     l3012:
  3494  02EF  1FBB               	btfss	___flmul@grs+3,7
  3495  02F0  2AF2               	goto	u4121
  3496  02F1  2AF3               	goto	u4120
  3497  02F2                     u4121:
  3498  02F2  2B0F               	goto	l3020
  3499  02F3                     u4120:
  3500  02F3                     l3014:
  3501  02F3  30FF               	movlw	255
  3502  02F4  0538               	andwf	___flmul@grs,w
  3503  02F5  00B1               	movwf	??___flmul
  3504  02F6  30FF               	movlw	255
  3505  02F7  0539               	andwf	___flmul@grs+1,w
  3506  02F8  00B2               	movwf	??___flmul+1
  3507  02F9  30FF               	movlw	255
  3508  02FA  053A               	andwf	___flmul@grs+2,w
  3509  02FB  00B3               	movwf	??___flmul+2
  3510  02FC  307F               	movlw	127
  3511  02FD  053B               	andwf	___flmul@grs+3,w
  3512  02FE  00B4               	movwf	??___flmul+3
  3513  02FF  0834               	movf	??___flmul+3,w
  3514  0300  0433               	iorwf	??___flmul+2,w
  3515  0301  0432               	iorwf	??___flmul+1,w
  3516  0302  0431               	iorwf	??___flmul,w
  3517  0303  1903               	skipnz
  3518  0304  2B06               	goto	u4131
  3519  0305  2B07               	goto	u4130
  3520  0306                     u4131:
  3521  0306  2B0A               	goto	l747
  3522  0307                     u4130:
  3523  0307                     l3016:
  3524  0307  01B7               	clrf	___flmul@aexp
  3525  0308  0AB7               	incf	___flmul@aexp,f
  3526  0309  2B0F               	goto	l3020
  3527  030A                     l747:
  3528  030A  1C3D               	btfss	___flmul@prod,0
  3529  030B  2B0D               	goto	u4141
  3530  030C  2B0E               	goto	u4140
  3531  030D                     u4141:
  3532  030D  2B0F               	goto	l3020
  3533  030E                     u4140:
  3534  030E  2B07               	goto	l3016
  3535  030F                     l3020:
  3536  030F  0837               	movf	___flmul@aexp,w
  3537  0310  1903               	btfsc	3,2
  3538  0311  2B13               	goto	u4151
  3539  0312  2B14               	goto	u4150
  3540  0313                     u4151:
  3541  0313  2B45               	goto	l3030
  3542  0314                     u4150:
  3543  0314                     l3022:
  3544  0314  3001               	movlw	1
  3545  0315  07BD               	addwf	___flmul@prod,f
  3546  0316  3000               	movlw	0
  3547  0317  1803               	skipnc
  3548  0318  3001               	movlw	1
  3549  0319  07BE               	addwf	___flmul@prod+1,f
  3550  031A  3000               	movlw	0
  3551  031B  1803               	skipnc
  3552  031C  3001               	movlw	1
  3553  031D  07BF               	addwf	___flmul@prod+2,f
  3554  031E  3000               	movlw	0
  3555  031F  1803               	skipnc
  3556  0320  3001               	movlw	1
  3557  0321  07C0               	addwf	___flmul@prod+3,f
  3558  0322                     l3024:
  3559  0322  1C40               	btfss	___flmul@prod+3,0
  3560  0323  2B25               	goto	u4161
  3561  0324  2B26               	goto	u4160
  3562  0325                     u4161:
  3563  0325  2B45               	goto	l3030
  3564  0326                     u4160:
  3565  0326                     l3026:
  3566  0326  083D               	movf	___flmul@prod,w
  3567  0327  00B1               	movwf	??___flmul
  3568  0328  083E               	movf	___flmul@prod+1,w
  3569  0329  00B2               	movwf	??___flmul+1
  3570  032A  083F               	movf	___flmul@prod+2,w
  3571  032B  00B3               	movwf	??___flmul+2
  3572  032C  0840               	movf	___flmul@prod+3,w
  3573  032D  00B4               	movwf	??___flmul+3
  3574  032E  3001               	movlw	1
  3575  032F  00B5               	movwf	??___flmul+4
  3576  0330                     u4175:
  3577  0330  0D34               	rlf	??___flmul+3,w
  3578  0331  0CB4               	rrf	??___flmul+3,f
  3579  0332  0CB3               	rrf	??___flmul+2,f
  3580  0333  0CB2               	rrf	??___flmul+1,f
  3581  0334  0CB1               	rrf	??___flmul,f
  3582  0335                     u4170:
  3583  0335  0BB5               	decfsz	??___flmul+4,f
  3584  0336  2B30               	goto	u4175
  3585  0337  0834               	movf	??___flmul+3,w
  3586  0338  00C0               	movwf	___flmul@prod+3
  3587  0339  0833               	movf	??___flmul+2,w
  3588  033A  00BF               	movwf	___flmul@prod+2
  3589  033B  0832               	movf	??___flmul+1,w
  3590  033C  00BE               	movwf	___flmul@prod+1
  3591  033D  0831               	movf	??___flmul,w
  3592  033E  00BD               	movwf	___flmul@prod
  3593  033F                     l3028:
  3594  033F  3001               	movlw	1
  3595  0340  07C1               	addwf	___flmul@temp,f
  3596  0341  1803               	skipnc
  3597  0342  0AC2               	incf	___flmul@temp+1,f
  3598  0343  3000               	movlw	0
  3599  0344  07C2               	addwf	___flmul@temp+1,f
  3600  0345                     l3030:
  3601  0345  0842               	movf	___flmul@temp+1,w
  3602  0346  3A80               	xorlw	128
  3603  0347  00FF               	movwf	btemp+1
  3604  0348  3080               	movlw	128
  3605  0349  027F               	subwf	btemp+1,w
  3606  034A  1D03               	skipz
  3607  034B  2B4E               	goto	u4185
  3608  034C  30FF               	movlw	255
  3609  034D  0241               	subwf	___flmul@temp,w
  3610  034E                     u4185:
  3611  034E  1C03               	skipc
  3612  034F  2B51               	goto	u4181
  3613  0350  2B52               	goto	u4180
  3614  0351                     u4181:
  3615  0351  2B5D               	goto	l3034
  3616  0352                     u4180:
  3617  0352                     l3032:
  3618  0352  307F               	movlw	127
  3619  0353  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0354  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0355  00C0               	movwf	___flmul@prod+3
  3622  0356  3080               	movlw	128
  3623  0357  00BF               	movwf	___flmul@prod+2
  3624  0358  3000               	movlw	0
  3625  0359  00BE               	movwf	___flmul@prod+1
  3626  035A  3000               	movlw	0
  3627  035B  00BD               	movwf	___flmul@prod
  3628  035C  2B92               	goto	l753
  3629  035D                     l3034:
  3630  035D  1283               	bcf	3,5	;RP0=0, select bank0
  3631  035E  1303               	bcf	3,6	;RP1=0, select bank0
  3632  035F  0842               	movf	___flmul@temp+1,w
  3633  0360  3A80               	xorlw	128
  3634  0361  00FF               	movwf	btemp+1
  3635  0362  3080               	movlw	128
  3636  0363  027F               	subwf	btemp+1,w
  3637  0364  1D03               	skipz
  3638  0365  2B68               	goto	u4195
  3639  0366  3001               	movlw	1
  3640  0367  0241               	subwf	___flmul@temp,w
  3641  0368                     u4195:
  3642  0368  1803               	skipnc
  3643  0369  2B6B               	goto	u4191
  3644  036A  2B6C               	goto	u4190
  3645  036B                     u4191:
  3646  036B  2B78               	goto	l3040
  3647  036C                     u4190:
  3648  036C                     l3036:
  3649  036C  3000               	movlw	0
  3650  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3651  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3652  036F  00C0               	movwf	___flmul@prod+3
  3653  0370  3000               	movlw	0
  3654  0371  00BF               	movwf	___flmul@prod+2
  3655  0372  3000               	movlw	0
  3656  0373  00BE               	movwf	___flmul@prod+1
  3657  0374  3000               	movlw	0
  3658  0375  00BD               	movwf	___flmul@prod
  3659  0376                     l3038:
  3660  0376  01B6               	clrf	___flmul@sign
  3661  0377  2B92               	goto	l753
  3662  0378                     l3040:
  3663  0378  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0379  1303               	bcf	3,6	;RP1=0, select bank0
  3665  037A  0841               	movf	___flmul@temp,w
  3666  037B  00B1               	movwf	??___flmul
  3667  037C  0831               	movf	??___flmul,w
  3668  037D  00BC               	movwf	___flmul@bexp
  3669  037E  30FF               	movlw	255
  3670  037F  05BD               	andwf	___flmul@prod,f
  3671  0380  30FF               	movlw	255
  3672  0381  05BE               	andwf	___flmul@prod+1,f
  3673  0382  307F               	movlw	127
  3674  0383  05BF               	andwf	___flmul@prod+2,f
  3675  0384  3000               	movlw	0
  3676  0385  05C0               	andwf	___flmul@prod+3,f
  3677  0386                     l3042:
  3678  0386  1C3C               	btfss	___flmul@bexp,0
  3679  0387  2B89               	goto	u4201
  3680  0388  2B8A               	goto	u4200
  3681  0389                     u4201:
  3682  0389  2B8B               	goto	l3046
  3683  038A                     u4200:
  3684  038A                     l3044:
  3685  038A  17BF               	bsf	___flmul@prod+2,7
  3686  038B                     l3046:
  3687  038B  083C               	movf	___flmul@bexp,w
  3688  038C  00B1               	movwf	??___flmul
  3689  038D  1003               	clrc
  3690  038E  0C31               	rrf	??___flmul,w
  3691  038F  00B2               	movwf	??___flmul+1
  3692  0390  0832               	movf	??___flmul+1,w
  3693  0391  00C0               	movwf	___flmul@prod+3
  3694  0392                     l753:
  3695  0392  0836               	movf	___flmul@sign,w
  3696  0393  00B1               	movwf	??___flmul
  3697  0394  0831               	movf	??___flmul,w
  3698  0395  04C0               	iorwf	___flmul@prod+3,f
  3699  0396                     l3048:
  3700  0396  0840               	movf	___flmul@prod+3,w
  3701  0397  00AC               	movwf	?___flmul+3
  3702  0398  083F               	movf	___flmul@prod+2,w
  3703  0399  00AB               	movwf	?___flmul+2
  3704  039A  083E               	movf	___flmul@prod+1,w
  3705  039B  00AA               	movwf	?___flmul+1
  3706  039C  083D               	movf	___flmul@prod,w
  3707  039D  00A9               	movwf	?___flmul
  3708  039E                     l741:
  3709  039E  0008               	return
  3710  039F                     __end_of___flmul:
  3711                           
  3712                           	psect	text10
  3713  0B98                     __ptext10:	
  3714 ;; *************** function __Umul8_16 *****************
  3715 ;; Defined at:
  3716 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  multiplier      1    wreg     unsigned char 
  3719 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3722 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  3723 ;;  product         2    4[BANK0 ] unsigned int 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  2    0[BANK0 ] unsigned int 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       2       0       0       0
  3734 ;;      Locals:         0       5       0       0       0
  3735 ;;      Temps:          0       2       0       0       0
  3736 ;;      Totals:         0       9       0       0       0
  3737 ;;Total ram usage:        9 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		___flmul
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function __Umul8_16
  3749  0B98                     __Umul8_16:
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3753                           ;__Umul8_16@multiplier stored from wreg
  3754  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0B9A  00A8               	movwf	__Umul8_16@multiplier
  3757  0B9B                     l2584:
  3758  0B9B  01A4               	clrf	__Umul8_16@product
  3759  0B9C  01A5               	clrf	__Umul8_16@product+1
  3760  0B9D                     l2586:
  3761  0B9D  0820               	movf	__Umul8_16@multiplicand,w
  3762  0B9E  00A2               	movwf	??__Umul8_16
  3763  0B9F  01A3               	clrf	??__Umul8_16+1
  3764  0BA0  0822               	movf	??__Umul8_16,w
  3765  0BA1  00A6               	movwf	__Umul8_16@word_mpld
  3766  0BA2  0823               	movf	??__Umul8_16+1,w
  3767  0BA3  00A7               	movwf	__Umul8_16@word_mpld+1
  3768  0BA4                     l2588:
  3769  0BA4  1C28               	btfss	__Umul8_16@multiplier,0
  3770  0BA5  2BA7               	goto	u3141
  3771  0BA6  2BA8               	goto	u3140
  3772  0BA7                     u3141:
  3773  0BA7  2BAE               	goto	l760
  3774  0BA8                     u3140:
  3775  0BA8                     l2590:
  3776  0BA8  0826               	movf	__Umul8_16@word_mpld,w
  3777  0BA9  07A4               	addwf	__Umul8_16@product,f
  3778  0BAA  1803               	skipnc
  3779  0BAB  0AA5               	incf	__Umul8_16@product+1,f
  3780  0BAC  0827               	movf	__Umul8_16@word_mpld+1,w
  3781  0BAD  07A5               	addwf	__Umul8_16@product+1,f
  3782  0BAE                     l760:
  3783  0BAE  3001               	movlw	1
  3784  0BAF                     u3155:
  3785  0BAF  1003               	clrc
  3786  0BB0  0DA6               	rlf	__Umul8_16@word_mpld,f
  3787  0BB1  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  3788  0BB2  3EFF               	addlw	-1
  3789  0BB3  1D03               	skipz
  3790  0BB4  2BAF               	goto	u3155
  3791  0BB5  1003               	clrc
  3792  0BB6  0CA8               	rrf	__Umul8_16@multiplier,f
  3793  0BB7                     l2592:
  3794  0BB7  0828               	movf	__Umul8_16@multiplier,w
  3795  0BB8  1D03               	btfss	3,2
  3796  0BB9  2BBB               	goto	u3161
  3797  0BBA  2BBC               	goto	u3160
  3798  0BBB                     u3161:
  3799  0BBB  2BA4               	goto	l2588
  3800  0BBC                     u3160:
  3801  0BBC                     l2594:
  3802  0BBC  0825               	movf	__Umul8_16@product+1,w
  3803  0BBD  00A1               	movwf	?__Umul8_16+1
  3804  0BBE  0824               	movf	__Umul8_16@product,w
  3805  0BBF  00A0               	movwf	?__Umul8_16
  3806  0BC0                     l762:
  3807  0BC0  0008               	return
  3808  0BC1                     __end_of__Umul8_16:
  3809                           
  3810                           	psect	text11
  3811  039F                     __ptext11:	
  3812 ;; *************** function ___fldiv *****************
  3813 ;; Defined at:
  3814 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  a               4    0[BANK0 ] unsigned int 
  3817 ;;  b               4    4[BANK0 ] unsigned int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  grs             4   20[BANK0 ] unsigned long 
  3820 ;;  rem             4   13[BANK0 ] unsigned long 
  3821 ;;  new_exp         2   18[BANK0 ] int 
  3822 ;;  aexp            1   25[BANK0 ] unsigned char 
  3823 ;;  bexp            1   24[BANK0 ] unsigned char 
  3824 ;;  sign            1   17[BANK0 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  4    0[BANK0 ] unsigned char 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0, btemp+1
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       8       0       0       0
  3835 ;;      Locals:         0      13       0       0       0
  3836 ;;      Temps:          0       5       0       0       0
  3837 ;;      Totals:         0      26       0       0       0
  3838 ;;Total ram usage:       26 bytes
  3839 ;; Hardware stack levels used: 1
  3840 ;; Hardware stack levels required when called: 1
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_Read_Temp
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function ___fldiv
  3850  039F                     ___fldiv:
  3851  039F                     l2770:	
  3852                           ;incstack = 0
  3853                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3854                           
  3855  039F  1283               	bcf	3,5	;RP0=0, select bank0
  3856  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  3857  03A1  0827               	movf	___fldiv@b+3,w
  3858  03A2  3980               	andlw	128
  3859  03A3  00A8               	movwf	??___fldiv
  3860  03A4  0828               	movf	??___fldiv,w
  3861  03A5  00B1               	movwf	___fldiv@sign
  3862  03A6                     l2772:
  3863  03A6  0827               	movf	___fldiv@b+3,w
  3864  03A7  00A8               	movwf	??___fldiv
  3865  03A8  0728               	addwf	??___fldiv,w
  3866  03A9  00A9               	movwf	??___fldiv+1
  3867  03AA  0829               	movf	??___fldiv+1,w
  3868  03AB  00B8               	movwf	___fldiv@bexp
  3869  03AC                     l2774:
  3870  03AC  1FA6               	btfss	___fldiv@b+2,7
  3871  03AD  2BAF               	goto	u3551
  3872  03AE  2BB0               	goto	u3550
  3873  03AF                     u3551:
  3874  03AF  2BB1               	goto	l2778
  3875  03B0                     u3550:
  3876  03B0                     l2776:
  3877  03B0  1438               	bsf	___fldiv@bexp,0
  3878  03B1                     l2778:
  3879  03B1  0838               	movf	___fldiv@bexp,w
  3880  03B2  1903               	btfsc	3,2
  3881  03B3  2BB5               	goto	u3561
  3882  03B4  2BB6               	goto	u3560
  3883  03B5                     u3561:
  3884  03B5  2BC6               	goto	l2788
  3885  03B6                     u3560:
  3886  03B6                     l2780:
  3887  03B6  0A38               	incf	___fldiv@bexp,w
  3888  03B7  1D03               	btfss	3,2
  3889  03B8  2BBA               	goto	u3571
  3890  03B9  2BBB               	goto	u3570
  3891  03BA                     u3571:
  3892  03BA  2BC3               	goto	l2784
  3893  03BB                     u3570:
  3894  03BB                     l2782:
  3895  03BB  3000               	movlw	0
  3896  03BC  00A7               	movwf	___fldiv@b+3
  3897  03BD  3000               	movlw	0
  3898  03BE  00A6               	movwf	___fldiv@b+2
  3899  03BF  3000               	movlw	0
  3900  03C0  00A5               	movwf	___fldiv@b+1
  3901  03C1  3000               	movlw	0
  3902  03C2  00A4               	movwf	___fldiv@b
  3903  03C3                     l2784:
  3904  03C3  17A6               	bsf	___fldiv@b+2,7
  3905  03C4                     l2786:
  3906  03C4  01A7               	clrf	___fldiv@b+3
  3907  03C5  2BCE               	goto	l2790
  3908  03C6                     l2788:
  3909  03C6  3000               	movlw	0
  3910  03C7  00A7               	movwf	___fldiv@b+3
  3911  03C8  3000               	movlw	0
  3912  03C9  00A6               	movwf	___fldiv@b+2
  3913  03CA  3000               	movlw	0
  3914  03CB  00A5               	movwf	___fldiv@b+1
  3915  03CC  3000               	movlw	0
  3916  03CD  00A4               	movwf	___fldiv@b
  3917  03CE                     l2790:
  3918  03CE  0823               	movf	___fldiv@a+3,w
  3919  03CF  3980               	andlw	128
  3920  03D0  00A8               	movwf	??___fldiv
  3921  03D1  0828               	movf	??___fldiv,w
  3922  03D2  06B1               	xorwf	___fldiv@sign,f
  3923  03D3                     l2792:
  3924  03D3  0823               	movf	___fldiv@a+3,w
  3925  03D4  00A8               	movwf	??___fldiv
  3926  03D5  0728               	addwf	??___fldiv,w
  3927  03D6  00A9               	movwf	??___fldiv+1
  3928  03D7  0829               	movf	??___fldiv+1,w
  3929  03D8  00B9               	movwf	___fldiv@aexp
  3930  03D9                     l2794:
  3931  03D9  1FA2               	btfss	___fldiv@a+2,7
  3932  03DA  2BDC               	goto	u3581
  3933  03DB  2BDD               	goto	u3580
  3934  03DC                     u3581:
  3935  03DC  2BDE               	goto	l2798
  3936  03DD                     u3580:
  3937  03DD                     l2796:
  3938  03DD  1439               	bsf	___fldiv@aexp,0
  3939  03DE                     l2798:
  3940  03DE  0839               	movf	___fldiv@aexp,w
  3941  03DF  1903               	btfsc	3,2
  3942  03E0  2BE2               	goto	u3591
  3943  03E1  2BE3               	goto	u3590
  3944  03E2                     u3591:
  3945  03E2  2BF3               	goto	l2808
  3946  03E3                     u3590:
  3947  03E3                     l2800:
  3948  03E3  0A39               	incf	___fldiv@aexp,w
  3949  03E4  1D03               	btfss	3,2
  3950  03E5  2BE7               	goto	u3601
  3951  03E6  2BE8               	goto	u3600
  3952  03E7                     u3601:
  3953  03E7  2BF0               	goto	l2804
  3954  03E8                     u3600:
  3955  03E8                     l2802:
  3956  03E8  3000               	movlw	0
  3957  03E9  00A3               	movwf	___fldiv@a+3
  3958  03EA  3000               	movlw	0
  3959  03EB  00A2               	movwf	___fldiv@a+2
  3960  03EC  3000               	movlw	0
  3961  03ED  00A1               	movwf	___fldiv@a+1
  3962  03EE  3000               	movlw	0
  3963  03EF  00A0               	movwf	___fldiv@a
  3964  03F0                     l2804:
  3965  03F0  17A2               	bsf	___fldiv@a+2,7
  3966  03F1                     l2806:
  3967  03F1  01A3               	clrf	___fldiv@a+3
  3968  03F2  2BFB               	goto	l701
  3969  03F3                     l2808:
  3970  03F3  3000               	movlw	0
  3971  03F4  00A3               	movwf	___fldiv@a+3
  3972  03F5  3000               	movlw	0
  3973  03F6  00A2               	movwf	___fldiv@a+2
  3974  03F7  3000               	movlw	0
  3975  03F8  00A1               	movwf	___fldiv@a+1
  3976  03F9  3000               	movlw	0
  3977  03FA  00A0               	movwf	___fldiv@a
  3978  03FB                     l701:
  3979  03FB  0823               	movf	___fldiv@a+3,w
  3980  03FC  0422               	iorwf	___fldiv@a+2,w
  3981  03FD  0421               	iorwf	___fldiv@a+1,w
  3982  03FE  0420               	iorwf	___fldiv@a,w
  3983  03FF  1D03               	skipz
  3984  0400  2C02               	goto	u3611
  3985  0401  2C03               	goto	u3610
  3986  0402                     u3611:
  3987  0402  2C1C               	goto	l2818
  3988  0403                     u3610:
  3989  0403                     l2810:
  3990  0403  3000               	movlw	0
  3991  0404  00A7               	movwf	___fldiv@b+3
  3992  0405  3000               	movlw	0
  3993  0406  00A6               	movwf	___fldiv@b+2
  3994  0407  3000               	movlw	0
  3995  0408  00A5               	movwf	___fldiv@b+1
  3996  0409  3000               	movlw	0
  3997  040A  00A4               	movwf	___fldiv@b
  3998  040B  3080               	movlw	128
  3999  040C  04A6               	iorwf	___fldiv@b+2,f
  4000  040D  307F               	movlw	127
  4001  040E  04A7               	iorwf	___fldiv@b+3,f
  4002  040F                     l2812:
  4003  040F  0831               	movf	___fldiv@sign,w
  4004  0410  00A8               	movwf	??___fldiv
  4005  0411  0828               	movf	??___fldiv,w
  4006  0412  04A7               	iorwf	___fldiv@b+3,f
  4007  0413                     l2814:
  4008  0413  0827               	movf	___fldiv@b+3,w
  4009  0414  00A3               	movwf	?___fldiv+3
  4010  0415  0826               	movf	___fldiv@b+2,w
  4011  0416  00A2               	movwf	?___fldiv+2
  4012  0417  0825               	movf	___fldiv@b+1,w
  4013  0418  00A1               	movwf	?___fldiv+1
  4014  0419  0824               	movf	___fldiv@b,w
  4015  041A  00A0               	movwf	?___fldiv
  4016  041B  2D7B               	goto	l703
  4017  041C                     l2818:
  4018  041C  0838               	movf	___fldiv@bexp,w
  4019  041D  1D03               	btfss	3,2
  4020  041E  2C20               	goto	u3621
  4021  041F  2C21               	goto	u3620
  4022  0420                     u3621:
  4023  0420  2C2A               	goto	l2824
  4024  0421                     u3620:
  4025  0421                     l2820:
  4026  0421  3000               	movlw	0
  4027  0422  00A3               	movwf	?___fldiv+3
  4028  0423  3000               	movlw	0
  4029  0424  00A2               	movwf	?___fldiv+2
  4030  0425  3000               	movlw	0
  4031  0426  00A1               	movwf	?___fldiv+1
  4032  0427  3000               	movlw	0
  4033  0428  00A0               	movwf	?___fldiv
  4034  0429  2D7B               	goto	l703
  4035  042A                     l2824:
  4036  042A  0838               	movf	___fldiv@bexp,w
  4037  042B  00A8               	movwf	??___fldiv
  4038  042C  01A9               	clrf	??___fldiv+1
  4039  042D  0829               	movf	??___fldiv+1,w
  4040  042E  00AB               	movwf	??___fldiv+3
  4041  042F  0839               	movf	___fldiv@aexp,w
  4042  0430  0228               	subwf	??___fldiv,w
  4043  0431  00AA               	movwf	??___fldiv+2
  4044  0432  1C03               	skipc
  4045  0433  03AB               	decf	??___fldiv+3,f
  4046  0434  082A               	movf	??___fldiv+2,w
  4047  0435  3E7F               	addlw	127
  4048  0436  00B2               	movwf	___fldiv@new_exp
  4049  0437  082B               	movf	??___fldiv+3,w
  4050  0438  1803               	skipnc
  4051  0439  3E01               	addlw	1
  4052  043A  3E00               	addlw	0
  4053  043B  00B3               	movwf	___fldiv@new_exp+1
  4054  043C                     l2826:
  4055  043C  0827               	movf	___fldiv@b+3,w
  4056  043D  00B0               	movwf	___fldiv@rem+3
  4057  043E  0826               	movf	___fldiv@b+2,w
  4058  043F  00AF               	movwf	___fldiv@rem+2
  4059  0440  0825               	movf	___fldiv@b+1,w
  4060  0441  00AE               	movwf	___fldiv@rem+1
  4061  0442  0824               	movf	___fldiv@b,w
  4062  0443  00AD               	movwf	___fldiv@rem
  4063  0444                     l2828:
  4064  0444  3000               	movlw	0
  4065  0445  00A7               	movwf	___fldiv@b+3
  4066  0446  3000               	movlw	0
  4067  0447  00A6               	movwf	___fldiv@b+2
  4068  0448  3000               	movlw	0
  4069  0449  00A5               	movwf	___fldiv@b+1
  4070  044A  3000               	movlw	0
  4071  044B  00A4               	movwf	___fldiv@b
  4072  044C                     l2830:
  4073  044C  3000               	movlw	0
  4074  044D  00B7               	movwf	___fldiv@grs+3
  4075  044E  3000               	movlw	0
  4076  044F  00B6               	movwf	___fldiv@grs+2
  4077  0450  3000               	movlw	0
  4078  0451  00B5               	movwf	___fldiv@grs+1
  4079  0452  3000               	movlw	0
  4080  0453  00B4               	movwf	___fldiv@grs
  4081  0454                     l2832:
  4082  0454  01B9               	clrf	___fldiv@aexp
  4083  0455  2CA0               	goto	l2852
  4084  0456                     l2834:
  4085  0456  0839               	movf	___fldiv@aexp,w
  4086  0457  1903               	btfsc	3,2
  4087  0458  2C5A               	goto	u3631
  4088  0459  2C5B               	goto	u3630
  4089  045A                     u3631:
  4090  045A  2C7B               	goto	l2844
  4091  045B                     u3630:
  4092  045B                     l2836:
  4093  045B  3001               	movlw	1
  4094  045C  00A8               	movwf	??___fldiv
  4095  045D                     u3645:
  4096  045D  1003               	clrc
  4097  045E  0DAD               	rlf	___fldiv@rem,f
  4098  045F  0DAE               	rlf	___fldiv@rem+1,f
  4099  0460  0DAF               	rlf	___fldiv@rem+2,f
  4100  0461  0DB0               	rlf	___fldiv@rem+3,f
  4101  0462  0BA8               	decfsz	??___fldiv,f
  4102  0463  2C5D               	goto	u3645
  4103  0464  3001               	movlw	1
  4104  0465  00A8               	movwf	??___fldiv
  4105  0466                     u3655:
  4106  0466  1003               	clrc
  4107  0467  0DA4               	rlf	___fldiv@b,f
  4108  0468  0DA5               	rlf	___fldiv@b+1,f
  4109  0469  0DA6               	rlf	___fldiv@b+2,f
  4110  046A  0DA7               	rlf	___fldiv@b+3,f
  4111  046B  0BA8               	decfsz	??___fldiv,f
  4112  046C  2C66               	goto	u3655
  4113  046D                     l2838:
  4114  046D  1FB7               	btfss	___fldiv@grs+3,7
  4115  046E  2C70               	goto	u3661
  4116  046F  2C71               	goto	u3660
  4117  0470                     u3661:
  4118  0470  2C72               	goto	l2842
  4119  0471                     u3660:
  4120  0471                     l2840:
  4121  0471  1424               	bsf	___fldiv@b,0
  4122  0472                     l2842:
  4123  0472  3001               	movlw	1
  4124  0473  00A8               	movwf	??___fldiv
  4125  0474                     u3675:
  4126  0474  1003               	clrc
  4127  0475  0DB4               	rlf	___fldiv@grs,f
  4128  0476  0DB5               	rlf	___fldiv@grs+1,f
  4129  0477  0DB6               	rlf	___fldiv@grs+2,f
  4130  0478  0DB7               	rlf	___fldiv@grs+3,f
  4131  0479  0BA8               	decfsz	??___fldiv,f
  4132  047A  2C74               	goto	u3675
  4133  047B                     l2844:
  4134  047B  0823               	movf	___fldiv@a+3,w
  4135  047C  0230               	subwf	___fldiv@rem+3,w
  4136  047D  1D03               	skipz
  4137  047E  2C89               	goto	u3685
  4138  047F  0822               	movf	___fldiv@a+2,w
  4139  0480  022F               	subwf	___fldiv@rem+2,w
  4140  0481  1D03               	skipz
  4141  0482  2C89               	goto	u3685
  4142  0483  0821               	movf	___fldiv@a+1,w
  4143  0484  022E               	subwf	___fldiv@rem+1,w
  4144  0485  1D03               	skipz
  4145  0486  2C89               	goto	u3685
  4146  0487  0820               	movf	___fldiv@a,w
  4147  0488  022D               	subwf	___fldiv@rem,w
  4148  0489                     u3685:
  4149  0489  1C03               	skipc
  4150  048A  2C8C               	goto	u3681
  4151  048B  2C8D               	goto	u3680
  4152  048C                     u3681:
  4153  048C  2C9C               	goto	l2850
  4154  048D                     u3680:
  4155  048D                     l2846:
  4156  048D  1737               	bsf	___fldiv@grs+3,6
  4157  048E                     l2848:
  4158  048E  0820               	movf	___fldiv@a,w
  4159  048F  02AD               	subwf	___fldiv@rem,f
  4160  0490  0821               	movf	___fldiv@a+1,w
  4161  0491  1C03               	skipc
  4162  0492  0F21               	incfsz	___fldiv@a+1,w
  4163  0493  02AE               	subwf	___fldiv@rem+1,f
  4164  0494  0822               	movf	___fldiv@a+2,w
  4165  0495  1C03               	skipc
  4166  0496  0F22               	incfsz	___fldiv@a+2,w
  4167  0497  02AF               	subwf	___fldiv@rem+2,f
  4168  0498  0823               	movf	___fldiv@a+3,w
  4169  0499  1C03               	skipc
  4170  049A  0F23               	incfsz	___fldiv@a+3,w
  4171  049B  02B0               	subwf	___fldiv@rem+3,f
  4172  049C                     l2850:
  4173  049C  3001               	movlw	1
  4174  049D  00A8               	movwf	??___fldiv
  4175  049E  0828               	movf	??___fldiv,w
  4176  049F  07B9               	addwf	___fldiv@aexp,f
  4177  04A0                     l2852:
  4178  04A0  301A               	movlw	26
  4179  04A1  0239               	subwf	___fldiv@aexp,w
  4180  04A2  1C03               	skipc
  4181  04A3  2CA5               	goto	u3691
  4182  04A4  2CA6               	goto	u3690
  4183  04A5                     u3691:
  4184  04A5  2C56               	goto	l2834
  4185  04A6                     u3690:
  4186  04A6                     l2854:
  4187  04A6  0830               	movf	___fldiv@rem+3,w
  4188  04A7  042F               	iorwf	___fldiv@rem+2,w
  4189  04A8  042E               	iorwf	___fldiv@rem+1,w
  4190  04A9  042D               	iorwf	___fldiv@rem,w
  4191  04AA  1903               	skipnz
  4192  04AB  2CAD               	goto	u3701
  4193  04AC  2CAE               	goto	u3700
  4194  04AD                     u3701:
  4195  04AD  2CCD               	goto	l2868
  4196  04AE                     u3700:
  4197  04AE                     l2856:
  4198  04AE  1434               	bsf	___fldiv@grs,0
  4199  04AF  2CCD               	goto	l2868
  4200  04B0                     l2858:
  4201  04B0  3001               	movlw	1
  4202  04B1  00A8               	movwf	??___fldiv
  4203  04B2                     u3715:
  4204  04B2  1003               	clrc
  4205  04B3  0DA4               	rlf	___fldiv@b,f
  4206  04B4  0DA5               	rlf	___fldiv@b+1,f
  4207  04B5  0DA6               	rlf	___fldiv@b+2,f
  4208  04B6  0DA7               	rlf	___fldiv@b+3,f
  4209  04B7  0BA8               	decfsz	??___fldiv,f
  4210  04B8  2CB2               	goto	u3715
  4211  04B9                     l2860:
  4212  04B9  1FB7               	btfss	___fldiv@grs+3,7
  4213  04BA  2CBC               	goto	u3721
  4214  04BB  2CBD               	goto	u3720
  4215  04BC                     u3721:
  4216  04BC  2CBE               	goto	l2864
  4217  04BD                     u3720:
  4218  04BD                     l2862:
  4219  04BD  1424               	bsf	___fldiv@b,0
  4220  04BE                     l2864:
  4221  04BE  3001               	movlw	1
  4222  04BF  00A8               	movwf	??___fldiv
  4223  04C0                     u3735:
  4224  04C0  1003               	clrc
  4225  04C1  0DB4               	rlf	___fldiv@grs,f
  4226  04C2  0DB5               	rlf	___fldiv@grs+1,f
  4227  04C3  0DB6               	rlf	___fldiv@grs+2,f
  4228  04C4  0DB7               	rlf	___fldiv@grs+3,f
  4229  04C5  0BA8               	decfsz	??___fldiv,f
  4230  04C6  2CC0               	goto	u3735
  4231  04C7                     l2866:
  4232  04C7  30FF               	movlw	255
  4233  04C8  07B2               	addwf	___fldiv@new_exp,f
  4234  04C9  1803               	skipnc
  4235  04CA  0AB3               	incf	___fldiv@new_exp+1,f
  4236  04CB  30FF               	movlw	255
  4237  04CC  07B3               	addwf	___fldiv@new_exp+1,f
  4238  04CD                     l2868:
  4239  04CD  1FA6               	btfss	___fldiv@b+2,7
  4240  04CE  2CD0               	goto	u3741
  4241  04CF  2CD1               	goto	u3740
  4242  04D0                     u3741:
  4243  04D0  2CB0               	goto	l2858
  4244  04D1                     u3740:
  4245  04D1                     l2870:
  4246  04D1  01B9               	clrf	___fldiv@aexp
  4247  04D2                     l2872:
  4248  04D2  1FB7               	btfss	___fldiv@grs+3,7
  4249  04D3  2CD5               	goto	u3751
  4250  04D4  2CD6               	goto	u3750
  4251  04D5                     u3751:
  4252  04D5  2CF2               	goto	l2880
  4253  04D6                     u3750:
  4254  04D6                     l2874:
  4255  04D6  30FF               	movlw	255
  4256  04D7  0534               	andwf	___fldiv@grs,w
  4257  04D8  00A8               	movwf	??___fldiv
  4258  04D9  30FF               	movlw	255
  4259  04DA  0535               	andwf	___fldiv@grs+1,w
  4260  04DB  00A9               	movwf	??___fldiv+1
  4261  04DC  30FF               	movlw	255
  4262  04DD  0536               	andwf	___fldiv@grs+2,w
  4263  04DE  00AA               	movwf	??___fldiv+2
  4264  04DF  307F               	movlw	127
  4265  04E0  0537               	andwf	___fldiv@grs+3,w
  4266  04E1  00AB               	movwf	??___fldiv+3
  4267  04E2  082B               	movf	??___fldiv+3,w
  4268  04E3  042A               	iorwf	??___fldiv+2,w
  4269  04E4  0429               	iorwf	??___fldiv+1,w
  4270  04E5  0428               	iorwf	??___fldiv,w
  4271  04E6  1903               	skipnz
  4272  04E7  2CE9               	goto	u3761
  4273  04E8  2CEA               	goto	u3760
  4274  04E9                     u3761:
  4275  04E9  2CED               	goto	l717
  4276  04EA                     u3760:
  4277  04EA                     l2876:
  4278  04EA  01B9               	clrf	___fldiv@aexp
  4279  04EB  0AB9               	incf	___fldiv@aexp,f
  4280  04EC  2CF2               	goto	l2880
  4281  04ED                     l717:
  4282  04ED  1C24               	btfss	___fldiv@b,0
  4283  04EE  2CF0               	goto	u3771
  4284  04EF  2CF1               	goto	u3770
  4285  04F0                     u3771:
  4286  04F0  2CF2               	goto	l2880
  4287  04F1                     u3770:
  4288  04F1  2CEA               	goto	l2876
  4289  04F2                     l2880:
  4290  04F2  0839               	movf	___fldiv@aexp,w
  4291  04F3  1903               	btfsc	3,2
  4292  04F4  2CF6               	goto	u3781
  4293  04F5  2CF7               	goto	u3780
  4294  04F6                     u3781:
  4295  04F6  2D28               	goto	l2890
  4296  04F7                     u3780:
  4297  04F7                     l2882:
  4298  04F7  3001               	movlw	1
  4299  04F8  07A4               	addwf	___fldiv@b,f
  4300  04F9  3000               	movlw	0
  4301  04FA  1803               	skipnc
  4302  04FB  3001               	movlw	1
  4303  04FC  07A5               	addwf	___fldiv@b+1,f
  4304  04FD  3000               	movlw	0
  4305  04FE  1803               	skipnc
  4306  04FF  3001               	movlw	1
  4307  0500  07A6               	addwf	___fldiv@b+2,f
  4308  0501  3000               	movlw	0
  4309  0502  1803               	skipnc
  4310  0503  3001               	movlw	1
  4311  0504  07A7               	addwf	___fldiv@b+3,f
  4312  0505                     l2884:
  4313  0505  1C27               	btfss	___fldiv@b+3,0
  4314  0506  2D08               	goto	u3791
  4315  0507  2D09               	goto	u3790
  4316  0508                     u3791:
  4317  0508  2D28               	goto	l2890
  4318  0509                     u3790:
  4319  0509                     l2886:
  4320  0509  0824               	movf	___fldiv@b,w
  4321  050A  00A8               	movwf	??___fldiv
  4322  050B  0825               	movf	___fldiv@b+1,w
  4323  050C  00A9               	movwf	??___fldiv+1
  4324  050D  0826               	movf	___fldiv@b+2,w
  4325  050E  00AA               	movwf	??___fldiv+2
  4326  050F  0827               	movf	___fldiv@b+3,w
  4327  0510  00AB               	movwf	??___fldiv+3
  4328  0511  3001               	movlw	1
  4329  0512  00AC               	movwf	??___fldiv+4
  4330  0513                     u3805:
  4331  0513  0D2B               	rlf	??___fldiv+3,w
  4332  0514  0CAB               	rrf	??___fldiv+3,f
  4333  0515  0CAA               	rrf	??___fldiv+2,f
  4334  0516  0CA9               	rrf	??___fldiv+1,f
  4335  0517  0CA8               	rrf	??___fldiv,f
  4336  0518                     u3800:
  4337  0518  0BAC               	decfsz	??___fldiv+4,f
  4338  0519  2D13               	goto	u3805
  4339  051A  082B               	movf	??___fldiv+3,w
  4340  051B  00A7               	movwf	___fldiv@b+3
  4341  051C  082A               	movf	??___fldiv+2,w
  4342  051D  00A6               	movwf	___fldiv@b+2
  4343  051E  0829               	movf	??___fldiv+1,w
  4344  051F  00A5               	movwf	___fldiv@b+1
  4345  0520  0828               	movf	??___fldiv,w
  4346  0521  00A4               	movwf	___fldiv@b
  4347  0522                     l2888:
  4348  0522  3001               	movlw	1
  4349  0523  07B2               	addwf	___fldiv@new_exp,f
  4350  0524  1803               	skipnc
  4351  0525  0AB3               	incf	___fldiv@new_exp+1,f
  4352  0526  3000               	movlw	0
  4353  0527  07B3               	addwf	___fldiv@new_exp+1,f
  4354  0528                     l2890:
  4355  0528  0833               	movf	___fldiv@new_exp+1,w
  4356  0529  3A80               	xorlw	128
  4357  052A  00FF               	movwf	btemp+1
  4358  052B  3080               	movlw	128
  4359  052C  027F               	subwf	btemp+1,w
  4360  052D  1D03               	skipz
  4361  052E  2D31               	goto	u3815
  4362  052F  30FF               	movlw	255
  4363  0530  0232               	subwf	___fldiv@new_exp,w
  4364  0531                     u3815:
  4365  0531  1C03               	skipc
  4366  0532  2D34               	goto	u3811
  4367  0533  2D35               	goto	u3810
  4368  0534                     u3811:
  4369  0534  2D43               	goto	l2894
  4370  0535                     u3810:
  4371  0535                     l2892:
  4372  0535  30FF               	movlw	255
  4373  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0537  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0538  00B2               	movwf	___fldiv@new_exp
  4376  0539  3000               	movlw	0
  4377  053A  00B3               	movwf	___fldiv@new_exp+1
  4378  053B  3000               	movlw	0
  4379  053C  00A7               	movwf	___fldiv@b+3
  4380  053D  3000               	movlw	0
  4381  053E  00A6               	movwf	___fldiv@b+2
  4382  053F  3000               	movlw	0
  4383  0540  00A5               	movwf	___fldiv@b+1
  4384  0541  3000               	movlw	0
  4385  0542  00A4               	movwf	___fldiv@b
  4386  0543                     l2894:
  4387  0543  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0544  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0545  0833               	movf	___fldiv@new_exp+1,w
  4390  0546  3A80               	xorlw	128
  4391  0547  00FF               	movwf	btemp+1
  4392  0548  3080               	movlw	128
  4393  0549  027F               	subwf	btemp+1,w
  4394  054A  1D03               	skipz
  4395  054B  2D4E               	goto	u3825
  4396  054C  3001               	movlw	1
  4397  054D  0232               	subwf	___fldiv@new_exp,w
  4398  054E                     u3825:
  4399  054E  1803               	skipnc
  4400  054F  2D51               	goto	u3821
  4401  0550  2D52               	goto	u3820
  4402  0551                     u3821:
  4403  0551  2D5F               	goto	l723
  4404  0552                     u3820:
  4405  0552                     l2896:
  4406  0552  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0553  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0554  01B2               	clrf	___fldiv@new_exp
  4409  0555  01B3               	clrf	___fldiv@new_exp+1
  4410  0556                     l2898:
  4411  0556  3000               	movlw	0
  4412  0557  00A7               	movwf	___fldiv@b+3
  4413  0558  3000               	movlw	0
  4414  0559  00A6               	movwf	___fldiv@b+2
  4415  055A  3000               	movlw	0
  4416  055B  00A5               	movwf	___fldiv@b+1
  4417  055C  3000               	movlw	0
  4418  055D  00A4               	movwf	___fldiv@b
  4419  055E                     l2900:
  4420  055E  01B1               	clrf	___fldiv@sign
  4421  055F                     l723:
  4422  055F  1283               	bcf	3,5	;RP0=0, select bank0
  4423  0560  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0561  0832               	movf	___fldiv@new_exp,w
  4425  0562  00A8               	movwf	??___fldiv
  4426  0563  0828               	movf	??___fldiv,w
  4427  0564  00B8               	movwf	___fldiv@bexp
  4428  0565                     l2902:
  4429  0565  1C38               	btfss	___fldiv@bexp,0
  4430  0566  2D68               	goto	u3831
  4431  0567  2D69               	goto	u3830
  4432  0568                     u3831:
  4433  0568  2D6B               	goto	l2906
  4434  0569                     u3830:
  4435  0569                     l2904:
  4436  0569  17A6               	bsf	___fldiv@b+2,7
  4437  056A  2D6F               	goto	l725
  4438  056B                     l2906:
  4439  056B  307F               	movlw	127
  4440  056C  00A8               	movwf	??___fldiv
  4441  056D  0828               	movf	??___fldiv,w
  4442  056E  05A6               	andwf	___fldiv@b+2,f
  4443  056F                     l725:
  4444  056F  0838               	movf	___fldiv@bexp,w
  4445  0570  00A8               	movwf	??___fldiv
  4446  0571  1003               	clrc
  4447  0572  0C28               	rrf	??___fldiv,w
  4448  0573  00A9               	movwf	??___fldiv+1
  4449  0574  0829               	movf	??___fldiv+1,w
  4450  0575  00A7               	movwf	___fldiv@b+3
  4451  0576  0831               	movf	___fldiv@sign,w
  4452  0577  00A8               	movwf	??___fldiv
  4453  0578  0828               	movf	??___fldiv,w
  4454  0579  04A7               	iorwf	___fldiv@b+3,f
  4455  057A  2C13               	goto	l2814
  4456  057B                     l703:
  4457  057B  0008               	return
  4458  057C                     __end_of___fldiv:
  4459                           
  4460                           	psect	text12
  4461  0B4C                     __ptext12:	
  4462 ;; *************** function _Lcd_Write_String *****************
  4463 ;; Defined at:
  4464 ;;		line 95 in file "./lcd.h"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  a               1    wreg     PTR unsigned char 
  4467 ;;		 -> main@str(16), 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  a               1    8[BANK0 ] PTR unsigned char 
  4470 ;;		 -> main@str(16), 
  4471 ;;  i               2    6[BANK0 ] int 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      void 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4481 ;;      Params:         0       0       0       0       0
  4482 ;;      Locals:         0       3       0       0       0
  4483 ;;      Temps:          0       1       0       0       0
  4484 ;;      Totals:         0       4       0       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; Hardware stack levels required when called: 3
  4488 ;; This function calls:
  4489 ;;		_Lcd_Write_Char
  4490 ;; This function is called by:
  4491 ;;		_main
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _Lcd_Write_String
  4497  0B4C                     _Lcd_Write_String:
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4501                           ;Lcd_Write_String@a stored from wreg
  4502  0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0B4D  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0B4E  00A8               	movwf	Lcd_Write_String@a
  4505  0B4F                     l3128:
  4506                           
  4507                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  4508  0B4F  01A6               	clrf	Lcd_Write_String@i
  4509  0B50  01A7               	clrf	Lcd_Write_String@i+1
  4510  0B51  2B65               	goto	l3134
  4511  0B52                     l3130:
  4512                           
  4513                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  4514  0B52  0826               	movf	Lcd_Write_String@i,w
  4515  0B53  0728               	addwf	Lcd_Write_String@a,w
  4516  0B54  00A5               	movwf	??_Lcd_Write_String
  4517  0B55  0825               	movf	??_Lcd_Write_String,w
  4518  0B56  0084               	movwf	4
  4519  0B57  0800               	movf	0,w
  4520  0B58  120A  158A  23FD  120A  158A  	fcall	_Lcd_Write_Char
  4521  0B5D                     l3132:
  4522  0B5D  3001               	movlw	1
  4523  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0B60  07A6               	addwf	Lcd_Write_String@i,f
  4526  0B61  1803               	skipnc
  4527  0B62  0AA7               	incf	Lcd_Write_String@i+1,f
  4528  0B63  3000               	movlw	0
  4529  0B64  07A7               	addwf	Lcd_Write_String@i+1,f
  4530  0B65                     l3134:
  4531  0B65  0826               	movf	Lcd_Write_String@i,w
  4532  0B66  0728               	addwf	Lcd_Write_String@a,w
  4533  0B67  00A5               	movwf	??_Lcd_Write_String
  4534  0B68  0825               	movf	??_Lcd_Write_String,w
  4535  0B69  0084               	movwf	4
  4536  0B6A  1383               	bcf	3,7	;select IRP bank0
  4537  0B6B  0800               	movf	0,w
  4538  0B6C  1D03               	btfss	3,2
  4539  0B6D  2B6F               	goto	u4391
  4540  0B6E  2B70               	goto	u4390
  4541  0B6F                     u4391:
  4542  0B6F  2B52               	goto	l3130
  4543  0B70                     u4390:
  4544  0B70                     l151:
  4545  0B70  0008               	return
  4546  0B71                     __end_of_Lcd_Write_String:
  4547                           
  4548                           	psect	text13
  4549  0BFD                     __ptext13:	
  4550 ;; *************** function _Lcd_Write_Char *****************
  4551 ;; Defined at:
  4552 ;;		line 79 in file "./lcd.h"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  a               1    wreg     unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  a               1    4[BANK0 ] unsigned char 
  4557 ;;  y               1    3[BANK0 ] unsigned char 
  4558 ;;  temp            1    2[BANK0 ] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4568 ;;      Params:         0       0       0       0       0
  4569 ;;      Locals:         0       3       0       0       0
  4570 ;;      Temps:          0       1       0       0       0
  4571 ;;      Totals:         0       4       0       0       0
  4572 ;;Total ram usage:        4 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 2
  4575 ;; This function calls:
  4576 ;;		_Lcd_Port
  4577 ;; This function is called by:
  4578 ;;		_Lcd_Write_String
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _Lcd_Write_Char
  4584  0BFD                     _Lcd_Write_Char:
  4585                           
  4586                           ;incstack = 0
  4587                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4588                           ;Lcd_Write_Char@a stored from wreg
  4589  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0BFF  00A4               	movwf	Lcd_Write_Char@a
  4592  0C00                     l2608:
  4593                           
  4594                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  4595  0C00  0824               	movf	Lcd_Write_Char@a,w
  4596  0C01  390F               	andlw	15
  4597  0C02  00A1               	movwf	??_Lcd_Write_Char
  4598  0C03  0821               	movf	??_Lcd_Write_Char,w
  4599  0C04  00A2               	movwf	Lcd_Write_Char@temp
  4600                           
  4601                           ;./lcd.h: 83:    y = a&0xF0;
  4602  0C05  0824               	movf	Lcd_Write_Char@a,w
  4603  0C06  39F0               	andlw	240
  4604  0C07  00A1               	movwf	??_Lcd_Write_Char
  4605  0C08  0821               	movf	??_Lcd_Write_Char,w
  4606  0C09  00A3               	movwf	Lcd_Write_Char@y
  4607  0C0A                     l2610:
  4608                           
  4609                           ;./lcd.h: 84:    RD7 = 1;
  4610  0C0A  1788               	bsf	8,7	;volatile
  4611  0C0B                     l2612:
  4612                           
  4613                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  4614  0C0B  0823               	movf	Lcd_Write_Char@y,w
  4615  0C0C  00A1               	movwf	??_Lcd_Write_Char
  4616  0C0D  3004               	movlw	4
  4617  0C0E                     u3175:
  4618  0C0E  1003               	clrc
  4619  0C0F  0CA1               	rrf	??_Lcd_Write_Char,f
  4620  0C10  3EFF               	addlw	-1
  4621  0C11  1D03               	skipz
  4622  0C12  2C0E               	goto	u3175
  4623  0C13  0821               	movf	??_Lcd_Write_Char,w
  4624  0C14  120A  158A  232C  120A  158A  	fcall	_Lcd_Port
  4625  0C19                     l2614:
  4626                           
  4627                           ;./lcd.h: 86:    RD6 = 1;
  4628  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  4629  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0C1B  1708               	bsf	8,6	;volatile
  4631  0C1C                     l2616:
  4632                           
  4633                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  4634  0C1C  3034               	movlw	52
  4635  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0C1F  00A1               	movwf	??_Lcd_Write_Char
  4638  0C20                     u4557:
  4639  0C20  0BA1               	decfsz	??_Lcd_Write_Char,f
  4640  0C21  2C20               	goto	u4557
  4641  0C22  0000               	nop
  4642  0C23                     l2618:
  4643                           
  4644                           ;./lcd.h: 88:    RD6 = 0;
  4645  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  4646  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  4647  0C25  1308               	bcf	8,6	;volatile
  4648  0C26                     l2620:
  4649                           
  4650                           ;./lcd.h: 89:    Lcd_Port(temp);
  4651  0C26  0822               	movf	Lcd_Write_Char@temp,w
  4652  0C27  120A  158A  232C  120A  158A  	fcall	_Lcd_Port
  4653  0C2C                     l2622:
  4654                           
  4655                           ;./lcd.h: 90:    RD6 = 1;
  4656  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0C2E  1708               	bsf	8,6	;volatile
  4659  0C2F                     l2624:
  4660                           
  4661                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  4662  0C2F  3034               	movlw	52
  4663  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  4664  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  4665  0C32  00A1               	movwf	??_Lcd_Write_Char
  4666  0C33                     u4567:
  4667  0C33  0BA1               	decfsz	??_Lcd_Write_Char,f
  4668  0C34  2C33               	goto	u4567
  4669  0C35  0000               	nop
  4670  0C36                     l2626:
  4671                           
  4672                           ;./lcd.h: 92:    RD6 = 0;
  4673  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0C38  1308               	bcf	8,6	;volatile
  4676  0C39                     l145:
  4677  0C39  0008               	return
  4678  0C3A                     __end_of_Lcd_Write_Char:
  4679                           
  4680                           	psect	text14
  4681  0C80                     __ptext14:	
  4682 ;; *************** function _Lcd_Set_Cursor *****************
  4683 ;; Defined at:
  4684 ;;		line 39 in file "./lcd.h"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  a               1    wreg     unsigned char 
  4687 ;;  b               1    4[BANK0 ] unsigned char 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  a               1    7[BANK0 ] unsigned char 
  4690 ;;  temp            1   10[BANK0 ] unsigned char 
  4691 ;;  y               1    9[BANK0 ] unsigned char 
  4692 ;;  z               1    8[BANK0 ] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, pclath, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4702 ;;      Params:         0       1       0       0       0
  4703 ;;      Locals:         0       4       0       0       0
  4704 ;;      Temps:          0       2       0       0       0
  4705 ;;      Totals:         0       7       0       0       0
  4706 ;;Total ram usage:        7 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; Hardware stack levels required when called: 3
  4709 ;; This function calls:
  4710 ;;		_Lcd_Cmd
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _Lcd_Set_Cursor
  4718  0C80                     _Lcd_Set_Cursor:
  4719                           
  4720                           ;incstack = 0
  4721                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4722                           ;Lcd_Set_Cursor@a stored from wreg
  4723  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  4724  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  4725  0C82  00A7               	movwf	Lcd_Set_Cursor@a
  4726  0C83                     l3098:
  4727                           
  4728                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  4729  0C83  0327               	decf	Lcd_Set_Cursor@a,w
  4730  0C84  1D03               	btfss	3,2
  4731  0C85  2C87               	goto	u4351
  4732  0C86  2C88               	goto	u4350
  4733  0C87                     u4351:
  4734  0C87  2CAD               	goto	l3108
  4735  0C88                     u4350:
  4736  0C88                     l3100:
  4737                           
  4738                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  4739  0C88  0824               	movf	Lcd_Set_Cursor@b,w
  4740  0C89  3E7F               	addlw	127
  4741  0C8A  00A5               	movwf	??_Lcd_Set_Cursor
  4742  0C8B  0825               	movf	??_Lcd_Set_Cursor,w
  4743  0C8C  00AA               	movwf	Lcd_Set_Cursor@temp
  4744                           
  4745                           ;./lcd.h: 45:   z = temp>>4;
  4746  0C8D  082A               	movf	Lcd_Set_Cursor@temp,w
  4747  0C8E  00A5               	movwf	??_Lcd_Set_Cursor
  4748  0C8F  3004               	movlw	4
  4749  0C90                     u4365:
  4750  0C90  1003               	clrc
  4751  0C91  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4752  0C92  3EFF               	addlw	-1
  4753  0C93  1D03               	skipz
  4754  0C94  2C90               	goto	u4365
  4755  0C95  0825               	movf	??_Lcd_Set_Cursor,w
  4756  0C96  00A6               	movwf	??_Lcd_Set_Cursor+1
  4757  0C97  0826               	movf	??_Lcd_Set_Cursor+1,w
  4758  0C98  00A8               	movwf	Lcd_Set_Cursor@z
  4759  0C99                     l3102:
  4760                           
  4761                           ;./lcd.h: 46:   y = temp & 0x0F;
  4762  0C99  082A               	movf	Lcd_Set_Cursor@temp,w
  4763  0C9A  390F               	andlw	15
  4764  0C9B  00A5               	movwf	??_Lcd_Set_Cursor
  4765  0C9C  0825               	movf	??_Lcd_Set_Cursor,w
  4766  0C9D  00A9               	movwf	Lcd_Set_Cursor@y
  4767  0C9E                     l3104:
  4768                           
  4769                           ;./lcd.h: 47:   Lcd_Cmd(z);
  4770  0C9E  0828               	movf	Lcd_Set_Cursor@z,w
  4771  0C9F  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4772  0CA4                     l3106:
  4773                           
  4774                           ;./lcd.h: 48:   Lcd_Cmd(y);
  4775  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  4776  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  4777  0CA6  0829               	movf	Lcd_Set_Cursor@y,w
  4778  0CA7  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4779                           
  4780                           ;./lcd.h: 49:  }
  4781  0CAC  2CD7               	goto	l139
  4782  0CAD                     l3108:
  4783  0CAD  3002               	movlw	2
  4784  0CAE  0627               	xorwf	Lcd_Set_Cursor@a,w
  4785  0CAF  1D03               	btfss	3,2
  4786  0CB0  2CB2               	goto	u4371
  4787  0CB1  2CB3               	goto	u4370
  4788  0CB2                     u4371:
  4789  0CB2  2CD7               	goto	l139
  4790  0CB3                     u4370:
  4791  0CB3                     l3110:
  4792                           
  4793                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  4794  0CB3  0824               	movf	Lcd_Set_Cursor@b,w
  4795  0CB4  3EBF               	addlw	191
  4796  0CB5  00A5               	movwf	??_Lcd_Set_Cursor
  4797  0CB6  0825               	movf	??_Lcd_Set_Cursor,w
  4798  0CB7  00AA               	movwf	Lcd_Set_Cursor@temp
  4799                           
  4800                           ;./lcd.h: 53:   z = temp>>4;
  4801  0CB8  082A               	movf	Lcd_Set_Cursor@temp,w
  4802  0CB9  00A5               	movwf	??_Lcd_Set_Cursor
  4803  0CBA  3004               	movlw	4
  4804  0CBB                     u4385:
  4805  0CBB  1003               	clrc
  4806  0CBC  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4807  0CBD  3EFF               	addlw	-1
  4808  0CBE  1D03               	skipz
  4809  0CBF  2CBB               	goto	u4385
  4810  0CC0  0825               	movf	??_Lcd_Set_Cursor,w
  4811  0CC1  00A6               	movwf	??_Lcd_Set_Cursor+1
  4812  0CC2  0826               	movf	??_Lcd_Set_Cursor+1,w
  4813  0CC3  00A8               	movwf	Lcd_Set_Cursor@z
  4814  0CC4                     l3112:
  4815                           
  4816                           ;./lcd.h: 54:   y = temp & 0x0F;
  4817  0CC4  082A               	movf	Lcd_Set_Cursor@temp,w
  4818  0CC5  390F               	andlw	15
  4819  0CC6  00A5               	movwf	??_Lcd_Set_Cursor
  4820  0CC7  0825               	movf	??_Lcd_Set_Cursor,w
  4821  0CC8  00A9               	movwf	Lcd_Set_Cursor@y
  4822  0CC9                     l3114:
  4823                           
  4824                           ;./lcd.h: 55:   Lcd_Cmd(z);
  4825  0CC9  0828               	movf	Lcd_Set_Cursor@z,w
  4826  0CCA  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4827  0CCF                     l3116:
  4828                           
  4829                           ;./lcd.h: 56:   Lcd_Cmd(y);
  4830  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  4832  0CD1  0829               	movf	Lcd_Set_Cursor@y,w
  4833  0CD2  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4834  0CD7                     l139:
  4835  0CD7  0008               	return
  4836  0CD8                     __end_of_Lcd_Set_Cursor:
  4837                           
  4838                           	psect	text15
  4839  0CD8                     __ptext15:	
  4840 ;; *************** function _Lcd_Init *****************
  4841 ;; Defined at:
  4842 ;;		line 60 in file "./lcd.h"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4856 ;;      Params:         0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0
  4858 ;;      Temps:          0       2       0       0       0
  4859 ;;      Totals:         0       2       0       0       0
  4860 ;;Total ram usage:        2 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 3
  4863 ;; This function calls:
  4864 ;;		_Lcd_Cmd
  4865 ;;		_Lcd_Port
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           
  4872                           ;psect for function _Lcd_Init
  4873  0CD8                     _Lcd_Init:
  4874  0CD8                     l3118:	
  4875                           ;incstack = 0
  4876                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4877                           
  4878                           
  4879                           ;./lcd.h: 62:   Lcd_Port(0x00);
  4880  0CD8  3000               	movlw	0
  4881  0CD9  120A  158A  232C  120A  158A  	fcall	_Lcd_Port
  4882  0CDE                     l3120:
  4883                           
  4884                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(16000000/4000.0)));
  4885  0CDE  3068               	movlw	104
  4886  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0CE1  00A5               	movwf	??_Lcd_Init+1
  4889  0CE2  30E3               	movlw	227
  4890  0CE3  00A4               	movwf	??_Lcd_Init
  4891  0CE4                     u4577:
  4892  0CE4  0BA4               	decfsz	??_Lcd_Init,f
  4893  0CE5  2CE4               	goto	u4577
  4894  0CE6  0BA5               	decfsz	??_Lcd_Init+1,f
  4895  0CE7  2CE4               	goto	u4577
  4896  0CE8  2CE9               	nop2
  4897  0CE9                     l3122:
  4898                           
  4899                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  4900  0CE9  3003               	movlw	3
  4901  0CEA  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4902                           
  4903                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(16000000/4000.0)));
  4904  0CEF  301A               	movlw	26
  4905  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  4906  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  4907  0CF2  00A5               	movwf	??_Lcd_Init+1
  4908  0CF3  30F7               	movlw	247
  4909  0CF4  00A4               	movwf	??_Lcd_Init
  4910  0CF5                     u4587:
  4911  0CF5  0BA4               	decfsz	??_Lcd_Init,f
  4912  0CF6  2CF5               	goto	u4587
  4913  0CF7  0BA5               	decfsz	??_Lcd_Init+1,f
  4914  0CF8  2CF5               	goto	u4587
  4915  0CF9  2CFA               	nop2
  4916  0CFA                     l3124:
  4917                           
  4918                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  4919  0CFA  3003               	movlw	3
  4920  0CFB  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4921  0D00                     l3126:
  4922                           
  4923                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(16000000/4000.0)));
  4924  0D00  303A               	movlw	58
  4925  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0D03  00A5               	movwf	??_Lcd_Init+1
  4928  0D04  3022               	movlw	34
  4929  0D05  00A4               	movwf	??_Lcd_Init
  4930  0D06                     u4597:
  4931  0D06  0BA4               	decfsz	??_Lcd_Init,f
  4932  0D07  2D06               	goto	u4597
  4933  0D08  0BA5               	decfsz	??_Lcd_Init+1,f
  4934  0D09  2D06               	goto	u4597
  4935  0D0A  0000               	nop
  4936                           
  4937                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  4938  0D0B  3003               	movlw	3
  4939  0D0C  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4940                           
  4941                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  4942  0D11  3002               	movlw	2
  4943  0D12  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4944                           
  4945                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  4946  0D17  3002               	movlw	2
  4947  0D18  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4948                           
  4949                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  4950  0D1D  3008               	movlw	8
  4951  0D1E  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4952                           
  4953                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  4954  0D23  3000               	movlw	0
  4955  0D24  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4956                           
  4957                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  4958  0D29  300C               	movlw	12
  4959  0D2A  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4960                           
  4961                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  4962  0D2F  3000               	movlw	0
  4963  0D30  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4964                           
  4965                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  4966  0D35  3006               	movlw	6
  4967  0D36  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  4968  0D3B                     l142:
  4969  0D3B  0008               	return
  4970  0D3C                     __end_of_Lcd_Init:
  4971                           
  4972                           	psect	text16
  4973  0AC3                     __ptext16:	
  4974 ;; *************** function _Lcd_Clear *****************
  4975 ;; Defined at:
  4976 ;;		line 33 in file "./lcd.h"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0, pclath, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4990 ;;      Params:         0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0
  4993 ;;      Totals:         0       0       0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; Hardware stack levels required when called: 3
  4997 ;; This function calls:
  4998 ;;		_Lcd_Cmd
  4999 ;; This function is called by:
  5000 ;;		_main
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           
  5005                           ;psect for function _Lcd_Clear
  5006  0AC3                     _Lcd_Clear:
  5007  0AC3                     l3096:	
  5008                           ;incstack = 0
  5009                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5010                           
  5011                           
  5012                           ;./lcd.h: 35:  Lcd_Cmd(0);
  5013  0AC3  3000               	movlw	0
  5014  0AC4  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  5015                           
  5016                           ;./lcd.h: 36:  Lcd_Cmd(1);
  5017  0AC9  3001               	movlw	1
  5018  0ACA  120A  158A  2310  120A  158A  	fcall	_Lcd_Cmd
  5019  0ACF                     l133:
  5020  0ACF  0008               	return
  5021  0AD0                     __end_of_Lcd_Clear:
  5022                           
  5023                           	psect	text17
  5024  0B10                     __ptext17:	
  5025 ;; *************** function _Lcd_Cmd *****************
  5026 ;; Defined at:
  5027 ;;		line 24 in file "./lcd.h"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  a               1    wreg     unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  a               1    3[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         0       0       0       0       0
  5042 ;;      Locals:         0       1       0       0       0
  5043 ;;      Temps:          0       2       0       0       0
  5044 ;;      Totals:         0       3       0       0       0
  5045 ;;Total ram usage:        3 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 2
  5048 ;; This function calls:
  5049 ;;		_Lcd_Port
  5050 ;; This function is called by:
  5051 ;;		_Lcd_Clear
  5052 ;;		_Lcd_Set_Cursor
  5053 ;;		_Lcd_Init
  5054 ;;		_Lcd_Shift_Right
  5055 ;;		_Lcd_Shift_Left
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           
  5060                           ;psect for function _Lcd_Cmd
  5061  0B10                     _Lcd_Cmd:
  5062                           
  5063                           ;incstack = 0
  5064                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5065                           ;Lcd_Cmd@a stored from wreg
  5066  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  5068  0B12  00A3               	movwf	Lcd_Cmd@a
  5069  0B13                     l2598:
  5070                           
  5071                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD7 = 0;
  5072  0B13  1388               	bcf	8,7	;volatile
  5073  0B14                     l2600:
  5074                           
  5075                           ;./lcd.h: 27:  Lcd_Port(a);
  5076  0B14  0823               	movf	Lcd_Cmd@a,w
  5077  0B15  120A  158A  232C  120A  158A  	fcall	_Lcd_Port
  5078  0B1A                     l2602:
  5079                           
  5080                           ;./lcd.h: 28:  RD6 = 1;
  5081  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0B1C  1708               	bsf	8,6	;volatile
  5084  0B1D                     l2604:
  5085                           
  5086                           ;./lcd.h: 29:     _delay((unsigned long)((1000)*(16000000/4000000.0)));
  5087  0B1D  3006               	movlw	6
  5088  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0B20  00A2               	movwf	??_Lcd_Cmd+1
  5091  0B21  302F               	movlw	47
  5092  0B22  00A1               	movwf	??_Lcd_Cmd
  5093  0B23                     u4607:
  5094  0B23  0BA1               	decfsz	??_Lcd_Cmd,f
  5095  0B24  2B23               	goto	u4607
  5096  0B25  0BA2               	decfsz	??_Lcd_Cmd+1,f
  5097  0B26  2B23               	goto	u4607
  5098  0B27  2B28               	nop2
  5099  0B28                     l2606:
  5100                           
  5101                           ;./lcd.h: 30:     RD6 = 0;
  5102  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0B2A  1308               	bcf	8,6	;volatile
  5105  0B2B                     l130:
  5106  0B2B  0008               	return
  5107  0B2C                     __end_of_Lcd_Cmd:
  5108                           
  5109                           	psect	text18
  5110  0B2C                     __ptext18:	
  5111 ;; *************** function _Lcd_Port *****************
  5112 ;; Defined at:
  5113 ;;		line 2 in file "./lcd.h"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  a               1    wreg     unsigned char 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  a               1    0[BANK0 ] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5127 ;;      Params:         0       0       0       0       0
  5128 ;;      Locals:         0       1       0       0       0
  5129 ;;      Temps:          0       0       0       0       0
  5130 ;;      Totals:         0       1       0       0       0
  5131 ;;Total ram usage:        1 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; Hardware stack levels required when called: 1
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_Lcd_Cmd
  5138 ;;		_Lcd_Init
  5139 ;;		_Lcd_Write_Char
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           
  5144                           ;psect for function _Lcd_Port
  5145  0B2C                     _Lcd_Port:
  5146                           
  5147                           ;incstack = 0
  5148                           ; Regs used in _Lcd_Port: [wreg]
  5149                           ;Lcd_Port@a stored from wreg
  5150  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  5151  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  5152  0B2E  00A0               	movwf	Lcd_Port@a
  5153  0B2F                     l2574:
  5154                           
  5155                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
  5156  0B2F  1C20               	btfss	Lcd_Port@a,0
  5157  0B30  2B32               	goto	u3101
  5158  0B31  2B33               	goto	u3100
  5159  0B32                     u3101:
  5160  0B32  2B35               	goto	l119
  5161  0B33                     u3100:
  5162  0B33                     l2576:
  5163                           
  5164                           ;./lcd.h: 5:   RD5 = 1;
  5165  0B33  1688               	bsf	8,5	;volatile
  5166  0B34  2B36               	goto	l120
  5167  0B35                     l119:	
  5168                           ;./lcd.h: 6:  else
  5169                           
  5170                           
  5171                           ;./lcd.h: 7:   RD5 = 0;
  5172  0B35  1288               	bcf	8,5	;volatile
  5173  0B36                     l120:
  5174                           
  5175                           ;./lcd.h: 9:  if(a & 2)
  5176  0B36  1CA0               	btfss	Lcd_Port@a,1
  5177  0B37  2B39               	goto	u3111
  5178  0B38  2B3A               	goto	u3110
  5179  0B39                     u3111:
  5180  0B39  2B3C               	goto	l121
  5181  0B3A                     u3110:
  5182  0B3A                     l2578:
  5183                           
  5184                           ;./lcd.h: 10:   RD4 = 1;
  5185  0B3A  1608               	bsf	8,4	;volatile
  5186  0B3B  2B3D               	goto	l122
  5187  0B3C                     l121:	
  5188                           ;./lcd.h: 11:  else
  5189                           
  5190                           
  5191                           ;./lcd.h: 12:   RD4 = 0;
  5192  0B3C  1208               	bcf	8,4	;volatile
  5193  0B3D                     l122:
  5194                           
  5195                           ;./lcd.h: 14:  if(a & 4)
  5196  0B3D  1D20               	btfss	Lcd_Port@a,2
  5197  0B3E  2B40               	goto	u3121
  5198  0B3F  2B41               	goto	u3120
  5199  0B40                     u3121:
  5200  0B40  2B43               	goto	l123
  5201  0B41                     u3120:
  5202  0B41                     l2580:
  5203                           
  5204                           ;./lcd.h: 15:   RD3 = 1;
  5205  0B41  1588               	bsf	8,3	;volatile
  5206  0B42  2B44               	goto	l124
  5207  0B43                     l123:	
  5208                           ;./lcd.h: 16:  else
  5209                           
  5210                           
  5211                           ;./lcd.h: 17:   RD3 = 0;
  5212  0B43  1188               	bcf	8,3	;volatile
  5213  0B44                     l124:
  5214                           
  5215                           ;./lcd.h: 19:  if(a & 8)
  5216  0B44  1DA0               	btfss	Lcd_Port@a,3
  5217  0B45  2B47               	goto	u3131
  5218  0B46  2B48               	goto	u3130
  5219  0B47                     u3131:
  5220  0B47  2B4A               	goto	l125
  5221  0B48                     u3130:
  5222  0B48                     l2582:
  5223                           
  5224                           ;./lcd.h: 20:   RD2 = 1;
  5225  0B48  1508               	bsf	8,2	;volatile
  5226  0B49  2B4B               	goto	l127
  5227  0B4A                     l125:	
  5228                           ;./lcd.h: 21:  else
  5229                           
  5230                           
  5231                           ;./lcd.h: 22:   RD2 = 0;
  5232  0B4A  1108               	bcf	8,2	;volatile
  5233  0B4B                     l127:
  5234  0B4B  0008               	return
  5235  0B4C                     __end_of_Lcd_Port:
  5236                           
  5237                           	psect	text19
  5238  0E99                     __ptext19:	
  5239 ;; *************** function _Cal_PID *****************
  5240 ;; Defined at:
  5241 ;;		line 204 in file "main.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5255 ;;      Params:         0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0
  5257 ;;      Temps:          0       2       0       0       0
  5258 ;;      Totals:         0       2       0       0       0
  5259 ;;Total ram usage:        2 bytes
  5260 ;; Hardware stack levels used: 1
  5261 ;; Hardware stack levels required when called: 2
  5262 ;; This function calls:
  5263 ;;		___awdiv
  5264 ;;		___wmul
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _Cal_PID
  5272  0E99                     _Cal_PID:
  5273  0E99                     l3214:	
  5274                           ;incstack = 0
  5275                           ; Regs used in _Cal_PID: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5276                           
  5277  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  5278  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  5279  0E9B  085E               	movf	_realValue,w
  5280  0E9C  0262               	subwf	_setPoint,w
  5281  0E9D  00F7               	movwf	_PID_error
  5282  0E9E  085F               	movf	_realValue+1,w
  5283  0E9F  1C03               	skipc
  5284  0EA0  0A5F               	incf	_realValue+1,w
  5285  0EA1  0263               	subwf	_setPoint+1,w
  5286  0EA2  00F8               	movwf	_PID_error+1
  5287  0EA3                     l3216:
  5288  0EA3  0878               	movf	_PID_error+1,w
  5289  0EA4  3A80               	xorlw	128
  5290  0EA5  00FF               	movwf	btemp+1
  5291  0EA6  3080               	movlw	128
  5292  0EA7  027F               	subwf	btemp+1,w
  5293  0EA8  1D03               	skipz
  5294  0EA9  2EAC               	goto	u4505
  5295  0EAA  301F               	movlw	31
  5296  0EAB  0277               	subwf	_PID_error,w
  5297  0EAC                     u4505:
  5298  0EAC  1C03               	skipc
  5299  0EAD  2EAF               	goto	u4501
  5300  0EAE  2EB0               	goto	u4500
  5301  0EAF                     u4501:
  5302  0EAF  2EB2               	goto	l3220
  5303  0EB0                     u4500:
  5304  0EB0                     l3218:
  5305  0EB0  01F5               	clrf	_PID_i
  5306  0EB1  01F6               	clrf	_PID_i+1
  5307  0EB2                     l3220:
  5308  0EB2  0878               	movf	_PID_error+1,w
  5309  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5310  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5311  0EB5  00A1               	movwf	___wmul@multiplier+1
  5312  0EB6  0877               	movf	_PID_error,w
  5313  0EB7  00A0               	movwf	___wmul@multiplier
  5314  0EB8  30CB               	movlw	203
  5315  0EB9  00A2               	movwf	___wmul@multiplicand
  5316  0EBA  3000               	movlw	0
  5317  0EBB  00A3               	movwf	___wmul@multiplicand+1
  5318  0EBC  120A  158A  2371  120A  158A  	fcall	___wmul
  5319  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0EC3  0821               	movf	?___wmul+1,w
  5322  0EC4  00D5               	movwf	_PID_p+1
  5323  0EC5  0820               	movf	?___wmul,w
  5324  0EC6  00D4               	movwf	_PID_p
  5325  0EC7                     l3222:
  5326  0EC7  0878               	movf	_PID_error+1,w
  5327  0EC8  00A1               	movwf	___wmul@multiplier+1
  5328  0EC9  0877               	movf	_PID_error,w
  5329  0ECA  00A0               	movwf	___wmul@multiplier
  5330  0ECB  3007               	movlw	7
  5331  0ECC  00A2               	movwf	___wmul@multiplicand
  5332  0ECD  3000               	movlw	0
  5333  0ECE  00A3               	movwf	___wmul@multiplicand+1
  5334  0ECF  120A  158A  2371  120A  158A  	fcall	___wmul
  5335  0ED4  0875               	movf	_PID_i,w
  5336  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5337  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5338  0ED7  0720               	addwf	?___wmul,w
  5339  0ED8  00F5               	movwf	_PID_i
  5340  0ED9  0876               	movf	_PID_i+1,w
  5341  0EDA  1803               	skipnc
  5342  0EDB  0A76               	incf	_PID_i+1,w
  5343  0EDC  0721               	addwf	?___wmul+1,w
  5344  0EDD  00F6               	movwf	_PID_i+1
  5345  0EDE                     l3224:
  5346  0EDE  085C               	movf	_PID_error_1,w
  5347  0EDF  0277               	subwf	_PID_error,w
  5348  0EE0  00D2               	movwf	_PID_d
  5349  0EE1  085D               	movf	_PID_error_1+1,w
  5350  0EE2  1C03               	skipc
  5351  0EE3  0A5D               	incf	_PID_error_1+1,w
  5352  0EE4  0278               	subwf	_PID_error+1,w
  5353  0EE5  00D3               	movwf	_PID_d+1
  5354  0EE6                     l3226:
  5355  0EE6  0875               	movf	_PID_i,w
  5356  0EE7  0754               	addwf	_PID_p,w
  5357  0EE8  00A9               	movwf	??_Cal_PID
  5358  0EE9  0876               	movf	_PID_i+1,w
  5359  0EEA  1803               	skipnc
  5360  0EEB  0A76               	incf	_PID_i+1,w
  5361  0EEC  0755               	addwf	_PID_p+1,w
  5362  0EED  00AA               	movwf	??_Cal_PID+1
  5363  0EEE  0852               	movf	_PID_d,w
  5364  0EEF  0729               	addwf	??_Cal_PID,w
  5365  0EF0  00D8               	movwf	_PID_value
  5366  0EF1  0853               	movf	_PID_d+1,w
  5367  0EF2  1803               	skipnc
  5368  0EF3  0A53               	incf	_PID_d+1,w
  5369  0EF4  072A               	addwf	??_Cal_PID+1,w
  5370  0EF5  00D9               	movwf	_PID_value+1
  5371  0EF6                     l3228:
  5372  0EF6  0878               	movf	_PID_error+1,w
  5373  0EF7  00DD               	movwf	_PID_error_1+1
  5374  0EF8  0877               	movf	_PID_error,w
  5375  0EF9  00DC               	movwf	_PID_error_1
  5376  0EFA                     l3230:
  5377  0EFA  0859               	movf	_PID_value+1,w
  5378  0EFB  3A80               	xorlw	128
  5379  0EFC  00FF               	movwf	btemp+1
  5380  0EFD  3086               	movlw	134
  5381  0EFE  027F               	subwf	btemp+1,w
  5382  0EFF  1D03               	skipz
  5383  0F00  2F03               	goto	u4515
  5384  0F01  3040               	movlw	64
  5385  0F02  0258               	subwf	_PID_value,w
  5386  0F03                     u4515:
  5387  0F03  1803               	skipnc
  5388  0F04  2F06               	goto	u4511
  5389  0F05  2F07               	goto	u4510
  5390  0F06                     u4511:
  5391  0F06  2F0D               	goto	l3234
  5392  0F07                     u4510:
  5393  0F07                     l3232:
  5394  0F07  3040               	movlw	64
  5395  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5396  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5397  0F0A  00D8               	movwf	_PID_value
  5398  0F0B  3006               	movlw	6
  5399  0F0C  00D9               	movwf	_PID_value+1
  5400  0F0D                     l3234:
  5401  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  5402  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  5403  0F0F  0859               	movf	_PID_value+1,w
  5404  0F10  3A80               	xorlw	128
  5405  0F11  00FF               	movwf	btemp+1
  5406  0F12  30A0               	movlw	160
  5407  0F13  027F               	subwf	btemp+1,w
  5408  0F14  1D03               	skipz
  5409  0F15  2F18               	goto	u4525
  5410  0F16  30D1               	movlw	209
  5411  0F17  0258               	subwf	_PID_value,w
  5412  0F18                     u4525:
  5413  0F18  1C03               	skipc
  5414  0F19  2F1B               	goto	u4521
  5415  0F1A  2F1C               	goto	u4520
  5416  0F1B                     u4521:
  5417  0F1B  2F22               	goto	l3238
  5418  0F1C                     u4520:
  5419  0F1C                     l3236:
  5420  0F1C  30D0               	movlw	208
  5421  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0F1F  00D8               	movwf	_PID_value
  5424  0F20  3020               	movlw	32
  5425  0F21  00D9               	movwf	_PID_value+1
  5426  0F22                     l3238:
  5427  0F22  3010               	movlw	16
  5428  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0F25  00A9               	movwf	??_Cal_PID
  5431  0F26  3027               	movlw	39
  5432  0F27  00AA               	movwf	??_Cal_PID+1
  5433  0F28  0858               	movf	_PID_value,w
  5434  0F29  0229               	subwf	??_Cal_PID,w
  5435  0F2A  00D8               	movwf	_PID_value
  5436  0F2B  0859               	movf	_PID_value+1,w
  5437  0F2C  1C03               	skipc
  5438  0F2D  0A59               	incf	_PID_value+1,w
  5439  0F2E  022A               	subwf	??_Cal_PID+1,w
  5440  0F2F  00D9               	movwf	_PID_value+1
  5441  0F30                     l3240:
  5442  0F30  3064               	movlw	100
  5443  0F31  00A0               	movwf	___awdiv@divisor
  5444  0F32  3000               	movlw	0
  5445  0F33  00A1               	movwf	___awdiv@divisor+1
  5446  0F34  0859               	movf	_PID_value+1,w
  5447  0F35  00A3               	movwf	___awdiv@dividend+1
  5448  0F36  0858               	movf	_PID_value,w
  5449  0F37  00A2               	movwf	___awdiv@dividend
  5450  0F38  120A  158A  253C  120A  158A  	fcall	___awdiv
  5451  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0F3F  0821               	movf	?___awdiv+1,w
  5454  0F40  00D9               	movwf	_PID_value+1
  5455  0F41  0820               	movf	?___awdiv,w
  5456  0F42  00D8               	movwf	_PID_value
  5457  0F43                     l219:
  5458  0F43  0008               	return
  5459  0F44                     __end_of_Cal_PID:
  5460                           
  5461                           	psect	text20
  5462  0B71                     __ptext20:	
  5463 ;; *************** function ___wmul *****************
  5464 ;; Defined at:
  5465 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5468 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  product         2    4[BANK0 ] unsigned int 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  2    0[BANK0 ] unsigned int 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5480 ;;      Params:         0       4       0       0       0
  5481 ;;      Locals:         0       2       0       0       0
  5482 ;;      Temps:          0       0       0       0       0
  5483 ;;      Totals:         0       6       0       0       0
  5484 ;;Total ram usage:        6 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; Hardware stack levels required when called: 1
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_Cal_PID
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           
  5495                           ;psect for function ___wmul
  5496  0B71                     ___wmul:
  5497  0B71                     l2628:	
  5498                           ;incstack = 0
  5499                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5500                           
  5501  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  5502  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  5503  0B73  01A4               	clrf	___wmul@product
  5504  0B74  01A5               	clrf	___wmul@product+1
  5505  0B75                     l2630:
  5506  0B75  1C20               	btfss	___wmul@multiplier,0
  5507  0B76  2B78               	goto	u3181
  5508  0B77  2B79               	goto	u3180
  5509  0B78                     u3181:
  5510  0B78  2B7F               	goto	l352
  5511  0B79                     u3180:
  5512  0B79                     l2632:
  5513  0B79  0822               	movf	___wmul@multiplicand,w
  5514  0B7A  07A4               	addwf	___wmul@product,f
  5515  0B7B  1803               	skipnc
  5516  0B7C  0AA5               	incf	___wmul@product+1,f
  5517  0B7D  0823               	movf	___wmul@multiplicand+1,w
  5518  0B7E  07A5               	addwf	___wmul@product+1,f
  5519  0B7F                     l352:
  5520  0B7F  3001               	movlw	1
  5521  0B80                     u3195:
  5522  0B80  1003               	clrc
  5523  0B81  0DA2               	rlf	___wmul@multiplicand,f
  5524  0B82  0DA3               	rlf	___wmul@multiplicand+1,f
  5525  0B83  3EFF               	addlw	-1
  5526  0B84  1D03               	skipz
  5527  0B85  2B80               	goto	u3195
  5528  0B86                     l2634:
  5529  0B86  3001               	movlw	1
  5530  0B87                     u3205:
  5531  0B87  1003               	clrc
  5532  0B88  0CA1               	rrf	___wmul@multiplier+1,f
  5533  0B89  0CA0               	rrf	___wmul@multiplier,f
  5534  0B8A  3EFF               	addlw	-1
  5535  0B8B  1D03               	skipz
  5536  0B8C  2B87               	goto	u3205
  5537  0B8D                     l2636:
  5538  0B8D  0820               	movf	___wmul@multiplier,w
  5539  0B8E  0421               	iorwf	___wmul@multiplier+1,w
  5540  0B8F  1D03               	btfss	3,2
  5541  0B90  2B92               	goto	u3211
  5542  0B91  2B93               	goto	u3210
  5543  0B92                     u3211:
  5544  0B92  2B75               	goto	l2630
  5545  0B93                     u3210:
  5546  0B93                     l2638:
  5547  0B93  0825               	movf	___wmul@product+1,w
  5548  0B94  00A1               	movwf	?___wmul+1
  5549  0B95  0824               	movf	___wmul@product,w
  5550  0B96  00A0               	movwf	?___wmul
  5551  0B97                     l354:
  5552  0B97  0008               	return
  5553  0B98                     __end_of___wmul:
  5554                           
  5555                           	psect	text21
  5556  0D3C                     __ptext21:	
  5557 ;; *************** function ___awdiv *****************
  5558 ;; Defined at:
  5559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  divisor         2    0[BANK0 ] int 
  5562 ;;  dividend        2    2[BANK0 ] int 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  quotient        2    7[BANK0 ] int 
  5565 ;;  sign            1    6[BANK0 ] unsigned char 
  5566 ;;  counter         1    5[BANK0 ] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  2    0[BANK0 ] int 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5576 ;;      Params:         0       4       0       0       0
  5577 ;;      Locals:         0       4       0       0       0
  5578 ;;      Temps:          0       1       0       0       0
  5579 ;;      Totals:         0       9       0       0       0
  5580 ;;Total ram usage:        9 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 1
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_Cal_PID
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function ___awdiv
  5592  0D3C                     ___awdiv:
  5593  0D3C                     l2642:	
  5594                           ;incstack = 0
  5595                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5596                           
  5597  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  5599  0D3E  01A6               	clrf	___awdiv@sign
  5600  0D3F                     l2644:
  5601  0D3F  1FA1               	btfss	___awdiv@divisor+1,7
  5602  0D40  2D42               	goto	u3221
  5603  0D41  2D43               	goto	u3220
  5604  0D42                     u3221:
  5605  0D42  2D4A               	goto	l2650
  5606  0D43                     u3220:
  5607  0D43                     l2646:
  5608  0D43  09A0               	comf	___awdiv@divisor,f
  5609  0D44  09A1               	comf	___awdiv@divisor+1,f
  5610  0D45  0AA0               	incf	___awdiv@divisor,f
  5611  0D46  1903               	skipnz
  5612  0D47  0AA1               	incf	___awdiv@divisor+1,f
  5613  0D48                     l2648:
  5614  0D48  01A6               	clrf	___awdiv@sign
  5615  0D49  0AA6               	incf	___awdiv@sign,f
  5616  0D4A                     l2650:
  5617  0D4A  1FA3               	btfss	___awdiv@dividend+1,7
  5618  0D4B  2D4D               	goto	u3231
  5619  0D4C  2D4E               	goto	u3230
  5620  0D4D                     u3231:
  5621  0D4D  2D57               	goto	l2656
  5622  0D4E                     u3230:
  5623  0D4E                     l2652:
  5624  0D4E  09A2               	comf	___awdiv@dividend,f
  5625  0D4F  09A3               	comf	___awdiv@dividend+1,f
  5626  0D50  0AA2               	incf	___awdiv@dividend,f
  5627  0D51  1903               	skipnz
  5628  0D52  0AA3               	incf	___awdiv@dividend+1,f
  5629  0D53                     l2654:
  5630  0D53  3001               	movlw	1
  5631  0D54  00A4               	movwf	??___awdiv
  5632  0D55  0824               	movf	??___awdiv,w
  5633  0D56  06A6               	xorwf	___awdiv@sign,f
  5634  0D57                     l2656:
  5635  0D57  01A7               	clrf	___awdiv@quotient
  5636  0D58  01A8               	clrf	___awdiv@quotient+1
  5637  0D59                     l2658:
  5638  0D59  0820               	movf	___awdiv@divisor,w
  5639  0D5A  0421               	iorwf	___awdiv@divisor+1,w
  5640  0D5B  1903               	btfsc	3,2
  5641  0D5C  2D5E               	goto	u3241
  5642  0D5D  2D5F               	goto	u3240
  5643  0D5E                     u3241:
  5644  0D5E  2D96               	goto	l2678
  5645  0D5F                     u3240:
  5646  0D5F                     l2660:
  5647  0D5F  01A5               	clrf	___awdiv@counter
  5648  0D60  0AA5               	incf	___awdiv@counter,f
  5649  0D61  2D6D               	goto	l2666
  5650  0D62                     l2662:
  5651  0D62  3001               	movlw	1
  5652  0D63                     u3255:
  5653  0D63  1003               	clrc
  5654  0D64  0DA0               	rlf	___awdiv@divisor,f
  5655  0D65  0DA1               	rlf	___awdiv@divisor+1,f
  5656  0D66  3EFF               	addlw	-1
  5657  0D67  1D03               	skipz
  5658  0D68  2D63               	goto	u3255
  5659  0D69                     l2664:
  5660  0D69  3001               	movlw	1
  5661  0D6A  00A4               	movwf	??___awdiv
  5662  0D6B  0824               	movf	??___awdiv,w
  5663  0D6C  07A5               	addwf	___awdiv@counter,f
  5664  0D6D                     l2666:
  5665  0D6D  1FA1               	btfss	___awdiv@divisor+1,7
  5666  0D6E  2D70               	goto	u3261
  5667  0D6F  2D71               	goto	u3260
  5668  0D70                     u3261:
  5669  0D70  2D62               	goto	l2662
  5670  0D71                     u3260:
  5671  0D71                     l2668:
  5672  0D71  3001               	movlw	1
  5673  0D72                     u3275:
  5674  0D72  1003               	clrc
  5675  0D73  0DA7               	rlf	___awdiv@quotient,f
  5676  0D74  0DA8               	rlf	___awdiv@quotient+1,f
  5677  0D75  3EFF               	addlw	-1
  5678  0D76  1D03               	skipz
  5679  0D77  2D72               	goto	u3275
  5680  0D78  0821               	movf	___awdiv@divisor+1,w
  5681  0D79  0223               	subwf	___awdiv@dividend+1,w
  5682  0D7A  1D03               	skipz
  5683  0D7B  2D7E               	goto	u3285
  5684  0D7C  0820               	movf	___awdiv@divisor,w
  5685  0D7D  0222               	subwf	___awdiv@dividend,w
  5686  0D7E                     u3285:
  5687  0D7E  1C03               	skipc
  5688  0D7F  2D81               	goto	u3281
  5689  0D80  2D82               	goto	u3280
  5690  0D81                     u3281:
  5691  0D81  2D89               	goto	l2674
  5692  0D82                     u3280:
  5693  0D82                     l2670:
  5694  0D82  0820               	movf	___awdiv@divisor,w
  5695  0D83  02A2               	subwf	___awdiv@dividend,f
  5696  0D84  0821               	movf	___awdiv@divisor+1,w
  5697  0D85  1C03               	skipc
  5698  0D86  03A3               	decf	___awdiv@dividend+1,f
  5699  0D87  02A3               	subwf	___awdiv@dividend+1,f
  5700  0D88                     l2672:
  5701  0D88  1427               	bsf	___awdiv@quotient,0
  5702  0D89                     l2674:
  5703  0D89  3001               	movlw	1
  5704  0D8A                     u3295:
  5705  0D8A  1003               	clrc
  5706  0D8B  0CA1               	rrf	___awdiv@divisor+1,f
  5707  0D8C  0CA0               	rrf	___awdiv@divisor,f
  5708  0D8D  3EFF               	addlw	-1
  5709  0D8E  1D03               	skipz
  5710  0D8F  2D8A               	goto	u3295
  5711  0D90                     l2676:
  5712  0D90  3001               	movlw	1
  5713  0D91  02A5               	subwf	___awdiv@counter,f
  5714  0D92  1D03               	btfss	3,2
  5715  0D93  2D95               	goto	u3301
  5716  0D94  2D96               	goto	u3300
  5717  0D95                     u3301:
  5718  0D95  2D71               	goto	l2668
  5719  0D96                     u3300:
  5720  0D96                     l2678:
  5721  0D96  0826               	movf	___awdiv@sign,w
  5722  0D97  1903               	btfsc	3,2
  5723  0D98  2D9A               	goto	u3311
  5724  0D99  2D9B               	goto	u3310
  5725  0D9A                     u3311:
  5726  0D9A  2DA0               	goto	l2682
  5727  0D9B                     u3310:
  5728  0D9B                     l2680:
  5729  0D9B  09A7               	comf	___awdiv@quotient,f
  5730  0D9C  09A8               	comf	___awdiv@quotient+1,f
  5731  0D9D  0AA7               	incf	___awdiv@quotient,f
  5732  0D9E  1903               	skipnz
  5733  0D9F  0AA8               	incf	___awdiv@quotient+1,f
  5734  0DA0                     l2682:
  5735  0DA0  0828               	movf	___awdiv@quotient+1,w
  5736  0DA1  00A1               	movwf	?___awdiv+1
  5737  0DA2  0827               	movf	___awdiv@quotient,w
  5738  0DA3  00A0               	movwf	?___awdiv
  5739  0DA4                     l505:
  5740  0DA4  0008               	return
  5741  0DA5                     __end_of___awdiv:
  5742                           
  5743                           	psect	text22
  5744  076D                     __ptext22:	
  5745 ;; *************** function _ISR *****************
  5746 ;; Defined at:
  5747 ;;		line 245 in file "main.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5761 ;;      Params:         0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0
  5763 ;;      Temps:          5       0       0       0       0
  5764 ;;      Totals:         5       0       0       0       0
  5765 ;;Total ram usage:        5 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		Interrupt level 1
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           
  5775                           ;psect for function _ISR
  5776  076D                     _ISR:
  5777  076D                     i1l2498:
  5778                           
  5779                           ;main.c: 247:     if(RBIF == 1)
  5780  076D  1C0B               	btfss	11,0	;volatile
  5781  076E  2F70               	goto	u301_21
  5782  076F  2F71               	goto	u301_20
  5783  0770                     u301_21:
  5784  0770  2FA4               	goto	i1l2510
  5785  0771                     u301_20:
  5786  0771                     i1l2500:
  5787                           
  5788                           ;main.c: 248:     {;main.c: 249:         if(RB4 == 0)
  5789  0771  1283               	bcf	3,5	;RP0=0, select bank0
  5790  0772  1303               	bcf	3,6	;RP1=0, select bank0
  5791  0773  1A06               	btfsc	6,4	;volatile
  5792  0774  2F76               	goto	u302_21
  5793  0775  2F77               	goto	u302_20
  5794  0776                     u302_21:
  5795  0776  2F8B               	goto	i1l2504
  5796  0777                     u302_20:
  5797  0777                     i1l2502:
  5798                           
  5799                           ;main.c: 250:         {;main.c: 251:             _delay((unsigned long)((100)*(16000000/
      +                          4000.0)));
  5800  0777  3003               	movlw	3
  5801  0778  00F2               	movwf	??_ISR+2
  5802  0779  3008               	movlw	8
  5803  077A  00F1               	movwf	??_ISR+1
  5804  077B  3077               	movlw	119
  5805  077C  00F0               	movwf	??_ISR
  5806  077D                     u461_27:
  5807  077D  0BF0               	decfsz	??_ISR,f
  5808  077E  2F7D               	goto	u461_27
  5809  077F  0BF1               	decfsz	??_ISR+1,f
  5810  0780  2F7D               	goto	u461_27
  5811  0781  0BF2               	decfsz	??_ISR+2,f
  5812  0782  2F7D               	goto	u461_27
  5813                           
  5814                           ;main.c: 252:             setPoint++;
  5815  0783  3001               	movlw	1
  5816  0784  1283               	bcf	3,5	;RP0=0, select bank0
  5817  0785  1303               	bcf	3,6	;RP1=0, select bank0
  5818  0786  07E2               	addwf	_setPoint,f
  5819  0787  1803               	skipnc
  5820  0788  0AE3               	incf	_setPoint+1,f
  5821  0789  3000               	movlw	0
  5822  078A  07E3               	addwf	_setPoint+1,f
  5823  078B                     i1l2504:
  5824                           
  5825                           ;main.c: 254:         if(RB5 == 0)
  5826  078B  1A86               	btfsc	6,5	;volatile
  5827  078C  2F8E               	goto	u303_21
  5828  078D  2F8F               	goto	u303_20
  5829  078E                     u303_21:
  5830  078E  2FA3               	goto	i1l2508
  5831  078F                     u303_20:
  5832  078F                     i1l2506:
  5833                           
  5834                           ;main.c: 255:         {;main.c: 256:             _delay((unsigned long)((100)*(16000000/
      +                          4000.0)));
  5835  078F  3003               	movlw	3
  5836  0790  00F2               	movwf	??_ISR+2
  5837  0791  3008               	movlw	8
  5838  0792  00F1               	movwf	??_ISR+1
  5839  0793  3077               	movlw	119
  5840  0794  00F0               	movwf	??_ISR
  5841  0795                     u462_27:
  5842  0795  0BF0               	decfsz	??_ISR,f
  5843  0796  2F95               	goto	u462_27
  5844  0797  0BF1               	decfsz	??_ISR+1,f
  5845  0798  2F95               	goto	u462_27
  5846  0799  0BF2               	decfsz	??_ISR+2,f
  5847  079A  2F95               	goto	u462_27
  5848                           
  5849                           ;main.c: 257:             setPoint--;
  5850  079B  30FF               	movlw	255
  5851  079C  1283               	bcf	3,5	;RP0=0, select bank0
  5852  079D  1303               	bcf	3,6	;RP1=0, select bank0
  5853  079E  07E2               	addwf	_setPoint,f
  5854  079F  1803               	skipnc
  5855  07A0  0AE3               	incf	_setPoint+1,f
  5856  07A1  30FF               	movlw	255
  5857  07A2  07E3               	addwf	_setPoint+1,f
  5858  07A3                     i1l2508:
  5859                           
  5860                           ;main.c: 259:         RBIF = 0;
  5861  07A3  100B               	bcf	11,0	;volatile
  5862  07A4                     i1l2510:
  5863                           
  5864                           ;main.c: 262:     if(TMR0IF == 1)
  5865  07A4  1D0B               	btfss	11,2	;volatile
  5866  07A5  2FA7               	goto	u304_21
  5867  07A6  2FA8               	goto	u304_20
  5868  07A7                     u304_21:
  5869  07A7  2FC8               	goto	i1l2526
  5870  07A8                     u304_20:
  5871  07A8                     i1l2512:
  5872                           
  5873                           ;main.c: 263:     {;main.c: 264:         TMR0 = 0x38;
  5874  07A8  3038               	movlw	56
  5875  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  5876  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  5877  07AB  0081               	movwf	1	;volatile
  5878                           
  5879                           ;main.c: 265:         cnt0++;
  5880  07AC  3001               	movlw	1
  5881  07AD  07D0               	addwf	_cnt0,f
  5882  07AE  1803               	skipnc
  5883  07AF  0AD1               	incf	_cnt0+1,f
  5884  07B0  3000               	movlw	0
  5885  07B1  07D1               	addwf	_cnt0+1,f
  5886                           
  5887                           ;main.c: 266:         if(cnt0 == PID_value)
  5888  07B2  0851               	movf	_cnt0+1,w
  5889  07B3  0659               	xorwf	_PID_value+1,w
  5890  07B4  1D03               	skipz
  5891  07B5  2FB8               	goto	u305_25
  5892  07B6  0850               	movf	_cnt0,w
  5893  07B7  0658               	xorwf	_PID_value,w
  5894  07B8                     u305_25:
  5895  07B8  1D03               	skipz
  5896  07B9  2FBB               	goto	u305_21
  5897  07BA  2FBC               	goto	u305_20
  5898  07BB                     u305_21:
  5899  07BB  2FC7               	goto	i1l2524
  5900  07BC                     u305_20:
  5901  07BC                     i1l2514:
  5902                           
  5903                           ;main.c: 267:         {;main.c: 268:             RB7 = 1;
  5904  07BC  1786               	bsf	6,7	;volatile
  5905  07BD                     i1l2516:
  5906                           
  5907                           ;main.c: 269:             _delay((unsigned long)((10)*(16000000/4000000.0)));
  5908  07BD  300D               	movlw	13
  5909  07BE  00F0               	movwf	??_ISR
  5910  07BF                     u463_27:
  5911  07BF  0BF0               	decfsz	??_ISR,f
  5912  07C0  2FBF               	goto	u463_27
  5913  07C1                     i1l2518:
  5914                           
  5915                           ;main.c: 270:             RB7 = 0;
  5916  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  5917  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  5918  07C3  1386               	bcf	6,7	;volatile
  5919  07C4                     i1l2520:
  5920                           
  5921                           ;main.c: 271:             cnt0 = 0;
  5922  07C4  01D0               	clrf	_cnt0
  5923  07C5  01D1               	clrf	_cnt0+1
  5924  07C6                     i1l2522:
  5925                           
  5926                           ;main.c: 272:             TMR0IE = 0;
  5927  07C6  128B               	bcf	11,5	;volatile
  5928  07C7                     i1l2524:
  5929                           
  5930                           ;main.c: 274:         TMR0IF = 0;
  5931  07C7  110B               	bcf	11,2	;volatile
  5932  07C8                     i1l2526:
  5933                           
  5934                           ;main.c: 277:     if(TMR1IF == 1)
  5935  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  5936  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  5937  07CA  1C0C               	btfss	12,0	;volatile
  5938  07CB  2FCD               	goto	u306_21
  5939  07CC  2FCE               	goto	u306_20
  5940  07CD                     u306_21:
  5941  07CD  2FD7               	goto	i1l2538
  5942  07CE                     u306_20:
  5943  07CE                     i1l2528:
  5944                           
  5945                           ;main.c: 278:     {;main.c: 279:         CCP1CON = 0x00;
  5946  07CE  0197               	clrf	23	;volatile
  5947  07CF                     i1l2530:
  5948                           
  5949                           ;main.c: 280:         RC2 = 1;
  5950  07CF  1507               	bsf	7,2	;volatile
  5951  07D0                     i1l2532:
  5952                           
  5953                           ;main.c: 281:         CCP1CON = 0x09;
  5954  07D0  3009               	movlw	9
  5955  07D1  0097               	movwf	23	;volatile
  5956  07D2                     i1l2534:
  5957                           
  5958                           ;main.c: 282:         TMR1 = 0xB1E0;
  5959  07D2  30B1               	movlw	177
  5960  07D3  008F               	movwf	15	;volatile
  5961  07D4  30E0               	movlw	224
  5962  07D5  008E               	movwf	14	;volatile
  5963  07D6                     i1l2536:
  5964                           
  5965                           ;main.c: 283:         TMR1IF = 0;
  5966  07D6  100C               	bcf	12,0	;volatile
  5967  07D7                     i1l2538:
  5968                           
  5969                           ;main.c: 286:     if(TMR2IF == 1)
  5970  07D7  1C8C               	btfss	12,1	;volatile
  5971  07D8  2FDA               	goto	u307_21
  5972  07D9  2FDB               	goto	u307_20
  5973  07DA                     u307_21:
  5974  07DA  2FF3               	goto	i1l2550
  5975  07DB                     u307_20:
  5976  07DB                     i1l2540:
  5977                           
  5978                           ;main.c: 287:     {;main.c: 288:         TMR2 = 0x06;
  5979  07DB  3006               	movlw	6
  5980  07DC  0091               	movwf	17	;volatile
  5981                           
  5982                           ;main.c: 289:         cnt2++;
  5983  07DD  3001               	movlw	1
  5984  07DE  07CE               	addwf	_cnt2,f
  5985  07DF  1803               	skipnc
  5986  07E0  0ACF               	incf	_cnt2+1,f
  5987  07E1  3000               	movlw	0
  5988  07E2  07CF               	addwf	_cnt2+1,f
  5989  07E3                     i1l2542:
  5990                           
  5991                           ;main.c: 290:         if(cnt2 == 1000)
  5992  07E3  30E8               	movlw	232
  5993  07E4  064E               	xorwf	_cnt2,w
  5994  07E5  3003               	movlw	3
  5995  07E6  1903               	skipnz
  5996  07E7  064F               	xorwf	_cnt2+1,w
  5997  07E8  1D03               	btfss	3,2
  5998  07E9  2FEB               	goto	u308_21
  5999  07EA  2FEC               	goto	u308_20
  6000  07EB                     u308_21:
  6001  07EB  2FF2               	goto	i1l2548
  6002  07EC                     u308_20:
  6003  07EC                     i1l2544:
  6004                           
  6005                           ;main.c: 291:         {;main.c: 292:             cnt2 = 0;
  6006  07EC  01CE               	clrf	_cnt2
  6007  07ED  01CF               	clrf	_cnt2+1
  6008  07EE                     i1l2546:
  6009                           
  6010                           ;main.c: 293:             samp = 1;
  6011  07EE  3001               	movlw	1
  6012  07EF  00CC               	movwf	_samp
  6013  07F0  3000               	movlw	0
  6014  07F1  00CD               	movwf	_samp+1
  6015  07F2                     i1l2548:
  6016                           
  6017                           ;main.c: 295:         TMR2IF = 0;
  6018  07F2  108C               	bcf	12,1	;volatile
  6019  07F3                     i1l2550:
  6020                           
  6021                           ;main.c: 298:     if(INTF == 1)
  6022  07F3  1C8B               	btfss	11,1	;volatile
  6023  07F4  2FF6               	goto	u309_21
  6024  07F5  2FF7               	goto	u309_20
  6025  07F6                     u309_21:
  6026  07F6  2FF9               	goto	i1l233
  6027  07F7                     u309_20:
  6028  07F7                     i1l2552:
  6029                           
  6030                           ;main.c: 299:     {;main.c: 300:         TMR0IE = 1;
  6031  07F7  168B               	bsf	11,5	;volatile
  6032                           
  6033                           ;main.c: 301:         INTF = 0;
  6034  07F8  108B               	bcf	11,1	;volatile
  6035  07F9                     i1l233:
  6036  07F9  0874               	movf	??_ISR+4,w
  6037  07FA  008A               	movwf	10
  6038  07FB  0E73               	swapf	??_ISR+3,w
  6039  07FC  0083               	movwf	3
  6040  07FD  0EFE               	swapf	btemp,f
  6041  07FE  0E7E               	swapf	btemp,w
  6042  07FF  0009               	retfie
  6043  0800                     __end_of_ISR:
  6044  007E                     btemp	set	126	;btemp
  6045  007E                     wtemp0	set	126
  6046                           
  6047                           	psect	intentry
  6048  0004                     __pintentry:	
  6049                           ;incstack = 0
  6050                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6051                           
  6052  0004                     interrupt_function:
  6053  007E                     saved_w	set	btemp
  6054  0004  00FE               	movwf	btemp
  6055  0005  0E03               	swapf	3,w
  6056  0006  00F3               	movwf	??_ISR+3
  6057  0007  080A               	movf	10,w
  6058  0008  00F4               	movwf	??_ISR+4
  6059  0009  120A  118A  2F6D   	ljmp	_ISR
  6060                           
  6061                           	psect	config
  6062                           
  6063                           ;Config register CONFIG @ 0x2007
  6064                           ;	Oscillator Selection bits
  6065                           ;	FOSC = HS, HS oscillator
  6066                           ;	Watchdog Timer Enable bit
  6067                           ;	WDTE = OFF, WDT disabled
  6068                           ;	Power-up Timer Enable bit
  6069                           ;	PWRTE = ON, PWRT enabled
  6070                           ;	Brown-out Reset Enable bit
  6071                           ;	BOREN = ON, BOR enabled
  6072                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6073                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6074                           ;	Data EEPROM Memory Code Protection bit
  6075                           ;	CPD = OFF, Data EEPROM code protection off
  6076                           ;	Flash Program Memory Write Enable bits
  6077                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6078                           ;	In-Circuit Debugger Mode bit
  6079                           ;	DEBUG = 0x1, unprogrammed default
  6080                           ;	Flash Program Memory Code Protection bit
  6081                           ;	CP = OFF, Code protection off
  6082  2007                     	org	8199
  6083  2007  3F72               	dw	16242

Data Sizes:
    Strings     22
    Constant    10
    Data        10
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     44      68
    BANK1            80     16      24
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[4]), STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK1[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Read_Temp
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Read_Temp->___fltol
    ___fltol->___fldiv
    ___flmul->__Umul8_16
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Cal_PID->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   11749
                                             43 BANK0      1     1      0
                                              0 BANK1     16    16      0
                            _Cal_PID
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Read_Temp
                       _Servo_MoveTo
                           _init_ADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1907
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_MoveTo                                         2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_Temp                                            6     6      0    6280
                                             37 BANK0      6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     427
                                             26 BANK0     11     7      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     492
                                              5 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     815
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Cal_PID                                              2     2      0    1273
                                              9 BANK0      2     2      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     648
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cal_PID
     ___awdiv
     ___wmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Temp
     ___fldiv
     ___flmul
       __Umul8_16
     ___fltol
       ___fldiv (ARG)
     ___xxtofl
   _Servo_MoveTo
   _init_ADC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     10      18       7       30.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      65      12        0.0%
ABS                  0      0      65       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 05 22:09:56 2021

                        _T 00B0               ___fldiv@aexp 0039               ___fldiv@bexp 0038  
                        pc 0002               ___fldiv@sign 0031               ___awdiv@sign 0026  
                       _kd 00B2                         _ki 00B4                         _kp 0060  
                       fsr 0004        ___wmul@multiplicand 0022        __Umul8_16@word_mpld 0026  
                      l120 0B36                        l121 0B3C                        l122 0B3D  
                      l130 0B2B                        l210 0DA8                        l123 0B43  
                      l124 0B44                        l125 0B4A                        l133 0ACF  
                      l213 0E1C                        l142 0D3B                        l127 0B4B  
                      l119 0B35                        l151 0B70                        l207 0AF7  
                      l145 0C39                        l219 0F43                        l139 0CD7  
                      l238 0B0F                        l352 0B7F                        l505 0DA4  
                      l354 0B97                        l348 076C                        l701 03FB  
                      l703 057B                        l199 0663                        l624 0C7F  
                      l545 0E83                        l538 0E98                        l634 0BFC  
                      l723 055F                        l548 0E98                        l725 056F  
                      l717 04ED                        l741 039E                        l760 0BAE  
                      l753 0392                        l762 0BC0                        l747 030A  
                      l791 0FAD                        l785 0F68                        l787 0FFF  
                      l798 0FC9                        l799 0FD5                        _GIE 005F  
                      _RB3 0033                        _RC2 003A                        _RD0 0040  
                      _RB4 0034                        _RB5 0035                        _RD2 0042  
                      _RB6 0036                        _RD3 0043                        _RB7 0037  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _ISR 076D                        fsr0 0004  
                      indf 0000               ___flmul@aexp 0037               ___flmul@bexp 003C  
             ___flmul@sign 0036               ___flmul@temp 0041               ___flmul@prod 003D  
                     ?_ISR 0070               ___fltol@exp1 0044                       l3000 02D6  
                     l3010 02EE                       l3002 02DA                       l3100 0C88  
                     l3020 030F                       l3012 02EF                       l3004 02DB  
                     l3110 0CB3                       l3102 0C99                       l3022 0314  
                     l3030 0345                       l3014 02F3                       l3006 02E4  
                     l3120 0CDE                       l3112 0CC4                       l3104 0C9E  
                     l3040 0378                       l3032 0352                       l3024 0322  
                     l3016 0307                       l3008 02EA                       l3200 0749  
                     l3122 0CE9                       l3114 0CC9                       l3106 0CA4  
                     l3130 0B52                       l3042 0386                       l3034 035D  
                     l3026 0326                       l3202 074D                       l3220 0EB2  
                     l3124 0CFA                       l3116 0CCF                       l3108 0CAD  
                     l3132 0B5D                       l3044 038A                       l3036 036C  
                     l3028 033F                       l3060 0F70                       l3052 0F47  
                     l3140 0B00                       l3204 0756                       l3300 05C8  
                     l3230 0EFA                       l3222 0EC7                       l3214 0E99  
                     l3126 0D00                       l3118 0CD8                       l3134 0B65  
                     l3046 038B                       l3038 0376                       l3070 0F92  
                     l3054 0F4C                       l3150 0DAC                       l3142 0B04  
                     l3206 0768                       l3310 05CF                       l3302 05C9  
                     l3240 0F30                       l3232 0F07                       l3224 0EDE  
                     l3216 0EA3                       l2600 0B14                       l3128 0B4F  
                     l3048 0396                       l3080 0FC3                       l3072 0F96  
                     l3064 0F79                       l3056 0F50                       l3144 0B0B  
                     l3136 0AE3                       l3160 069D                       l3152 0686  
                     l3320 05DA                       l3312 05D0                       l3304 05CC  
                     l3234 0F0D                       l3226 0EE6                       l3218 0EB0  
                     l2602 0B1A                       l2610 0C0A                       l3090 0FF6  
                     l3082 0FCD                       l3074 0FA4                       l3066 0F7E  
                     l3058 0F60                       l3146 0DA5                       l3138 0AF8  
                     l3170 06C7                       l3154 068B                       l3330 0604  
                     l3322 05DF                       l3314 05D1                       l3306 05CD  
                     l3250 0584                       l3236 0F1C                       l3228 0EF6  
                     l2604 0B1D                       l2620 0C26                       l2612 0C0B  
                     l2700 0E53                       l3092 0FF7                       l3084 0FD7  
                     l3076 0FB4                       l3068 0F8B                       l3148 0DA5  
                     l3172 06CB                       l3164 069E                       l3156 0691  
                     l3340 0640                       l3332 0614                       l3324 05E4  
                     l3316 05D4                       l3308 05CE                       l3260 0598  
                     l3252 0585                       l2630 0B75                       l3238 0F22  
                     l2606 0B28                       l2622 0C2C                       l2614 0C19  
                     l2702 0E57                       l2710 0E71                       l3086 0FED  
                     l3078 0FBF                       l3190 0702                       l3182 06D6  
                     l3174 06CF                       l3166 06BB                       l3158 0698  
                     l3350 066E                       l3342 0646                       l3334 061E  
                     l3326 05F4                       l3318 05D7                       l3270 05A7  
                     l3262 059B                       l3254 0588                       l3246 057C  
                     l2632 0B79                       l3096 0AC3                       l2624 0C2F  
                     l2616 0C1C                       l2608 0C00                       l2800 03E3  
                     l2720 0E8D                       l3088 0FF2                       l3192 0709  
                     l3176 06D4                       l3168 06C3                       l3352 0676  
                     l3344 0656                       l3336 0624                       l3328 05FE  
                     l3280 05AE                       l3272 05A8                       l3264 059E  
                     l3256 058A                       l3248 0581                       l2650 0D4A  
                     l2642 0D3C                       l2634 0B86                       l3098 0C83  
                     l2626 0C36                       l2618 0C23                       l2810 0403  
                     l2802 03E8                       l2730 0C4E                       l2722 0C3A  
                     l3194 070D                       l3186 06F2                       l3354 067B  
                     l3346 0659                       l3338 0634                       l3290 05BF  
                     l3282 05B1                       l3274 05A9                       l3266 05A3  
                     l3258 058D                       l2660 0D5F                       l2652 0D4E  
                     l2644 0D3F                       l2636 0B8D                       l2628 0B71  
                     l2580 0B41                       l2900 055E                       l2820 0421  
                     l2812 040F                       l2804 03F0                       l2716 0E78  
                     l2708 0E5F                       l2740 0C6E                       l2732 0C52  
                     l2724 0C3E                       l3196 0712                       l3188 06FC  
                     l3348 0666                       l3292 05C0                       l3284 05B4  
                     l3276 05AA                       l3268 05A6                       l2670 0D82  
                     l2662 0D62                       l2654 0D53                       l2646 0D43  
                     l2638 0B93                       l2582 0B48                       l2574 0B2F  
                     l2902 0565                       l2830 044C                       l2814 0413  
                     l2806 03F1                       l2590 0BA8                       l2718 0E88  
                     l2742 0C75                       l2734 0C56                       l2726 0C44  
                     l2750 0BC9                       l3198 0742                       l3294 05C1  
                     l3286 05B6                       l3278 05AD                       l2680 0D9B  
                     l2672 0D88                       l2664 0D69                       l2656 0D57  
                     l2648 0D48                       l2576 0B33                       l2904 0569  
                     l2840 0471                       l2832 0454                       l2824 042A  
                     l2808 03F3                       l2592 0BB7                       l2584 0B9B  
                     l2920 0050                       l2912 003E                       l2736 0C67  
                     l2728 0C47                       l2744 0C7B                       l2760 0BE5  
                     l2752 0BCC                       l3376 06B0                       l3296 05C2  
                     l3288 05B9                       l2682 0DA0                       l2674 0D89  
                     l2666 0D6D                       l2658 0D59                       l2578 0B3A  
                     l2906 056B                       l2850 049C                       l2842 0472  
                     l2834 0456                       l2826 043C                       l2818 041C  
                     l2770 039F                       l2594 0BBC                       l2586 0B9D  
                     l2930 006C                       l2922 0055                       l2914 0045  
                     l2738 0C6D                       l2762 0BEB                       l2754 0BD3  
                     l3298 05C7                       l2676 0D90                       l2668 0D71  
                     l2860 04B9                       l2836 045B                       l2844 047B  
                     l2852 04A0                       l2828 0444                       l2780 03B6  
                     l2772 03A6                       l2588 0BA4                       l2940 0081  
                     l2932 0071                       l2924 005A                       l2916 004B  
                     l2692 0E33                       l2764 0BF2                       l2756 0BD7  
                     l2748 0BC1                       l2678 0D96                       l2598 0B13  
                     l2870 04D1                       l2862 04BD                       l2854 04A6  
                     l2846 048D                       l2838 046D                       l2790 03CE  
                     l2782 03BB                       l2774 03AC                       l2950 009D  
                     l2942 0086                       l2934 0077                       l2926 0062  
                     l2918 004F                       l2694 0E48                       l2686 0E1D  
                     l2758 0BDB                       l2766 0BF8                       l2880 04F2  
                     l2872 04D2                       l2864 04BE                       l2856 04AE  
                     l2848 048E                       l2792 03D3                       l2784 03C3  
                     l2776 03B0                       l2960 00C8                       l2952 00A2  
                     l2944 008E                       l2936 007B                       l2928 0064  
                     l2696 0E49                       l2688 0E2A                       l2882 04F7  
                     l2890 0528                       l2874 04D6                       l2866 04C7  
                     l2858 04B0                       l2794 03D9                       l2786 03C4  
                     l2778 03B1                       l2970 0165                       l2962 00E5  
                     l2946 0090                       l2938 007C                       l2698 0E51  
                     l2892 0535                       l2884 0505                       l2876 04EA  
                     l2868 04CD                       l2796 03DD                       l2788 03C6  
                     l2980 01C8                       l2972 016E                       l2964 0101  
                     l2956 00AB                       l2948 0098                       l2894 0543  
                     l2886 0509                       l2798 03DE                       l2990 0268  
                     l2982 01E1                       l2974 017E                       l2966 012D  
                     l2958 00BB                       l2896 0552                       l2888 0522  
                     l2992 028E                       l2984 01FE                       l2976 019B  
                     l2968 0149                       l2898 0556                       l2994 02B6  
                     l2986 022B                       l2978 01AB                       l2996 02BF  
                     l2988 023B                       l2998 02CD                       STR_1 0810  
                     STR_2 081B                       STR_3 0817                       u3100 0B33  
                     u3101 0B32                       u3110 0B3A                       u3111 0B39  
                     u3120 0B41                       u3121 0B40                       u4001 01F0  
                     u3210 0B93                       u3130 0B48                       u4002 01F7  
                     u3211 0B92                       u3131 0B47                       u4011 021D  
                     u4003 01FE                       u3300 0D96                       u3220 0D43  
                     u3140 0BA8                       u4012 0224                       u3301 0D95  
                     u3221 0D42                       u3205 0B87                       u3141 0BA7  
                     u4021 024A                       u4013 022B                       u3310 0D9B  
                     u3230 0D4E                       u4110 02EE                       u4030 0274  
                     u4022 0251                       u3311 0D9A                       u3231 0D4D  
                     u4111 02ED                       u4023 0258                       u3240 0D5F  
                     u3160 0BBC                       u4200 038A                       u4120 02F3  
                     u3400 0E88                       u3320 0E2A                       u3241 0D5E  
                     u3161 0BBB                       u4201 0389                       u4121 02F2  
                     u4105 02DD                       u4041 0280                       u3401 0E87  
                     u3321 0E29                       u4130 0307                       u4050 029C  
                     u4042 0287                       u3410 0E8D                       u3330 0E41  
                     u4210 0F4C                       u3155 0BAF                       u4131 0306  
                     u4043 028E                       u4035 026F                       u3411 0E8C  
                     u4211 0F4B                       u3260 0D71                       u3180 0B79  
                     u4140 030E                       u3340 0E57                       u4300 0FC9  
                     u4220 0F50                       u3420 0C44                       u3261 0D70  
                     u3181 0B78                       u4141 030D                       u4061 02A8  
                     u3341 0E56                       u4301 0FC8                       u4221 0F4F  
                     u3421 0C43                       u4150 0314                       u4062 02AF  
                     u3350 0E5E                       u4310 0FCD                       u4230 0F70  
                     u3510 0BDB                       u3255 0D63                       u3175 0C0E  
                     u4151 0313                       u4063 02B6                       u4055 0297  
                     u3351 0E5D                       u3335 0E3C                       u4311 0FCC  
                     u4231 0F6F                       u3511 0BDA                       u3280 0D82  
                     u3600 03E8                       u4160 0326                       u4320 0FE2  
                     u4400 0B00                       u3440 0C56                       u3520 0BE5  
                     u3281 0D81                       u3601 03E7                       u4161 0325  
                     u4401 0AFF                       u3441 0C55                       u3521 0BE4  
                     u3505 0BCD                       u3610 0403                       u4170 0335  
                     u4090 02DA                       u3370 0E70                       u4330 0FF2  
                     u4250 0F91                       u4410 0B0B                       u3275 0D72  
                     u3195 0B80                       u3611 0402                       u4091 02D9  
                     u4075 02B8                       u3371 0E6F                       u4331 0FF1  
                     u4251 0F90                       u4411 0B0A                       u3435 0C48  
                     u4500 0EB0                       u3700 04AE                       u3620 0421  
                     u4180 0352                       u3380 0E77                       u4340 0FF6  
                     u4420 0DAC                       u3460 0C67                       u3540 0BF8  
                     u3285 0D7E                       u4501 0EAF                       u3701 04AD  
                     u3621 0420                       u4181 0351                       u4085 02CF  
                     u3381 0E76                       u3365 0E60                       u4341 0FF5  
                     u4325 0FDD                       u4245 0F83                       u4421 0DAB  
                     u3461 0C66                       u3541 0BF7                       u3525 0BE1  
                     u4510 0F07                       u4350 0C88                       u3630 045B  
                     u3550 03B0                       u4190 036C                       u4270 0FB3  
                     u4430 0691                       u3295 0D8A                       u4511 0F06  
                     u4351 0C87                       u3631 045A                       u3551 03AF  
                     u4191 036B                       u4175 0330                       u4271 0FB2  
                     u3455 0C57                       u3535 0BEC                       u4431 0690  
                     u4520 0F1C                       u3800 0518                       u3720 04BD  
                     u3560 03B6                       u3480 0C7B                       u4440 06CB  
                     u4521 0F1B                       u4505 0EAC                       u3721 04BC  
                     u3561 03B5                       u4185 034E                       u4265 0FA5  
                     u3481 0C7A                       u3465 0C63                       u4441 06CA  
                     u4370 0CB3                       u3810 0535                       u3570 03BB  
                     u4290 0FC3                       u3490 0BC9                       u4450 06F1  
                     u4530 0656                       u4515 0F03                       u4371 0CB2  
                     u3811 0534                       u3715 04B2                       u3571 03BA  
                     u4195 0368                       u3395 0E7A                       u4291 0FC2  
                     u3475 0C6F                       u3491 0BC8                       u4451 06F0  
                     u4531 0655                       _PEIE 005E                       u3820 0552  
                     u3740 04D1                       u3660 0471                       u3580 03DD  
                     u3900 009D                       u4460 06FC                       u4540 0676  
                     u4525 0F18                       u4365 0C90                       u3821 0551  
                     u3805 0513                       u3741 04D0                       u3661 0470  
                     u3645 045D                       u3581 03DC                       u3901 009C  
                     u4285 0FB8                       u4461 06FB                       u4541 0675  
                     _INTE 005C                       u4390 0B70                       u3830 0569  
                     u3750 04D6                       u3590 03E3                       u3910 00A2  
                     u4470 0702                       _INTF 0059                       u4607 0B23  
                     u4391 0B6F                       u3831 0568                       u3815 0531  
                     u3751 04D5                       u3735 04C0                       u3655 0466  
                     u3591 03E2                       u3911 00A1                       u4471 0701  
                     u4455 06ED                       u4535 0652                       _RBIE 005B  
                     u3760 04EA                       u3680 048D                       u3840 004F  
                     u4480 0756                       _RBIF 0058                       u4385 0CBB  
                     u3825 054E                       u3761 04E9                       u3681 048C  
                     u3921 00F3                       u3841 004E                       u4481 0755  
                     u3770 04F1                       u3690 04A6                       u3922 00FA  
                     u3850 0055                       u4490 0768                       u3771 04F0  
                     u3691 04A5                       u3675 0474                       u3931 010F  
                     u3923 0101                       u3851 0054                       u4491 0767  
                     u3780 04F7                       u3932 0116                       u3860 005A  
                     u4557 0C20                       u3781 04F6                       u3685 0489  
                     u3941 013B                       u3933 011D                       u3861 0059  
                     u3790 0509                       u3942 0142                       u3870 007B  
                     u4567 0C33                       u3791 0508                       u3951 0157  
                     u3943 0149                       u3871 007A                       u3952 015E  
                     u3880 0081                       u4577 0CE4                       u3953 0165  
                     u3881 0080                       u3890 0086                       u4587 0CF5  
                     u3971 018D                       u3891 0085                       u3972 0194  
                     u4597 0D06                       u3981 01BA                       u3973 019B  
                     u3965 0167                       u3982 01C1                       u3983 01C8  
                     u3995 01CA                       _TMR0 0001                       _TMR1 000E  
                     _TMR2 0011                       _cnt0 0050                       _cnt1 00B6  
                     _cnt2 004E          ?_Lcd_Write_String 0070                       _main 057C  
                     _samp 004C            __end_of_Cal_PID 0F44                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0025            ___fldiv@new_exp 0032  
          __end_of_Lcd_Cmd 0B2C                      ??_ISR 0070              ___fltol@sign1 0043  
                    ?_main 0070            __end_of___fldiv 057C            __end_of___awdiv 0DA5  
                    _CCPR1 0015            __end_of___flmul 039F            __end_of___fltol 0E99  
          ___awdiv@divisor 0020                      _T2CON 0012            __end_of___lwdiv 0C80  
                    i1l233 07F9            __end_of___lwmod 0BFD            ___awdiv@counter 0025  
                    _PID_d 0052                      _PID_i 0075                      _PID_p 0054  
  __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088            __end_of_dpowers 0810  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 076D           __end_of_Lcd_Init 0D3C           __end_of_Lcd_Port 0B4C  
          __initialization 000F               __end_of_main 0683                     ??_main 004B  
       __size_of_Lcd_Clear 000D                     _CCP1IE 0462                     _CCP1IF 0062  
                   _ADRESH 001E                     _ADRESL 009E                  ??_Cal_PID 0029  
         ___awdiv@dividend 0022                     i1l2500 0771                     i1l2502 0777  
                   i1l2510 07A4                     i1l2520 07C4                     i1l2512 07A8  
                   i1l2504 078B                     i1l2530 07CF                     i1l2522 07C6  
                   i1l2514 07BC                     i1l2506 078F                     i1l2540 07DB  
                   i1l2532 07D0                     i1l2516 07BD                     i1l2524 07C7  
                   i1l2508 07A3                     i1l2542 07E3                     i1l2550 07F3  
                   i1l2534 07D2                     i1l2518 07C1                     i1l2526 07C8  
                   i1l2552 07F7                     i1l2544 07EC                     i1l2536 07D6  
                   i1l2528 07CE                     i1l2546 07EE                     i1l2538 07D7  
                   i1l2548 07F2                     i1l2498 076D                     u301_20 0771  
                   u301_21 0770                     u302_20 0777                     u302_21 0776  
                   _INTEDG 040E                     u303_20 078F                     u303_21 078E  
                   u304_20 07A8                     u304_21 07A7                     u305_20 07BC  
                   u305_21 07BB                     u305_25 07B8                     u306_20 07CE  
                   u306_21 07CD                     u307_20 07DB                     u307_21 07DA  
                   u308_20 07EC                     u308_21 07EB                     u309_20 07F7  
                   u309_21 07F6                     u461_27 077D                     u462_27 0795  
                   u463_27 07BF                  ??_Lcd_Cmd 0021                     _TMR0IE 005D  
                   _TMR0IF 005A                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TMR1CS 0081                     _TMR2IE 0461                     _TMR2IF 0061  
                   _TMR1ON 0080    __size_of_Lcd_Write_Char 003D                     _TRISA0 0428  
                   _TRISB0 0430                     _TRISB3 0433                     _TRISC2 043A  
                   _TRISB4 0434                     _TRISB5 0435                     _TRISB6 0436  
                   _TRISB7 0437           __end_of___xxtofl 1000         __size_of_Read_Temp 0078  
                   ___wmul 0B71                  ??___fldiv 0028                  ??___awdiv 0024  
                ??___flmul 0031                  ??___fltol 003E           __end_of_init_ADC 0AF8  
                ??___lwdiv 0024                  ??___lwmod 002C           ___awdiv@quotient 0027  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 0031  
          Lcd_Set_Cursor@a 0027            Lcd_Set_Cursor@b 0024            Lcd_Set_Cursor@y 0029  
          Lcd_Set_Cursor@z 0028               ___xxtofl@arg 002A               ___xxtofl@exp 0029  
             ___xxtofl@val 0020    __end_of__initialization 003A          __end_of_Lcd_Clear 0AD0  
               ___fltol@f1 003A             __pcstackCOMMON 0070               __pidataBANK0 0AB1  
             __pidataBANK1 0AB5          __end_of_Read_Temp 0E1D             _Lcd_Set_Cursor 0C80  
                ?_Lcd_Init 0070         Read_Temp@TempValue 0047                  ?_Lcd_Port 0070  
               __pbssBANK0 004C                 __pbssBANK1 00B6          __end_of__Umul8_16 0BC1  
               __pmaintext 057C                    ?___wmul 0020                 __pintentry 0004  
                  _CCP1CON 0017  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0CD8  
                  _T1CKPS0 0084                    _T1CKPS1 0085                  ?___xxtofl 0020  
               ??_Lcd_Init 0024                 ??_Lcd_Port 0075                    _Cal_PID 0E99  
               __stringtab 0800              ?_Servo_MoveTo 0020                  ?_init_ADC 0070  
           _Lcd_Write_Char 0BFD                    _Lcd_Cmd 0B10                    ___fldiv 039F  
                  ___awdiv 0D3C                    ___flmul 003E                    ___fltol 0E1D  
          __size_of___wmul 0027                    ___lwdiv 0C3A                    ___lwmod 0BC1  
          ?_Lcd_Set_Cursor 0024                    __ptext1 0683                    __ptext2 0BC1  
                  __ptext3 0C3A                    __ptext4 0AE3                    __ptext5 0AF8  
                  __ptext6 0DA5                    __ptext7 0F44                    __ptext8 0E1D  
                  __ptext9 003E               __size_of_ISR 0093                    _dpowers 0806  
               ??___xxtofl 0024                    _sprintf 0683                    clrloop0 0ABC  
                  main@str 00A0     __end_of_Lcd_Write_Char 0C3A       end_of_initialization 003A  
           ??_Servo_MoveTo 0075                 ??_init_ADC 0075                  Lcd_Port@a 0020  
                _PID_error 0077                  _PID_value 0058              ___xxtofl@sign 0028  
              ___fldiv@grs 0034                ___fldiv@rem 002D            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0028          Lcd_Write_String@i 0026                ___flmul@grs 0038  
                _Lcd_Clear 0AC3             __end_of___wmul 0B98           _Lcd_Write_String 0B4C  
      start_initialization 000F                __end_of_ISR 0800                  _Read_Temp 0DA5  
        __size_of_Lcd_Init 0064          __size_of_Lcd_Port 0020                 ?_Lcd_Clear 0070  
                 ??___wmul 0075                 init_fetch0 0AD0                  __Umul8_16 0B98  
              __pdataBANK0 0060                __pdataBANK1 00B0            Lcd_Write_Char@a 0024  
          Lcd_Write_Char@y 0023       __end_of_Servo_MoveTo 0B10                  ___fldiv@a 0020  
                ___fldiv@b 0024                  ___flmul@a 002D                  ___flmul@b 0029  
              __pbssCOMMON 0075                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                 ?_Read_Temp 0070          __size_of___xxtofl 00BC  
                 ?_Cal_PID 0070                   ?_Lcd_Cmd 0070                sprintf@flag 0035  
              sprintf@prec 0036          __size_of_init_ADC 0015           ___lwdiv@dividend 0022  
         ??_Lcd_Set_Cursor 0025              Servo_MoveTo@a 0020                   ?___fldiv 0020  
                 ?___awdiv 0020                   ?___flmul 0029                   ?___fltol 003A  
               ?__Umul8_16 0020                   ?___lwdiv 0020                   ?___lwmod 0028  
                __pstrings 0800           ___lwdiv@quotient 0026                   ?_sprintf 002E  
                _realValue 005E          interrupt_function 0004             ___wmul@product 0024  
                clear_ram0 0ABB                   Lcd_Cmd@a 0023                ??_Lcd_Clear 0075  
               _ADCON0bits 001F                __stringbase 0805                 _ADCON1bits 009F  
        ___wmul@multiplier 0020           ??_Lcd_Write_Char 0021                   _Lcd_Init 0CD8  
              ??_Read_Temp 0045                   _Lcd_Port 0B2C           __size_of_Cal_PID 00AB  
 __end_of_Lcd_Write_String 0B71           __size_of_Lcd_Cmd 001C      __size_of_Servo_MoveTo 0018  
              ??__Umul8_16 0022           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0806                 sprintf@val 0037  
                 ___xxtofl 0F44            ___lwdiv@divisor 0020            ___lwdiv@counter 0025  
                 __ptext10 0B98                   __ptext11 039F                   __ptext20 0B71  
                 __ptext12 0B4C                   __ptext21 0D3C                   __ptext13 0BFD  
                 __ptext22 076D                   __ptext14 0C80                   __ptext15 0CD8  
                 __ptext16 0AC3                   __ptext17 0B10                   __ptext18 0B2C  
                 __ptext19 0E99           __size_of_sprintf 00EA                   _init_ADC 0AE3  
             _Servo_MoveTo 0AF8              __size_of_main 0107                   _setPoint 0062  
                 init_ram0 0AD4                _PID_error_1 005C                _PID_error_2 005A  
              _PID_value_1 0056         Lcd_Write_Char@temp 0022                   intlevel1 0000  
                sprintf@ap 0034                  sprintf@sp 0039           ___lwmod@dividend 002A  
                stringcode 0800         Lcd_Set_Cursor@temp 002A     __Umul8_16@multiplicand 0020  
               _OPTION_REG 0081                   sprintf@c 003A                   sprintf@f 002E  
          ___lwmod@divisor 0028            ___lwmod@counter 002D                   stringdir 0800  
                 stringtab 0800       __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
