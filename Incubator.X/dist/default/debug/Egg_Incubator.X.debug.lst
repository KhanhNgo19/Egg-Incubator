

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 02 13:24:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F877A Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataCOMMON
   215  000D                     __pidataCOMMON:
   216                           
   217                           ;initializer for _ki
   218  000D  3407               	retlw	7
   219  000E  3400               	retlw	0
   220                           
   221                           	psect	idataBANK1
   222  0120                     __pidataBANK1:
   223                           
   224                           ;initializer for _T
   225  0120  34E8               	retlw	232
   226  0121  3403               	retlw	3
   227                           
   228                           ;initializer for _kp
   229  0122  34CB               	retlw	203
   230  0123  3400               	retlw	0
   231                           
   232                           	psect	idataBANK3
   233  011A                     __pidataBANK3:
   234                           
   235                           ;initializer for _setPoint
   236  011A  3400               	retlw	0
   237  011B  3400               	retlw	0
   238  011C  3414               	retlw	20
   239  011D  3442               	retlw	66
   240                           
   241                           ;initializer for _kd
   242  011E  3401               	retlw	1
   243  011F  3400               	retlw	0
   244                           
   245                           	psect	strings
   246  1800                     __pstrings:
   247  1800                     stringtab:
   248  1800                     __stringtab:
   249  1800                     stringcode:	
   250                           ;	String table - string pointers are 1 byte each
   251                           
   252  1800                     stringdir:
   253  1800  3018               	movlw	high stringdir
   254  1801  008A               	movwf	10
   255  1802  0804               	movf	4,w
   256  1803  0A84               	incf	4,f
   257  1804  0782               	addwf	2,f
   258  1805                     __stringbase:
   259  1805  3400               	retlw	0
   260  1806                     __end_of__stringtab:
   261  1806                     __powers_:
   262  1806  3400               	retlw	0
   263  1807  3400               	retlw	0
   264  1808  3480               	retlw	128
   265  1809  343F               	retlw	63
   266  180A  3400               	retlw	0
   267  180B  3400               	retlw	0
   268  180C  3420               	retlw	32
   269  180D  3441               	retlw	65
   270  180E  3400               	retlw	0
   271  180F  3400               	retlw	0
   272  1810  34C8               	retlw	200
   273  1811  3442               	retlw	66
   274  1812  3400               	retlw	0
   275  1813  3400               	retlw	0
   276  1814  347A               	retlw	122
   277  1815  3444               	retlw	68
   278  1816  3400               	retlw	0
   279  1817  3440               	retlw	64
   280  1818  341C               	retlw	28
   281  1819  3446               	retlw	70
   282  181A  3400               	retlw	0
   283  181B  3450               	retlw	80
   284  181C  34C3               	retlw	195
   285  181D  3447               	retlw	71
   286  181E  3400               	retlw	0
   287  181F  3424               	retlw	36
   288  1820  3474               	retlw	116
   289  1821  3449               	retlw	73
   290  1822  3480               	retlw	128
   291  1823  3496               	retlw	150
   292  1824  3418               	retlw	24
   293  1825  344B               	retlw	75
   294  1826  3420               	retlw	32
   295  1827  34BC               	retlw	188
   296  1828  34BE               	retlw	190
   297  1829  344C               	retlw	76
   298  182A  3428               	retlw	40
   299  182B  346B               	retlw	107
   300  182C  346E               	retlw	110
   301  182D  344E               	retlw	78
   302  182E  34F9               	retlw	249
   303  182F  3402               	retlw	2
   304  1830  3415               	retlw	21
   305  1831  3450               	retlw	80
   306  1832  34EC               	retlw	236
   307  1833  3478               	retlw	120
   308  1834  34AD               	retlw	173
   309  1835  3460               	retlw	96
   310  1836  34CA               	retlw	202
   311  1837  34F2               	retlw	242
   312  1838  3449               	retlw	73
   313  1839  3471               	retlw	113
   314  183A                     __end_of__powers_:
   315  183A                     __npowers_:
   316  183A  3400               	retlw	0
   317  183B  3400               	retlw	0
   318  183C  3480               	retlw	128
   319  183D  343F               	retlw	63
   320  183E  34CD               	retlw	205
   321  183F  34CC               	retlw	204
   322  1840  34CC               	retlw	204
   323  1841  343D               	retlw	61
   324  1842  340A               	retlw	10
   325  1843  34D7               	retlw	215
   326  1844  3423               	retlw	35
   327  1845  343C               	retlw	60
   328  1846  346F               	retlw	111
   329  1847  3412               	retlw	18
   330  1848  3483               	retlw	131
   331  1849  343A               	retlw	58
   332  184A  3417               	retlw	23
   333  184B  34B7               	retlw	183
   334  184C  34D1               	retlw	209
   335  184D  3438               	retlw	56
   336  184E  34AC               	retlw	172
   337  184F  34C5               	retlw	197
   338  1850  3427               	retlw	39
   339  1851  3437               	retlw	55
   340  1852  34BD               	retlw	189
   341  1853  3437               	retlw	55
   342  1854  3486               	retlw	134
   343  1855  3435               	retlw	53
   344  1856  3495               	retlw	149
   345  1857  34BF               	retlw	191
   346  1858  34D6               	retlw	214
   347  1859  3433               	retlw	51
   348  185A  3477               	retlw	119
   349  185B  34CC               	retlw	204
   350  185C  342B               	retlw	43
   351  185D  3432               	retlw	50
   352  185E  345F               	retlw	95
   353  185F  3470               	retlw	112
   354  1860  3489               	retlw	137
   355  1861  3430               	retlw	48
   356  1862  34FF               	retlw	255
   357  1863  34E6               	retlw	230
   358  1864  34DB               	retlw	219
   359  1865  342E               	retlw	46
   360  1866  3408               	retlw	8
   361  1867  34E5               	retlw	229
   362  1868  343C               	retlw	60
   363  1869  341E               	retlw	30
   364  186A  3460               	retlw	96
   365  186B  3442               	retlw	66
   366  186C  34A2               	retlw	162
   367  186D  340D               	retlw	13
   368  186E                     __end_of__npowers_:
   369  186E                     _dpowers:
   370  186E  3401               	retlw	1
   371  186F  3400               	retlw	0
   372  1870  3400               	retlw	0
   373  1871  3400               	retlw	0
   374  1872  340A               	retlw	10
   375  1873  3400               	retlw	0
   376  1874  3400               	retlw	0
   377  1875  3400               	retlw	0
   378  1876  3464               	retlw	100
   379  1877  3400               	retlw	0
   380  1878  3400               	retlw	0
   381  1879  3400               	retlw	0
   382  187A  34E8               	retlw	232
   383  187B  3403               	retlw	3
   384  187C  3400               	retlw	0
   385  187D  3400               	retlw	0
   386  187E  3410               	retlw	16
   387  187F  3427               	retlw	39
   388  1880  3400               	retlw	0
   389  1881  3400               	retlw	0
   390  1882  34A0               	retlw	160
   391  1883  3486               	retlw	134
   392  1884  3401               	retlw	1
   393  1885  3400               	retlw	0
   394  1886  3440               	retlw	64
   395  1887  3442               	retlw	66
   396  1888  340F               	retlw	15
   397  1889  3400               	retlw	0
   398  188A  3480               	retlw	128
   399  188B  3496               	retlw	150
   400  188C  3498               	retlw	152
   401  188D  3400               	retlw	0
   402  188E  3400               	retlw	0
   403  188F  34E1               	retlw	225
   404  1890  34F5               	retlw	245
   405  1891  3405               	retlw	5
   406  1892  3400               	retlw	0
   407  1893  34CA               	retlw	202
   408  1894  349A               	retlw	154
   409  1895  343B               	retlw	59
   410  1896                     __end_of_dpowers:
   411  000E                     _TMR1	set	14
   412  001E                     _ADRESH	set	30
   413  001F                     _ADCON0bits	set	31
   414  0059                     _INTF	set	89
   415  0035                     _RB5	set	53
   416  0034                     _RB4	set	52
   417  0058                     _RBIF	set	88
   418  005C                     _INTE	set	92
   419  005E                     _PEIE	set	94
   420  0060                     _TMR1IF	set	96
   421  005F                     _GIE	set	95
   422  0080                     _TMR1ON	set	128
   423  0085                     _T1CKPS1	set	133
   424  0084                     _T1CKPS0	set	132
   425  0081                     _TMR1CS	set	129
   426  0040                     _RD0	set	64
   427  0043                     _RD3	set	67
   428  0042                     _RD2	set	66
   429  0047                     _RD7	set	71
   430  0046                     _RD6	set	70
   431  0045                     _RD5	set	69
   432  0044                     _RD4	set	68
   433  009E                     _ADRESL	set	158
   434  009F                     _ADCON1bits	set	159
   435  0088                     _TRISD	set	136
   436  040E                     _INTEDG	set	1038
   437  0460                     _TMR1IE	set	1120
   438  0440                     _TRISD0	set	1088
   439  0430                     _TRISB0	set	1072
   440  0428                     _TRISA0	set	1064
   441  1896                     STR_1:
   442  1896  3453               	retlw	83	;'S'
   443  1897  3465               	retlw	101	;'e'
   444  1898  3474               	retlw	116	;'t'
   445  1899  3420               	retlw	32	;' '
   446  189A  3420               	retlw	32	;' '
   447  189B  343D               	retlw	61	;'='
   448  189C  3420               	retlw	32	;' '
   449  189D  3425               	retlw	37	;'%'
   450  189E  342E               	retlw	46	;'.'
   451  189F  3431               	retlw	49	;'1'
   452  18A0  3466               	retlw	102	;'f'
   453  18A1  3420               	retlw	32	;' '
   454  18A2  3400               	retlw	0
   455  18A3                     STR_2:
   456  18A3  3452               	retlw	82	;'R'
   457  18A4  3465               	retlw	101	;'e'
   458  18A5  3461               	retlw	97	;'a'
   459  18A6  346C               	retlw	108	;'l'
   460  18A7  3420               	retlw	32	;' '
   461  18A8  343D               	retlw	61	;'='
   462  18A9  3420               	retlw	32	;' '
   463  18AA  3425               	retlw	37	;'%'
   464  18AB  342E               	retlw	46	;'.'
   465  18AC  3431               	retlw	49	;'1'
   466  18AD  3466               	retlw	102	;'f'
   467  18AE  3420               	retlw	32	;' '
   468  18AF  3400               	retlw	0
   469                           
   470                           	psect	cinit
   471  07BA                     start_initialization:	
   472                           ; #config settings
   473                           
   474  07BA                     __initialization:
   475                           
   476                           ; Initialize objects allocated to BANK3
   477  07BA  1783               	bsf	3,7	;select IRP bank2
   478  07BB  30B7               	movlw	low (__pdataBANK3+6)
   479  07BC  00FD               	movwf	btemp+-1
   480  07BD  3001               	movlw	high __pidataBANK3
   481  07BE  00FE               	movwf	btemp
   482  07BF  301A               	movlw	low __pidataBANK3
   483  07C0  00FF               	movwf	btemp+1
   484  07C1  30B1               	movlw	low __pdataBANK3
   485  07C2  0084               	movwf	4
   486  07C3  120A  118A  210B  120A  118A  	fcall	init_ram0
   487                           
   488                           ; Initialize objects allocated to BANK1
   489  07C8  1383               	bcf	3,7	;select IRP bank0
   490  07C9  30EE               	movlw	low (__pdataBANK1+4)
   491  07CA  00FD               	movwf	btemp+-1
   492  07CB  3001               	movlw	high __pidataBANK1
   493  07CC  00FE               	movwf	btemp
   494  07CD  3020               	movlw	low __pidataBANK1
   495  07CE  00FF               	movwf	btemp+1
   496  07CF  30EA               	movlw	low __pdataBANK1
   497  07D0  0084               	movwf	4
   498  07D1  120A  118A  210B  120A  118A  	fcall	init_ram0
   499                           
   500                           ; Initialize objects allocated to COMMON
   501  07D6  120A  118A  200D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   502  07DB  00F8               	movwf	__pdataCOMMON& (0+127)
   503  07DC  120A  118A  200E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   504  07E1  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   505                           
   506                           ; Clear objects allocated to BANK3
   507  07E2  1683               	bsf	3,5	;RP0=1, select bank3
   508  07E3  1703               	bsf	3,6	;RP1=1, select bank3
   509  07E4  01A9               	clrf	__pbssBANK3& (0+127)
   510  07E5  01AA               	clrf	(__pbssBANK3+1)& (0+127)
   511  07E6  01AB               	clrf	(__pbssBANK3+2)& (0+127)
   512  07E7  01AC               	clrf	(__pbssBANK3+3)& (0+127)
   513  07E8  01AD               	clrf	(__pbssBANK3+4)& (0+127)
   514  07E9  01AE               	clrf	(__pbssBANK3+5)& (0+127)
   515  07EA  01AF               	clrf	(__pbssBANK3+6)& (0+127)
   516  07EB  01B0               	clrf	(__pbssBANK3+7)& (0+127)
   517                           
   518                           ; Clear objects allocated to BANK1
   519  07EC  1683               	bsf	3,5	;RP0=1, select bank1
   520  07ED  1303               	bcf	3,6	;RP1=0, select bank1
   521  07EE  01DE               	clrf	__pbssBANK1& (0+127)
   522  07EF  01DF               	clrf	(__pbssBANK1+1)& (0+127)
   523  07F0  01E0               	clrf	(__pbssBANK1+2)& (0+127)
   524  07F1  01E1               	clrf	(__pbssBANK1+3)& (0+127)
   525  07F2  01E2               	clrf	(__pbssBANK1+4)& (0+127)
   526  07F3  01E3               	clrf	(__pbssBANK1+5)& (0+127)
   527  07F4  01E4               	clrf	(__pbssBANK1+6)& (0+127)
   528  07F5  01E5               	clrf	(__pbssBANK1+7)& (0+127)
   529  07F6  01E6               	clrf	(__pbssBANK1+8)& (0+127)
   530  07F7  01E7               	clrf	(__pbssBANK1+9)& (0+127)
   531  07F8  01E8               	clrf	(__pbssBANK1+10)& (0+127)
   532  07F9  01E9               	clrf	(__pbssBANK1+11)& (0+127)
   533                           
   534                           ; Clear objects allocated to COMMON
   535  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   536  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   537  07FC                     end_of_initialization:	
   538                           ;End of C runtime variable initialization code
   539                           
   540  07FC                     __end_of__initialization:
   541  07FC  0183               	clrf	3
   542  07FD  160A  118A  2865   	ljmp	_main	;jump to C main() function
   543                           
   544                           	psect	bssCOMMON
   545  0076                     __pbssCOMMON:
   546  0076                     _count:
   547  0076                     	ds	2
   548                           
   549                           	psect	dataCOMMON
   550  0078                     __pdataCOMMON:
   551  0078                     _ki:
   552  0078                     	ds	2
   553                           
   554                           	psect	bssBANK1
   555  00DE                     __pbssBANK1:
   556  00DE                     _PID_d:
   557  00DE                     	ds	2
   558  00E0                     _PID_i:
   559  00E0                     	ds	2
   560  00E2                     _PID_p:
   561  00E2                     	ds	2
   562  00E4                     _PID_value:
   563  00E4                     	ds	2
   564  00E6                     _previous_error:
   565  00E6                     	ds	2
   566  00E8                     _PID_error:
   567  00E8                     	ds	2
   568                           
   569                           	psect	dataBANK1
   570  00EA                     __pdataBANK1:
   571  00EA                     _T:
   572  00EA                     	ds	2
   573  00EC                     _kp:
   574  00EC                     	ds	2
   575                           
   576                           	psect	bssBANK3
   577  01A9                     __pbssBANK3:
   578  01A9                     _temp:
   579  01A9                     	ds	4
   580  01AD                     _samp:
   581  01AD                     	ds	2
   582  01AF                     _tmp:
   583  01AF                     	ds	2
   584                           
   585                           	psect	dataBANK3
   586  01B1                     __pdataBANK3:
   587  01B1                     _setPoint:
   588  01B1                     	ds	4
   589  01B5                     _kd:
   590  01B5                     	ds	2
   591                           
   592                           	psect	inittext
   593  0107                     init_fetch0:	
   594                           ;	Called with low address in FSR and high address in W
   595                           
   596  0107  087E               	movf	btemp,w
   597  0108  008A               	movwf	10
   598  0109  087F               	movf	btemp+1,w
   599  010A  0082               	movwf	2
   600  010B                     init_ram0:	
   601                           ;Called with:
   602                           ;	high address of idata address in btemp 
   603                           ;	low address of idata address in btemp+1 
   604                           ;	low address of data in FSR
   605                           ;	high address + 1 of data in btemp-1
   606                           
   607  010B  120A  118A  2107  120A  118A  	fcall	init_fetch0
   608  0110  0080               	movwf	0
   609  0111  0A84               	incf	4,f
   610  0112  0804               	movf	4,w
   611  0113  067D               	xorwf	btemp+-1,w
   612  0114  1903               	btfsc	3,2
   613  0115  3400               	retlw	0
   614  0116  0AFF               	incf	btemp+1,f
   615  0117  1903               	btfsc	3,2
   616  0118  0AFE               	incf	btemp,f
   617  0119  290B               	goto	init_ram0
   618                           
   619                           	psect	cstackBANK3
   620  0190                     __pcstackBANK3:
   621  0190                     _sprintf$928:
   622                           
   623                           ; 4 bytes @ 0x0
   624  0190                     	ds	4
   625  0194                     sprintf@ap:
   626                           
   627                           ; 1 bytes @ 0x4
   628  0194                     	ds	1
   629  0195                     sprintf@flag:
   630                           
   631                           ; 2 bytes @ 0x5
   632  0195                     	ds	2
   633  0197                     sprintf@val:
   634                           
   635                           ; 4 bytes @ 0x7
   636  0197                     	ds	4
   637  019B                     sprintf@eexp:
   638                           
   639                           ; 2 bytes @ 0xB
   640  019B                     	ds	2
   641  019D                     sprintf@tmpval:
   642                           
   643                           ; 4 bytes @ 0xD
   644  019D                     	ds	4
   645  01A1                     sprintf@sp:
   646                           
   647                           ; 1 bytes @ 0x11
   648  01A1                     	ds	1
   649  01A2                     sprintf@prec:
   650                           
   651                           ; 2 bytes @ 0x12
   652  01A2                     	ds	2
   653  01A4                     sprintf@fval:
   654                           
   655                           ; 4 bytes @ 0x14
   656  01A4                     	ds	4
   657  01A8                     sprintf@c:
   658                           
   659                           ; 1 bytes @ 0x18
   660  01A8                     	ds	1
   661                           
   662                           	psect	cstackBANK1
   663  00A0                     __pcstackBANK1:
   664  00A0                     ??___fladd:
   665                           
   666                           ; 1 bytes @ 0x0
   667  00A0                     	ds	8
   668  00A8                     ___fladd@signs:
   669                           
   670                           ; 1 bytes @ 0x8
   671  00A8                     	ds	1
   672  00A9                     ___fladd@aexp:
   673                           
   674                           ; 1 bytes @ 0x9
   675  00A9                     	ds	1
   676  00AA                     ___fladd@bexp:
   677                           
   678                           ; 1 bytes @ 0xA
   679  00AA                     	ds	1
   680  00AB                     ___fladd@grs:
   681                           
   682                           ; 1 bytes @ 0xB
   683  00AB                     	ds	1
   684  00AC                     ?___flsub:
   685  00AC                     ___flsub@a:	
   686                           ; 4 bytes @ 0xC
   687                           
   688                           
   689                           ; 4 bytes @ 0xC
   690  00AC                     	ds	4
   691  00B0                     ___flsub@b:
   692                           
   693                           ; 4 bytes @ 0x10
   694  00B0                     	ds	4
   695  00B4                     ?___fltol:
   696  00B4                     ___fltol@f1:	
   697                           ; 4 bytes @ 0x14
   698                           
   699                           
   700                           ; 4 bytes @ 0x14
   701  00B4                     	ds	4
   702  00B8                     ??___fltol:
   703                           
   704                           ; 1 bytes @ 0x18
   705  00B8                     	ds	5
   706  00BD                     ___fltol@sign1:
   707                           
   708                           ; 1 bytes @ 0x1D
   709  00BD                     	ds	1
   710  00BE                     ___fltol@exp1:
   711                           
   712                           ; 1 bytes @ 0x1E
   713  00BE                     	ds	1
   714  00BF                     ??_ReadTemp:
   715  00BF                     ??_Cal_PID:	
   716                           ; 1 bytes @ 0x1F
   717                           
   718  00BF                     ?_sprintf:	
   719                           ; 1 bytes @ 0x1F
   720                           
   721  00BF                     sprintf@f:	
   722                           ; 2 bytes @ 0x1F
   723                           
   724                           
   725                           ; 1 bytes @ 0x1F
   726  00BF                     	ds	4
   727  00C3                     ReadTemp@voltage:
   728                           
   729                           ; 2 bytes @ 0x23
   730  00C3                     	ds	1
   731  00C4                     ??_sprintf:
   732                           
   733                           ; 1 bytes @ 0x24
   734  00C4                     	ds	1
   735  00C5                     ReadTemp@ADC_value:
   736                           
   737                           ; 2 bytes @ 0x25
   738  00C5                     	ds	4
   739  00C9                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x29
   742  00C9                     	ds	1
   743  00CA                     main@str:
   744                           
   745                           ; 20 bytes @ 0x2A
   746  00CA                     	ds	20
   747                           
   748                           	psect	cstackCOMMON
   749  0070                     __pcstackCOMMON:
   750  0070                     ?_isdigit:
   751  0070                     ?_init_ADC:	
   752                           ; 1 bit 
   753                           
   754  0070                     ?_ReadTemp:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_Cal_PID:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_Lcd_Port:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_Lcd_Cmd:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_Lcd_Init:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_Lcd_Write_Char:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_Lcd_Write_String:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_ISR:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ??_ISR:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_Lcd_Clear:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_main:	
   785                           ; 2 bytes @ 0x0
   786                           
   787                           
   788                           ; 2 bytes @ 0x0
   789  0070                     	ds	4
   790  0074                     ??_init_ADC:
   791  0074                     ??_isdigit:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0074                     ??__div_to_l_:	
   795                           ; 1 bytes @ 0x4
   796                           
   797  0074                     ??_Lcd_Port:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0074                     ??___lldiv:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     ??___awmod:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0074                     ??___flneg:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     ??___llmod:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     ??___lwmod:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ?__Umul8_16:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     Lcd_Port@a:	
   819                           ; 2 bytes @ 0x4
   820                           
   821  0074                     __Umul8_16@multiplicand:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     _isdigit$735:	
   825                           ; 1 bytes @ 0x4
   826                           
   827                           
   828                           ; 1 bytes @ 0x4
   829  0074                     	ds	1
   830  0075                     ??_Lcd_Write_Char:
   831  0075                     ??___awdiv:	
   832                           ; 1 bytes @ 0x5
   833                           
   834  0075                     Lcd_Cmd@a:	
   835                           ; 1 bytes @ 0x5
   836                           
   837  0075                     ___llmod@counter:	
   838                           ; 1 bytes @ 0x5
   839                           
   840  0075                     ___lwmod@counter:	
   841                           ; 1 bytes @ 0x5
   842                           
   843  0075                     isdigit@c:	
   844                           ; 1 bytes @ 0x5
   845                           
   846                           
   847                           ; 1 bytes @ 0x5
   848  0075                     	ds	1
   849  0076                     ??_Lcd_Clear:
   850  0076                     ??___wmul:	
   851                           ; 1 bytes @ 0x6
   852                           
   853  0076                     ??___flsub:	
   854                           ; 1 bytes @ 0x6
   855                           
   856                           
   857                           	psect	cstackBANK0
   858  0020                     __pcstackBANK0:	
   859                           ; 1 bytes @ 0x6
   860                           
   861  0020                     ?___fleq:
   862  0020                     ?___flge:	
   863                           ; 1 bit 
   864                           
   865  0020                     ??__Umul8_16:	
   866                           ; 1 bit 
   867                           
   868  0020                     ??_Lcd_Cmd:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0020                     ?___awmod:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0020                     ?___lwmod:	
   875                           ; 2 bytes @ 0x0
   876                           
   877  0020                     ?__tdiv_to_l_:	
   878                           ; 2 bytes @ 0x0
   879                           
   880  0020                     ?__div_to_l_:	
   881                           ; 4 bytes @ 0x0
   882                           
   883  0020                     ?___lldiv:	
   884                           ; 4 bytes @ 0x0
   885                           
   886  0020                     ?___flneg:	
   887                           ; 4 bytes @ 0x0
   888                           
   889  0020                     ?___llmod:	
   890                           ; 4 bytes @ 0x0
   891                           
   892  0020                     Lcd_Write_Char@temp:	
   893                           ; 4 bytes @ 0x0
   894                           
   895  0020                     ___awmod@divisor:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0020                     ___lwmod@divisor:	
   899                           ; 2 bytes @ 0x0
   900                           
   901  0020                     ___lldiv@divisor:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0020                     __div_to_l_@f1:	
   905                           ; 4 bytes @ 0x0
   906                           
   907  0020                     ___fleq@ff1:	
   908                           ; 4 bytes @ 0x0
   909                           
   910  0020                     ___flge@ff1:	
   911                           ; 4 bytes @ 0x0
   912                           
   913  0020                     ___flneg@f1:	
   914                           ; 4 bytes @ 0x0
   915                           
   916  0020                     __tdiv_to_l_@f1:	
   917                           ; 4 bytes @ 0x0
   918                           
   919  0020                     ___llmod@divisor:	
   920                           ; 4 bytes @ 0x0
   921                           
   922                           
   923                           ; 4 bytes @ 0x0
   924  0020                     	ds	1
   925  0021                     Lcd_Write_Char@y:
   926                           
   927                           ; 1 bytes @ 0x1
   928  0021                     	ds	1
   929  0022                     ?_Lcd_Set_Cursor:
   930  0022                     ??_Lcd_Init:	
   931                           ; 1 bytes @ 0x2
   932                           
   933  0022                     Lcd_Set_Cursor@b:	
   934                           ; 1 bytes @ 0x2
   935                           
   936  0022                     Lcd_Write_Char@a:	
   937                           ; 1 bytes @ 0x2
   938                           
   939  0022                     ___awmod@dividend:	
   940                           ; 1 bytes @ 0x2
   941                           
   942  0022                     ___lwmod@dividend:	
   943                           ; 2 bytes @ 0x2
   944                           
   945  0022                     __Umul8_16@product:	
   946                           ; 2 bytes @ 0x2
   947                           
   948                           
   949                           ; 2 bytes @ 0x2
   950  0022                     	ds	1
   951  0023                     ??_Lcd_Set_Cursor:
   952  0023                     ??_Lcd_Write_String:	
   953                           ; 1 bytes @ 0x3
   954                           
   955                           
   956                           ; 1 bytes @ 0x3
   957  0023                     	ds	1
   958  0024                     ?___lwdiv:
   959  0024                     ___awmod@counter:	
   960                           ; 2 bytes @ 0x4
   961                           
   962  0024                     Lcd_Write_String@i:	
   963                           ; 1 bytes @ 0x4
   964                           
   965  0024                     ___lwdiv@divisor:	
   966                           ; 2 bytes @ 0x4
   967                           
   968  0024                     __Umul8_16@word_mpld:	
   969                           ; 2 bytes @ 0x4
   970                           
   971  0024                     ___lldiv@dividend:	
   972                           ; 2 bytes @ 0x4
   973                           
   974  0024                     __div_to_l_@f2:	
   975                           ; 4 bytes @ 0x4
   976                           
   977  0024                     ___fleq@ff2:	
   978                           ; 4 bytes @ 0x4
   979                           
   980  0024                     ___flge@ff2:	
   981                           ; 4 bytes @ 0x4
   982                           
   983  0024                     __tdiv_to_l_@f2:	
   984                           ; 4 bytes @ 0x4
   985                           
   986  0024                     ___llmod@dividend:	
   987                           ; 4 bytes @ 0x4
   988                           
   989                           
   990                           ; 4 bytes @ 0x4
   991  0024                     	ds	1
   992  0025                     Lcd_Set_Cursor@a:
   993  0025                     ___awmod@sign:	
   994                           ; 1 bytes @ 0x5
   995                           
   996                           
   997                           ; 1 bytes @ 0x5
   998  0025                     	ds	1
   999  0026                     ?___awdiv:
  1000  0026                     Lcd_Set_Cursor@z:	
  1001                           ; 2 bytes @ 0x6
  1002                           
  1003  0026                     Lcd_Write_String@a:	
  1004                           ; 1 bytes @ 0x6
  1005                           
  1006  0026                     __Umul8_16@multiplier:	
  1007                           ; 1 bytes @ 0x6
  1008                           
  1009  0026                     ___awdiv@divisor:	
  1010                           ; 1 bytes @ 0x6
  1011                           
  1012  0026                     ___lwdiv@dividend:	
  1013                           ; 2 bytes @ 0x6
  1014                           
  1015                           
  1016                           ; 2 bytes @ 0x6
  1017  0026                     	ds	1
  1018  0027                     Lcd_Set_Cursor@y:
  1019                           
  1020                           ; 1 bytes @ 0x7
  1021  0027                     	ds	1
  1022  0028                     ??__tdiv_to_l_:
  1023  0028                     ??___fleq:	
  1024                           ; 1 bytes @ 0x8
  1025                           
  1026  0028                     ??___flge:	
  1027                           ; 1 bytes @ 0x8
  1028                           
  1029  0028                     ??___lwdiv:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032  0028                     Lcd_Set_Cursor@temp:	
  1033                           ; 1 bytes @ 0x8
  1034                           
  1035  0028                     ___awdiv@dividend:	
  1036                           ; 1 bytes @ 0x8
  1037                           
  1038  0028                     ___lldiv@quotient:	
  1039                           ; 2 bytes @ 0x8
  1040                           
  1041  0028                     __div_to_l_@quot:	
  1042                           ; 4 bytes @ 0x8
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x8
  1046  0028                     	ds	1
  1047  0029                     ___lwdiv@counter:
  1048                           
  1049                           ; 1 bytes @ 0x9
  1050  0029                     	ds	1
  1051  002A                     ___awdiv@counter:
  1052  002A                     ___lwdiv@quotient:	
  1053                           ; 1 bytes @ 0xA
  1054                           
  1055                           
  1056                           ; 2 bytes @ 0xA
  1057  002A                     	ds	1
  1058  002B                     ___awdiv@sign:
  1059                           
  1060                           ; 1 bytes @ 0xB
  1061  002B                     	ds	1
  1062  002C                     ?___wmul:
  1063  002C                     ?___xxtofl:	
  1064                           ; 2 bytes @ 0xC
  1065                           
  1066  002C                     ___lldiv@counter:	
  1067                           ; 4 bytes @ 0xC
  1068                           
  1069  002C                     __div_to_l_@cntr:	
  1070                           ; 1 bytes @ 0xC
  1071                           
  1072  002C                     ___wmul@multiplier:	
  1073                           ; 1 bytes @ 0xC
  1074                           
  1075  002C                     ___awdiv@quotient:	
  1076                           ; 2 bytes @ 0xC
  1077                           
  1078  002C                     __tdiv_to_l_@quot:	
  1079                           ; 2 bytes @ 0xC
  1080                           
  1081  002C                     ___xxtofl@val:	
  1082                           ; 4 bytes @ 0xC
  1083                           
  1084                           
  1085                           ; 4 bytes @ 0xC
  1086  002C                     	ds	1
  1087  002D                     __div_to_l_@exp1:
  1088                           
  1089                           ; 1 bytes @ 0xD
  1090  002D                     	ds	1
  1091  002E                     ___wmul@multiplicand:
  1092                           
  1093                           ; 2 bytes @ 0xE
  1094  002E                     	ds	2
  1095  0030                     ??___xxtofl:
  1096  0030                     __tdiv_to_l_@cntr:	
  1097                           ; 1 bytes @ 0x10
  1098                           
  1099  0030                     ___wmul@product:	
  1100                           ; 1 bytes @ 0x10
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x10
  1104  0030                     	ds	1
  1105  0031                     __tdiv_to_l_@exp1:
  1106                           
  1107                           ; 1 bytes @ 0x11
  1108  0031                     	ds	3
  1109  0034                     ___xxtofl@sign:
  1110                           
  1111                           ; 1 bytes @ 0x14
  1112  0034                     	ds	1
  1113  0035                     ___xxtofl@exp:
  1114                           
  1115                           ; 1 bytes @ 0x15
  1116  0035                     	ds	1
  1117  0036                     ___xxtofl@arg:
  1118                           
  1119                           ; 4 bytes @ 0x16
  1120  0036                     	ds	4
  1121  003A                     ?___flmul:
  1122  003A                     ___flmul@b:	
  1123                           ; 4 bytes @ 0x1A
  1124                           
  1125                           
  1126                           ; 4 bytes @ 0x1A
  1127  003A                     	ds	4
  1128  003E                     ___flmul@a:
  1129                           
  1130                           ; 4 bytes @ 0x1E
  1131  003E                     	ds	4
  1132  0042                     ??___flmul:
  1133                           
  1134                           ; 1 bytes @ 0x22
  1135  0042                     	ds	5
  1136  0047                     ___flmul@sign:
  1137                           
  1138                           ; 1 bytes @ 0x27
  1139  0047                     	ds	1
  1140  0048                     ___flmul@aexp:
  1141                           
  1142                           ; 1 bytes @ 0x28
  1143  0048                     	ds	1
  1144  0049                     ___flmul@grs:
  1145                           
  1146                           ; 4 bytes @ 0x29
  1147  0049                     	ds	4
  1148  004D                     ___flmul@bexp:
  1149                           
  1150                           ; 1 bytes @ 0x2D
  1151  004D                     	ds	1
  1152  004E                     ___flmul@prod:
  1153                           
  1154                           ; 4 bytes @ 0x2E
  1155  004E                     	ds	4
  1156  0052                     ___flmul@temp:
  1157                           
  1158                           ; 2 bytes @ 0x32
  1159  0052                     	ds	2
  1160  0054                     ?_fround:
  1161  0054                     ?_scale:	
  1162                           ; 4 bytes @ 0x34
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x34
  1166  0054                     	ds	4
  1167  0058                     ??_fround:
  1168  0058                     ??_scale:	
  1169                           ; 1 bytes @ 0x38
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0x38
  1173  0058                     	ds	7
  1174  005F                     _fround$926:
  1175                           
  1176                           ; 4 bytes @ 0x3F
  1177  005F                     	ds	3
  1178  0062                     _scale$927:
  1179                           
  1180                           ; 4 bytes @ 0x42
  1181  0062                     	ds	1
  1182  0063                     _fround$925:
  1183                           
  1184                           ; 4 bytes @ 0x43
  1185  0063                     	ds	3
  1186  0066                     scale@scl:
  1187                           
  1188                           ; 1 bytes @ 0x46
  1189  0066                     	ds	1
  1190  0067                     fround@prec:
  1191                           
  1192                           ; 1 bytes @ 0x47
  1193  0067                     	ds	1
  1194  0068                     ?___fladd:
  1195  0068                     ___fladd@b:	
  1196                           ; 4 bytes @ 0x48
  1197                           
  1198                           
  1199                           ; 4 bytes @ 0x48
  1200  0068                     	ds	4
  1201  006C                     ___fladd@a:
  1202                           
  1203                           ; 4 bytes @ 0x4C
  1204  006C                     	ds	4
  1205                           
  1206                           	psect	maintext
  1207  1065                     __pmaintext:	
  1208 ;;
  1209 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1210 ;;
  1211 ;; *************** function _main *****************
  1212 ;; Defined at:
  1213 ;;		line 49 in file "main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  str            20   42[BANK1 ] unsigned char [20]
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  2  145[None  ] int 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : B00/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         0       0       0       0       0
  1228 ;;      Locals:         0       0      20       0       0
  1229 ;;      Temps:          0       0       1       0       0
  1230 ;;      Totals:         0       0      21       0       0
  1231 ;;Total ram usage:       21 bytes
  1232 ;; Hardware stack levels required when called:    5
  1233 ;; This function calls:
  1234 ;;		_Cal_PID
  1235 ;;		_Lcd_Clear
  1236 ;;		_Lcd_Init
  1237 ;;		_Lcd_Set_Cursor
  1238 ;;		_Lcd_Write_String
  1239 ;;		_ReadTemp
  1240 ;;		___fladd
  1241 ;;		___flmul
  1242 ;;		___xxtofl
  1243 ;;		_init_ADC
  1244 ;;		_sprintf
  1245 ;; This function is called by:
  1246 ;;		Startup code after reset
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _main
  1252  1065                     _main:
  1253  1065                     l4666:	
  1254                           ;incstack = 0
  1255                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1256                           
  1257                           
  1258                           ;main.c: 51: ;main.c: 54:     PEIE = 1;
  1259  1065  160A  158A  20BF  160A  118A  	fcall	_init_ADC
  1260  106A                     l4668:
  1261                           
  1262                           ;main.c: 55: 
  1263  106A  1683               	bsf	3,5	;RP0=1, select bank1
  1264  106B  1303               	bcf	3,6	;RP1=0, select bank1
  1265  106C  1405               	bsf	5,0	;volatile
  1266  106D                     l4670:
  1267                           
  1268                           ;main.c: 58: 
  1269  106D  0188               	clrf	8	;volatile
  1270  106E                     l4672:
  1271                           
  1272                           ;main.c: 59:     while(1)
  1273  106E  160A  118A  2002  160A  118A  	fcall	_Lcd_Init
  1274  1073                     l4674:
  1275                           
  1276                           ;main.c: 62:         tmp = 0;
  1277  1073  1683               	bsf	3,5	;RP0=1, select bank1
  1278  1074  1303               	bcf	3,6	;RP1=0, select bank1
  1279  1075  1406               	bsf	6,0	;volatile
  1280  1076                     l4676:
  1281                           
  1282                           ;main.c: 63: 
  1283  1076  1008               	bcf	8,0	;volatile
  1284  1077                     l4678:
  1285                           
  1286                           ;main.c: 64:         if(samp == 1)
  1287  1077  1283               	bcf	3,5	;RP0=0, select bank0
  1288  1078  1303               	bcf	3,6	;RP1=0, select bank0
  1289  1079  1008               	bcf	8,0	;volatile
  1290  107A                     l4680:
  1291                           
  1292                           ;main.c: 68:             samp = 0;
  1293  107A  30FC               	movlw	252
  1294  107B  008F               	movwf	15	;volatile
  1295  107C  3018               	movlw	24
  1296  107D  008E               	movwf	14	;volatile
  1297  107E                     l4682:
  1298                           
  1299                           ;main.c: 69:         }
  1300  107E  1090               	bcf	16,1	;volatile
  1301  107F                     l4684:
  1302                           
  1303                           ;main.c: 70: 
  1304  107F  1210               	bcf	16,4	;volatile
  1305  1080                     l4686:
  1306                           
  1307                           ;main.c: 71: 
  1308  1080  1290               	bcf	16,5	;volatile
  1309  1081                     l4688:
  1310                           
  1311                           ;main.c: 72:         Lcd_Clear();
  1312  1081  1410               	bsf	16,0	;volatile
  1313  1082                     l4690:
  1314                           
  1315                           ;main.c: 75:         Lcd_Write_String(str);
  1316  1082  178B               	bsf	11,7	;volatile
  1317  1083                     l4692:
  1318                           
  1319                           ;main.c: 77:         Lcd_Set_Cursor(2,1);
  1320  1083  1683               	bsf	3,5	;RP0=1, select bank1
  1321  1084  1303               	bcf	3,6	;RP1=0, select bank1
  1322  1085  140C               	bsf	12,0	;volatile
  1323  1086                     l4694:
  1324                           
  1325                           ;main.c: 78:         Lcd_Write_String(str);
  1326  1086  1283               	bcf	3,5	;RP0=0, select bank0
  1327  1087  1303               	bcf	3,6	;RP1=0, select bank0
  1328  1088  100C               	bcf	12,0	;volatile
  1329  1089                     l4696:
  1330                           
  1331                           ;main.c: 79:     }
  1332  1089  170B               	bsf	11,6	;volatile
  1333  108A                     l4698:
  1334                           
  1335                           ;main.c: 81: }
  1336  108A  1683               	bsf	3,5	;RP0=1, select bank1
  1337  108B  1303               	bcf	3,6	;RP1=0, select bank1
  1338  108C  1701               	bsf	1,6	;volatile
  1339  108D                     l4700:
  1340                           
  1341                           ;main.c: 82: 
  1342  108D  160B               	bsf	11,4	;volatile
  1343  108E                     l4702:
  1344                           
  1345                           ;main.c: 85: ;main.c: 86:     ADCON1bits.ADCS2 = 0, ADCON0bits.ADCS1 = 0,ADCON0bits.ADCS
      +                          0 = 1;
  1346  108E  1683               	bsf	3,5	;RP0=1, select bank3
  1347  108F  1703               	bsf	3,6	;RP1=1, select bank3
  1348  1090  0834               	movf	(_setPoint+3)^(0+384),w
  1349  1091  1283               	bcf	3,5	;RP0=0, select bank0
  1350  1092  1303               	bcf	3,6	;RP1=0, select bank0
  1351  1093  00EB               	movwf	___fladd@b+3
  1352  1094  1683               	bsf	3,5	;RP0=1, select bank3
  1353  1095  1703               	bsf	3,6	;RP1=1, select bank3
  1354  1096  0833               	movf	(_setPoint+2)^(0+384),w
  1355  1097  1283               	bcf	3,5	;RP0=0, select bank0
  1356  1098  1303               	bcf	3,6	;RP1=0, select bank0
  1357  1099  00EA               	movwf	___fladd@b+2
  1358  109A  1683               	bsf	3,5	;RP0=1, select bank3
  1359  109B  1703               	bsf	3,6	;RP1=1, select bank3
  1360  109C  0832               	movf	(_setPoint+1)^(0+384),w
  1361  109D  1283               	bcf	3,5	;RP0=0, select bank0
  1362  109E  1303               	bcf	3,6	;RP1=0, select bank0
  1363  109F  00E9               	movwf	___fladd@b+1
  1364  10A0  1683               	bsf	3,5	;RP0=1, select bank3
  1365  10A1  1703               	bsf	3,6	;RP1=1, select bank3
  1366  10A2  0831               	movf	_setPoint^(0+384),w
  1367  10A3  1283               	bcf	3,5	;RP0=0, select bank0
  1368  10A4  1303               	bcf	3,6	;RP1=0, select bank0
  1369  10A5  00E8               	movwf	___fladd@b
  1370  10A6  303F               	movlw	63
  1371  10A7  00BD               	movwf	___flmul@b+3
  1372  10A8  3000               	movlw	0
  1373  10A9  00BC               	movwf	___flmul@b+2
  1374  10AA  3000               	movlw	0
  1375  10AB  00BB               	movwf	___flmul@b+1
  1376  10AC  3000               	movlw	0
  1377  10AD  00BA               	movwf	___flmul@b
  1378  10AE  1683               	bsf	3,5	;RP0=1, select bank3
  1379  10AF  1703               	bsf	3,6	;RP1=1, select bank3
  1380  10B0  082F               	movf	_tmp^(0+384),w
  1381  10B1  1283               	bcf	3,5	;RP0=0, select bank0
  1382  10B2  1303               	bcf	3,6	;RP1=0, select bank0
  1383  10B3  00AC               	movwf	___xxtofl@val
  1384  10B4  1683               	bsf	3,5	;RP0=1, select bank3
  1385  10B5  1703               	bsf	3,6	;RP1=1, select bank3
  1386  10B6  0830               	movf	(_tmp+1)^(0+384),w
  1387  10B7  1283               	bcf	3,5	;RP0=0, select bank0
  1388  10B8  1303               	bcf	3,6	;RP1=0, select bank0
  1389  10B9  00AD               	movwf	___xxtofl@val+1
  1390  10BA  3000               	movlw	0
  1391  10BB  1BAD               	btfsc	___xxtofl@val+1,7
  1392  10BC  30FF               	movlw	255
  1393  10BD  00AE               	movwf	___xxtofl@val+2
  1394  10BE  00AF               	movwf	___xxtofl@val+3
  1395  10BF  3001               	movlw	1
  1396  10C0  160A  158A  25C9  160A  118A  	fcall	___xxtofl
  1397  10C5  1283               	bcf	3,5	;RP0=0, select bank0
  1398  10C6  1303               	bcf	3,6	;RP1=0, select bank0
  1399  10C7  082F               	movf	?___xxtofl+3,w
  1400  10C8  00C1               	movwf	___flmul@a+3
  1401  10C9  082E               	movf	?___xxtofl+2,w
  1402  10CA  00C0               	movwf	___flmul@a+2
  1403  10CB  082D               	movf	?___xxtofl+1,w
  1404  10CC  00BF               	movwf	___flmul@a+1
  1405  10CD  082C               	movf	?___xxtofl,w
  1406  10CE  00BE               	movwf	___flmul@a
  1407  10CF  160A  118A  249F  160A  118A  	fcall	___flmul
  1408  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  1409  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  1410  10D6  083D               	movf	?___flmul+3,w
  1411  10D7  00EF               	movwf	___fladd@a+3
  1412  10D8  083C               	movf	?___flmul+2,w
  1413  10D9  00EE               	movwf	___fladd@a+2
  1414  10DA  083B               	movf	?___flmul+1,w
  1415  10DB  00ED               	movwf	___fladd@a+1
  1416  10DC  083A               	movf	?___flmul,w
  1417  10DD  00EC               	movwf	___fladd@a
  1418  10DE  120A  158A  247C  160A  118A  	fcall	___fladd
  1419  10E3  1283               	bcf	3,5	;RP0=0, select bank0
  1420  10E4  1303               	bcf	3,6	;RP1=0, select bank0
  1421  10E5  086B               	movf	?___fladd+3,w
  1422  10E6  1683               	bsf	3,5	;RP0=1, select bank3
  1423  10E7  1703               	bsf	3,6	;RP1=1, select bank3
  1424  10E8  00B4               	movwf	(_setPoint+3)^(0+384)
  1425  10E9  1283               	bcf	3,5	;RP0=0, select bank0
  1426  10EA  1303               	bcf	3,6	;RP1=0, select bank0
  1427  10EB  086A               	movf	?___fladd+2,w
  1428  10EC  1683               	bsf	3,5	;RP0=1, select bank3
  1429  10ED  1703               	bsf	3,6	;RP1=1, select bank3
  1430  10EE  00B3               	movwf	(_setPoint+2)^(0+384)
  1431  10EF  1283               	bcf	3,5	;RP0=0, select bank0
  1432  10F0  1303               	bcf	3,6	;RP1=0, select bank0
  1433  10F1  0869               	movf	?___fladd+1,w
  1434  10F2  1683               	bsf	3,5	;RP0=1, select bank3
  1435  10F3  1703               	bsf	3,6	;RP1=1, select bank3
  1436  10F4  00B2               	movwf	(_setPoint+1)^(0+384)
  1437  10F5  1283               	bcf	3,5	;RP0=0, select bank0
  1438  10F6  1303               	bcf	3,6	;RP1=0, select bank0
  1439  10F7  0868               	movf	?___fladd,w
  1440  10F8  1683               	bsf	3,5	;RP0=1, select bank3
  1441  10F9  1703               	bsf	3,6	;RP1=1, select bank3
  1442  10FA  00B1               	movwf	_setPoint^(0+384)
  1443  10FB                     l4704:
  1444                           
  1445                           ;main.c: 87: 
  1446  10FB  01AF               	clrf	_tmp^(0+384)
  1447  10FC  01B0               	clrf	(_tmp+1)^(0+384)
  1448  10FD                     l4706:
  1449                           
  1450                           ;main.c: 89: 
  1451  10FD  032D               	decf	_samp^(0+384),w
  1452  10FE  042E               	iorwf	(_samp+1)^(0+384),w
  1453  10FF  1D03               	btfss	3,2
  1454  1100  2902               	goto	u8281
  1455  1101  2903               	goto	u8280
  1456  1102                     u8281:
  1457  1102  2911               	goto	l4712
  1458  1103                     u8280:
  1459  1103                     l4708:
  1460                           
  1461                           ;main.c: 90:     ADCON1bits.ADFM = 1;;main.c: 91: 
  1462  1103  160A  158A  251A  160A  118A  	fcall	_ReadTemp
  1463                           
  1464                           ;main.c: 92:     ADCON1bits.PCFG3 = 1, ADCON1bits.PCFG2 = 1, ADCON1bits.PCFG1 = 1, ADCON
      +                          1bits.PCFG0 = 0;
  1465  1108  120A  158A  2024  160A  118A  	fcall	_Cal_PID
  1466  110D                     l4710:
  1467                           
  1468                           ;main.c: 93: 
  1469  110D  1683               	bsf	3,5	;RP0=1, select bank3
  1470  110E  1703               	bsf	3,6	;RP1=1, select bank3
  1471  110F  01AD               	clrf	_samp^(0+384)
  1472  1110  01AE               	clrf	(_samp+1)^(0+384)
  1473  1111                     l4712:
  1474                           
  1475                           ;main.c: 97: void ReadTemp (void)
  1476  1111  120A  118A  2027  160A  118A  	fcall	_Lcd_Clear
  1477  1116                     l4714:
  1478                           
  1479                           ;main.c: 98: {
  1480  1116  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1481  1117  1683               	bsf	3,5	;RP0=1, select bank1
  1482  1118  1303               	bcf	3,6	;RP1=0, select bank1
  1483  1119  00C9               	movwf	??_main^(0+128)
  1484  111A  0849               	movf	??_main^(0+128),w
  1485  111B  00BF               	movwf	sprintf@f^(0+128)
  1486  111C  1683               	bsf	3,5	;RP0=1, select bank3
  1487  111D  1703               	bsf	3,6	;RP1=1, select bank3
  1488  111E  0834               	movf	(_setPoint+3)^(0+384),w
  1489  111F  1683               	bsf	3,5	;RP0=1, select bank1
  1490  1120  1303               	bcf	3,6	;RP1=0, select bank1
  1491  1121  00C3               	movwf	((?_sprintf+3)^(0+128)+1)
  1492  1122  1683               	bsf	3,5	;RP0=1, select bank3
  1493  1123  1703               	bsf	3,6	;RP1=1, select bank3
  1494  1124  0833               	movf	(_setPoint+2)^(0+384),w
  1495  1125  1683               	bsf	3,5	;RP0=1, select bank1
  1496  1126  1303               	bcf	3,6	;RP1=0, select bank1
  1497  1127  00C2               	movwf	((?_sprintf+2)^(0+128)+1)
  1498  1128  1683               	bsf	3,5	;RP0=1, select bank3
  1499  1129  1703               	bsf	3,6	;RP1=1, select bank3
  1500  112A  0832               	movf	(_setPoint+1)^(0+384),w
  1501  112B  1683               	bsf	3,5	;RP0=1, select bank1
  1502  112C  1303               	bcf	3,6	;RP1=0, select bank1
  1503  112D  00C1               	movwf	((?_sprintf+1)^(0+128)+1)
  1504  112E  1683               	bsf	3,5	;RP0=1, select bank3
  1505  112F  1703               	bsf	3,6	;RP1=1, select bank3
  1506  1130  0831               	movf	_setPoint^(0+384),w
  1507  1131  1683               	bsf	3,5	;RP0=1, select bank1
  1508  1132  1303               	bcf	3,6	;RP1=0, select bank1
  1509  1133  00C0               	movwf	(?_sprintf^(0+128)+1)
  1510  1134  30CA               	movlw	(low (main@str| 0))& (0+255)
  1511  1135  160A  118A  2182  160A  118A  	fcall	_sprintf
  1512  113A                     l4716:
  1513                           
  1514                           ;main.c: 99:     unsigned int ADC_value = 0;
  1515  113A  1283               	bcf	3,5	;RP0=0, select bank0
  1516  113B  1303               	bcf	3,6	;RP1=0, select bank0
  1517  113C  01A2               	clrf	Lcd_Set_Cursor@b
  1518  113D  0AA2               	incf	Lcd_Set_Cursor@b,f
  1519  113E  3001               	movlw	1
  1520  113F  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1521  1144                     l4718:
  1522                           
  1523                           ;main.c: 100:     ADCON0bits.GO_nDONE = 1;
  1524  1144  30CA               	movlw	(low (main@str| 0))& (0+255)
  1525  1145  120A  118A  206B  160A  118A  	fcall	_Lcd_Write_String
  1526  114A                     l4720:
  1527                           
  1528                           ;main.c: 101:     while(ADCON0bits.GO_nDONE);
  1529  114A  309E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1530  114B  1683               	bsf	3,5	;RP0=1, select bank1
  1531  114C  1303               	bcf	3,6	;RP1=0, select bank1
  1532  114D  00C9               	movwf	??_main^(0+128)
  1533  114E  0849               	movf	??_main^(0+128),w
  1534  114F  00BF               	movwf	sprintf@f^(0+128)
  1535  1150  1683               	bsf	3,5	;RP0=1, select bank3
  1536  1151  1703               	bsf	3,6	;RP1=1, select bank3
  1537  1152  082C               	movf	(_temp+3)^(0+384),w
  1538  1153  1683               	bsf	3,5	;RP0=1, select bank1
  1539  1154  1303               	bcf	3,6	;RP1=0, select bank1
  1540  1155  00C3               	movwf	((?_sprintf+3)^(0+128)+1)
  1541  1156  1683               	bsf	3,5	;RP0=1, select bank3
  1542  1157  1703               	bsf	3,6	;RP1=1, select bank3
  1543  1158  082B               	movf	(_temp+2)^(0+384),w
  1544  1159  1683               	bsf	3,5	;RP0=1, select bank1
  1545  115A  1303               	bcf	3,6	;RP1=0, select bank1
  1546  115B  00C2               	movwf	((?_sprintf+2)^(0+128)+1)
  1547  115C  1683               	bsf	3,5	;RP0=1, select bank3
  1548  115D  1703               	bsf	3,6	;RP1=1, select bank3
  1549  115E  082A               	movf	(_temp+1)^(0+384),w
  1550  115F  1683               	bsf	3,5	;RP0=1, select bank1
  1551  1160  1303               	bcf	3,6	;RP1=0, select bank1
  1552  1161  00C1               	movwf	((?_sprintf+1)^(0+128)+1)
  1553  1162  1683               	bsf	3,5	;RP0=1, select bank3
  1554  1163  1703               	bsf	3,6	;RP1=1, select bank3
  1555  1164  0829               	movf	_temp^(0+384),w
  1556  1165  1683               	bsf	3,5	;RP0=1, select bank1
  1557  1166  1303               	bcf	3,6	;RP1=0, select bank1
  1558  1167  00C0               	movwf	(?_sprintf^(0+128)+1)
  1559  1168  30CA               	movlw	(low (main@str| 0))& (0+255)
  1560  1169  160A  118A  2182  160A  118A  	fcall	_sprintf
  1561  116E                     l4722:
  1562                           
  1563                           ;main.c: 102:     ADC_value = ADRESH*256 + ADRESL;
  1564  116E  1283               	bcf	3,5	;RP0=0, select bank0
  1565  116F  1303               	bcf	3,6	;RP1=0, select bank0
  1566  1170  01A2               	clrf	Lcd_Set_Cursor@b
  1567  1171  0AA2               	incf	Lcd_Set_Cursor@b,f
  1568  1172  3002               	movlw	2
  1569  1173  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1570  1178                     l4724:
  1571                           
  1572                           ;main.c: 103:     unsigned int voltage = 5000.0f / 1023 * ADC_value;
  1573  1178  30CA               	movlw	(low (main@str| 0))& (0+255)
  1574  1179  120A  118A  206B  160A  118A  	fcall	_Lcd_Write_String
  1575  117E  288E               	goto	l4702
  1576  117F  120A  118A  2808   	ljmp	start
  1577  1182                     __end_of_main:
  1578                           
  1579                           	psect	text1
  1580  1182                     __ptext1:	
  1581 ;; *************** function _sprintf *****************
  1582 ;; Defined at:
  1583 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  sp              1    wreg     PTR unsigned char 
  1586 ;;		 -> main@str(20), 
  1587 ;;  f               1   31[BANK1 ] PTR const unsigned char 
  1588 ;;		 -> STR_2(13), STR_1(13), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  sp              1   17[BANK3 ] PTR unsigned char 
  1591 ;;		 -> main@str(20), 
  1592 ;;  fval            4   20[BANK3 ] PTR unsigned char 
  1593 ;;  tmpval          4   13[BANK3 ] struct .
  1594 ;;  val             4    7[BANK3 ] unsigned long 
  1595 ;;  prec            2   18[BANK3 ] int 
  1596 ;;  eexp            2   11[BANK3 ] int 
  1597 ;;  flag            2    5[BANK3 ] unsigned short 
  1598 ;;  cp              2    0        PTR const unsigned char 
  1599 ;;  len             2    0        unsigned int 
  1600 ;;  width           2    0        int 
  1601 ;;  c               1   24[BANK3 ] unsigned char 
  1602 ;;  ap              1    4[BANK3 ] PTR void [1]
  1603 ;;		 -> ?_sprintf(2), 
  1604 ;;  d               1    0        unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2   31[BANK1 ] int 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       5       0       0
  1615 ;;      Locals:         0       0       0      25       0
  1616 ;;      Temps:          0       0       5       0       0
  1617 ;;      Totals:         0       0      10      25       0
  1618 ;;Total ram usage:       35 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    4
  1621 ;; This function calls:
  1622 ;;		___awdiv
  1623 ;;		___fladd
  1624 ;;		___fleq
  1625 ;;		___flge
  1626 ;;		___flmul
  1627 ;;		___flneg
  1628 ;;		___flsub
  1629 ;;		___fltol
  1630 ;;		___lldiv
  1631 ;;		___llmod
  1632 ;;		___wmul
  1633 ;;		___xxtofl
  1634 ;;		__div_to_l_
  1635 ;;		__tdiv_to_l_
  1636 ;;		_fround
  1637 ;;		_isdigit
  1638 ;;		_scale
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _sprintf
  1646  1182                     _sprintf:
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1650                           ;sprintf@sp stored from wreg
  1651  1182  1683               	bsf	3,5	;RP0=1, select bank3
  1652  1183  1703               	bsf	3,6	;RP1=1, select bank3
  1653  1184  00A1               	movwf	sprintf@sp^(0+384)
  1654  1185                     l4456:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1657  1185  30C0               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1658  1186  1683               	bsf	3,5	;RP0=1, select bank1
  1659  1187  1303               	bcf	3,6	;RP1=0, select bank1
  1660  1188  00C4               	movwf	??_sprintf^(0+128)
  1661  1189  0844               	movf	??_sprintf^(0+128),w
  1662  118A  1683               	bsf	3,5	;RP0=1, select bank3
  1663  118B  1703               	bsf	3,6	;RP1=1, select bank3
  1664  118C  0094               	movwf	sprintf@ap^(0+384)
  1665  118D                     L1:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1668  118D  120A  118A  2F9C   	goto	l4650
  1669  1190                     l4458:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1672  1190  3025               	movlw	37
  1673  1191  0628               	xorwf	sprintf@c^(0+384),w
  1674  1192  1903               	btfsc	3,2
  1675  1193  2995               	goto	u7931
  1676  1194  2996               	goto	u7930
  1677  1195                     u7931:
  1678  1195  29AA               	goto	l4464
  1679  1196                     u7930:
  1680  1196                     l4460:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1683  1196  0828               	movf	sprintf@c^(0+384),w
  1684  1197  1683               	bsf	3,5	;RP0=1, select bank1
  1685  1198  1303               	bcf	3,6	;RP1=0, select bank1
  1686  1199  00C4               	movwf	??_sprintf^(0+128)
  1687  119A  1683               	bsf	3,5	;RP0=1, select bank3
  1688  119B  1703               	bsf	3,6	;RP1=1, select bank3
  1689  119C  0821               	movf	sprintf@sp^(0+384),w
  1690  119D  0084               	movwf	4
  1691  119E  1683               	bsf	3,5	;RP0=1, select bank1
  1692  119F  1303               	bcf	3,6	;RP1=0, select bank1
  1693  11A0  0844               	movf	??_sprintf^(0+128),w
  1694  11A1  1383               	bcf	3,7	;select IRP bank0
  1695  11A2  0080               	movwf	0
  1696  11A3                     l4462:
  1697  11A3  3001               	movlw	1
  1698  11A4  00C4               	movwf	??_sprintf^(0+128)
  1699  11A5  0844               	movf	??_sprintf^(0+128),w
  1700  11A6  1683               	bsf	3,5	;RP0=1, select bank3
  1701  11A7  1703               	bsf	3,6	;RP1=1, select bank3
  1702  11A8  07A1               	addwf	sprintf@sp^(0+384),f
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1705  11A9  298D               	goto	L1
  1706  11AA                     l4464:
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1709  11AA  0195               	clrf	sprintf@flag^(0+384)
  1710  11AB  0196               	clrf	(sprintf@flag+1)^(0+384)
  1711  11AC                     l4466:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1714  11AC  1683               	bsf	3,5	;RP0=1, select bank1
  1715  11AD  1303               	bcf	3,6	;RP1=0, select bank1
  1716  11AE  083F               	movf	sprintf@f^(0+128),w
  1717  11AF  0084               	movwf	4
  1718  11B0  160A  158A  2000  160A  118A  	fcall	stringdir
  1719  11B5  3A2E               	xorlw	46
  1720  11B6  1D03               	skipz
  1721  11B7  29B9               	goto	u7941
  1722  11B8  29BA               	goto	u7940
  1723  11B9                     u7941:
  1724  11B9  2A1E               	goto	l4482
  1725  11BA                     u7940:
  1726  11BA                     l4468:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1729  11BA  1683               	bsf	3,5	;RP0=1, select bank3
  1730  11BB  1703               	bsf	3,6	;RP1=1, select bank3
  1731  11BC  1716               	bsf	(sprintf@flag^(0+384)+1),6
  1732  11BD                     l4470:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1735  11BD  3001               	movlw	1
  1736  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  1737  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  1738  11C0  00C4               	movwf	??_sprintf^(0+128)
  1739  11C1  0844               	movf	??_sprintf^(0+128),w
  1740  11C2  07BF               	addwf	sprintf@f^(0+128),f
  1741  11C3                     l4472:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1744  11C3  1683               	bsf	3,5	;RP0=1, select bank3
  1745  11C4  1703               	bsf	3,6	;RP1=1, select bank3
  1746  11C5  01A2               	clrf	sprintf@prec^(0+384)
  1747  11C6  01A3               	clrf	(sprintf@prec+1)^(0+384)
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1750  11C7  2A0C               	goto	l4480
  1751  11C8                     l4474:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1754  11C8  300A               	movlw	10
  1755  11C9  1283               	bcf	3,5	;RP0=0, select bank0
  1756  11CA  1303               	bcf	3,6	;RP1=0, select bank0
  1757  11CB  00AC               	movwf	___wmul@multiplier
  1758  11CC  3000               	movlw	0
  1759  11CD  00AD               	movwf	___wmul@multiplier+1
  1760  11CE  1683               	bsf	3,5	;RP0=1, select bank3
  1761  11CF  1703               	bsf	3,6	;RP1=1, select bank3
  1762  11D0  0823               	movf	(sprintf@prec+1)^(0+384),w
  1763  11D1  1283               	bcf	3,5	;RP0=0, select bank0
  1764  11D2  1303               	bcf	3,6	;RP1=0, select bank0
  1765  11D3  00AF               	movwf	___wmul@multiplicand+1
  1766  11D4  1683               	bsf	3,5	;RP0=1, select bank3
  1767  11D5  1703               	bsf	3,6	;RP1=1, select bank3
  1768  11D6  0822               	movf	sprintf@prec^(0+384),w
  1769  11D7  1283               	bcf	3,5	;RP0=0, select bank0
  1770  11D8  1303               	bcf	3,6	;RP1=0, select bank0
  1771  11D9  00AE               	movwf	___wmul@multiplicand
  1772  11DA  120A  118A  2000  160A  118A  	fcall	___wmul
  1773  11DF  1283               	bcf	3,5	;RP0=0, select bank0
  1774  11E0  1303               	bcf	3,6	;RP1=0, select bank0
  1775  11E1  082D               	movf	?___wmul+1,w
  1776  11E2  1683               	bsf	3,5	;RP0=1, select bank3
  1777  11E3  1703               	bsf	3,6	;RP1=1, select bank3
  1778  11E4  00A3               	movwf	(sprintf@prec+1)^(0+384)
  1779  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  1780  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  1781  11E7  082C               	movf	?___wmul,w
  1782  11E8  1683               	bsf	3,5	;RP0=1, select bank3
  1783  11E9  1703               	bsf	3,6	;RP1=1, select bank3
  1784  11EA  00A2               	movwf	sprintf@prec^(0+384)
  1785  11EB                     l4476:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1788  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  1789  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  1790  11ED  083F               	movf	sprintf@f^(0+128),w
  1791  11EE  0084               	movwf	4
  1792  11EF  160A  158A  2000  160A  118A  	fcall	stringdir
  1793  11F4  3ED0               	addlw	208
  1794  11F5  00C4               	movwf	??_sprintf^(0+128)
  1795  11F6  30FF               	movlw	255
  1796  11F7  1803               	skipnc
  1797  11F8  3000               	movlw	0
  1798  11F9  00C5               	movwf	(??_sprintf^(0+128)+1)
  1799  11FA  0844               	movf	??_sprintf^(0+128),w
  1800  11FB  1683               	bsf	3,5	;RP0=1, select bank3
  1801  11FC  1703               	bsf	3,6	;RP1=1, select bank3
  1802  11FD  07A2               	addwf	sprintf@prec^(0+384),f
  1803  11FE  1803               	skipnc
  1804  11FF  0AA3               	incf	(sprintf@prec+1)^(0+384),f
  1805  1200  1683               	bsf	3,5	;RP0=1, select bank1
  1806  1201  1303               	bcf	3,6	;RP1=0, select bank1
  1807  1202  0845               	movf	(??_sprintf+1)^(0+128),w
  1808  1203  1683               	bsf	3,5	;RP0=1, select bank3
  1809  1204  1703               	bsf	3,6	;RP1=1, select bank3
  1810  1205  07A3               	addwf	(sprintf@prec+1)^(0+384),f
  1811  1206                     l4478:
  1812  1206  3001               	movlw	1
  1813  1207  1683               	bsf	3,5	;RP0=1, select bank1
  1814  1208  1303               	bcf	3,6	;RP1=0, select bank1
  1815  1209  00C4               	movwf	??_sprintf^(0+128)
  1816  120A  0844               	movf	??_sprintf^(0+128),w
  1817  120B  07BF               	addwf	sprintf@f^(0+128),f
  1818  120C                     l4480:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1821  120C  1303               	bcf	3,6	;RP1=0, select bank1
  1822  120D  083F               	movf	sprintf@f^(0+128),w
  1823  120E  0084               	movwf	4
  1824  120F  160A  158A  2000  160A  118A  	fcall	stringdir
  1825  1214  120A  118A  20F5  160A  118A  	fcall	_isdigit
  1826  1219  1803               	btfsc	3,0
  1827  121A  2A1C               	goto	u7951
  1828  121B  2A1D               	goto	u7950
  1829  121C                     u7951:
  1830  121C  29C8               	goto	l4474
  1831  121D                     u7950:
  1832  121D  2A28               	goto	l4488
  1833  121E                     l4482:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1836  121E  1683               	bsf	3,5	;RP0=1, select bank3
  1837  121F  1703               	bsf	3,6	;RP1=1, select bank3
  1838  1220  01A2               	clrf	sprintf@prec^(0+384)
  1839  1221  01A3               	clrf	(sprintf@prec+1)^(0+384)
  1840  1222                     l4484:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1843  1222  1616               	bsf	(sprintf@flag^(0+384)+1),4
  1844  1223  2A28               	goto	l4488
  1845  1224                     l304:	
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1847                           
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1850  1224  1683               	bsf	3,5	;RP0=1, select bank3
  1851  1225  1703               	bsf	3,6	;RP1=1, select bank3
  1852  1226  1516               	bsf	(sprintf@flag^(0+384)+1),2
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1855  1227  2A48               	goto	l4490
  1856  1228                     l4488:
  1857  1228  3001               	movlw	1
  1858  1229  1683               	bsf	3,5	;RP0=1, select bank1
  1859  122A  1303               	bcf	3,6	;RP1=0, select bank1
  1860  122B  07BF               	addwf	sprintf@f^(0+128),f
  1861  122C  30FF               	movlw	-1
  1862  122D  073F               	addwf	sprintf@f^(0+128),w
  1863  122E  0084               	movwf	4
  1864  122F  160A  158A  2000  160A  118A  	fcall	stringdir
  1865  1234  1683               	bsf	3,5	;RP0=1, select bank3
  1866  1235  1703               	bsf	3,6	;RP1=1, select bank3
  1867  1236  00A8               	movwf	sprintf@c^(0+384)
  1868  1237  1683               	bsf	3,5	;RP0=1, select bank1
  1869  1238  1303               	bcf	3,6	;RP1=0, select bank1
  1870  1239  00C4               	movwf	??_sprintf^(0+128)
  1871  123A  01C5               	clrf	(??_sprintf^(0+128)+1)
  1872                           
  1873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 1, Range of values is 0 to 0
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte            4     3 (average)
  1879                           ; direct_byte           11     8 (fixed)
  1880                           ; jumptable            260     6 (fixed)
  1881                           ;	Chosen strategy is simple_byte
  1882  123B  0845               	movf	(??_sprintf+1)^(0+128),w
  1883  123C  3A00               	xorlw	0	; case 0
  1884  123D  1903               	skipnz
  1885  123E  2A40               	goto	l4756
  1886  123F  298D               	goto	L1
  1887  1240                     l4756:
  1888                           
  1889                           ; Switch size 1, requested type "simple"
  1890                           ; Number of cases is 2, Range of values is 0 to 102
  1891                           ; switch strategies available:
  1892                           ; Name         Instructions Cycles
  1893                           ; simple_byte            7     4 (average)
  1894                           ; jumptable            260     6 (fixed)
  1895                           ;	Chosen strategy is simple_byte
  1896  1240  0844               	movf	??_sprintf^(0+128),w
  1897  1241  3A00               	xorlw	0	; case 0
  1898  1242  1903               	skipnz
  1899  1243  2C9C               	goto	L3
  1900  1244  3A66               	xorlw	102	; case 102
  1901  1245  1903               	skipnz
  1902  1246  2A24               	goto	l304
  1903  1247  298D               	goto	L1
  1904  1248                     l4490:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1907  1248  3000               	movlw	0
  1908  1249  0515               	andwf	sprintf@flag^(0+384),w
  1909  124A  1683               	bsf	3,5	;RP0=1, select bank1
  1910  124B  1303               	bcf	3,6	;RP1=0, select bank1
  1911  124C  00C4               	movwf	??_sprintf^(0+128)
  1912  124D  3007               	movlw	7
  1913  124E  1683               	bsf	3,5	;RP0=1, select bank3
  1914  124F  1703               	bsf	3,6	;RP1=1, select bank3
  1915  1250  0516               	andwf	(sprintf@flag+1)^(0+384),w
  1916  1251  1683               	bsf	3,5	;RP0=1, select bank1
  1917  1252  1303               	bcf	3,6	;RP1=0, select bank1
  1918  1253  00C5               	movwf	(??_sprintf+1)^(0+128)
  1919  1254  0844               	movf	??_sprintf^(0+128),w
  1920  1255  0445               	iorwf	(??_sprintf^(0+128)+1),w
  1921  1256  1903               	btfsc	3,2
  1922  1257  2A59               	goto	u7961
  1923  1258  2A5C               	goto	u7960
  1924  1259                     u7961:
  1925  1259  120A  118A  2F45   	goto	l4632
  1926  125C                     u7960:
  1927  125C                     l4492:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1930  125C  1683               	bsf	3,5	;RP0=1, select bank3
  1931  125D  1703               	bsf	3,6	;RP1=1, select bank3
  1932  125E  1E16               	btfss	(sprintf@flag+1)^(0+384),4
  1933  125F  2A61               	goto	u7971
  1934  1260  2A62               	goto	u7970
  1935  1261                     u7971:
  1936  1261  2A66               	goto	l4496
  1937  1262                     u7970:
  1938  1262                     l4494:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1941  1262  3006               	movlw	6
  1942  1263  00A2               	movwf	sprintf@prec^(0+384)
  1943  1264  3000               	movlw	0
  1944  1265  00A3               	movwf	(sprintf@prec^(0+384)+1)
  1945  1266                     l4496:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1948  1266  0814               	movf	sprintf@ap^(0+384),w
  1949  1267  0084               	movwf	4
  1950  1268  1383               	bcf	3,7	;select IRP bank0
  1951  1269  0800               	movf	0,w
  1952  126A  00A4               	movwf	sprintf@fval^(0+384)
  1953  126B  0A84               	incf	4,f
  1954  126C  0800               	movf	0,w
  1955  126D  00A5               	movwf	(sprintf@fval+1)^(0+384)
  1956  126E  0A84               	incf	4,f
  1957  126F  0800               	movf	0,w
  1958  1270  00A6               	movwf	(sprintf@fval+2)^(0+384)
  1959  1271  0A84               	incf	4,f
  1960  1272  0800               	movf	0,w
  1961  1273  00A7               	movwf	(sprintf@fval+3)^(0+384)
  1962  1274                     l4498:
  1963  1274  3004               	movlw	4
  1964  1275  1683               	bsf	3,5	;RP0=1, select bank1
  1965  1276  1303               	bcf	3,6	;RP1=0, select bank1
  1966  1277  00C4               	movwf	??_sprintf^(0+128)
  1967  1278  0844               	movf	??_sprintf^(0+128),w
  1968  1279  1683               	bsf	3,5	;RP0=1, select bank3
  1969  127A  1703               	bsf	3,6	;RP1=1, select bank3
  1970  127B  0794               	addwf	sprintf@ap^(0+384),f
  1971  127C                     l4500:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1974  127C  0827               	movf	(sprintf@fval+3)^(0+384),w
  1975  127D  1283               	bcf	3,5	;RP0=0, select bank0
  1976  127E  1303               	bcf	3,6	;RP1=0, select bank0
  1977  127F  00A3               	movwf	___flge@ff1+3
  1978  1280  1683               	bsf	3,5	;RP0=1, select bank3
  1979  1281  1703               	bsf	3,6	;RP1=1, select bank3
  1980  1282  0826               	movf	(sprintf@fval+2)^(0+384),w
  1981  1283  1283               	bcf	3,5	;RP0=0, select bank0
  1982  1284  1303               	bcf	3,6	;RP1=0, select bank0
  1983  1285  00A2               	movwf	___flge@ff1+2
  1984  1286  1683               	bsf	3,5	;RP0=1, select bank3
  1985  1287  1703               	bsf	3,6	;RP1=1, select bank3
  1986  1288  0825               	movf	(sprintf@fval+1)^(0+384),w
  1987  1289  1283               	bcf	3,5	;RP0=0, select bank0
  1988  128A  1303               	bcf	3,6	;RP1=0, select bank0
  1989  128B  00A1               	movwf	___flge@ff1+1
  1990  128C  1683               	bsf	3,5	;RP0=1, select bank3
  1991  128D  1703               	bsf	3,6	;RP1=1, select bank3
  1992  128E  0824               	movf	sprintf@fval^(0+384),w
  1993  128F  1283               	bcf	3,5	;RP0=0, select bank0
  1994  1290  1303               	bcf	3,6	;RP1=0, select bank0
  1995  1291  00A0               	movwf	___flge@ff1
  1996  1292  3000               	movlw	0
  1997  1293  00A7               	movwf	___flge@ff2+3
  1998  1294  3000               	movlw	0
  1999  1295  00A6               	movwf	___flge@ff2+2
  2000  1296  3000               	movlw	0
  2001  1297  00A5               	movwf	___flge@ff2+1
  2002  1298  3000               	movlw	0
  2003  1299  00A4               	movwf	___flge@ff2
  2004  129A  160A  158A  2476  160A  118A  	fcall	___flge
  2005  129F  1803               	btfsc	3,0
  2006  12A0  2AA2               	goto	u7981
  2007  12A1  2AA3               	goto	u7980
  2008  12A2                     u7981:
  2009  12A2  2ADC               	goto	l4506
  2010  12A3                     u7980:
  2011  12A3                     l4502:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2014  12A3  1683               	bsf	3,5	;RP0=1, select bank3
  2015  12A4  1703               	bsf	3,6	;RP1=1, select bank3
  2016  12A5  0827               	movf	(sprintf@fval+3)^(0+384),w
  2017  12A6  1283               	bcf	3,5	;RP0=0, select bank0
  2018  12A7  1303               	bcf	3,6	;RP1=0, select bank0
  2019  12A8  00A3               	movwf	___flneg@f1+3
  2020  12A9  1683               	bsf	3,5	;RP0=1, select bank3
  2021  12AA  1703               	bsf	3,6	;RP1=1, select bank3
  2022  12AB  0826               	movf	(sprintf@fval+2)^(0+384),w
  2023  12AC  1283               	bcf	3,5	;RP0=0, select bank0
  2024  12AD  1303               	bcf	3,6	;RP1=0, select bank0
  2025  12AE  00A2               	movwf	___flneg@f1+2
  2026  12AF  1683               	bsf	3,5	;RP0=1, select bank3
  2027  12B0  1703               	bsf	3,6	;RP1=1, select bank3
  2028  12B1  0825               	movf	(sprintf@fval+1)^(0+384),w
  2029  12B2  1283               	bcf	3,5	;RP0=0, select bank0
  2030  12B3  1303               	bcf	3,6	;RP1=0, select bank0
  2031  12B4  00A1               	movwf	___flneg@f1+1
  2032  12B5  1683               	bsf	3,5	;RP0=1, select bank3
  2033  12B6  1703               	bsf	3,6	;RP1=1, select bank3
  2034  12B7  0824               	movf	sprintf@fval^(0+384),w
  2035  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  2036  12B9  1303               	bcf	3,6	;RP1=0, select bank0
  2037  12BA  00A0               	movwf	___flneg@f1
  2038  12BB  160A  158A  20B2  160A  118A  	fcall	___flneg
  2039  12C0  1283               	bcf	3,5	;RP0=0, select bank0
  2040  12C1  1303               	bcf	3,6	;RP1=0, select bank0
  2041  12C2  0823               	movf	?___flneg+3,w
  2042  12C3  1683               	bsf	3,5	;RP0=1, select bank3
  2043  12C4  1703               	bsf	3,6	;RP1=1, select bank3
  2044  12C5  00A7               	movwf	(sprintf@fval+3)^(0+384)
  2045  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  2046  12C7  1303               	bcf	3,6	;RP1=0, select bank0
  2047  12C8  0822               	movf	?___flneg+2,w
  2048  12C9  1683               	bsf	3,5	;RP0=1, select bank3
  2049  12CA  1703               	bsf	3,6	;RP1=1, select bank3
  2050  12CB  00A6               	movwf	(sprintf@fval+2)^(0+384)
  2051  12CC  1283               	bcf	3,5	;RP0=0, select bank0
  2052  12CD  1303               	bcf	3,6	;RP1=0, select bank0
  2053  12CE  0821               	movf	?___flneg+1,w
  2054  12CF  1683               	bsf	3,5	;RP0=1, select bank3
  2055  12D0  1703               	bsf	3,6	;RP1=1, select bank3
  2056  12D1  00A5               	movwf	(sprintf@fval+1)^(0+384)
  2057  12D2  1283               	bcf	3,5	;RP0=0, select bank0
  2058  12D3  1303               	bcf	3,6	;RP1=0, select bank0
  2059  12D4  0820               	movf	?___flneg,w
  2060  12D5  1683               	bsf	3,5	;RP0=1, select bank3
  2061  12D6  1703               	bsf	3,6	;RP1=1, select bank3
  2062  12D7  00A4               	movwf	sprintf@fval^(0+384)
  2063  12D8                     l4504:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2066  12D8  3003               	movlw	3
  2067  12D9  0495               	iorwf	sprintf@flag^(0+384),f
  2068  12DA  3000               	movlw	0
  2069  12DB  0496               	iorwf	(sprintf@flag+1)^(0+384),f
  2070  12DC                     l4506:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2073  12DC  1683               	bsf	3,5	;RP0=1, select bank3
  2074  12DD  1703               	bsf	3,6	;RP1=1, select bank3
  2075  12DE  019B               	clrf	sprintf@eexp^(0+384)
  2076  12DF  019C               	clrf	(sprintf@eexp+1)^(0+384)
  2077  12E0                     l4508:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2080  12E0  0827               	movf	(sprintf@fval+3)^(0+384),w
  2081  12E1  1283               	bcf	3,5	;RP0=0, select bank0
  2082  12E2  1303               	bcf	3,6	;RP1=0, select bank0
  2083  12E3  00A3               	movwf	___fleq@ff1+3
  2084  12E4  1683               	bsf	3,5	;RP0=1, select bank3
  2085  12E5  1703               	bsf	3,6	;RP1=1, select bank3
  2086  12E6  0826               	movf	(sprintf@fval+2)^(0+384),w
  2087  12E7  1283               	bcf	3,5	;RP0=0, select bank0
  2088  12E8  1303               	bcf	3,6	;RP1=0, select bank0
  2089  12E9  00A2               	movwf	___fleq@ff1+2
  2090  12EA  1683               	bsf	3,5	;RP0=1, select bank3
  2091  12EB  1703               	bsf	3,6	;RP1=1, select bank3
  2092  12EC  0825               	movf	(sprintf@fval+1)^(0+384),w
  2093  12ED  1283               	bcf	3,5	;RP0=0, select bank0
  2094  12EE  1303               	bcf	3,6	;RP1=0, select bank0
  2095  12EF  00A1               	movwf	___fleq@ff1+1
  2096  12F0  1683               	bsf	3,5	;RP0=1, select bank3
  2097  12F1  1703               	bsf	3,6	;RP1=1, select bank3
  2098  12F2  0824               	movf	sprintf@fval^(0+384),w
  2099  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  2100  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  2101  12F5  00A0               	movwf	___fleq@ff1
  2102  12F6  3000               	movlw	0
  2103  12F7  00A7               	movwf	___fleq@ff2+3
  2104  12F8  3000               	movlw	0
  2105  12F9  00A6               	movwf	___fleq@ff2+2
  2106  12FA  3000               	movlw	0
  2107  12FB  00A5               	movwf	___fleq@ff2+1
  2108  12FC  3000               	movlw	0
  2109  12FD  00A4               	movwf	___fleq@ff2
  2110  12FE  160A  158A  216A  160A  118A  	fcall	___fleq
  2111  1303  1803               	btfsc	3,0
  2112  1304  2B06               	goto	u7991
  2113  1305  2B07               	goto	u7990
  2114  1306                     u7991:
  2115  1306  2C33               	goto	l4534
  2116  1307                     u7990:
  2117  1307                     l4510:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2120  1307  1003               	clrc
  2121  1308  1683               	bsf	3,5	;RP0=1, select bank3
  2122  1309  1703               	bsf	3,6	;RP1=1, select bank3
  2123  130A  0D26               	rlf	(sprintf@fval+2)^(0+384),w
  2124  130B  0D27               	rlf	(sprintf@fval+3)^(0+384),w
  2125  130C  3E82               	addlw	130
  2126  130D  009B               	movwf	sprintf@eexp^(0+384)
  2127  130E  30FF               	movlw	255
  2128  130F  1803               	skipnc
  2129  1310  3000               	movlw	0
  2130  1311  009C               	movwf	(sprintf@eexp^(0+384)+1)
  2131  1312                     l4512:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2134  1312  30FF               	movlw	255
  2135  1313  079B               	addwf	sprintf@eexp^(0+384),f
  2136  1314  1803               	skipnc
  2137  1315  0A9C               	incf	(sprintf@eexp+1)^(0+384),f
  2138  1316  30FF               	movlw	255
  2139  1317  079C               	addwf	(sprintf@eexp+1)^(0+384),f
  2140  1318                     l4514:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2143  1318  3003               	movlw	3
  2144  1319  1283               	bcf	3,5	;RP0=0, select bank0
  2145  131A  1303               	bcf	3,6	;RP1=0, select bank0
  2146  131B  00AC               	movwf	___wmul@multiplier
  2147  131C  3000               	movlw	0
  2148  131D  00AD               	movwf	___wmul@multiplier+1
  2149  131E  1683               	bsf	3,5	;RP0=1, select bank3
  2150  131F  1703               	bsf	3,6	;RP1=1, select bank3
  2151  1320  081C               	movf	(sprintf@eexp+1)^(0+384),w
  2152  1321  1283               	bcf	3,5	;RP0=0, select bank0
  2153  1322  1303               	bcf	3,6	;RP1=0, select bank0
  2154  1323  00AF               	movwf	___wmul@multiplicand+1
  2155  1324  1683               	bsf	3,5	;RP0=1, select bank3
  2156  1325  1703               	bsf	3,6	;RP1=1, select bank3
  2157  1326  081B               	movf	sprintf@eexp^(0+384),w
  2158  1327  1283               	bcf	3,5	;RP0=0, select bank0
  2159  1328  1303               	bcf	3,6	;RP1=0, select bank0
  2160  1329  00AE               	movwf	___wmul@multiplicand
  2161  132A  120A  118A  2000  160A  118A  	fcall	___wmul
  2162  132F  1283               	bcf	3,5	;RP0=0, select bank0
  2163  1330  1303               	bcf	3,6	;RP1=0, select bank0
  2164  1331  082D               	movf	?___wmul+1,w
  2165  1332  1683               	bsf	3,5	;RP0=1, select bank3
  2166  1333  1703               	bsf	3,6	;RP1=1, select bank3
  2167  1334  009C               	movwf	(sprintf@eexp+1)^(0+384)
  2168  1335  1283               	bcf	3,5	;RP0=0, select bank0
  2169  1336  1303               	bcf	3,6	;RP1=0, select bank0
  2170  1337  082C               	movf	?___wmul,w
  2171  1338  1683               	bsf	3,5	;RP0=1, select bank3
  2172  1339  1703               	bsf	3,6	;RP1=1, select bank3
  2173  133A  009B               	movwf	sprintf@eexp^(0+384)
  2174  133B                     l4516:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2177  133B  300A               	movlw	10
  2178  133C  1283               	bcf	3,5	;RP0=0, select bank0
  2179  133D  1303               	bcf	3,6	;RP1=0, select bank0
  2180  133E  00A6               	movwf	___awdiv@divisor
  2181  133F  3000               	movlw	0
  2182  1340  00A7               	movwf	___awdiv@divisor+1
  2183  1341  1683               	bsf	3,5	;RP0=1, select bank3
  2184  1342  1703               	bsf	3,6	;RP1=1, select bank3
  2185  1343  081C               	movf	(sprintf@eexp+1)^(0+384),w
  2186  1344  1283               	bcf	3,5	;RP0=0, select bank0
  2187  1345  1303               	bcf	3,6	;RP1=0, select bank0
  2188  1346  00A9               	movwf	___awdiv@dividend+1
  2189  1347  1683               	bsf	3,5	;RP0=1, select bank3
  2190  1348  1703               	bsf	3,6	;RP1=1, select bank3
  2191  1349  081B               	movf	sprintf@eexp^(0+384),w
  2192  134A  1283               	bcf	3,5	;RP0=0, select bank0
  2193  134B  1303               	bcf	3,6	;RP1=0, select bank0
  2194  134C  00A8               	movwf	___awdiv@dividend
  2195  134D  160A  158A  2391  160A  118A  	fcall	___awdiv
  2196  1352  1283               	bcf	3,5	;RP0=0, select bank0
  2197  1353  1303               	bcf	3,6	;RP1=0, select bank0
  2198  1354  0827               	movf	?___awdiv+1,w
  2199  1355  1683               	bsf	3,5	;RP0=1, select bank3
  2200  1356  1703               	bsf	3,6	;RP1=1, select bank3
  2201  1357  009C               	movwf	(sprintf@eexp+1)^(0+384)
  2202  1358  1283               	bcf	3,5	;RP0=0, select bank0
  2203  1359  1303               	bcf	3,6	;RP1=0, select bank0
  2204  135A  0826               	movf	?___awdiv,w
  2205  135B  1683               	bsf	3,5	;RP0=1, select bank3
  2206  135C  1703               	bsf	3,6	;RP1=1, select bank3
  2207  135D  009B               	movwf	sprintf@eexp^(0+384)
  2208  135E                     l4518:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2211  135E  1F9C               	btfss	(sprintf@eexp+1)^(0+384),7
  2212  135F  2B61               	goto	u8001
  2213  1360  2B62               	goto	u8000
  2214  1361                     u8001:
  2215  1361  2B68               	goto	l4522
  2216  1362                     u8000:
  2217  1362                     l4520:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2220  1362  30FF               	movlw	255
  2221  1363  079B               	addwf	sprintf@eexp^(0+384),f
  2222  1364  1803               	skipnc
  2223  1365  0A9C               	incf	(sprintf@eexp+1)^(0+384),f
  2224  1366  30FF               	movlw	255
  2225  1367  079C               	addwf	(sprintf@eexp+1)^(0+384),f
  2226  1368                     l4522:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2229  1368  031B               	decf	sprintf@eexp^(0+384),w
  2230  1369  3AFF               	xorlw	255
  2231  136A  120A  158A  2119  160A  118A  	fcall	_scale
  2232  136F  1283               	bcf	3,5	;RP0=0, select bank0
  2233  1370  1303               	bcf	3,6	;RP1=0, select bank0
  2234  1371  0857               	movf	?_scale+3,w
  2235  1372  1683               	bsf	3,5	;RP0=1, select bank3
  2236  1373  1703               	bsf	3,6	;RP1=1, select bank3
  2237  1374  00A0               	movwf	(sprintf@tmpval+3)^(0+384)
  2238  1375  1283               	bcf	3,5	;RP0=0, select bank0
  2239  1376  1303               	bcf	3,6	;RP1=0, select bank0
  2240  1377  0856               	movf	?_scale+2,w
  2241  1378  1683               	bsf	3,5	;RP0=1, select bank3
  2242  1379  1703               	bsf	3,6	;RP1=1, select bank3
  2243  137A  009F               	movwf	(sprintf@tmpval+2)^(0+384)
  2244  137B  1283               	bcf	3,5	;RP0=0, select bank0
  2245  137C  1303               	bcf	3,6	;RP1=0, select bank0
  2246  137D  0855               	movf	?_scale+1,w
  2247  137E  1683               	bsf	3,5	;RP0=1, select bank3
  2248  137F  1703               	bsf	3,6	;RP1=1, select bank3
  2249  1380  009E               	movwf	(sprintf@tmpval+1)^(0+384)
  2250  1381  1283               	bcf	3,5	;RP0=0, select bank0
  2251  1382  1303               	bcf	3,6	;RP1=0, select bank0
  2252  1383  0854               	movf	?_scale,w
  2253  1384  1683               	bsf	3,5	;RP0=1, select bank3
  2254  1385  1703               	bsf	3,6	;RP1=1, select bank3
  2255  1386  009D               	movwf	sprintf@tmpval^(0+384)
  2256  1387                     l4524:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2259  1387  0827               	movf	(sprintf@fval+3)^(0+384),w
  2260  1388  1283               	bcf	3,5	;RP0=0, select bank0
  2261  1389  1303               	bcf	3,6	;RP1=0, select bank0
  2262  138A  00BD               	movwf	___flmul@b+3
  2263  138B  1683               	bsf	3,5	;RP0=1, select bank3
  2264  138C  1703               	bsf	3,6	;RP1=1, select bank3
  2265  138D  0826               	movf	(sprintf@fval+2)^(0+384),w
  2266  138E  1283               	bcf	3,5	;RP0=0, select bank0
  2267  138F  1303               	bcf	3,6	;RP1=0, select bank0
  2268  1390  00BC               	movwf	___flmul@b+2
  2269  1391  1683               	bsf	3,5	;RP0=1, select bank3
  2270  1392  1703               	bsf	3,6	;RP1=1, select bank3
  2271  1393  0825               	movf	(sprintf@fval+1)^(0+384),w
  2272  1394  1283               	bcf	3,5	;RP0=0, select bank0
  2273  1395  1303               	bcf	3,6	;RP1=0, select bank0
  2274  1396  00BB               	movwf	___flmul@b+1
  2275  1397  1683               	bsf	3,5	;RP0=1, select bank3
  2276  1398  1703               	bsf	3,6	;RP1=1, select bank3
  2277  1399  0824               	movf	sprintf@fval^(0+384),w
  2278  139A  1283               	bcf	3,5	;RP0=0, select bank0
  2279  139B  1303               	bcf	3,6	;RP1=0, select bank0
  2280  139C  00BA               	movwf	___flmul@b
  2281  139D  1683               	bsf	3,5	;RP0=1, select bank3
  2282  139E  1703               	bsf	3,6	;RP1=1, select bank3
  2283  139F  0820               	movf	(sprintf@tmpval+3)^(0+384),w
  2284  13A0  1283               	bcf	3,5	;RP0=0, select bank0
  2285  13A1  1303               	bcf	3,6	;RP1=0, select bank0
  2286  13A2  00C1               	movwf	___flmul@a+3
  2287  13A3  1683               	bsf	3,5	;RP0=1, select bank3
  2288  13A4  1703               	bsf	3,6	;RP1=1, select bank3
  2289  13A5  081F               	movf	(sprintf@tmpval+2)^(0+384),w
  2290  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  2291  13A7  1303               	bcf	3,6	;RP1=0, select bank0
  2292  13A8  00C0               	movwf	___flmul@a+2
  2293  13A9  1683               	bsf	3,5	;RP0=1, select bank3
  2294  13AA  1703               	bsf	3,6	;RP1=1, select bank3
  2295  13AB  081E               	movf	(sprintf@tmpval+1)^(0+384),w
  2296  13AC  1283               	bcf	3,5	;RP0=0, select bank0
  2297  13AD  1303               	bcf	3,6	;RP1=0, select bank0
  2298  13AE  00BF               	movwf	___flmul@a+1
  2299  13AF  1683               	bsf	3,5	;RP0=1, select bank3
  2300  13B0  1703               	bsf	3,6	;RP1=1, select bank3
  2301  13B1  081D               	movf	sprintf@tmpval^(0+384),w
  2302  13B2  1283               	bcf	3,5	;RP0=0, select bank0
  2303  13B3  1303               	bcf	3,6	;RP1=0, select bank0
  2304  13B4  00BE               	movwf	___flmul@a
  2305  13B5  160A  118A  249F  160A  118A  	fcall	___flmul
  2306  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  2307  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  2308  13BC  083D               	movf	?___flmul+3,w
  2309  13BD  1683               	bsf	3,5	;RP0=1, select bank3
  2310  13BE  1703               	bsf	3,6	;RP1=1, select bank3
  2311  13BF  00A0               	movwf	(sprintf@tmpval+3)^(0+384)
  2312  13C0  1283               	bcf	3,5	;RP0=0, select bank0
  2313  13C1  1303               	bcf	3,6	;RP1=0, select bank0
  2314  13C2  083C               	movf	?___flmul+2,w
  2315  13C3  1683               	bsf	3,5	;RP0=1, select bank3
  2316  13C4  1703               	bsf	3,6	;RP1=1, select bank3
  2317  13C5  009F               	movwf	(sprintf@tmpval+2)^(0+384)
  2318  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  2319  13C7  1303               	bcf	3,6	;RP1=0, select bank0
  2320  13C8  083B               	movf	?___flmul+1,w
  2321  13C9  1683               	bsf	3,5	;RP0=1, select bank3
  2322  13CA  1703               	bsf	3,6	;RP1=1, select bank3
  2323  13CB  009E               	movwf	(sprintf@tmpval+1)^(0+384)
  2324  13CC  1283               	bcf	3,5	;RP0=0, select bank0
  2325  13CD  1303               	bcf	3,6	;RP1=0, select bank0
  2326  13CE  083A               	movf	?___flmul,w
  2327  13CF  1683               	bsf	3,5	;RP0=1, select bank3
  2328  13D0  1703               	bsf	3,6	;RP1=1, select bank3
  2329  13D1  009D               	movwf	sprintf@tmpval^(0+384)
  2330  13D2                     l4526:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2333  13D2  0820               	movf	(sprintf@tmpval+3)^(0+384),w
  2334  13D3  1283               	bcf	3,5	;RP0=0, select bank0
  2335  13D4  1303               	bcf	3,6	;RP1=0, select bank0
  2336  13D5  00A3               	movwf	___flge@ff1+3
  2337  13D6  1683               	bsf	3,5	;RP0=1, select bank3
  2338  13D7  1703               	bsf	3,6	;RP1=1, select bank3
  2339  13D8  081F               	movf	(sprintf@tmpval+2)^(0+384),w
  2340  13D9  1283               	bcf	3,5	;RP0=0, select bank0
  2341  13DA  1303               	bcf	3,6	;RP1=0, select bank0
  2342  13DB  00A2               	movwf	___flge@ff1+2
  2343  13DC  1683               	bsf	3,5	;RP0=1, select bank3
  2344  13DD  1703               	bsf	3,6	;RP1=1, select bank3
  2345  13DE  081E               	movf	(sprintf@tmpval+1)^(0+384),w
  2346  13DF  1283               	bcf	3,5	;RP0=0, select bank0
  2347  13E0  1303               	bcf	3,6	;RP1=0, select bank0
  2348  13E1  00A1               	movwf	___flge@ff1+1
  2349  13E2  1683               	bsf	3,5	;RP0=1, select bank3
  2350  13E3  1703               	bsf	3,6	;RP1=1, select bank3
  2351  13E4  081D               	movf	sprintf@tmpval^(0+384),w
  2352  13E5  1283               	bcf	3,5	;RP0=0, select bank0
  2353  13E6  1303               	bcf	3,6	;RP1=0, select bank0
  2354  13E7  00A0               	movwf	___flge@ff1
  2355  13E8  303F               	movlw	63
  2356  13E9  00A7               	movwf	___flge@ff2+3
  2357  13EA  3080               	movlw	128
  2358  13EB  00A6               	movwf	___flge@ff2+2
  2359  13EC  3000               	movlw	0
  2360  13ED  00A5               	movwf	___flge@ff2+1
  2361  13EE  3000               	movlw	0
  2362  13EF  00A4               	movwf	___flge@ff2
  2363  13F0  160A  158A  2476  160A  118A  	fcall	___flge
  2364  13F5  1803               	btfsc	3,0
  2365  13F6  2BF8               	goto	u8011
  2366  13F7  2BF9               	goto	u8010
  2367  13F8                     u8011:
  2368  13F8  2C02               	goto	l4530
  2369  13F9                     u8010:
  2370  13F9                     l4528:
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2373  13F9  30FF               	movlw	255
  2374  13FA  1683               	bsf	3,5	;RP0=1, select bank3
  2375  13FB  1703               	bsf	3,6	;RP1=1, select bank3
  2376  13FC  079B               	addwf	sprintf@eexp^(0+384),f
  2377  13FD  1803               	skipnc
  2378  13FE  0A9C               	incf	(sprintf@eexp+1)^(0+384),f
  2379  13FF  30FF               	movlw	255
  2380  1400  079C               	addwf	(sprintf@eexp+1)^(0+384),f
  2381  1401  2C33               	goto	l4534
  2382  1402                     l4530:
  2383  1402  1683               	bsf	3,5	;RP0=1, select bank3
  2384  1403  1703               	bsf	3,6	;RP1=1, select bank3
  2385  1404  0820               	movf	(sprintf@tmpval+3)^(0+384),w
  2386  1405  1283               	bcf	3,5	;RP0=0, select bank0
  2387  1406  1303               	bcf	3,6	;RP1=0, select bank0
  2388  1407  00A3               	movwf	___flge@ff1+3
  2389  1408  1683               	bsf	3,5	;RP0=1, select bank3
  2390  1409  1703               	bsf	3,6	;RP1=1, select bank3
  2391  140A  081F               	movf	(sprintf@tmpval+2)^(0+384),w
  2392  140B  1283               	bcf	3,5	;RP0=0, select bank0
  2393  140C  1303               	bcf	3,6	;RP1=0, select bank0
  2394  140D  00A2               	movwf	___flge@ff1+2
  2395  140E  1683               	bsf	3,5	;RP0=1, select bank3
  2396  140F  1703               	bsf	3,6	;RP1=1, select bank3
  2397  1410  081E               	movf	(sprintf@tmpval+1)^(0+384),w
  2398  1411  1283               	bcf	3,5	;RP0=0, select bank0
  2399  1412  1303               	bcf	3,6	;RP1=0, select bank0
  2400  1413  00A1               	movwf	___flge@ff1+1
  2401  1414  1683               	bsf	3,5	;RP0=1, select bank3
  2402  1415  1703               	bsf	3,6	;RP1=1, select bank3
  2403  1416  081D               	movf	sprintf@tmpval^(0+384),w
  2404  1417  1283               	bcf	3,5	;RP0=0, select bank0
  2405  1418  1303               	bcf	3,6	;RP1=0, select bank0
  2406  1419  00A0               	movwf	___flge@ff1
  2407  141A  3041               	movlw	65
  2408  141B  00A7               	movwf	___flge@ff2+3
  2409  141C  3020               	movlw	32
  2410  141D  00A6               	movwf	___flge@ff2+2
  2411  141E  3000               	movlw	0
  2412  141F  00A5               	movwf	___flge@ff2+1
  2413  1420  3000               	movlw	0
  2414  1421  00A4               	movwf	___flge@ff2
  2415  1422  160A  158A  2476  160A  118A  	fcall	___flge
  2416  1427  1C03               	btfss	3,0
  2417  1428  2C2A               	goto	u8021
  2418  1429  2C2B               	goto	u8020
  2419  142A                     u8021:
  2420  142A  2C33               	goto	l4534
  2421  142B                     u8020:
  2422  142B                     l4532:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2425  142B  3001               	movlw	1
  2426  142C  1683               	bsf	3,5	;RP0=1, select bank3
  2427  142D  1703               	bsf	3,6	;RP1=1, select bank3
  2428  142E  079B               	addwf	sprintf@eexp^(0+384),f
  2429  142F  1803               	skipnc
  2430  1430  0A9C               	incf	(sprintf@eexp+1)^(0+384),f
  2431  1431  3000               	movlw	0
  2432  1432  079C               	addwf	(sprintf@eexp+1)^(0+384),f
  2433  1433                     l4534:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2436  1433  1683               	bsf	3,5	;RP0=1, select bank3
  2437  1434  1703               	bsf	3,6	;RP1=1, select bank3
  2438  1435  0823               	movf	(sprintf@prec+1)^(0+384),w
  2439  1436  3A80               	xorlw	128
  2440  1437  00FF               	movwf	btemp+1
  2441  1438  3080               	movlw	128
  2442  1439  027F               	subwf	btemp+1,w
  2443  143A  1D03               	skipz
  2444  143B  2C3E               	goto	u8035
  2445  143C  300D               	movlw	13
  2446  143D  0222               	subwf	sprintf@prec^(0+384),w
  2447  143E                     u8035:
  2448  143E  1803               	skipnc
  2449  143F  2C41               	goto	u8031
  2450  1440  2C42               	goto	u8030
  2451  1441                     u8031:
  2452  1441  2C89               	goto	l4538
  2453  1442                     u8030:
  2454  1442                     l4536:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2457  1442  1683               	bsf	3,5	;RP0=1, select bank3
  2458  1443  1703               	bsf	3,6	;RP1=1, select bank3
  2459  1444  0822               	movf	sprintf@prec^(0+384),w
  2460  1445  120A  118A  202B  160A  118A  	fcall	_fround
  2461  144A  1283               	bcf	3,5	;RP0=0, select bank0
  2462  144B  1303               	bcf	3,6	;RP1=0, select bank0
  2463  144C  0857               	movf	?_fround+3,w
  2464  144D  00EB               	movwf	___fladd@b+3
  2465  144E  0856               	movf	?_fround+2,w
  2466  144F  00EA               	movwf	___fladd@b+2
  2467  1450  0855               	movf	?_fround+1,w
  2468  1451  00E9               	movwf	___fladd@b+1
  2469  1452  0854               	movf	?_fround,w
  2470  1453  00E8               	movwf	___fladd@b
  2471  1454  1683               	bsf	3,5	;RP0=1, select bank3
  2472  1455  1703               	bsf	3,6	;RP1=1, select bank3
  2473  1456  0827               	movf	(sprintf@fval+3)^(0+384),w
  2474  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2475  1458  1303               	bcf	3,6	;RP1=0, select bank0
  2476  1459  00EF               	movwf	___fladd@a+3
  2477  145A  1683               	bsf	3,5	;RP0=1, select bank3
  2478  145B  1703               	bsf	3,6	;RP1=1, select bank3
  2479  145C  0826               	movf	(sprintf@fval+2)^(0+384),w
  2480  145D  1283               	bcf	3,5	;RP0=0, select bank0
  2481  145E  1303               	bcf	3,6	;RP1=0, select bank0
  2482  145F  00EE               	movwf	___fladd@a+2
  2483  1460  1683               	bsf	3,5	;RP0=1, select bank3
  2484  1461  1703               	bsf	3,6	;RP1=1, select bank3
  2485  1462  0825               	movf	(sprintf@fval+1)^(0+384),w
  2486  1463  1283               	bcf	3,5	;RP0=0, select bank0
  2487  1464  1303               	bcf	3,6	;RP1=0, select bank0
  2488  1465  00ED               	movwf	___fladd@a+1
  2489  1466  1683               	bsf	3,5	;RP0=1, select bank3
  2490  1467  1703               	bsf	3,6	;RP1=1, select bank3
  2491  1468  0824               	movf	sprintf@fval^(0+384),w
  2492  1469  1283               	bcf	3,5	;RP0=0, select bank0
  2493  146A  1303               	bcf	3,6	;RP1=0, select bank0
  2494  146B  00EC               	movwf	___fladd@a
  2495  146C  120A  158A  247C  160A  118A  	fcall	___fladd
  2496  1471  1283               	bcf	3,5	;RP0=0, select bank0
  2497  1472  1303               	bcf	3,6	;RP1=0, select bank0
  2498  1473  086B               	movf	?___fladd+3,w
  2499  1474  1683               	bsf	3,5	;RP0=1, select bank3
  2500  1475  1703               	bsf	3,6	;RP1=1, select bank3
  2501  1476  00A7               	movwf	(sprintf@fval+3)^(0+384)
  2502  1477  1283               	bcf	3,5	;RP0=0, select bank0
  2503  1478  1303               	bcf	3,6	;RP1=0, select bank0
  2504  1479  086A               	movf	?___fladd+2,w
  2505  147A  1683               	bsf	3,5	;RP0=1, select bank3
  2506  147B  1703               	bsf	3,6	;RP1=1, select bank3
  2507  147C  00A6               	movwf	(sprintf@fval+2)^(0+384)
  2508  147D  1283               	bcf	3,5	;RP0=0, select bank0
  2509  147E  1303               	bcf	3,6	;RP1=0, select bank0
  2510  147F  0869               	movf	?___fladd+1,w
  2511  1480  1683               	bsf	3,5	;RP0=1, select bank3
  2512  1481  1703               	bsf	3,6	;RP1=1, select bank3
  2513  1482  00A5               	movwf	(sprintf@fval+1)^(0+384)
  2514  1483  1283               	bcf	3,5	;RP0=0, select bank0
  2515  1484  1303               	bcf	3,6	;RP1=0, select bank0
  2516  1485  0868               	movf	?___fladd,w
  2517  1486  1683               	bsf	3,5	;RP0=1, select bank3
  2518  1487  1703               	bsf	3,6	;RP1=1, select bank3
  2519  1488  00A4               	movwf	sprintf@fval^(0+384)
  2520  1489                     l4538:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2523  1489  1683               	bsf	3,5	;RP0=1, select bank3
  2524  148A  1703               	bsf	3,6	;RP1=1, select bank3
  2525  148B  081C               	movf	(sprintf@eexp+1)^(0+384),w
  2526  148C  3A80               	xorlw	128
  2527  148D  00FF               	movwf	btemp+1
  2528  148E  3080               	movlw	128
  2529  148F  027F               	subwf	btemp+1,w
  2530  1490  1D03               	skipz
  2531  1491  2C94               	goto	u8045
  2532  1492  300A               	movlw	10
  2533  1493  021B               	subwf	sprintf@eexp^(0+384),w
  2534  1494                     u8045:
  2535  1494  1803               	skipnc
  2536  1495  2C99               	goto	u8041
  2537  1496  120A  118A  2A38   	goto	u8040
  2538  1499                     u8041:
  2539  1499  120A  118A  2A97   	goto	l4546
  2540  149C                     L3:
  2541  149C                     L2:
  2542  149C  120A  118A  2FB3   	ljmp	l4652
  2543                           
  2544                           	psect	text2
  2545  0919                     __ptext2:	
  2546 ;; *************** function _scale *****************
  2547 ;; Defined at:
  2548 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  scl             1    wreg     char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  scl             1   70[BANK0 ] char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  4   52[BANK0 ] char 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       4       0       0       0
  2563 ;;      Locals:         0       5       0       0       0
  2564 ;;      Temps:          0      10       0       0       0
  2565 ;;      Totals:         0      19       0       0       0
  2566 ;;Total ram usage:       19 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    3
  2569 ;; This function calls:
  2570 ;;		___awdiv
  2571 ;;		___awmod
  2572 ;;		___flmul
  2573 ;; This function is called by:
  2574 ;;		_sprintf
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _scale
  2580  0919                     _scale:
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2584                           ;scale@scl stored from wreg
  2585  0919  1283               	bcf	3,5	;RP0=0, select bank0
  2586  091A  1303               	bcf	3,6	;RP1=0, select bank0
  2587  091B  00E6               	movwf	scale@scl
  2588  091C                     l4044:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2591  091C  1FE6               	btfss	scale@scl,7
  2592  091D  291F               	goto	u6881
  2593  091E  2920               	goto	u6880
  2594  091F                     u6881:
  2595  091F  2ACF               	goto	l4066
  2596  0920                     u6880:
  2597  0920                     l4046:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2600  0920  09E6               	comf	scale@scl,f
  2601  0921  0AE6               	incf	scale@scl,f
  2602  0922                     l4048:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2605  0922  0866               	movf	scale@scl,w
  2606  0923  3A80               	xorlw	128
  2607  0924  3E12               	addlw	-238
  2608  0925  1C03               	skipc
  2609  0926  2928               	goto	u6891
  2610  0927  2929               	goto	u6890
  2611  0928                     u6891:
  2612  0928  2A13               	goto	l4056
  2613  0929                     u6890:
  2614  0929                     l4050:
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2617  0929  300A               	movlw	10
  2618  092A  00A6               	movwf	___awdiv@divisor
  2619  092B  3000               	movlw	0
  2620  092C  00A7               	movwf	___awdiv@divisor+1
  2621  092D  0866               	movf	scale@scl,w
  2622  092E  00A2               	movwf	___awmod@dividend
  2623  092F  01A3               	clrf	___awmod@dividend+1
  2624  0930  1BA2               	btfsc	___awmod@dividend,7
  2625  0931  03A3               	decf	___awmod@dividend+1,f
  2626  0932  3064               	movlw	100
  2627  0933  00A0               	movwf	___awmod@divisor
  2628  0934  3000               	movlw	0
  2629  0935  00A1               	movwf	___awmod@divisor+1
  2630  0936  160A  158A  2268  120A  158A  	fcall	___awmod
  2631  093B  1283               	bcf	3,5	;RP0=0, select bank0
  2632  093C  1303               	bcf	3,6	;RP1=0, select bank0
  2633  093D  0821               	movf	?___awmod+1,w
  2634  093E  00A9               	movwf	___awdiv@dividend+1
  2635  093F  0820               	movf	?___awmod,w
  2636  0940  00A8               	movwf	___awdiv@dividend
  2637  0941  160A  158A  2391  120A  158A  	fcall	___awdiv
  2638  0946  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0947  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0948  0826               	movf	?___awdiv,w
  2641  0949  00D8               	movwf	??_scale
  2642  094A  3001               	movlw	1
  2643  094B                     u6905:
  2644  094B  1003               	clrc
  2645  094C  0DD8               	rlf	??_scale,f
  2646  094D  3EFF               	addlw	-1
  2647  094E  1D03               	skipz
  2648  094F  294B               	goto	u6905
  2649  0950  1003               	clrc
  2650  0951  0D58               	rlf	??_scale,w
  2651  0952  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2652  0953  0084               	movwf	4
  2653  0954  160A  158A  2000  120A  158A  	fcall	stringdir
  2654  0959  00D9               	movwf	??_scale+1
  2655  095A  160A  158A  2000  120A  158A  	fcall	stringdir
  2656  095F  00DA               	movwf	??_scale+2
  2657  0960  160A  158A  2000  120A  158A  	fcall	stringdir
  2658  0965  00DB               	movwf	??_scale+3
  2659  0966  160A  158A  2000  120A  158A  	fcall	stringdir
  2660  096B  00DC               	movwf	??_scale+4
  2661  096C  085C               	movf	??_scale+4,w
  2662  096D  00BD               	movwf	___flmul@b+3
  2663  096E  085B               	movf	??_scale+3,w
  2664  096F  00BC               	movwf	___flmul@b+2
  2665  0970  085A               	movf	??_scale+2,w
  2666  0971  00BB               	movwf	___flmul@b+1
  2667  0972  0859               	movf	??_scale+1,w
  2668  0973  00BA               	movwf	___flmul@b
  2669  0974  3064               	movlw	100
  2670  0975  00A6               	movwf	___awdiv@divisor
  2671  0976  3000               	movlw	0
  2672  0977  00A7               	movwf	___awdiv@divisor+1
  2673  0978  0866               	movf	scale@scl,w
  2674  0979  00A8               	movwf	___awdiv@dividend
  2675  097A  01A9               	clrf	___awdiv@dividend+1
  2676  097B  1BA8               	btfsc	___awdiv@dividend,7
  2677  097C  03A9               	decf	___awdiv@dividend+1,f
  2678  097D  160A  158A  2391  120A  158A  	fcall	___awdiv
  2679  0982  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0983  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0984  0826               	movf	?___awdiv,w
  2682  0985  00DD               	movwf	??_scale+5
  2683  0986  3001               	movlw	1
  2684  0987                     u6915:
  2685  0987  1003               	clrc
  2686  0988  0DDD               	rlf	??_scale+5,f
  2687  0989  3EFF               	addlw	-1
  2688  098A  1D03               	skipz
  2689  098B  2987               	goto	u6915
  2690  098C  1003               	clrc
  2691  098D  0D5D               	rlf	??_scale+5,w
  2692  098E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2693  098F  0084               	movwf	4
  2694  0990  160A  158A  2000  120A  158A  	fcall	stringdir
  2695  0995  00DE               	movwf	??_scale+6
  2696  0996  160A  158A  2000  120A  158A  	fcall	stringdir
  2697  099B  00DF               	movwf	??_scale+7
  2698  099C  160A  158A  2000  120A  158A  	fcall	stringdir
  2699  09A1  00E0               	movwf	??_scale+8
  2700  09A2  160A  158A  2000  120A  158A  	fcall	stringdir
  2701  09A7  00E1               	movwf	??_scale+9
  2702  09A8  0861               	movf	??_scale+9,w
  2703  09A9  00C1               	movwf	___flmul@a+3
  2704  09AA  0860               	movf	??_scale+8,w
  2705  09AB  00C0               	movwf	___flmul@a+2
  2706  09AC  085F               	movf	??_scale+7,w
  2707  09AD  00BF               	movwf	___flmul@a+1
  2708  09AE  085E               	movf	??_scale+6,w
  2709  09AF  00BE               	movwf	___flmul@a
  2710  09B0  160A  118A  249F  120A  158A  	fcall	___flmul
  2711  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  2712  09B6  1303               	bcf	3,6	;RP1=0, select bank0
  2713  09B7  083D               	movf	?___flmul+3,w
  2714  09B8  00E5               	movwf	_scale$927+3
  2715  09B9  083C               	movf	?___flmul+2,w
  2716  09BA  00E4               	movwf	_scale$927+2
  2717  09BB  083B               	movf	?___flmul+1,w
  2718  09BC  00E3               	movwf	_scale$927+1
  2719  09BD  083A               	movf	?___flmul,w
  2720  09BE  00E2               	movwf	_scale$927
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2723  09BF  300A               	movlw	10
  2724  09C0  00A0               	movwf	___awmod@divisor
  2725  09C1  3000               	movlw	0
  2726  09C2  00A1               	movwf	___awmod@divisor+1
  2727  09C3  0866               	movf	scale@scl,w
  2728  09C4  00A2               	movwf	___awmod@dividend
  2729  09C5  01A3               	clrf	___awmod@dividend+1
  2730  09C6  1BA2               	btfsc	___awmod@dividend,7
  2731  09C7  03A3               	decf	___awmod@dividend+1,f
  2732  09C8  160A  158A  2268  120A  158A  	fcall	___awmod
  2733  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  2734  09CE  1303               	bcf	3,6	;RP1=0, select bank0
  2735  09CF  0820               	movf	?___awmod,w
  2736  09D0  00D8               	movwf	??_scale
  2737  09D1  3001               	movlw	1
  2738  09D2                     u6925:
  2739  09D2  1003               	clrc
  2740  09D3  0DD8               	rlf	??_scale,f
  2741  09D4  3EFF               	addlw	-1
  2742  09D5  1D03               	skipz
  2743  09D6  29D2               	goto	u6925
  2744  09D7  1003               	clrc
  2745  09D8  0D58               	rlf	??_scale,w
  2746  09D9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2747  09DA  0084               	movwf	4
  2748  09DB  160A  158A  2000  120A  158A  	fcall	stringdir
  2749  09E0  00D9               	movwf	??_scale+1
  2750  09E1  160A  158A  2000  120A  158A  	fcall	stringdir
  2751  09E6  00DA               	movwf	??_scale+2
  2752  09E7  160A  158A  2000  120A  158A  	fcall	stringdir
  2753  09EC  00DB               	movwf	??_scale+3
  2754  09ED  160A  158A  2000  120A  158A  	fcall	stringdir
  2755  09F2  00DC               	movwf	??_scale+4
  2756  09F3  085C               	movf	??_scale+4,w
  2757  09F4  00BD               	movwf	___flmul@b+3
  2758  09F5  085B               	movf	??_scale+3,w
  2759  09F6  00BC               	movwf	___flmul@b+2
  2760  09F7  085A               	movf	??_scale+2,w
  2761  09F8  00BB               	movwf	___flmul@b+1
  2762  09F9  0859               	movf	??_scale+1,w
  2763  09FA  00BA               	movwf	___flmul@b
  2764  09FB  0865               	movf	_scale$927+3,w
  2765  09FC  00C1               	movwf	___flmul@a+3
  2766  09FD  0864               	movf	_scale$927+2,w
  2767  09FE  00C0               	movwf	___flmul@a+2
  2768  09FF  0863               	movf	_scale$927+1,w
  2769  0A00  00BF               	movwf	___flmul@a+1
  2770  0A01  0862               	movf	_scale$927,w
  2771  0A02  00BE               	movwf	___flmul@a
  2772  0A03  160A  118A  249F  120A  158A  	fcall	___flmul
  2773  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0A0A  083D               	movf	?___flmul+3,w
  2776  0A0B  00D7               	movwf	?_scale+3
  2777  0A0C  083C               	movf	?___flmul+2,w
  2778  0A0D  00D6               	movwf	?_scale+2
  2779  0A0E  083B               	movf	?___flmul+1,w
  2780  0A0F  00D5               	movwf	?_scale+1
  2781  0A10  083A               	movf	?___flmul,w
  2782  0A11  00D4               	movwf	?_scale
  2783  0A12  2C7B               	goto	l285
  2784  0A13                     l4056:
  2785  0A13  0866               	movf	scale@scl,w
  2786  0A14  3A80               	xorlw	128
  2787  0A15  3E75               	addlw	-139
  2788  0A16  1C03               	skipc
  2789  0A17  2A19               	goto	u6931
  2790  0A18  2A1A               	goto	u6930
  2791  0A19                     u6931:
  2792  0A19  2AA2               	goto	l4062
  2793  0A1A                     u6930:
  2794  0A1A                     l4058:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2797  0A1A  300A               	movlw	10
  2798  0A1B  00A0               	movwf	___awmod@divisor
  2799  0A1C  3000               	movlw	0
  2800  0A1D  00A1               	movwf	___awmod@divisor+1
  2801  0A1E  0866               	movf	scale@scl,w
  2802  0A1F  00A2               	movwf	___awmod@dividend
  2803  0A20  01A3               	clrf	___awmod@dividend+1
  2804  0A21  1BA2               	btfsc	___awmod@dividend,7
  2805  0A22  03A3               	decf	___awmod@dividend+1,f
  2806  0A23  160A  158A  2268  120A  158A  	fcall	___awmod
  2807  0A28  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0A29  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0A2A  0820               	movf	?___awmod,w
  2810  0A2B  00D8               	movwf	??_scale
  2811  0A2C  3001               	movlw	1
  2812  0A2D                     u6945:
  2813  0A2D  1003               	clrc
  2814  0A2E  0DD8               	rlf	??_scale,f
  2815  0A2F  3EFF               	addlw	-1
  2816  0A30  1D03               	skipz
  2817  0A31  2A2D               	goto	u6945
  2818  0A32  1003               	clrc
  2819  0A33  0D58               	rlf	??_scale,w
  2820  0A34  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2821  0A35  0084               	movwf	4
  2822  0A36  160A  158A  2000  120A  158A  	fcall	stringdir
  2823  0A3B  00D9               	movwf	??_scale+1
  2824  0A3C  160A  158A  2000  120A  158A  	fcall	stringdir
  2825  0A41  00DA               	movwf	??_scale+2
  2826  0A42  160A  158A  2000  120A  158A  	fcall	stringdir
  2827  0A47  00DB               	movwf	??_scale+3
  2828  0A48  160A  158A  2000  120A  158A  	fcall	stringdir
  2829  0A4D  00DC               	movwf	??_scale+4
  2830  0A4E  085C               	movf	??_scale+4,w
  2831  0A4F  00BD               	movwf	___flmul@b+3
  2832  0A50  085B               	movf	??_scale+3,w
  2833  0A51  00BC               	movwf	___flmul@b+2
  2834  0A52  085A               	movf	??_scale+2,w
  2835  0A53  00BB               	movwf	___flmul@b+1
  2836  0A54  0859               	movf	??_scale+1,w
  2837  0A55  00BA               	movwf	___flmul@b
  2838  0A56  300A               	movlw	10
  2839  0A57  00A6               	movwf	___awdiv@divisor
  2840  0A58  3000               	movlw	0
  2841  0A59  00A7               	movwf	___awdiv@divisor+1
  2842  0A5A  0866               	movf	scale@scl,w
  2843  0A5B  00A8               	movwf	___awdiv@dividend
  2844  0A5C  01A9               	clrf	___awdiv@dividend+1
  2845  0A5D  1BA8               	btfsc	___awdiv@dividend,7
  2846  0A5E  03A9               	decf	___awdiv@dividend+1,f
  2847  0A5F  160A  158A  2391  120A  158A  	fcall	___awdiv
  2848  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0A66  0826               	movf	?___awdiv,w
  2851  0A67  00DD               	movwf	??_scale+5
  2852  0A68  3001               	movlw	1
  2853  0A69                     u6955:
  2854  0A69  1003               	clrc
  2855  0A6A  0DDD               	rlf	??_scale+5,f
  2856  0A6B  3EFF               	addlw	-1
  2857  0A6C  1D03               	skipz
  2858  0A6D  2A69               	goto	u6955
  2859  0A6E  1003               	clrc
  2860  0A6F  0D5D               	rlf	??_scale+5,w
  2861  0A70  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2862  0A71  0084               	movwf	4
  2863  0A72  160A  158A  2000  120A  158A  	fcall	stringdir
  2864  0A77  00DE               	movwf	??_scale+6
  2865  0A78  160A  158A  2000  120A  158A  	fcall	stringdir
  2866  0A7D  00DF               	movwf	??_scale+7
  2867  0A7E  160A  158A  2000  120A  158A  	fcall	stringdir
  2868  0A83  00E0               	movwf	??_scale+8
  2869  0A84  160A  158A  2000  120A  158A  	fcall	stringdir
  2870  0A89  00E1               	movwf	??_scale+9
  2871  0A8A  0861               	movf	??_scale+9,w
  2872  0A8B  00C1               	movwf	___flmul@a+3
  2873  0A8C  0860               	movf	??_scale+8,w
  2874  0A8D  00C0               	movwf	___flmul@a+2
  2875  0A8E  085F               	movf	??_scale+7,w
  2876  0A8F  00BF               	movwf	___flmul@a+1
  2877  0A90  085E               	movf	??_scale+6,w
  2878  0A91  00BE               	movwf	___flmul@a
  2879  0A92  160A  118A  249F  120A  158A  	fcall	___flmul
  2880  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0A99  083D               	movf	?___flmul+3,w
  2883  0A9A  00D7               	movwf	?_scale+3
  2884  0A9B  083C               	movf	?___flmul+2,w
  2885  0A9C  00D6               	movwf	?_scale+2
  2886  0A9D  083B               	movf	?___flmul+1,w
  2887  0A9E  00D5               	movwf	?_scale+1
  2888  0A9F  083A               	movf	?___flmul,w
  2889  0AA0  00D4               	movwf	?_scale
  2890  0AA1  2C7B               	goto	l285
  2891  0AA2                     l4062:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2894  0AA2  0866               	movf	scale@scl,w
  2895  0AA3  00D8               	movwf	??_scale
  2896  0AA4  3001               	movlw	1
  2897  0AA5                     u6965:
  2898  0AA5  1003               	clrc
  2899  0AA6  0DD8               	rlf	??_scale,f
  2900  0AA7  3EFF               	addlw	-1
  2901  0AA8  1D03               	skipz
  2902  0AA9  2AA5               	goto	u6965
  2903  0AAA  1003               	clrc
  2904  0AAB  0D58               	rlf	??_scale,w
  2905  0AAC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2906  0AAD  0084               	movwf	4
  2907  0AAE  160A  158A  2000  120A  158A  	fcall	stringdir
  2908  0AB3  00D9               	movwf	??_scale+1
  2909  0AB4  160A  158A  2000  120A  158A  	fcall	stringdir
  2910  0AB9  00DA               	movwf	??_scale+2
  2911  0ABA  160A  158A  2000  120A  158A  	fcall	stringdir
  2912  0ABF  00DB               	movwf	??_scale+3
  2913  0AC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2914  0AC5  00DC               	movwf	??_scale+4
  2915  0AC6  085C               	movf	??_scale+4,w
  2916  0AC7  00D7               	movwf	?_scale+3
  2917  0AC8  085B               	movf	??_scale+3,w
  2918  0AC9  00D6               	movwf	?_scale+2
  2919  0ACA  085A               	movf	??_scale+2,w
  2920  0ACB  00D5               	movwf	?_scale+1
  2921  0ACC  0859               	movf	??_scale+1,w
  2922  0ACD  00D4               	movwf	?_scale
  2923  0ACE  2C7B               	goto	l285
  2924  0ACF                     l4066:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2927  0ACF  0866               	movf	scale@scl,w
  2928  0AD0  3A80               	xorlw	128
  2929  0AD1  3E12               	addlw	-238
  2930  0AD2  1C03               	skipc
  2931  0AD3  2AD5               	goto	u6971
  2932  0AD4  2AD6               	goto	u6970
  2933  0AD5                     u6971:
  2934  0AD5  2BC0               	goto	l4074
  2935  0AD6                     u6970:
  2936  0AD6                     l4068:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2939  0AD6  300A               	movlw	10
  2940  0AD7  00A6               	movwf	___awdiv@divisor
  2941  0AD8  3000               	movlw	0
  2942  0AD9  00A7               	movwf	___awdiv@divisor+1
  2943  0ADA  0866               	movf	scale@scl,w
  2944  0ADB  00A2               	movwf	___awmod@dividend
  2945  0ADC  01A3               	clrf	___awmod@dividend+1
  2946  0ADD  1BA2               	btfsc	___awmod@dividend,7
  2947  0ADE  03A3               	decf	___awmod@dividend+1,f
  2948  0ADF  3064               	movlw	100
  2949  0AE0  00A0               	movwf	___awmod@divisor
  2950  0AE1  3000               	movlw	0
  2951  0AE2  00A1               	movwf	___awmod@divisor+1
  2952  0AE3  160A  158A  2268  120A  158A  	fcall	___awmod
  2953  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0AEA  0821               	movf	?___awmod+1,w
  2956  0AEB  00A9               	movwf	___awdiv@dividend+1
  2957  0AEC  0820               	movf	?___awmod,w
  2958  0AED  00A8               	movwf	___awdiv@dividend
  2959  0AEE  160A  158A  2391  120A  158A  	fcall	___awdiv
  2960  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  2962  0AF5  0826               	movf	?___awdiv,w
  2963  0AF6  00D8               	movwf	??_scale
  2964  0AF7  3001               	movlw	1
  2965  0AF8                     u6985:
  2966  0AF8  1003               	clrc
  2967  0AF9  0DD8               	rlf	??_scale,f
  2968  0AFA  3EFF               	addlw	-1
  2969  0AFB  1D03               	skipz
  2970  0AFC  2AF8               	goto	u6985
  2971  0AFD  1003               	clrc
  2972  0AFE  0D58               	rlf	??_scale,w
  2973  0AFF  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2974  0B00  0084               	movwf	4
  2975  0B01  160A  158A  2000  120A  158A  	fcall	stringdir
  2976  0B06  00D9               	movwf	??_scale+1
  2977  0B07  160A  158A  2000  120A  158A  	fcall	stringdir
  2978  0B0C  00DA               	movwf	??_scale+2
  2979  0B0D  160A  158A  2000  120A  158A  	fcall	stringdir
  2980  0B12  00DB               	movwf	??_scale+3
  2981  0B13  160A  158A  2000  120A  158A  	fcall	stringdir
  2982  0B18  00DC               	movwf	??_scale+4
  2983  0B19  085C               	movf	??_scale+4,w
  2984  0B1A  00BD               	movwf	___flmul@b+3
  2985  0B1B  085B               	movf	??_scale+3,w
  2986  0B1C  00BC               	movwf	___flmul@b+2
  2987  0B1D  085A               	movf	??_scale+2,w
  2988  0B1E  00BB               	movwf	___flmul@b+1
  2989  0B1F  0859               	movf	??_scale+1,w
  2990  0B20  00BA               	movwf	___flmul@b
  2991  0B21  3064               	movlw	100
  2992  0B22  00A6               	movwf	___awdiv@divisor
  2993  0B23  3000               	movlw	0
  2994  0B24  00A7               	movwf	___awdiv@divisor+1
  2995  0B25  0866               	movf	scale@scl,w
  2996  0B26  00A8               	movwf	___awdiv@dividend
  2997  0B27  01A9               	clrf	___awdiv@dividend+1
  2998  0B28  1BA8               	btfsc	___awdiv@dividend,7
  2999  0B29  03A9               	decf	___awdiv@dividend+1,f
  3000  0B2A  160A  158A  2391  120A  158A  	fcall	___awdiv
  3001  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0B31  0826               	movf	?___awdiv,w
  3004  0B32  00DD               	movwf	??_scale+5
  3005  0B33  3001               	movlw	1
  3006  0B34                     u6995:
  3007  0B34  1003               	clrc
  3008  0B35  0DDD               	rlf	??_scale+5,f
  3009  0B36  3EFF               	addlw	-1
  3010  0B37  1D03               	skipz
  3011  0B38  2B34               	goto	u6995
  3012  0B39  1003               	clrc
  3013  0B3A  0D5D               	rlf	??_scale+5,w
  3014  0B3B  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3015  0B3C  0084               	movwf	4
  3016  0B3D  160A  158A  2000  120A  158A  	fcall	stringdir
  3017  0B42  00DE               	movwf	??_scale+6
  3018  0B43  160A  158A  2000  120A  158A  	fcall	stringdir
  3019  0B48  00DF               	movwf	??_scale+7
  3020  0B49  160A  158A  2000  120A  158A  	fcall	stringdir
  3021  0B4E  00E0               	movwf	??_scale+8
  3022  0B4F  160A  158A  2000  120A  158A  	fcall	stringdir
  3023  0B54  00E1               	movwf	??_scale+9
  3024  0B55  0861               	movf	??_scale+9,w
  3025  0B56  00C1               	movwf	___flmul@a+3
  3026  0B57  0860               	movf	??_scale+8,w
  3027  0B58  00C0               	movwf	___flmul@a+2
  3028  0B59  085F               	movf	??_scale+7,w
  3029  0B5A  00BF               	movwf	___flmul@a+1
  3030  0B5B  085E               	movf	??_scale+6,w
  3031  0B5C  00BE               	movwf	___flmul@a
  3032  0B5D  160A  118A  249F  120A  158A  	fcall	___flmul
  3033  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0B64  083D               	movf	?___flmul+3,w
  3036  0B65  00E5               	movwf	_scale$927+3
  3037  0B66  083C               	movf	?___flmul+2,w
  3038  0B67  00E4               	movwf	_scale$927+2
  3039  0B68  083B               	movf	?___flmul+1,w
  3040  0B69  00E3               	movwf	_scale$927+1
  3041  0B6A  083A               	movf	?___flmul,w
  3042  0B6B  00E2               	movwf	_scale$927
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3045  0B6C  300A               	movlw	10
  3046  0B6D  00A0               	movwf	___awmod@divisor
  3047  0B6E  3000               	movlw	0
  3048  0B6F  00A1               	movwf	___awmod@divisor+1
  3049  0B70  0866               	movf	scale@scl,w
  3050  0B71  00A2               	movwf	___awmod@dividend
  3051  0B72  01A3               	clrf	___awmod@dividend+1
  3052  0B73  1BA2               	btfsc	___awmod@dividend,7
  3053  0B74  03A3               	decf	___awmod@dividend+1,f
  3054  0B75  160A  158A  2268  120A  158A  	fcall	___awmod
  3055  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0B7C  0820               	movf	?___awmod,w
  3058  0B7D  00D8               	movwf	??_scale
  3059  0B7E  3001               	movlw	1
  3060  0B7F                     u7005:
  3061  0B7F  1003               	clrc
  3062  0B80  0DD8               	rlf	??_scale,f
  3063  0B81  3EFF               	addlw	-1
  3064  0B82  1D03               	skipz
  3065  0B83  2B7F               	goto	u7005
  3066  0B84  1003               	clrc
  3067  0B85  0D58               	rlf	??_scale,w
  3068  0B86  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3069  0B87  0084               	movwf	4
  3070  0B88  160A  158A  2000  120A  158A  	fcall	stringdir
  3071  0B8D  00D9               	movwf	??_scale+1
  3072  0B8E  160A  158A  2000  120A  158A  	fcall	stringdir
  3073  0B93  00DA               	movwf	??_scale+2
  3074  0B94  160A  158A  2000  120A  158A  	fcall	stringdir
  3075  0B99  00DB               	movwf	??_scale+3
  3076  0B9A  160A  158A  2000  120A  158A  	fcall	stringdir
  3077  0B9F  00DC               	movwf	??_scale+4
  3078  0BA0  085C               	movf	??_scale+4,w
  3079  0BA1  00BD               	movwf	___flmul@b+3
  3080  0BA2  085B               	movf	??_scale+3,w
  3081  0BA3  00BC               	movwf	___flmul@b+2
  3082  0BA4  085A               	movf	??_scale+2,w
  3083  0BA5  00BB               	movwf	___flmul@b+1
  3084  0BA6  0859               	movf	??_scale+1,w
  3085  0BA7  00BA               	movwf	___flmul@b
  3086  0BA8  0865               	movf	_scale$927+3,w
  3087  0BA9  00C1               	movwf	___flmul@a+3
  3088  0BAA  0864               	movf	_scale$927+2,w
  3089  0BAB  00C0               	movwf	___flmul@a+2
  3090  0BAC  0863               	movf	_scale$927+1,w
  3091  0BAD  00BF               	movwf	___flmul@a+1
  3092  0BAE  0862               	movf	_scale$927,w
  3093  0BAF  00BE               	movwf	___flmul@a
  3094  0BB0  160A  118A  249F  120A  158A  	fcall	___flmul
  3095  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0BB7  083D               	movf	?___flmul+3,w
  3098  0BB8  00D7               	movwf	?_scale+3
  3099  0BB9  083C               	movf	?___flmul+2,w
  3100  0BBA  00D6               	movwf	?_scale+2
  3101  0BBB  083B               	movf	?___flmul+1,w
  3102  0BBC  00D5               	movwf	?_scale+1
  3103  0BBD  083A               	movf	?___flmul,w
  3104  0BBE  00D4               	movwf	?_scale
  3105  0BBF  2C7B               	goto	l285
  3106  0BC0                     l4074:
  3107  0BC0  0866               	movf	scale@scl,w
  3108  0BC1  3A80               	xorlw	128
  3109  0BC2  3E75               	addlw	-139
  3110  0BC3  1C03               	skipc
  3111  0BC4  2BC6               	goto	u7011
  3112  0BC5  2BC7               	goto	u7010
  3113  0BC6                     u7011:
  3114  0BC6  2C4F               	goto	l4080
  3115  0BC7                     u7010:
  3116  0BC7                     l4076:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3119  0BC7  300A               	movlw	10
  3120  0BC8  00A0               	movwf	___awmod@divisor
  3121  0BC9  3000               	movlw	0
  3122  0BCA  00A1               	movwf	___awmod@divisor+1
  3123  0BCB  0866               	movf	scale@scl,w
  3124  0BCC  00A2               	movwf	___awmod@dividend
  3125  0BCD  01A3               	clrf	___awmod@dividend+1
  3126  0BCE  1BA2               	btfsc	___awmod@dividend,7
  3127  0BCF  03A3               	decf	___awmod@dividend+1,f
  3128  0BD0  160A  158A  2268  120A  158A  	fcall	___awmod
  3129  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0BD7  0820               	movf	?___awmod,w
  3132  0BD8  00D8               	movwf	??_scale
  3133  0BD9  3001               	movlw	1
  3134  0BDA                     u7025:
  3135  0BDA  1003               	clrc
  3136  0BDB  0DD8               	rlf	??_scale,f
  3137  0BDC  3EFF               	addlw	-1
  3138  0BDD  1D03               	skipz
  3139  0BDE  2BDA               	goto	u7025
  3140  0BDF  1003               	clrc
  3141  0BE0  0D58               	rlf	??_scale,w
  3142  0BE1  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3143  0BE2  0084               	movwf	4
  3144  0BE3  160A  158A  2000  120A  158A  	fcall	stringdir
  3145  0BE8  00D9               	movwf	??_scale+1
  3146  0BE9  160A  158A  2000  120A  158A  	fcall	stringdir
  3147  0BEE  00DA               	movwf	??_scale+2
  3148  0BEF  160A  158A  2000  120A  158A  	fcall	stringdir
  3149  0BF4  00DB               	movwf	??_scale+3
  3150  0BF5  160A  158A  2000  120A  158A  	fcall	stringdir
  3151  0BFA  00DC               	movwf	??_scale+4
  3152  0BFB  085C               	movf	??_scale+4,w
  3153  0BFC  00BD               	movwf	___flmul@b+3
  3154  0BFD  085B               	movf	??_scale+3,w
  3155  0BFE  00BC               	movwf	___flmul@b+2
  3156  0BFF  085A               	movf	??_scale+2,w
  3157  0C00  00BB               	movwf	___flmul@b+1
  3158  0C01  0859               	movf	??_scale+1,w
  3159  0C02  00BA               	movwf	___flmul@b
  3160  0C03  300A               	movlw	10
  3161  0C04  00A6               	movwf	___awdiv@divisor
  3162  0C05  3000               	movlw	0
  3163  0C06  00A7               	movwf	___awdiv@divisor+1
  3164  0C07  0866               	movf	scale@scl,w
  3165  0C08  00A8               	movwf	___awdiv@dividend
  3166  0C09  01A9               	clrf	___awdiv@dividend+1
  3167  0C0A  1BA8               	btfsc	___awdiv@dividend,7
  3168  0C0B  03A9               	decf	___awdiv@dividend+1,f
  3169  0C0C  160A  158A  2391  120A  158A  	fcall	___awdiv
  3170  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  3171  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  3172  0C13  0826               	movf	?___awdiv,w
  3173  0C14  00DD               	movwf	??_scale+5
  3174  0C15  3001               	movlw	1
  3175  0C16                     u7035:
  3176  0C16  1003               	clrc
  3177  0C17  0DDD               	rlf	??_scale+5,f
  3178  0C18  3EFF               	addlw	-1
  3179  0C19  1D03               	skipz
  3180  0C1A  2C16               	goto	u7035
  3181  0C1B  1003               	clrc
  3182  0C1C  0D5D               	rlf	??_scale+5,w
  3183  0C1D  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3184  0C1E  0084               	movwf	4
  3185  0C1F  160A  158A  2000  120A  158A  	fcall	stringdir
  3186  0C24  00DE               	movwf	??_scale+6
  3187  0C25  160A  158A  2000  120A  158A  	fcall	stringdir
  3188  0C2A  00DF               	movwf	??_scale+7
  3189  0C2B  160A  158A  2000  120A  158A  	fcall	stringdir
  3190  0C30  00E0               	movwf	??_scale+8
  3191  0C31  160A  158A  2000  120A  158A  	fcall	stringdir
  3192  0C36  00E1               	movwf	??_scale+9
  3193  0C37  0861               	movf	??_scale+9,w
  3194  0C38  00C1               	movwf	___flmul@a+3
  3195  0C39  0860               	movf	??_scale+8,w
  3196  0C3A  00C0               	movwf	___flmul@a+2
  3197  0C3B  085F               	movf	??_scale+7,w
  3198  0C3C  00BF               	movwf	___flmul@a+1
  3199  0C3D  085E               	movf	??_scale+6,w
  3200  0C3E  00BE               	movwf	___flmul@a
  3201  0C3F  160A  118A  249F  120A  158A  	fcall	___flmul
  3202  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0C46  083D               	movf	?___flmul+3,w
  3205  0C47  00D7               	movwf	?_scale+3
  3206  0C48  083C               	movf	?___flmul+2,w
  3207  0C49  00D6               	movwf	?_scale+2
  3208  0C4A  083B               	movf	?___flmul+1,w
  3209  0C4B  00D5               	movwf	?_scale+1
  3210  0C4C  083A               	movf	?___flmul,w
  3211  0C4D  00D4               	movwf	?_scale
  3212  0C4E  2C7B               	goto	l285
  3213  0C4F                     l4080:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3216  0C4F  0866               	movf	scale@scl,w
  3217  0C50  00D8               	movwf	??_scale
  3218  0C51  3001               	movlw	1
  3219  0C52                     u7045:
  3220  0C52  1003               	clrc
  3221  0C53  0DD8               	rlf	??_scale,f
  3222  0C54  3EFF               	addlw	-1
  3223  0C55  1D03               	skipz
  3224  0C56  2C52               	goto	u7045
  3225  0C57  1003               	clrc
  3226  0C58  0D58               	rlf	??_scale,w
  3227  0C59  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3228  0C5A  0084               	movwf	4
  3229  0C5B  160A  158A  2000  120A  158A  	fcall	stringdir
  3230  0C60  00D9               	movwf	??_scale+1
  3231  0C61  160A  158A  2000  120A  158A  	fcall	stringdir
  3232  0C66  00DA               	movwf	??_scale+2
  3233  0C67  160A  158A  2000  120A  158A  	fcall	stringdir
  3234  0C6C  00DB               	movwf	??_scale+3
  3235  0C6D  160A  158A  2000  120A  158A  	fcall	stringdir
  3236  0C72  00DC               	movwf	??_scale+4
  3237  0C73  085C               	movf	??_scale+4,w
  3238  0C74  00D7               	movwf	?_scale+3
  3239  0C75  085B               	movf	??_scale+3,w
  3240  0C76  00D6               	movwf	?_scale+2
  3241  0C77  085A               	movf	??_scale+2,w
  3242  0C78  00D5               	movwf	?_scale+1
  3243  0C79  0859               	movf	??_scale+1,w
  3244  0C7A  00D4               	movwf	?_scale
  3245  0C7B                     l285:
  3246  0C7B  0008               	return
  3247  0C7C                     __end_of_scale:
  3248                           
  3249                           	psect	text3
  3250  1A68                     __ptext3:	
  3251 ;; *************** function ___awmod *****************
  3252 ;; Defined at:
  3253 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  divisor         2    0[BANK0 ] int 
  3256 ;;  dividend        2    2[BANK0 ] int 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  sign            1    5[BANK0 ] unsigned char 
  3259 ;;  counter         1    4[BANK0 ] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  2    0[BANK0 ] int 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3269 ;;      Params:         0       4       0       0       0
  3270 ;;      Locals:         0       2       0       0       0
  3271 ;;      Temps:          1       0       0       0       0
  3272 ;;      Totals:         1       6       0       0       0
  3273 ;;Total ram usage:        7 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_scale
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function ___awmod
  3285  1A68                     ___awmod:
  3286  1A68                     l3576:	
  3287                           ;incstack = 0
  3288                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3289                           
  3290  1A68  1283               	bcf	3,5	;RP0=0, select bank0
  3291  1A69  1303               	bcf	3,6	;RP1=0, select bank0
  3292  1A6A  01A5               	clrf	___awmod@sign
  3293  1A6B                     l3578:
  3294  1A6B  1FA3               	btfss	___awmod@dividend+1,7
  3295  1A6C  2A6E               	goto	u5741
  3296  1A6D  2A6F               	goto	u5740
  3297  1A6E                     u5741:
  3298  1A6E  2A76               	goto	l3584
  3299  1A6F                     u5740:
  3300  1A6F                     l3580:
  3301  1A6F  09A2               	comf	___awmod@dividend,f
  3302  1A70  09A3               	comf	___awmod@dividend+1,f
  3303  1A71  0AA2               	incf	___awmod@dividend,f
  3304  1A72  1903               	skipnz
  3305  1A73  0AA3               	incf	___awmod@dividend+1,f
  3306  1A74                     l3582:
  3307  1A74  01A5               	clrf	___awmod@sign
  3308  1A75  0AA5               	incf	___awmod@sign,f
  3309  1A76                     l3584:
  3310  1A76  1FA1               	btfss	___awmod@divisor+1,7
  3311  1A77  2A79               	goto	u5751
  3312  1A78  2A7A               	goto	u5750
  3313  1A79                     u5751:
  3314  1A79  2A7F               	goto	l3588
  3315  1A7A                     u5750:
  3316  1A7A                     l3586:
  3317  1A7A  09A0               	comf	___awmod@divisor,f
  3318  1A7B  09A1               	comf	___awmod@divisor+1,f
  3319  1A7C  0AA0               	incf	___awmod@divisor,f
  3320  1A7D  1903               	skipnz
  3321  1A7E  0AA1               	incf	___awmod@divisor+1,f
  3322  1A7F                     l3588:
  3323  1A7F  0820               	movf	___awmod@divisor,w
  3324  1A80  0421               	iorwf	___awmod@divisor+1,w
  3325  1A81  1903               	btfsc	3,2
  3326  1A82  2A84               	goto	u5761
  3327  1A83  2A85               	goto	u5760
  3328  1A84                     u5761:
  3329  1A84  2AB4               	goto	l3606
  3330  1A85                     u5760:
  3331  1A85                     l3590:
  3332  1A85  01A4               	clrf	___awmod@counter
  3333  1A86  0AA4               	incf	___awmod@counter,f
  3334  1A87  2A93               	goto	l3596
  3335  1A88                     l3592:
  3336  1A88  3001               	movlw	1
  3337  1A89                     u5775:
  3338  1A89  1003               	clrc
  3339  1A8A  0DA0               	rlf	___awmod@divisor,f
  3340  1A8B  0DA1               	rlf	___awmod@divisor+1,f
  3341  1A8C  3EFF               	addlw	-1
  3342  1A8D  1D03               	skipz
  3343  1A8E  2A89               	goto	u5775
  3344  1A8F                     l3594:
  3345  1A8F  3001               	movlw	1
  3346  1A90  00F4               	movwf	??___awmod
  3347  1A91  0874               	movf	??___awmod,w
  3348  1A92  07A4               	addwf	___awmod@counter,f
  3349  1A93                     l3596:
  3350  1A93  1FA1               	btfss	___awmod@divisor+1,7
  3351  1A94  2A96               	goto	u5781
  3352  1A95  2A97               	goto	u5780
  3353  1A96                     u5781:
  3354  1A96  2A88               	goto	l3592
  3355  1A97                     u5780:
  3356  1A97                     l3598:
  3357  1A97  0821               	movf	___awmod@divisor+1,w
  3358  1A98  0223               	subwf	___awmod@dividend+1,w
  3359  1A99  1D03               	skipz
  3360  1A9A  2A9D               	goto	u5795
  3361  1A9B  0820               	movf	___awmod@divisor,w
  3362  1A9C  0222               	subwf	___awmod@dividend,w
  3363  1A9D                     u5795:
  3364  1A9D  1C03               	skipc
  3365  1A9E  2AA0               	goto	u5791
  3366  1A9F  2AA1               	goto	u5790
  3367  1AA0                     u5791:
  3368  1AA0  2AA7               	goto	l3602
  3369  1AA1                     u5790:
  3370  1AA1                     l3600:
  3371  1AA1  0820               	movf	___awmod@divisor,w
  3372  1AA2  02A2               	subwf	___awmod@dividend,f
  3373  1AA3  0821               	movf	___awmod@divisor+1,w
  3374  1AA4  1C03               	skipc
  3375  1AA5  03A3               	decf	___awmod@dividend+1,f
  3376  1AA6  02A3               	subwf	___awmod@dividend+1,f
  3377  1AA7                     l3602:
  3378  1AA7  3001               	movlw	1
  3379  1AA8                     u5805:
  3380  1AA8  1003               	clrc
  3381  1AA9  0CA1               	rrf	___awmod@divisor+1,f
  3382  1AAA  0CA0               	rrf	___awmod@divisor,f
  3383  1AAB  3EFF               	addlw	-1
  3384  1AAC  1D03               	skipz
  3385  1AAD  2AA8               	goto	u5805
  3386  1AAE                     l3604:
  3387  1AAE  3001               	movlw	1
  3388  1AAF  02A4               	subwf	___awmod@counter,f
  3389  1AB0  1D03               	btfss	3,2
  3390  1AB1  2AB3               	goto	u5811
  3391  1AB2  2AB4               	goto	u5810
  3392  1AB3                     u5811:
  3393  1AB3  2A97               	goto	l3598
  3394  1AB4                     u5810:
  3395  1AB4                     l3606:
  3396  1AB4  0825               	movf	___awmod@sign,w
  3397  1AB5  1903               	btfsc	3,2
  3398  1AB6  2AB8               	goto	u5821
  3399  1AB7  2AB9               	goto	u5820
  3400  1AB8                     u5821:
  3401  1AB8  2ABE               	goto	l3610
  3402  1AB9                     u5820:
  3403  1AB9                     l3608:
  3404  1AB9  09A2               	comf	___awmod@dividend,f
  3405  1ABA  09A3               	comf	___awmod@dividend+1,f
  3406  1ABB  0AA2               	incf	___awmod@dividend,f
  3407  1ABC  1903               	skipnz
  3408  1ABD  0AA3               	incf	___awmod@dividend+1,f
  3409  1ABE                     l3610:
  3410  1ABE  0823               	movf	___awmod@dividend+1,w
  3411  1ABF  00A1               	movwf	?___awmod+1
  3412  1AC0  0822               	movf	___awmod@dividend,w
  3413  1AC1  00A0               	movwf	?___awmod
  3414  1AC2                     l521:
  3415  1AC2  0008               	return
  3416  1AC3                     __end_of___awmod:
  3417                           
  3418                           	psect	text4
  3419  1B91                     __ptext4:	
  3420 ;; *************** function ___awdiv *****************
  3421 ;; Defined at:
  3422 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  divisor         2    6[BANK0 ] int 
  3425 ;;  dividend        2    8[BANK0 ] int 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  quotient        2   12[BANK0 ] int 
  3428 ;;  sign            1   11[BANK0 ] unsigned char 
  3429 ;;  counter         1   10[BANK0 ] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  2    6[BANK0 ] int 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         0       4       0       0       0
  3440 ;;      Locals:         0       4       0       0       0
  3441 ;;      Temps:          1       0       0       0       0
  3442 ;;      Totals:         1       8       0       0       0
  3443 ;;Total ram usage:        9 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_scale
  3450 ;;		_sprintf
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function ___awdiv
  3456  1B91                     ___awdiv:
  3457  1B91                     l3532:	
  3458                           ;incstack = 0
  3459                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3460                           
  3461  1B91  1283               	bcf	3,5	;RP0=0, select bank0
  3462  1B92  1303               	bcf	3,6	;RP1=0, select bank0
  3463  1B93  01AB               	clrf	___awdiv@sign
  3464  1B94                     l3534:
  3465  1B94  1FA7               	btfss	___awdiv@divisor+1,7
  3466  1B95  2B97               	goto	u5641
  3467  1B96  2B98               	goto	u5640
  3468  1B97                     u5641:
  3469  1B97  2B9F               	goto	l3540
  3470  1B98                     u5640:
  3471  1B98                     l3536:
  3472  1B98  09A6               	comf	___awdiv@divisor,f
  3473  1B99  09A7               	comf	___awdiv@divisor+1,f
  3474  1B9A  0AA6               	incf	___awdiv@divisor,f
  3475  1B9B  1903               	skipnz
  3476  1B9C  0AA7               	incf	___awdiv@divisor+1,f
  3477  1B9D                     l3538:
  3478  1B9D  01AB               	clrf	___awdiv@sign
  3479  1B9E  0AAB               	incf	___awdiv@sign,f
  3480  1B9F                     l3540:
  3481  1B9F  1FA9               	btfss	___awdiv@dividend+1,7
  3482  1BA0  2BA2               	goto	u5651
  3483  1BA1  2BA3               	goto	u5650
  3484  1BA2                     u5651:
  3485  1BA2  2BAC               	goto	l3546
  3486  1BA3                     u5650:
  3487  1BA3                     l3542:
  3488  1BA3  09A8               	comf	___awdiv@dividend,f
  3489  1BA4  09A9               	comf	___awdiv@dividend+1,f
  3490  1BA5  0AA8               	incf	___awdiv@dividend,f
  3491  1BA6  1903               	skipnz
  3492  1BA7  0AA9               	incf	___awdiv@dividend+1,f
  3493  1BA8                     l3544:
  3494  1BA8  3001               	movlw	1
  3495  1BA9  00F5               	movwf	??___awdiv
  3496  1BAA  0875               	movf	??___awdiv,w
  3497  1BAB  06AB               	xorwf	___awdiv@sign,f
  3498  1BAC                     l3546:
  3499  1BAC  01AC               	clrf	___awdiv@quotient
  3500  1BAD  01AD               	clrf	___awdiv@quotient+1
  3501  1BAE                     l3548:
  3502  1BAE  0826               	movf	___awdiv@divisor,w
  3503  1BAF  0427               	iorwf	___awdiv@divisor+1,w
  3504  1BB0  1903               	btfsc	3,2
  3505  1BB1  2BB3               	goto	u5661
  3506  1BB2  2BB4               	goto	u5660
  3507  1BB3                     u5661:
  3508  1BB3  2BEB               	goto	l3568
  3509  1BB4                     u5660:
  3510  1BB4                     l3550:
  3511  1BB4  01AA               	clrf	___awdiv@counter
  3512  1BB5  0AAA               	incf	___awdiv@counter,f
  3513  1BB6  2BC2               	goto	l3556
  3514  1BB7                     l3552:
  3515  1BB7  3001               	movlw	1
  3516  1BB8                     u5675:
  3517  1BB8  1003               	clrc
  3518  1BB9  0DA6               	rlf	___awdiv@divisor,f
  3519  1BBA  0DA7               	rlf	___awdiv@divisor+1,f
  3520  1BBB  3EFF               	addlw	-1
  3521  1BBC  1D03               	skipz
  3522  1BBD  2BB8               	goto	u5675
  3523  1BBE                     l3554:
  3524  1BBE  3001               	movlw	1
  3525  1BBF  00F5               	movwf	??___awdiv
  3526  1BC0  0875               	movf	??___awdiv,w
  3527  1BC1  07AA               	addwf	___awdiv@counter,f
  3528  1BC2                     l3556:
  3529  1BC2  1FA7               	btfss	___awdiv@divisor+1,7
  3530  1BC3  2BC5               	goto	u5681
  3531  1BC4  2BC6               	goto	u5680
  3532  1BC5                     u5681:
  3533  1BC5  2BB7               	goto	l3552
  3534  1BC6                     u5680:
  3535  1BC6                     l3558:
  3536  1BC6  3001               	movlw	1
  3537  1BC7                     u5695:
  3538  1BC7  1003               	clrc
  3539  1BC8  0DAC               	rlf	___awdiv@quotient,f
  3540  1BC9  0DAD               	rlf	___awdiv@quotient+1,f
  3541  1BCA  3EFF               	addlw	-1
  3542  1BCB  1D03               	skipz
  3543  1BCC  2BC7               	goto	u5695
  3544  1BCD  0827               	movf	___awdiv@divisor+1,w
  3545  1BCE  0229               	subwf	___awdiv@dividend+1,w
  3546  1BCF  1D03               	skipz
  3547  1BD0  2BD3               	goto	u5705
  3548  1BD1  0826               	movf	___awdiv@divisor,w
  3549  1BD2  0228               	subwf	___awdiv@dividend,w
  3550  1BD3                     u5705:
  3551  1BD3  1C03               	skipc
  3552  1BD4  2BD6               	goto	u5701
  3553  1BD5  2BD7               	goto	u5700
  3554  1BD6                     u5701:
  3555  1BD6  2BDE               	goto	l3564
  3556  1BD7                     u5700:
  3557  1BD7                     l3560:
  3558  1BD7  0826               	movf	___awdiv@divisor,w
  3559  1BD8  02A8               	subwf	___awdiv@dividend,f
  3560  1BD9  0827               	movf	___awdiv@divisor+1,w
  3561  1BDA  1C03               	skipc
  3562  1BDB  03A9               	decf	___awdiv@dividend+1,f
  3563  1BDC  02A9               	subwf	___awdiv@dividend+1,f
  3564  1BDD                     l3562:
  3565  1BDD  142C               	bsf	___awdiv@quotient,0
  3566  1BDE                     l3564:
  3567  1BDE  3001               	movlw	1
  3568  1BDF                     u5715:
  3569  1BDF  1003               	clrc
  3570  1BE0  0CA7               	rrf	___awdiv@divisor+1,f
  3571  1BE1  0CA6               	rrf	___awdiv@divisor,f
  3572  1BE2  3EFF               	addlw	-1
  3573  1BE3  1D03               	skipz
  3574  1BE4  2BDF               	goto	u5715
  3575  1BE5                     l3566:
  3576  1BE5  3001               	movlw	1
  3577  1BE6  02AA               	subwf	___awdiv@counter,f
  3578  1BE7  1D03               	btfss	3,2
  3579  1BE8  2BEA               	goto	u5721
  3580  1BE9  2BEB               	goto	u5720
  3581  1BEA                     u5721:
  3582  1BEA  2BC6               	goto	l3558
  3583  1BEB                     u5720:
  3584  1BEB                     l3568:
  3585  1BEB  082B               	movf	___awdiv@sign,w
  3586  1BEC  1903               	btfsc	3,2
  3587  1BED  2BEF               	goto	u5731
  3588  1BEE  2BF0               	goto	u5730
  3589  1BEF                     u5731:
  3590  1BEF  2BF5               	goto	l3572
  3591  1BF0                     u5730:
  3592  1BF0                     l3570:
  3593  1BF0  09AC               	comf	___awdiv@quotient,f
  3594  1BF1  09AD               	comf	___awdiv@quotient+1,f
  3595  1BF2  0AAC               	incf	___awdiv@quotient,f
  3596  1BF3  1903               	skipnz
  3597  1BF4  0AAD               	incf	___awdiv@quotient+1,f
  3598  1BF5                     l3572:
  3599  1BF5  082D               	movf	___awdiv@quotient+1,w
  3600  1BF6  00A7               	movwf	?___awdiv+1
  3601  1BF7  082C               	movf	___awdiv@quotient,w
  3602  1BF8  00A6               	movwf	?___awdiv
  3603  1BF9                     l508:
  3604  1BF9  0008               	return
  3605  1BFA                     __end_of___awdiv:
  3606                           
  3607                           	psect	text5
  3608  00F5                     __ptext5:	
  3609 ;; *************** function _isdigit *****************
  3610 ;; Defined at:
  3611 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  c               1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  c               1    5[COMMON] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;		None               void
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3625 ;;      Params:         0       0       0       0       0
  3626 ;;      Locals:         2       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0
  3628 ;;      Totals:         2       0       0       0       0
  3629 ;;Total ram usage:        2 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_sprintf
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _isdigit
  3641  00F5                     _isdigit:
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3645                           ;isdigit@c stored from wreg
  3646  00F5  00F5               	movwf	isdigit@c
  3647  00F6                     l4084:
  3648  00F6  01F4               	clrf	_isdigit$735
  3649  00F7                     l4086:
  3650  00F7  303A               	movlw	58
  3651  00F8  0275               	subwf	isdigit@c,w
  3652  00F9  1803               	skipnc
  3653  00FA  28FC               	goto	u7051
  3654  00FB  28FD               	goto	u7050
  3655  00FC                     u7051:
  3656  00FC  2905               	goto	l4092
  3657  00FD                     u7050:
  3658  00FD                     l4088:
  3659  00FD  3030               	movlw	48
  3660  00FE  0275               	subwf	isdigit@c,w
  3661  00FF  1C03               	skipc
  3662  0100  2902               	goto	u7061
  3663  0101  2903               	goto	u7060
  3664  0102                     u7061:
  3665  0102  2905               	goto	l4092
  3666  0103                     u7060:
  3667  0103                     l4090:
  3668  0103  01F4               	clrf	_isdigit$735
  3669  0104  0AF4               	incf	_isdigit$735,f
  3670  0105                     l4092:
  3671  0105  0C74               	rrf	_isdigit$735,w
  3672  0106                     l842:
  3673  0106  0008               	return
  3674  0107                     __end_of_isdigit:
  3675                           
  3676                           	psect	text6
  3677  002B                     __ptext6:	
  3678 ;; *************** function _fround *****************
  3679 ;; Defined at:
  3680 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  prec            1    wreg     unsigned char 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  prec            1   71[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  4   52[BANK0 ] unsigned char 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       4       0       0       0
  3695 ;;      Locals:         0       9       0       0       0
  3696 ;;      Temps:          0       7       0       0       0
  3697 ;;      Totals:         0      20       0       0       0
  3698 ;;Total ram usage:       20 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		___flmul
  3703 ;;		___lwdiv
  3704 ;;		___lwmod
  3705 ;; This function is called by:
  3706 ;;		_sprintf
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _fround
  3712  002B                     _fround:
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3716                           ;fround@prec stored from wreg
  3717  002B  1283               	bcf	3,5	;RP0=0, select bank0
  3718  002C  1303               	bcf	3,6	;RP1=0, select bank0
  3719  002D  00E7               	movwf	fround@prec
  3720  002E                     l4026:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3723  002E  306E               	movlw	110
  3724  002F  0267               	subwf	fround@prec,w
  3725  0030  1C03               	skipc
  3726  0031  2833               	goto	u6801
  3727  0032  2834               	goto	u6800
  3728  0033                     u6801:
  3729  0033  2943               	goto	l4034
  3730  0034                     u6800:
  3731  0034                     l4028:
  3732                           
  3733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3734  0034  303F               	movlw	63
  3735  0035  00BD               	movwf	___flmul@b+3
  3736  0036  3000               	movlw	0
  3737  0037  00BC               	movwf	___flmul@b+2
  3738  0038  3000               	movlw	0
  3739  0039  00BB               	movwf	___flmul@b+1
  3740  003A  3000               	movlw	0
  3741  003B  00BA               	movwf	___flmul@b
  3742  003C  3064               	movlw	100
  3743  003D  00A4               	movwf	___lwdiv@divisor
  3744  003E  3000               	movlw	0
  3745  003F  00A5               	movwf	___lwdiv@divisor+1
  3746  0040  0867               	movf	fround@prec,w
  3747  0041  00D8               	movwf	??_fround
  3748  0042  01D9               	clrf	??_fround+1
  3749  0043  0858               	movf	??_fround,w
  3750  0044  00A6               	movwf	___lwdiv@dividend
  3751  0045  0859               	movf	??_fround+1,w
  3752  0046  00A7               	movwf	___lwdiv@dividend+1
  3753  0047  160A  158A  20D4  120A  118A  	fcall	___lwdiv
  3754  004C  1283               	bcf	3,5	;RP0=0, select bank0
  3755  004D  1303               	bcf	3,6	;RP1=0, select bank0
  3756  004E  0824               	movf	?___lwdiv,w
  3757  004F  00DA               	movwf	??_fround+2
  3758  0050  3001               	movlw	1
  3759  0051                     u6815:
  3760  0051  1003               	clrc
  3761  0052  0DDA               	rlf	??_fround+2,f
  3762  0053  3EFF               	addlw	-1
  3763  0054  1D03               	skipz
  3764  0055  2851               	goto	u6815
  3765  0056  1003               	clrc
  3766  0057  0D5A               	rlf	??_fround+2,w
  3767  0058  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3768  0059  0084               	movwf	4
  3769  005A  160A  158A  2000  120A  118A  	fcall	stringdir
  3770  005F  00DB               	movwf	??_fround+3
  3771  0060  160A  158A  2000  120A  118A  	fcall	stringdir
  3772  0065  00DC               	movwf	??_fround+4
  3773  0066  160A  158A  2000  120A  118A  	fcall	stringdir
  3774  006B  00DD               	movwf	??_fround+5
  3775  006C  160A  158A  2000  120A  118A  	fcall	stringdir
  3776  0071  00DE               	movwf	??_fround+6
  3777  0072  085E               	movf	??_fround+6,w
  3778  0073  00C1               	movwf	___flmul@a+3
  3779  0074  085D               	movf	??_fround+5,w
  3780  0075  00C0               	movwf	___flmul@a+2
  3781  0076  085C               	movf	??_fround+4,w
  3782  0077  00BF               	movwf	___flmul@a+1
  3783  0078  085B               	movf	??_fround+3,w
  3784  0079  00BE               	movwf	___flmul@a
  3785  007A  160A  118A  249F  120A  118A  	fcall	___flmul
  3786  007F  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0080  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0081  083D               	movf	?___flmul+3,w
  3789  0082  00E6               	movwf	_fround$925+3
  3790  0083  083C               	movf	?___flmul+2,w
  3791  0084  00E5               	movwf	_fround$925+2
  3792  0085  083B               	movf	?___flmul+1,w
  3793  0086  00E4               	movwf	_fround$925+1
  3794  0087  083A               	movf	?___flmul,w
  3795  0088  00E3               	movwf	_fround$925
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3798  0089  300A               	movlw	10
  3799  008A  00A4               	movwf	___lwdiv@divisor
  3800  008B  3000               	movlw	0
  3801  008C  00A5               	movwf	___lwdiv@divisor+1
  3802  008D  0867               	movf	fround@prec,w
  3803  008E  00D8               	movwf	??_fround
  3804  008F  01D9               	clrf	??_fround+1
  3805  0090  0858               	movf	??_fround,w
  3806  0091  00A2               	movwf	___lwmod@dividend
  3807  0092  0859               	movf	??_fround+1,w
  3808  0093  00A3               	movwf	___lwmod@dividend+1
  3809  0094  3064               	movlw	100
  3810  0095  00A0               	movwf	___lwmod@divisor
  3811  0096  3000               	movlw	0
  3812  0097  00A1               	movwf	___lwmod@divisor+1
  3813  0098  120A  118A  20B9  120A  118A  	fcall	___lwmod
  3814  009D  1283               	bcf	3,5	;RP0=0, select bank0
  3815  009E  1303               	bcf	3,6	;RP1=0, select bank0
  3816  009F  0821               	movf	?___lwmod+1,w
  3817  00A0  00A7               	movwf	___lwdiv@dividend+1
  3818  00A1  0820               	movf	?___lwmod,w
  3819  00A2  00A6               	movwf	___lwdiv@dividend
  3820  00A3  160A  158A  20D4  120A  118A  	fcall	___lwdiv
  3821  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  3822  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  3823  00AA  0824               	movf	?___lwdiv,w
  3824  00AB  00DA               	movwf	??_fround+2
  3825  00AC  3001               	movlw	1
  3826  00AD                     u6825:
  3827  00AD  1003               	clrc
  3828  00AE  0DDA               	rlf	??_fround+2,f
  3829  00AF  3EFF               	addlw	-1
  3830  00B0  1D03               	skipz
  3831  00B1  28AD               	goto	u6825
  3832  00B2  1003               	clrc
  3833  00B3  0D5A               	rlf	??_fround+2,w
  3834  00B4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3835  00B5  0084               	movwf	4
  3836  00B6  160A  158A  2000  120A  118A  	fcall	stringdir
  3837  00BB  00DB               	movwf	??_fround+3
  3838  00BC  160A  158A  2000  120A  118A  	fcall	stringdir
  3839  00C1  00DC               	movwf	??_fround+4
  3840  00C2  160A  158A  2000  120A  118A  	fcall	stringdir
  3841  00C7  00DD               	movwf	??_fround+5
  3842  00C8  160A  158A  2000  120A  118A  	fcall	stringdir
  3843  00CD  00DE               	movwf	??_fround+6
  3844  00CE  085E               	movf	??_fround+6,w
  3845  00CF  00BD               	movwf	___flmul@b+3
  3846  00D0  085D               	movf	??_fround+5,w
  3847  00D1  00BC               	movwf	___flmul@b+2
  3848  00D2  085C               	movf	??_fround+4,w
  3849  00D3  00BB               	movwf	___flmul@b+1
  3850  00D4  085B               	movf	??_fround+3,w
  3851  00D5  00BA               	movwf	___flmul@b
  3852  00D6  0866               	movf	_fround$925+3,w
  3853  00D7  00C1               	movwf	___flmul@a+3
  3854  00D8  0865               	movf	_fround$925+2,w
  3855  00D9  00C0               	movwf	___flmul@a+2
  3856  00DA  0864               	movf	_fround$925+1,w
  3857  00DB  00BF               	movwf	___flmul@a+1
  3858  00DC  0863               	movf	_fround$925,w
  3859  00DD  00BE               	movwf	___flmul@a
  3860  00DE  160A  118A  249F  120A  118A  	fcall	___flmul
  3861  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  3862  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  3863  00E5  083D               	movf	?___flmul+3,w
  3864  00E6  00E2               	movwf	_fround$926+3
  3865  00E7  083C               	movf	?___flmul+2,w
  3866  00E8  00E1               	movwf	_fround$926+2
  3867  00E9  083B               	movf	?___flmul+1,w
  3868  00EA  00E0               	movwf	_fround$926+1
  3869  00EB  083A               	movf	?___flmul,w
  3870  00EC  00DF               	movwf	_fround$926
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3873  00ED  300A               	movlw	10
  3874  00EE  00A0               	movwf	___lwmod@divisor
  3875  00EF  3000               	movlw	0
  3876  00F0  00A1               	movwf	___lwmod@divisor+1
  3877  00F1  0867               	movf	fround@prec,w
  3878  00F2  00D8               	movwf	??_fround
  3879  00F3  01D9               	clrf	??_fround+1
  3880  00F4  0858               	movf	??_fround,w
  3881  00F5  00A2               	movwf	___lwmod@dividend
  3882  00F6  0859               	movf	??_fround+1,w
  3883  00F7  00A3               	movwf	___lwmod@dividend+1
  3884  00F8  120A  118A  20B9  120A  118A  	fcall	___lwmod
  3885  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  3886  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  3887  00FF  0820               	movf	?___lwmod,w
  3888  0100  00DA               	movwf	??_fround+2
  3889  0101  3001               	movlw	1
  3890  0102                     u6835:
  3891  0102  1003               	clrc
  3892  0103  0DDA               	rlf	??_fround+2,f
  3893  0104  3EFF               	addlw	-1
  3894  0105  1D03               	skipz
  3895  0106  2902               	goto	u6835
  3896  0107  1003               	clrc
  3897  0108  0D5A               	rlf	??_fround+2,w
  3898  0109  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3899  010A  0084               	movwf	4
  3900  010B  160A  158A  2000  120A  118A  	fcall	stringdir
  3901  0110  00DB               	movwf	??_fround+3
  3902  0111  160A  158A  2000  120A  118A  	fcall	stringdir
  3903  0116  00DC               	movwf	??_fround+4
  3904  0117  160A  158A  2000  120A  118A  	fcall	stringdir
  3905  011C  00DD               	movwf	??_fround+5
  3906  011D  160A  158A  2000  120A  118A  	fcall	stringdir
  3907  0122  00DE               	movwf	??_fround+6
  3908  0123  085E               	movf	??_fround+6,w
  3909  0124  00BD               	movwf	___flmul@b+3
  3910  0125  085D               	movf	??_fround+5,w
  3911  0126  00BC               	movwf	___flmul@b+2
  3912  0127  085C               	movf	??_fround+4,w
  3913  0128  00BB               	movwf	___flmul@b+1
  3914  0129  085B               	movf	??_fround+3,w
  3915  012A  00BA               	movwf	___flmul@b
  3916  012B  0862               	movf	_fround$926+3,w
  3917  012C  00C1               	movwf	___flmul@a+3
  3918  012D  0861               	movf	_fround$926+2,w
  3919  012E  00C0               	movwf	___flmul@a+2
  3920  012F  0860               	movf	_fround$926+1,w
  3921  0130  00BF               	movwf	___flmul@a+1
  3922  0131  085F               	movf	_fround$926,w
  3923  0132  00BE               	movwf	___flmul@a
  3924  0133  160A  118A  249F  120A  118A  	fcall	___flmul
  3925  0138  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0139  1303               	bcf	3,6	;RP1=0, select bank0
  3927  013A  083D               	movf	?___flmul+3,w
  3928  013B  00D7               	movwf	?_fround+3
  3929  013C  083C               	movf	?___flmul+2,w
  3930  013D  00D6               	movwf	?_fround+2
  3931  013E  083B               	movf	?___flmul+1,w
  3932  013F  00D5               	movwf	?_fround+1
  3933  0140  083A               	movf	?___flmul,w
  3934  0141  00D4               	movwf	?_fround
  3935  0142  2A37               	goto	l278
  3936  0143                     l4034:
  3937  0143  300B               	movlw	11
  3938  0144  0267               	subwf	fround@prec,w
  3939  0145  1C03               	skipc
  3940  0146  2948               	goto	u6841
  3941  0147  2949               	goto	u6840
  3942  0148                     u6841:
  3943  0148  29F4               	goto	l4040
  3944  0149                     u6840:
  3945  0149                     l4036:
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3948  0149  303F               	movlw	63
  3949  014A  00BD               	movwf	___flmul@b+3
  3950  014B  3000               	movlw	0
  3951  014C  00BC               	movwf	___flmul@b+2
  3952  014D  3000               	movlw	0
  3953  014E  00BB               	movwf	___flmul@b+1
  3954  014F  3000               	movlw	0
  3955  0150  00BA               	movwf	___flmul@b
  3956  0151  300A               	movlw	10
  3957  0152  00A4               	movwf	___lwdiv@divisor
  3958  0153  3000               	movlw	0
  3959  0154  00A5               	movwf	___lwdiv@divisor+1
  3960  0155  0867               	movf	fround@prec,w
  3961  0156  00D8               	movwf	??_fround
  3962  0157  01D9               	clrf	??_fround+1
  3963  0158  0858               	movf	??_fround,w
  3964  0159  00A6               	movwf	___lwdiv@dividend
  3965  015A  0859               	movf	??_fround+1,w
  3966  015B  00A7               	movwf	___lwdiv@dividend+1
  3967  015C  160A  158A  20D4  120A  118A  	fcall	___lwdiv
  3968  0161  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0162  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0163  0824               	movf	?___lwdiv,w
  3971  0164  00DA               	movwf	??_fround+2
  3972  0165  3001               	movlw	1
  3973  0166                     u6855:
  3974  0166  1003               	clrc
  3975  0167  0DDA               	rlf	??_fround+2,f
  3976  0168  3EFF               	addlw	-1
  3977  0169  1D03               	skipz
  3978  016A  2966               	goto	u6855
  3979  016B  1003               	clrc
  3980  016C  0D5A               	rlf	??_fround+2,w
  3981  016D  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3982  016E  0084               	movwf	4
  3983  016F  160A  158A  2000  120A  118A  	fcall	stringdir
  3984  0174  00DB               	movwf	??_fround+3
  3985  0175  160A  158A  2000  120A  118A  	fcall	stringdir
  3986  017A  00DC               	movwf	??_fround+4
  3987  017B  160A  158A  2000  120A  118A  	fcall	stringdir
  3988  0180  00DD               	movwf	??_fround+5
  3989  0181  160A  158A  2000  120A  118A  	fcall	stringdir
  3990  0186  00DE               	movwf	??_fround+6
  3991  0187  085E               	movf	??_fround+6,w
  3992  0188  00C1               	movwf	___flmul@a+3
  3993  0189  085D               	movf	??_fround+5,w
  3994  018A  00C0               	movwf	___flmul@a+2
  3995  018B  085C               	movf	??_fround+4,w
  3996  018C  00BF               	movwf	___flmul@a+1
  3997  018D  085B               	movf	??_fround+3,w
  3998  018E  00BE               	movwf	___flmul@a
  3999  018F  160A  118A  249F  120A  118A  	fcall	___flmul
  4000  0194  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0195  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0196  083D               	movf	?___flmul+3,w
  4003  0197  00E6               	movwf	_fround$925+3
  4004  0198  083C               	movf	?___flmul+2,w
  4005  0199  00E5               	movwf	_fround$925+2
  4006  019A  083B               	movf	?___flmul+1,w
  4007  019B  00E4               	movwf	_fround$925+1
  4008  019C  083A               	movf	?___flmul,w
  4009  019D  00E3               	movwf	_fround$925
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4012  019E  300A               	movlw	10
  4013  019F  00A0               	movwf	___lwmod@divisor
  4014  01A0  3000               	movlw	0
  4015  01A1  00A1               	movwf	___lwmod@divisor+1
  4016  01A2  0867               	movf	fround@prec,w
  4017  01A3  00D8               	movwf	??_fround
  4018  01A4  01D9               	clrf	??_fround+1
  4019  01A5  0858               	movf	??_fround,w
  4020  01A6  00A2               	movwf	___lwmod@dividend
  4021  01A7  0859               	movf	??_fround+1,w
  4022  01A8  00A3               	movwf	___lwmod@dividend+1
  4023  01A9  120A  118A  20B9  120A  118A  	fcall	___lwmod
  4024  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  4025  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  4026  01B0  0820               	movf	?___lwmod,w
  4027  01B1  00DA               	movwf	??_fround+2
  4028  01B2  3001               	movlw	1
  4029  01B3                     u6865:
  4030  01B3  1003               	clrc
  4031  01B4  0DDA               	rlf	??_fround+2,f
  4032  01B5  3EFF               	addlw	-1
  4033  01B6  1D03               	skipz
  4034  01B7  29B3               	goto	u6865
  4035  01B8  1003               	clrc
  4036  01B9  0D5A               	rlf	??_fround+2,w
  4037  01BA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4038  01BB  0084               	movwf	4
  4039  01BC  160A  158A  2000  120A  118A  	fcall	stringdir
  4040  01C1  00DB               	movwf	??_fround+3
  4041  01C2  160A  158A  2000  120A  118A  	fcall	stringdir
  4042  01C7  00DC               	movwf	??_fround+4
  4043  01C8  160A  158A  2000  120A  118A  	fcall	stringdir
  4044  01CD  00DD               	movwf	??_fround+5
  4045  01CE  160A  158A  2000  120A  118A  	fcall	stringdir
  4046  01D3  00DE               	movwf	??_fround+6
  4047  01D4  085E               	movf	??_fround+6,w
  4048  01D5  00BD               	movwf	___flmul@b+3
  4049  01D6  085D               	movf	??_fround+5,w
  4050  01D7  00BC               	movwf	___flmul@b+2
  4051  01D8  085C               	movf	??_fround+4,w
  4052  01D9  00BB               	movwf	___flmul@b+1
  4053  01DA  085B               	movf	??_fround+3,w
  4054  01DB  00BA               	movwf	___flmul@b
  4055  01DC  0866               	movf	_fround$925+3,w
  4056  01DD  00C1               	movwf	___flmul@a+3
  4057  01DE  0865               	movf	_fround$925+2,w
  4058  01DF  00C0               	movwf	___flmul@a+2
  4059  01E0  0864               	movf	_fround$925+1,w
  4060  01E1  00BF               	movwf	___flmul@a+1
  4061  01E2  0863               	movf	_fround$925,w
  4062  01E3  00BE               	movwf	___flmul@a
  4063  01E4  160A  118A  249F  120A  118A  	fcall	___flmul
  4064  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  4065  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  4066  01EB  083D               	movf	?___flmul+3,w
  4067  01EC  00D7               	movwf	?_fround+3
  4068  01ED  083C               	movf	?___flmul+2,w
  4069  01EE  00D6               	movwf	?_fround+2
  4070  01EF  083B               	movf	?___flmul+1,w
  4071  01F0  00D5               	movwf	?_fround+1
  4072  01F1  083A               	movf	?___flmul,w
  4073  01F2  00D4               	movwf	?_fround
  4074  01F3  2A37               	goto	l278
  4075  01F4                     l4040:
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4078  01F4  303F               	movlw	63
  4079  01F5  00BD               	movwf	___flmul@b+3
  4080  01F6  3000               	movlw	0
  4081  01F7  00BC               	movwf	___flmul@b+2
  4082  01F8  3000               	movlw	0
  4083  01F9  00BB               	movwf	___flmul@b+1
  4084  01FA  3000               	movlw	0
  4085  01FB  00BA               	movwf	___flmul@b
  4086  01FC  0867               	movf	fround@prec,w
  4087  01FD  00D8               	movwf	??_fround
  4088  01FE  3001               	movlw	1
  4089  01FF                     u6875:
  4090  01FF  1003               	clrc
  4091  0200  0DD8               	rlf	??_fround,f
  4092  0201  3EFF               	addlw	-1
  4093  0202  1D03               	skipz
  4094  0203  29FF               	goto	u6875
  4095  0204  1003               	clrc
  4096  0205  0D58               	rlf	??_fround,w
  4097  0206  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4098  0207  0084               	movwf	4
  4099  0208  160A  158A  2000  120A  118A  	fcall	stringdir
  4100  020D  00D9               	movwf	??_fround+1
  4101  020E  160A  158A  2000  120A  118A  	fcall	stringdir
  4102  0213  00DA               	movwf	??_fround+2
  4103  0214  160A  158A  2000  120A  118A  	fcall	stringdir
  4104  0219  00DB               	movwf	??_fround+3
  4105  021A  160A  158A  2000  120A  118A  	fcall	stringdir
  4106  021F  00DC               	movwf	??_fround+4
  4107  0220  085C               	movf	??_fround+4,w
  4108  0221  00C1               	movwf	___flmul@a+3
  4109  0222  085B               	movf	??_fround+3,w
  4110  0223  00C0               	movwf	___flmul@a+2
  4111  0224  085A               	movf	??_fround+2,w
  4112  0225  00BF               	movwf	___flmul@a+1
  4113  0226  0859               	movf	??_fround+1,w
  4114  0227  00BE               	movwf	___flmul@a
  4115  0228  160A  118A  249F  120A  118A  	fcall	___flmul
  4116  022D  1283               	bcf	3,5	;RP0=0, select bank0
  4117  022E  1303               	bcf	3,6	;RP1=0, select bank0
  4118  022F  083D               	movf	?___flmul+3,w
  4119  0230  00D7               	movwf	?_fround+3
  4120  0231  083C               	movf	?___flmul+2,w
  4121  0232  00D6               	movwf	?_fround+2
  4122  0233  083B               	movf	?___flmul+1,w
  4123  0234  00D5               	movwf	?_fround+1
  4124  0235  083A               	movf	?___flmul,w
  4125  0236  00D4               	movwf	?_fround
  4126  0237                     l278:
  4127  0237  0008               	return
  4128  0238                     __end_of_fround:
  4129                           
  4130                           	psect	text7
  4131  00B9                     __ptext7:	
  4132 ;; *************** function ___lwmod *****************
  4133 ;; Defined at:
  4134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  divisor         2    0[BANK0 ] unsigned int 
  4137 ;;  dividend        2    2[BANK0 ] unsigned int 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  counter         1    5[COMMON] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2    0[BANK0 ] unsigned int 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4149 ;;      Params:         0       4       0       0       0
  4150 ;;      Locals:         1       0       0       0       0
  4151 ;;      Temps:          1       0       0       0       0
  4152 ;;      Totals:         2       4       0       0       0
  4153 ;;Total ram usage:        6 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_fround
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function ___lwmod
  4165  00B9                     ___lwmod:
  4166  00B9                     l3640:	
  4167                           ;incstack = 0
  4168                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4169                           
  4170  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  4171  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  4172  00BB  0820               	movf	___lwmod@divisor,w
  4173  00BC  0421               	iorwf	___lwmod@divisor+1,w
  4174  00BD  1903               	btfsc	3,2
  4175  00BE  28C0               	goto	u5901
  4176  00BF  28C1               	goto	u5900
  4177  00C0                     u5901:
  4178  00C0  28F0               	goto	l3658
  4179  00C1                     u5900:
  4180  00C1                     l3642:
  4181  00C1  01F5               	clrf	___lwmod@counter
  4182  00C2  0AF5               	incf	___lwmod@counter,f
  4183  00C3  28CF               	goto	l3648
  4184  00C4                     l3644:
  4185  00C4  3001               	movlw	1
  4186  00C5                     u5915:
  4187  00C5  1003               	clrc
  4188  00C6  0DA0               	rlf	___lwmod@divisor,f
  4189  00C7  0DA1               	rlf	___lwmod@divisor+1,f
  4190  00C8  3EFF               	addlw	-1
  4191  00C9  1D03               	skipz
  4192  00CA  28C5               	goto	u5915
  4193  00CB                     l3646:
  4194  00CB  3001               	movlw	1
  4195  00CC  00F4               	movwf	??___lwmod
  4196  00CD  0874               	movf	??___lwmod,w
  4197  00CE  07F5               	addwf	___lwmod@counter,f
  4198  00CF                     l3648:
  4199  00CF  1FA1               	btfss	___lwmod@divisor+1,7
  4200  00D0  28D2               	goto	u5921
  4201  00D1  28D3               	goto	u5920
  4202  00D2                     u5921:
  4203  00D2  28C4               	goto	l3644
  4204  00D3                     u5920:
  4205  00D3                     l3650:
  4206  00D3  0821               	movf	___lwmod@divisor+1,w
  4207  00D4  0223               	subwf	___lwmod@dividend+1,w
  4208  00D5  1D03               	skipz
  4209  00D6  28D9               	goto	u5935
  4210  00D7  0820               	movf	___lwmod@divisor,w
  4211  00D8  0222               	subwf	___lwmod@dividend,w
  4212  00D9                     u5935:
  4213  00D9  1C03               	skipc
  4214  00DA  28DC               	goto	u5931
  4215  00DB  28DD               	goto	u5930
  4216  00DC                     u5931:
  4217  00DC  28E3               	goto	l3654
  4218  00DD                     u5930:
  4219  00DD                     l3652:
  4220  00DD  0820               	movf	___lwmod@divisor,w
  4221  00DE  02A2               	subwf	___lwmod@dividend,f
  4222  00DF  0821               	movf	___lwmod@divisor+1,w
  4223  00E0  1C03               	skipc
  4224  00E1  03A3               	decf	___lwmod@dividend+1,f
  4225  00E2  02A3               	subwf	___lwmod@dividend+1,f
  4226  00E3                     l3654:
  4227  00E3  3001               	movlw	1
  4228  00E4                     u5945:
  4229  00E4  1003               	clrc
  4230  00E5  0CA1               	rrf	___lwmod@divisor+1,f
  4231  00E6  0CA0               	rrf	___lwmod@divisor,f
  4232  00E7  3EFF               	addlw	-1
  4233  00E8  1D03               	skipz
  4234  00E9  28E4               	goto	u5945
  4235  00EA                     l3656:
  4236  00EA  3001               	movlw	1
  4237  00EB  02F5               	subwf	___lwmod@counter,f
  4238  00EC  1D03               	btfss	3,2
  4239  00ED  28EF               	goto	u5951
  4240  00EE  28F0               	goto	u5950
  4241  00EF                     u5951:
  4242  00EF  28D3               	goto	l3650
  4243  00F0                     u5950:
  4244  00F0                     l3658:
  4245  00F0  0823               	movf	___lwmod@dividend+1,w
  4246  00F1  00A1               	movwf	?___lwmod+1
  4247  00F2  0822               	movf	___lwmod@dividend,w
  4248  00F3  00A0               	movwf	?___lwmod
  4249  00F4                     l671:
  4250  00F4  0008               	return
  4251  00F5                     __end_of___lwmod:
  4252                           
  4253                           	psect	text8
  4254  1E85                     __ptext8:	
  4255 ;; *************** function __tdiv_to_l_ *****************
  4256 ;; Defined at:
  4257 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  f1              4    0[BANK0 ] float 
  4260 ;;  f2              4    4[BANK0 ] float 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  quot            4   12[BANK0 ] unsigned long 
  4263 ;;  exp1            1   17[BANK0 ] unsigned char 
  4264 ;;  cntr            1   16[BANK0 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  4    0[BANK0 ] unsigned long 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       8       0       0       0
  4275 ;;      Locals:         0       6       0       0       0
  4276 ;;      Temps:          0       4       0       0       0
  4277 ;;      Totals:         0      18       0       0       0
  4278 ;;Total ram usage:       18 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    1
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_sprintf
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function __tdiv_to_l_
  4290  1E85                     __tdiv_to_l_:
  4291  1E85                     l4096:	
  4292                           ;incstack = 0
  4293                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4294                           
  4295  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  4296  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  4297  1E87  0820               	movf	__tdiv_to_l_@f1,w
  4298  1E88  00A8               	movwf	??__tdiv_to_l_
  4299  1E89  0821               	movf	__tdiv_to_l_@f1+1,w
  4300  1E8A  00A9               	movwf	??__tdiv_to_l_+1
  4301  1E8B  0822               	movf	__tdiv_to_l_@f1+2,w
  4302  1E8C  00AA               	movwf	??__tdiv_to_l_+2
  4303  1E8D  1003               	clrc
  4304  1E8E  0D29               	rlf	??__tdiv_to_l_+1,w
  4305  1E8F  0D2A               	rlf	??__tdiv_to_l_+2,w
  4306  1E90  00AB               	movwf	??__tdiv_to_l_+3
  4307  1E91  082B               	movf	??__tdiv_to_l_+3,w
  4308  1E92  00B1               	movwf	__tdiv_to_l_@exp1
  4309  1E93  0831               	movf	__tdiv_to_l_@exp1,w
  4310  1E94  1D03               	btfss	3,2
  4311  1E95  2E97               	goto	u7071
  4312  1E96  2E98               	goto	u7070
  4313  1E97                     u7071:
  4314  1E97  2EA1               	goto	l4102
  4315  1E98                     u7070:
  4316  1E98                     l4098:
  4317  1E98  3000               	movlw	0
  4318  1E99  00A3               	movwf	?__tdiv_to_l_+3
  4319  1E9A  3000               	movlw	0
  4320  1E9B  00A2               	movwf	?__tdiv_to_l_+2
  4321  1E9C  3000               	movlw	0
  4322  1E9D  00A1               	movwf	?__tdiv_to_l_+1
  4323  1E9E  3000               	movlw	0
  4324  1E9F  00A0               	movwf	?__tdiv_to_l_
  4325  1EA0  2F41               	goto	l572
  4326  1EA1                     l4102:
  4327  1EA1  0824               	movf	__tdiv_to_l_@f2,w
  4328  1EA2  00A8               	movwf	??__tdiv_to_l_
  4329  1EA3  0825               	movf	__tdiv_to_l_@f2+1,w
  4330  1EA4  00A9               	movwf	??__tdiv_to_l_+1
  4331  1EA5  0826               	movf	__tdiv_to_l_@f2+2,w
  4332  1EA6  00AA               	movwf	??__tdiv_to_l_+2
  4333  1EA7  1003               	clrc
  4334  1EA8  0D29               	rlf	??__tdiv_to_l_+1,w
  4335  1EA9  0D2A               	rlf	??__tdiv_to_l_+2,w
  4336  1EAA  00AB               	movwf	??__tdiv_to_l_+3
  4337  1EAB  082B               	movf	??__tdiv_to_l_+3,w
  4338  1EAC  00B0               	movwf	__tdiv_to_l_@cntr
  4339  1EAD  0830               	movf	__tdiv_to_l_@cntr,w
  4340  1EAE  1D03               	btfss	3,2
  4341  1EAF  2EB1               	goto	u7081
  4342  1EB0  2EB2               	goto	u7080
  4343  1EB1                     u7081:
  4344  1EB1  2EB3               	goto	l573
  4345  1EB2                     u7080:
  4346  1EB2  2E98               	goto	l4098
  4347  1EB3                     l573:
  4348  1EB3  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4349  1EB4                     l4108:
  4350  1EB4  30FF               	movlw	255
  4351  1EB5  05A0               	andwf	__tdiv_to_l_@f1,f
  4352  1EB6  30FF               	movlw	255
  4353  1EB7  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4354  1EB8  3000               	movlw	0
  4355  1EB9  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4356  1EBA                     l4110:
  4357  1EBA  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4358  1EBB  30FF               	movlw	255
  4359  1EBC  05A4               	andwf	__tdiv_to_l_@f2,f
  4360  1EBD  30FF               	movlw	255
  4361  1EBE  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4362  1EBF  3000               	movlw	0
  4363  1EC0  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4364  1EC1  3000               	movlw	0
  4365  1EC2  00AF               	movwf	__tdiv_to_l_@quot+3
  4366  1EC3  3000               	movlw	0
  4367  1EC4  00AE               	movwf	__tdiv_to_l_@quot+2
  4368  1EC5  3000               	movlw	0
  4369  1EC6  00AD               	movwf	__tdiv_to_l_@quot+1
  4370  1EC7  3000               	movlw	0
  4371  1EC8  00AC               	movwf	__tdiv_to_l_@quot
  4372  1EC9                     l4112:
  4373  1EC9  307F               	movlw	127
  4374  1ECA  02B1               	subwf	__tdiv_to_l_@exp1,f
  4375  1ECB                     l4114:
  4376  1ECB  3098               	movlw	152
  4377  1ECC  0730               	addwf	__tdiv_to_l_@cntr,w
  4378  1ECD  00A8               	movwf	??__tdiv_to_l_
  4379  1ECE  0828               	movf	??__tdiv_to_l_,w
  4380  1ECF  02B1               	subwf	__tdiv_to_l_@exp1,f
  4381  1ED0  3018               	movlw	24
  4382  1ED1  00A8               	movwf	??__tdiv_to_l_
  4383  1ED2  0828               	movf	??__tdiv_to_l_,w
  4384  1ED3  00B0               	movwf	__tdiv_to_l_@cntr
  4385  1ED4                     l4116:
  4386  1ED4  3001               	movlw	1
  4387  1ED5  00A8               	movwf	??__tdiv_to_l_
  4388  1ED6                     u7095:
  4389  1ED6  1003               	clrc
  4390  1ED7  0DAC               	rlf	__tdiv_to_l_@quot,f
  4391  1ED8  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4392  1ED9  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4393  1EDA  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4394  1EDB  0BA8               	decfsz	??__tdiv_to_l_,f
  4395  1EDC  2ED6               	goto	u7095
  4396  1EDD                     l4118:
  4397  1EDD  0826               	movf	__tdiv_to_l_@f2+2,w
  4398  1EDE  0222               	subwf	__tdiv_to_l_@f1+2,w
  4399  1EDF  1D03               	skipz
  4400  1EE0  2EE7               	goto	u7105
  4401  1EE1  0825               	movf	__tdiv_to_l_@f2+1,w
  4402  1EE2  0221               	subwf	__tdiv_to_l_@f1+1,w
  4403  1EE3  1D03               	skipz
  4404  1EE4  2EE7               	goto	u7105
  4405  1EE5  0824               	movf	__tdiv_to_l_@f2,w
  4406  1EE6  0220               	subwf	__tdiv_to_l_@f1,w
  4407  1EE7                     u7105:
  4408  1EE7  1C03               	skipc
  4409  1EE8  2EEA               	goto	u7101
  4410  1EE9  2EEB               	goto	u7100
  4411  1EEA                     u7101:
  4412  1EEA  2EF6               	goto	l4124
  4413  1EEB                     u7100:
  4414  1EEB                     l4120:
  4415  1EEB  0824               	movf	__tdiv_to_l_@f2,w
  4416  1EEC  02A0               	subwf	__tdiv_to_l_@f1,f
  4417  1EED  0825               	movf	__tdiv_to_l_@f2+1,w
  4418  1EEE  1C03               	skipc
  4419  1EEF  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4420  1EF0  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4421  1EF1  0826               	movf	__tdiv_to_l_@f2+2,w
  4422  1EF2  1C03               	skipc
  4423  1EF3  0A26               	incf	__tdiv_to_l_@f2+2,w
  4424  1EF4  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4425  1EF5                     l4122:
  4426  1EF5  142C               	bsf	__tdiv_to_l_@quot,0
  4427  1EF6                     l4124:
  4428  1EF6  3001               	movlw	1
  4429  1EF7                     u7115:
  4430  1EF7  1003               	clrc
  4431  1EF8  0DA0               	rlf	__tdiv_to_l_@f1,f
  4432  1EF9  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4433  1EFA  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4434  1EFB  3EFF               	addlw	-1
  4435  1EFC  1D03               	skipz
  4436  1EFD  2EF7               	goto	u7115
  4437  1EFE                     l4126:
  4438  1EFE  3001               	movlw	1
  4439  1EFF  02B0               	subwf	__tdiv_to_l_@cntr,f
  4440  1F00  1D03               	btfss	3,2
  4441  1F01  2F03               	goto	u7121
  4442  1F02  2F04               	goto	u7120
  4443  1F03                     u7121:
  4444  1F03  2ED4               	goto	l4116
  4445  1F04                     u7120:
  4446  1F04                     l576:
  4447  1F04  1FB1               	btfss	__tdiv_to_l_@exp1,7
  4448  1F05  2F07               	goto	u7131
  4449  1F06  2F08               	goto	u7130
  4450  1F07                     u7131:
  4451  1F07  2F22               	goto	l4136
  4452  1F08                     u7130:
  4453  1F08                     l4128:
  4454  1F08  0831               	movf	__tdiv_to_l_@exp1,w
  4455  1F09  3A80               	xorlw	128
  4456  1F0A  3E97               	addlw	151
  4457  1F0B  1803               	skipnc
  4458  1F0C  2F0E               	goto	u7141
  4459  1F0D  2F0F               	goto	u7140
  4460  1F0E                     u7141:
  4461  1F0E  2F10               	goto	l4134
  4462  1F0F                     u7140:
  4463  1F0F  2E98               	goto	l4098
  4464  1F10                     l4134:
  4465  1F10  3001               	movlw	1
  4466  1F11                     u7155:
  4467  1F11  1003               	clrc
  4468  1F12  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  4469  1F13  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  4470  1F14  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  4471  1F15  0CAC               	rrf	__tdiv_to_l_@quot,f
  4472  1F16  3EFF               	addlw	-1
  4473  1F17  1D03               	skipz
  4474  1F18  2F11               	goto	u7155
  4475  1F19  3001               	movlw	1
  4476  1F1A  00A8               	movwf	??__tdiv_to_l_
  4477  1F1B  0828               	movf	??__tdiv_to_l_,w
  4478  1F1C  07B1               	addwf	__tdiv_to_l_@exp1,f
  4479  1F1D  1D03               	btfss	3,2
  4480  1F1E  2F20               	goto	u7161
  4481  1F1F  2F21               	goto	u7160
  4482  1F20                     u7161:
  4483  1F20  2F10               	goto	l4134
  4484  1F21                     u7160:
  4485  1F21  2F39               	goto	l4144
  4486  1F22                     l4136:
  4487  1F22  3018               	movlw	24
  4488  1F23  0231               	subwf	__tdiv_to_l_@exp1,w
  4489  1F24  1C03               	skipc
  4490  1F25  2F27               	goto	u7171
  4491  1F26  2F28               	goto	u7170
  4492  1F27                     u7171:
  4493  1F27  2F34               	goto	l583
  4494  1F28                     u7170:
  4495  1F28  2E98               	goto	l4098
  4496  1F29                     l4142:
  4497  1F29  3001               	movlw	1
  4498  1F2A  00A8               	movwf	??__tdiv_to_l_
  4499  1F2B                     u7185:
  4500  1F2B  1003               	clrc
  4501  1F2C  0DAC               	rlf	__tdiv_to_l_@quot,f
  4502  1F2D  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4503  1F2E  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4504  1F2F  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4505  1F30  0BA8               	decfsz	??__tdiv_to_l_,f
  4506  1F31  2F2B               	goto	u7185
  4507  1F32  3001               	movlw	1
  4508  1F33  02B1               	subwf	__tdiv_to_l_@exp1,f
  4509  1F34                     l583:
  4510  1F34  0831               	movf	__tdiv_to_l_@exp1,w
  4511  1F35  1D03               	btfss	3,2
  4512  1F36  2F38               	goto	u7191
  4513  1F37  2F39               	goto	u7190
  4514  1F38                     u7191:
  4515  1F38  2F29               	goto	l4142
  4516  1F39                     u7190:
  4517  1F39                     l4144:
  4518  1F39  082F               	movf	__tdiv_to_l_@quot+3,w
  4519  1F3A  00A3               	movwf	?__tdiv_to_l_+3
  4520  1F3B  082E               	movf	__tdiv_to_l_@quot+2,w
  4521  1F3C  00A2               	movwf	?__tdiv_to_l_+2
  4522  1F3D  082D               	movf	__tdiv_to_l_@quot+1,w
  4523  1F3E  00A1               	movwf	?__tdiv_to_l_+1
  4524  1F3F  082C               	movf	__tdiv_to_l_@quot,w
  4525  1F40  00A0               	movwf	?__tdiv_to_l_
  4526  1F41                     l572:
  4527  1F41  0008               	return
  4528  1F42                     __end_of__tdiv_to_l_:
  4529                           
  4530                           	psect	text9
  4531  1F42                     __ptext9:	
  4532 ;; *************** function __div_to_l_ *****************
  4533 ;; Defined at:
  4534 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  f1              4    0[BANK0 ] unsigned long 
  4537 ;;  f2              4    4[BANK0 ] unsigned long 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  quot            4    8[BANK0 ] unsigned long 
  4540 ;;  exp1            1   13[BANK0 ] unsigned char 
  4541 ;;  cntr            1   12[BANK0 ] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  4    0[BANK0 ] unsigned long 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4551 ;;      Params:         0       8       0       0       0
  4552 ;;      Locals:         0       6       0       0       0
  4553 ;;      Temps:          1       0       0       0       0
  4554 ;;      Totals:         1      14       0       0       0
  4555 ;;Total ram usage:       15 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_sprintf
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           
  4566                           ;psect for function __div_to_l_
  4567  1F42                     __div_to_l_:
  4568  1F42                     l4148:	
  4569                           ;incstack = 0
  4570                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4571                           
  4572  1F42  1003               	clrc
  4573  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  4574  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  4575  1F45  0D22               	rlf	__div_to_l_@f1+2,w
  4576  1F46  0D23               	rlf	__div_to_l_@f1+3,w
  4577  1F47  00F4               	movwf	??__div_to_l_
  4578  1F48  0874               	movf	??__div_to_l_,w
  4579  1F49  00AD               	movwf	__div_to_l_@exp1
  4580  1F4A  082D               	movf	__div_to_l_@exp1,w
  4581  1F4B  1D03               	btfss	3,2
  4582  1F4C  2F4E               	goto	u7201
  4583  1F4D  2F4F               	goto	u7200
  4584  1F4E                     u7201:
  4585  1F4E  2F58               	goto	l4154
  4586  1F4F                     u7200:
  4587  1F4F                     l4150:
  4588  1F4F  3000               	movlw	0
  4589  1F50  00A3               	movwf	?__div_to_l_+3
  4590  1F51  3000               	movlw	0
  4591  1F52  00A2               	movwf	?__div_to_l_+2
  4592  1F53  3000               	movlw	0
  4593  1F54  00A1               	movwf	?__div_to_l_+1
  4594  1F55  3000               	movlw	0
  4595  1F56  00A0               	movwf	?__div_to_l_
  4596  1F57  2FFF               	goto	l525
  4597  1F58                     l4154:
  4598  1F58  1003               	clrc
  4599  1F59  0D26               	rlf	__div_to_l_@f2+2,w
  4600  1F5A  0D27               	rlf	__div_to_l_@f2+3,w
  4601  1F5B  00F4               	movwf	??__div_to_l_
  4602  1F5C  0874               	movf	??__div_to_l_,w
  4603  1F5D  00AC               	movwf	__div_to_l_@cntr
  4604  1F5E  082C               	movf	__div_to_l_@cntr,w
  4605  1F5F  1D03               	btfss	3,2
  4606  1F60  2F62               	goto	u7211
  4607  1F61  2F63               	goto	u7210
  4608  1F62                     u7211:
  4609  1F62  2F64               	goto	l526
  4610  1F63                     u7210:
  4611  1F63  2F4F               	goto	l4150
  4612  1F64                     l526:
  4613  1F64  17A2               	bsf	__div_to_l_@f1+2,7
  4614  1F65                     l4160:
  4615  1F65  30FF               	movlw	255
  4616  1F66  05A0               	andwf	__div_to_l_@f1,f
  4617  1F67  30FF               	movlw	255
  4618  1F68  05A1               	andwf	__div_to_l_@f1+1,f
  4619  1F69  30FF               	movlw	255
  4620  1F6A  05A2               	andwf	__div_to_l_@f1+2,f
  4621  1F6B  3000               	movlw	0
  4622  1F6C  05A3               	andwf	__div_to_l_@f1+3,f
  4623  1F6D                     l4162:
  4624  1F6D  17A6               	bsf	__div_to_l_@f2+2,7
  4625  1F6E  30FF               	movlw	255
  4626  1F6F  05A4               	andwf	__div_to_l_@f2,f
  4627  1F70  30FF               	movlw	255
  4628  1F71  05A5               	andwf	__div_to_l_@f2+1,f
  4629  1F72  30FF               	movlw	255
  4630  1F73  05A6               	andwf	__div_to_l_@f2+2,f
  4631  1F74  3000               	movlw	0
  4632  1F75  05A7               	andwf	__div_to_l_@f2+3,f
  4633  1F76  3000               	movlw	0
  4634  1F77  00AB               	movwf	__div_to_l_@quot+3
  4635  1F78  3000               	movlw	0
  4636  1F79  00AA               	movwf	__div_to_l_@quot+2
  4637  1F7A  3000               	movlw	0
  4638  1F7B  00A9               	movwf	__div_to_l_@quot+1
  4639  1F7C  3000               	movlw	0
  4640  1F7D  00A8               	movwf	__div_to_l_@quot
  4641  1F7E                     l4164:
  4642  1F7E  307F               	movlw	127
  4643  1F7F  02AD               	subwf	__div_to_l_@exp1,f
  4644  1F80                     l4166:
  4645  1F80  30A0               	movlw	160
  4646  1F81  072C               	addwf	__div_to_l_@cntr,w
  4647  1F82  00F4               	movwf	??__div_to_l_
  4648  1F83  0874               	movf	??__div_to_l_,w
  4649  1F84  02AD               	subwf	__div_to_l_@exp1,f
  4650  1F85  3020               	movlw	32
  4651  1F86  00F4               	movwf	??__div_to_l_
  4652  1F87  0874               	movf	??__div_to_l_,w
  4653  1F88  00AC               	movwf	__div_to_l_@cntr
  4654  1F89                     l4168:
  4655  1F89  3001               	movlw	1
  4656  1F8A  00F4               	movwf	??__div_to_l_
  4657  1F8B                     u7225:
  4658  1F8B  1003               	clrc
  4659  1F8C  0DA8               	rlf	__div_to_l_@quot,f
  4660  1F8D  0DA9               	rlf	__div_to_l_@quot+1,f
  4661  1F8E  0DAA               	rlf	__div_to_l_@quot+2,f
  4662  1F8F  0DAB               	rlf	__div_to_l_@quot+3,f
  4663  1F90  0BF4               	decfsz	??__div_to_l_,f
  4664  1F91  2F8B               	goto	u7225
  4665  1F92                     l4170:
  4666  1F92  0827               	movf	__div_to_l_@f2+3,w
  4667  1F93  0223               	subwf	__div_to_l_@f1+3,w
  4668  1F94  1D03               	skipz
  4669  1F95  2FA0               	goto	u7235
  4670  1F96  0826               	movf	__div_to_l_@f2+2,w
  4671  1F97  0222               	subwf	__div_to_l_@f1+2,w
  4672  1F98  1D03               	skipz
  4673  1F99  2FA0               	goto	u7235
  4674  1F9A  0825               	movf	__div_to_l_@f2+1,w
  4675  1F9B  0221               	subwf	__div_to_l_@f1+1,w
  4676  1F9C  1D03               	skipz
  4677  1F9D  2FA0               	goto	u7235
  4678  1F9E  0824               	movf	__div_to_l_@f2,w
  4679  1F9F  0220               	subwf	__div_to_l_@f1,w
  4680  1FA0                     u7235:
  4681  1FA0  1C03               	skipc
  4682  1FA1  2FA3               	goto	u7231
  4683  1FA2  2FA4               	goto	u7230
  4684  1FA3                     u7231:
  4685  1FA3  2FB3               	goto	l4176
  4686  1FA4                     u7230:
  4687  1FA4                     l4172:
  4688  1FA4  0824               	movf	__div_to_l_@f2,w
  4689  1FA5  02A0               	subwf	__div_to_l_@f1,f
  4690  1FA6  0825               	movf	__div_to_l_@f2+1,w
  4691  1FA7  1C03               	skipc
  4692  1FA8  0F25               	incfsz	__div_to_l_@f2+1,w
  4693  1FA9  02A1               	subwf	__div_to_l_@f1+1,f
  4694  1FAA  0826               	movf	__div_to_l_@f2+2,w
  4695  1FAB  1C03               	skipc
  4696  1FAC  0F26               	incfsz	__div_to_l_@f2+2,w
  4697  1FAD  02A2               	subwf	__div_to_l_@f1+2,f
  4698  1FAE  0827               	movf	__div_to_l_@f2+3,w
  4699  1FAF  1C03               	skipc
  4700  1FB0  0F27               	incfsz	__div_to_l_@f2+3,w
  4701  1FB1  02A3               	subwf	__div_to_l_@f1+3,f
  4702  1FB2                     l4174:
  4703  1FB2  1428               	bsf	__div_to_l_@quot,0
  4704  1FB3                     l4176:
  4705  1FB3  3001               	movlw	1
  4706  1FB4  00F4               	movwf	??__div_to_l_
  4707  1FB5                     u7245:
  4708  1FB5  1003               	clrc
  4709  1FB6  0DA0               	rlf	__div_to_l_@f1,f
  4710  1FB7  0DA1               	rlf	__div_to_l_@f1+1,f
  4711  1FB8  0DA2               	rlf	__div_to_l_@f1+2,f
  4712  1FB9  0DA3               	rlf	__div_to_l_@f1+3,f
  4713  1FBA  0BF4               	decfsz	??__div_to_l_,f
  4714  1FBB  2FB5               	goto	u7245
  4715  1FBC                     l4178:
  4716  1FBC  3001               	movlw	1
  4717  1FBD  02AC               	subwf	__div_to_l_@cntr,f
  4718  1FBE  1D03               	btfss	3,2
  4719  1FBF  2FC1               	goto	u7251
  4720  1FC0  2FC2               	goto	u7250
  4721  1FC1                     u7251:
  4722  1FC1  2F89               	goto	l4168
  4723  1FC2                     u7250:
  4724  1FC2                     l529:
  4725  1FC2  1FAD               	btfss	__div_to_l_@exp1,7
  4726  1FC3  2FC5               	goto	u7261
  4727  1FC4  2FC6               	goto	u7260
  4728  1FC5                     u7261:
  4729  1FC5  2FE0               	goto	l4188
  4730  1FC6                     u7260:
  4731  1FC6                     l4180:
  4732  1FC6  082D               	movf	__div_to_l_@exp1,w
  4733  1FC7  3A80               	xorlw	128
  4734  1FC8  3E9F               	addlw	159
  4735  1FC9  1803               	skipnc
  4736  1FCA  2FCC               	goto	u7271
  4737  1FCB  2FCD               	goto	u7270
  4738  1FCC                     u7271:
  4739  1FCC  2FCE               	goto	l4186
  4740  1FCD                     u7270:
  4741  1FCD  2F4F               	goto	l4150
  4742  1FCE                     l4186:
  4743  1FCE  3001               	movlw	1
  4744  1FCF                     u7285:
  4745  1FCF  1003               	clrc
  4746  1FD0  0CAB               	rrf	__div_to_l_@quot+3,f
  4747  1FD1  0CAA               	rrf	__div_to_l_@quot+2,f
  4748  1FD2  0CA9               	rrf	__div_to_l_@quot+1,f
  4749  1FD3  0CA8               	rrf	__div_to_l_@quot,f
  4750  1FD4  3EFF               	addlw	-1
  4751  1FD5  1D03               	skipz
  4752  1FD6  2FCF               	goto	u7285
  4753  1FD7  3001               	movlw	1
  4754  1FD8  00F4               	movwf	??__div_to_l_
  4755  1FD9  0874               	movf	??__div_to_l_,w
  4756  1FDA  07AD               	addwf	__div_to_l_@exp1,f
  4757  1FDB  1D03               	btfss	3,2
  4758  1FDC  2FDE               	goto	u7291
  4759  1FDD  2FDF               	goto	u7290
  4760  1FDE                     u7291:
  4761  1FDE  2FCE               	goto	l4186
  4762  1FDF                     u7290:
  4763  1FDF  2FF7               	goto	l4196
  4764  1FE0                     l4188:
  4765  1FE0  3020               	movlw	32
  4766  1FE1  022D               	subwf	__div_to_l_@exp1,w
  4767  1FE2  1C03               	skipc
  4768  1FE3  2FE5               	goto	u7301
  4769  1FE4  2FE6               	goto	u7300
  4770  1FE5                     u7301:
  4771  1FE5  2FF2               	goto	l536
  4772  1FE6                     u7300:
  4773  1FE6  2F4F               	goto	l4150
  4774  1FE7                     l4194:
  4775  1FE7  3001               	movlw	1
  4776  1FE8  00F4               	movwf	??__div_to_l_
  4777  1FE9                     u7315:
  4778  1FE9  1003               	clrc
  4779  1FEA  0DA8               	rlf	__div_to_l_@quot,f
  4780  1FEB  0DA9               	rlf	__div_to_l_@quot+1,f
  4781  1FEC  0DAA               	rlf	__div_to_l_@quot+2,f
  4782  1FED  0DAB               	rlf	__div_to_l_@quot+3,f
  4783  1FEE  0BF4               	decfsz	??__div_to_l_,f
  4784  1FEF  2FE9               	goto	u7315
  4785  1FF0  3001               	movlw	1
  4786  1FF1  02AD               	subwf	__div_to_l_@exp1,f
  4787  1FF2                     l536:
  4788  1FF2  082D               	movf	__div_to_l_@exp1,w
  4789  1FF3  1D03               	btfss	3,2
  4790  1FF4  2FF6               	goto	u7321
  4791  1FF5  2FF7               	goto	u7320
  4792  1FF6                     u7321:
  4793  1FF6  2FE7               	goto	l4194
  4794  1FF7                     u7320:
  4795  1FF7                     l4196:
  4796  1FF7  082B               	movf	__div_to_l_@quot+3,w
  4797  1FF8  00A3               	movwf	?__div_to_l_+3
  4798  1FF9  082A               	movf	__div_to_l_@quot+2,w
  4799  1FFA  00A2               	movwf	?__div_to_l_+2
  4800  1FFB  0829               	movf	__div_to_l_@quot+1,w
  4801  1FFC  00A1               	movwf	?__div_to_l_+1
  4802  1FFD  0828               	movf	__div_to_l_@quot,w
  4803  1FFE  00A0               	movwf	?__div_to_l_
  4804  1FFF                     l525:
  4805  1FFF  0008               	return
  4806  2000                     __end_of__div_to_l_:
  4807                           
  4808                           	psect	text10
  4809  19BA                     __ptext10:	
  4810 ;; *************** function ___llmod *****************
  4811 ;; Defined at:
  4812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  divisor         4    0[BANK0 ] unsigned long 
  4815 ;;  dividend        4    4[BANK0 ] unsigned long 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  counter         1    5[COMMON] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  4    0[BANK0 ] unsigned long 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       8       0       0       0
  4828 ;;      Locals:         1       0       0       0       0
  4829 ;;      Temps:          1       0       0       0       0
  4830 ;;      Totals:         2       8       0       0       0
  4831 ;;Total ram usage:       10 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_sprintf
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function ___llmod
  4843  19BA                     ___llmod:
  4844  19BA                     l4314:	
  4845                           ;incstack = 0
  4846                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4847                           
  4848  19BA  1283               	bcf	3,5	;RP0=0, select bank0
  4849  19BB  1303               	bcf	3,6	;RP1=0, select bank0
  4850  19BC  0823               	movf	___llmod@divisor+3,w
  4851  19BD  0422               	iorwf	___llmod@divisor+2,w
  4852  19BE  0421               	iorwf	___llmod@divisor+1,w
  4853  19BF  0420               	iorwf	___llmod@divisor,w
  4854  19C0  1903               	skipnz
  4855  19C1  29C3               	goto	u7651
  4856  19C2  29C4               	goto	u7650
  4857  19C3                     u7651:
  4858  19C3  2A07               	goto	l4330
  4859  19C4                     u7650:
  4860  19C4                     l4316:
  4861  19C4  01F5               	clrf	___llmod@counter
  4862  19C5  0AF5               	incf	___llmod@counter,f
  4863  19C6  29D4               	goto	l4320
  4864  19C7                     l4318:
  4865  19C7  3001               	movlw	1
  4866  19C8  00F4               	movwf	??___llmod
  4867  19C9                     u7665:
  4868  19C9  1003               	clrc
  4869  19CA  0DA0               	rlf	___llmod@divisor,f
  4870  19CB  0DA1               	rlf	___llmod@divisor+1,f
  4871  19CC  0DA2               	rlf	___llmod@divisor+2,f
  4872  19CD  0DA3               	rlf	___llmod@divisor+3,f
  4873  19CE  0BF4               	decfsz	??___llmod,f
  4874  19CF  29C9               	goto	u7665
  4875  19D0  3001               	movlw	1
  4876  19D1  00F4               	movwf	??___llmod
  4877  19D2  0874               	movf	??___llmod,w
  4878  19D3  07F5               	addwf	___llmod@counter,f
  4879  19D4                     l4320:
  4880  19D4  1FA3               	btfss	___llmod@divisor+3,7
  4881  19D5  29D7               	goto	u7671
  4882  19D6  29D8               	goto	u7670
  4883  19D7                     u7671:
  4884  19D7  29C7               	goto	l4318
  4885  19D8                     u7670:
  4886  19D8                     l4322:
  4887  19D8  0823               	movf	___llmod@divisor+3,w
  4888  19D9  0227               	subwf	___llmod@dividend+3,w
  4889  19DA  1D03               	skipz
  4890  19DB  29E6               	goto	u7685
  4891  19DC  0822               	movf	___llmod@divisor+2,w
  4892  19DD  0226               	subwf	___llmod@dividend+2,w
  4893  19DE  1D03               	skipz
  4894  19DF  29E6               	goto	u7685
  4895  19E0  0821               	movf	___llmod@divisor+1,w
  4896  19E1  0225               	subwf	___llmod@dividend+1,w
  4897  19E2  1D03               	skipz
  4898  19E3  29E6               	goto	u7685
  4899  19E4  0820               	movf	___llmod@divisor,w
  4900  19E5  0224               	subwf	___llmod@dividend,w
  4901  19E6                     u7685:
  4902  19E6  1C03               	skipc
  4903  19E7  29E9               	goto	u7681
  4904  19E8  29EA               	goto	u7680
  4905  19E9                     u7681:
  4906  19E9  29F8               	goto	l4326
  4907  19EA                     u7680:
  4908  19EA                     l4324:
  4909  19EA  0820               	movf	___llmod@divisor,w
  4910  19EB  02A4               	subwf	___llmod@dividend,f
  4911  19EC  0821               	movf	___llmod@divisor+1,w
  4912  19ED  1C03               	skipc
  4913  19EE  0F21               	incfsz	___llmod@divisor+1,w
  4914  19EF  02A5               	subwf	___llmod@dividend+1,f
  4915  19F0  0822               	movf	___llmod@divisor+2,w
  4916  19F1  1C03               	skipc
  4917  19F2  0F22               	incfsz	___llmod@divisor+2,w
  4918  19F3  02A6               	subwf	___llmod@dividend+2,f
  4919  19F4  0823               	movf	___llmod@divisor+3,w
  4920  19F5  1C03               	skipc
  4921  19F6  0F23               	incfsz	___llmod@divisor+3,w
  4922  19F7  02A7               	subwf	___llmod@dividend+3,f
  4923  19F8                     l4326:
  4924  19F8  3001               	movlw	1
  4925  19F9                     u7695:
  4926  19F9  1003               	clrc
  4927  19FA  0CA3               	rrf	___llmod@divisor+3,f
  4928  19FB  0CA2               	rrf	___llmod@divisor+2,f
  4929  19FC  0CA1               	rrf	___llmod@divisor+1,f
  4930  19FD  0CA0               	rrf	___llmod@divisor,f
  4931  19FE  3EFF               	addlw	-1
  4932  19FF  1D03               	skipz
  4933  1A00  29F9               	goto	u7695
  4934  1A01                     l4328:
  4935  1A01  3001               	movlw	1
  4936  1A02  02F5               	subwf	___llmod@counter,f
  4937  1A03  1D03               	btfss	3,2
  4938  1A04  2A06               	goto	u7701
  4939  1A05  2A07               	goto	u7700
  4940  1A06                     u7701:
  4941  1A06  29D8               	goto	l4322
  4942  1A07                     u7700:
  4943  1A07                     l4330:
  4944  1A07  0827               	movf	___llmod@dividend+3,w
  4945  1A08  00A3               	movwf	?___llmod+3
  4946  1A09  0826               	movf	___llmod@dividend+2,w
  4947  1A0A  00A2               	movwf	?___llmod+2
  4948  1A0B  0825               	movf	___llmod@dividend+1,w
  4949  1A0C  00A1               	movwf	?___llmod+1
  4950  1A0D  0824               	movf	___llmod@dividend,w
  4951  1A0E  00A0               	movwf	?___llmod
  4952  1A0F                     l611:
  4953  1A0F  0008               	return
  4954  1A10                     __end_of___llmod:
  4955                           
  4956                           	psect	text11
  4957  1B29                     __ptext11:	
  4958 ;; *************** function ___lldiv *****************
  4959 ;; Defined at:
  4960 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  divisor         4    0[BANK0 ] unsigned long 
  4963 ;;  dividend        4    4[BANK0 ] unsigned long 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  quotient        4    8[BANK0 ] unsigned long 
  4966 ;;  counter         1   12[BANK0 ] unsigned char 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  4    0[BANK0 ] unsigned long 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         0       8       0       0       0
  4977 ;;      Locals:         0       5       0       0       0
  4978 ;;      Temps:          1       0       0       0       0
  4979 ;;      Totals:         1      13       0       0       0
  4980 ;;Total ram usage:       14 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    1
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_sprintf
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           
  4991                           ;psect for function ___lldiv
  4992  1B29                     ___lldiv:
  4993  1B29                     l4214:	
  4994                           ;incstack = 0
  4995                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4996                           
  4997  1B29  3000               	movlw	0
  4998  1B2A  1283               	bcf	3,5	;RP0=0, select bank0
  4999  1B2B  1303               	bcf	3,6	;RP1=0, select bank0
  5000  1B2C  00AB               	movwf	___lldiv@quotient+3
  5001  1B2D  3000               	movlw	0
  5002  1B2E  00AA               	movwf	___lldiv@quotient+2
  5003  1B2F  3000               	movlw	0
  5004  1B30  00A9               	movwf	___lldiv@quotient+1
  5005  1B31  3000               	movlw	0
  5006  1B32  00A8               	movwf	___lldiv@quotient
  5007  1B33  0823               	movf	___lldiv@divisor+3,w
  5008  1B34  0422               	iorwf	___lldiv@divisor+2,w
  5009  1B35  0421               	iorwf	___lldiv@divisor+1,w
  5010  1B36  0420               	iorwf	___lldiv@divisor,w
  5011  1B37  1903               	skipnz
  5012  1B38  2B3A               	goto	u7371
  5013  1B39  2B3B               	goto	u7370
  5014  1B3A                     u7371:
  5015  1B3A  2B88               	goto	l4234
  5016  1B3B                     u7370:
  5017  1B3B                     l4216:
  5018  1B3B  01AC               	clrf	___lldiv@counter
  5019  1B3C  0AAC               	incf	___lldiv@counter,f
  5020  1B3D  2B4B               	goto	l4220
  5021  1B3E                     l4218:
  5022  1B3E  3001               	movlw	1
  5023  1B3F  00F4               	movwf	??___lldiv
  5024  1B40                     u7385:
  5025  1B40  1003               	clrc
  5026  1B41  0DA0               	rlf	___lldiv@divisor,f
  5027  1B42  0DA1               	rlf	___lldiv@divisor+1,f
  5028  1B43  0DA2               	rlf	___lldiv@divisor+2,f
  5029  1B44  0DA3               	rlf	___lldiv@divisor+3,f
  5030  1B45  0BF4               	decfsz	??___lldiv,f
  5031  1B46  2B40               	goto	u7385
  5032  1B47  3001               	movlw	1
  5033  1B48  00F4               	movwf	??___lldiv
  5034  1B49  0874               	movf	??___lldiv,w
  5035  1B4A  07AC               	addwf	___lldiv@counter,f
  5036  1B4B                     l4220:
  5037  1B4B  1FA3               	btfss	___lldiv@divisor+3,7
  5038  1B4C  2B4E               	goto	u7391
  5039  1B4D  2B4F               	goto	u7390
  5040  1B4E                     u7391:
  5041  1B4E  2B3E               	goto	l4218
  5042  1B4F                     u7390:
  5043  1B4F                     l4222:
  5044  1B4F  3001               	movlw	1
  5045  1B50  00F4               	movwf	??___lldiv
  5046  1B51                     u7405:
  5047  1B51  1003               	clrc
  5048  1B52  0DA8               	rlf	___lldiv@quotient,f
  5049  1B53  0DA9               	rlf	___lldiv@quotient+1,f
  5050  1B54  0DAA               	rlf	___lldiv@quotient+2,f
  5051  1B55  0DAB               	rlf	___lldiv@quotient+3,f
  5052  1B56  0BF4               	decfsz	??___lldiv,f
  5053  1B57  2B51               	goto	u7405
  5054  1B58                     l4224:
  5055  1B58  0823               	movf	___lldiv@divisor+3,w
  5056  1B59  0227               	subwf	___lldiv@dividend+3,w
  5057  1B5A  1D03               	skipz
  5058  1B5B  2B66               	goto	u7415
  5059  1B5C  0822               	movf	___lldiv@divisor+2,w
  5060  1B5D  0226               	subwf	___lldiv@dividend+2,w
  5061  1B5E  1D03               	skipz
  5062  1B5F  2B66               	goto	u7415
  5063  1B60  0821               	movf	___lldiv@divisor+1,w
  5064  1B61  0225               	subwf	___lldiv@dividend+1,w
  5065  1B62  1D03               	skipz
  5066  1B63  2B66               	goto	u7415
  5067  1B64  0820               	movf	___lldiv@divisor,w
  5068  1B65  0224               	subwf	___lldiv@dividend,w
  5069  1B66                     u7415:
  5070  1B66  1C03               	skipc
  5071  1B67  2B69               	goto	u7411
  5072  1B68  2B6A               	goto	u7410
  5073  1B69                     u7411:
  5074  1B69  2B79               	goto	l4230
  5075  1B6A                     u7410:
  5076  1B6A                     l4226:
  5077  1B6A  0820               	movf	___lldiv@divisor,w
  5078  1B6B  02A4               	subwf	___lldiv@dividend,f
  5079  1B6C  0821               	movf	___lldiv@divisor+1,w
  5080  1B6D  1C03               	skipc
  5081  1B6E  0F21               	incfsz	___lldiv@divisor+1,w
  5082  1B6F  02A5               	subwf	___lldiv@dividend+1,f
  5083  1B70  0822               	movf	___lldiv@divisor+2,w
  5084  1B71  1C03               	skipc
  5085  1B72  0F22               	incfsz	___lldiv@divisor+2,w
  5086  1B73  02A6               	subwf	___lldiv@dividend+2,f
  5087  1B74  0823               	movf	___lldiv@divisor+3,w
  5088  1B75  1C03               	skipc
  5089  1B76  0F23               	incfsz	___lldiv@divisor+3,w
  5090  1B77  02A7               	subwf	___lldiv@dividend+3,f
  5091  1B78                     l4228:
  5092  1B78  1428               	bsf	___lldiv@quotient,0
  5093  1B79                     l4230:
  5094  1B79  3001               	movlw	1
  5095  1B7A                     u7425:
  5096  1B7A  1003               	clrc
  5097  1B7B  0CA3               	rrf	___lldiv@divisor+3,f
  5098  1B7C  0CA2               	rrf	___lldiv@divisor+2,f
  5099  1B7D  0CA1               	rrf	___lldiv@divisor+1,f
  5100  1B7E  0CA0               	rrf	___lldiv@divisor,f
  5101  1B7F  3EFF               	addlw	-1
  5102  1B80  1D03               	skipz
  5103  1B81  2B7A               	goto	u7425
  5104  1B82                     l4232:
  5105  1B82  3001               	movlw	1
  5106  1B83  02AC               	subwf	___lldiv@counter,f
  5107  1B84  1D03               	btfss	3,2
  5108  1B85  2B87               	goto	u7431
  5109  1B86  2B88               	goto	u7430
  5110  1B87                     u7431:
  5111  1B87  2B4F               	goto	l4222
  5112  1B88                     u7430:
  5113  1B88                     l4234:
  5114  1B88  082B               	movf	___lldiv@quotient+3,w
  5115  1B89  00A3               	movwf	?___lldiv+3
  5116  1B8A  082A               	movf	___lldiv@quotient+2,w
  5117  1B8B  00A2               	movwf	?___lldiv+2
  5118  1B8C  0829               	movf	___lldiv@quotient+1,w
  5119  1B8D  00A1               	movwf	?___lldiv+1
  5120  1B8E  0828               	movf	___lldiv@quotient,w
  5121  1B8F  00A0               	movwf	?___lldiv
  5122  1B90                     l391:
  5123  1B90  0008               	return
  5124  1B91                     __end_of___lldiv:
  5125                           
  5126                           	psect	text12
  5127  18B2                     __ptext12:	
  5128 ;; *************** function ___flneg *****************
  5129 ;; Defined at:
  5130 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  f1              4    0[BANK0 ] unsigned long 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  4    0[BANK0 ] unsigned long 
  5137 ;; Registers used:
  5138 ;;		wreg
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5144 ;;      Params:         0       4       0       0       0
  5145 ;;      Locals:         0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0
  5147 ;;      Totals:         0       4       0       0       0
  5148 ;;Total ram usage:        4 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    1
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_sprintf
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function ___flneg
  5160  18B2                     ___flneg:
  5161  18B2                     l4270:	
  5162                           ;incstack = 0
  5163                           ; Regs used in ___flneg: [wreg]
  5164                           
  5165  18B2  1283               	bcf	3,5	;RP0=0, select bank0
  5166  18B3  1303               	bcf	3,6	;RP1=0, select bank0
  5167  18B4  0823               	movf	___flneg@f1+3,w
  5168  18B5  0422               	iorwf	___flneg@f1+2,w
  5169  18B6  0421               	iorwf	___flneg@f1+1,w
  5170  18B7  0420               	iorwf	___flneg@f1,w
  5171  18B8  1903               	skipnz
  5172  18B9  28BB               	goto	u7541
  5173  18BA  28BC               	goto	u7540
  5174  18BB                     u7541:
  5175  18BB  28BE               	goto	l4274
  5176  18BC                     u7540:
  5177  18BC                     l4272:
  5178  18BC  3080               	movlw	128
  5179  18BD  06A3               	xorwf	___flneg@f1+3,f
  5180  18BE                     l4274:
  5181  18BE                     l554:
  5182  18BE  0008               	return
  5183  18BF                     __end_of___flneg:
  5184                           
  5185                           	psect	text13
  5186  1C76                     __ptext13:	
  5187 ;; *************** function ___flge *****************
  5188 ;; Defined at:
  5189 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  ff1             4    0[BANK0 ] unsigned long 
  5192 ;;  ff2             4    4[BANK0 ] unsigned long 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;		None               void
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5204 ;;      Params:         0       8       0       0       0
  5205 ;;      Locals:         0       0       0       0       0
  5206 ;;      Temps:          0       4       0       0       0
  5207 ;;      Totals:         0      12       0       0       0
  5208 ;;Total ram usage:       12 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    1
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_sprintf
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           
  5219                           ;psect for function ___flge
  5220  1C76                     ___flge:
  5221  1C76                     l4250:	
  5222                           ;incstack = 0
  5223                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5224                           
  5225  1C76  3000               	movlw	0
  5226  1C77  1283               	bcf	3,5	;RP0=0, select bank0
  5227  1C78  1303               	bcf	3,6	;RP1=0, select bank0
  5228  1C79  0520               	andwf	___flge@ff1,w
  5229  1C7A  00A8               	movwf	??___flge
  5230  1C7B  3000               	movlw	0
  5231  1C7C  0521               	andwf	___flge@ff1+1,w
  5232  1C7D  00A9               	movwf	??___flge+1
  5233  1C7E  3080               	movlw	128
  5234  1C7F  0522               	andwf	___flge@ff1+2,w
  5235  1C80  00AA               	movwf	??___flge+2
  5236  1C81  307F               	movlw	127
  5237  1C82  0523               	andwf	___flge@ff1+3,w
  5238  1C83  00AB               	movwf	??___flge+3
  5239  1C84  082B               	movf	??___flge+3,w
  5240  1C85  042A               	iorwf	??___flge+2,w
  5241  1C86  0429               	iorwf	??___flge+1,w
  5242  1C87  0428               	iorwf	??___flge,w
  5243  1C88  1D03               	skipz
  5244  1C89  2C8B               	goto	u7471
  5245  1C8A  2C8C               	goto	u7470
  5246  1C8B                     u7471:
  5247  1C8B  2C94               	goto	l546
  5248  1C8C                     u7470:
  5249  1C8C                     l4252:
  5250  1C8C  3000               	movlw	0
  5251  1C8D  00A3               	movwf	___flge@ff1+3
  5252  1C8E  3000               	movlw	0
  5253  1C8F  00A2               	movwf	___flge@ff1+2
  5254  1C90  3000               	movlw	0
  5255  1C91  00A1               	movwf	___flge@ff1+1
  5256  1C92  3000               	movlw	0
  5257  1C93  00A0               	movwf	___flge@ff1
  5258  1C94                     l546:
  5259  1C94  3000               	movlw	0
  5260  1C95  0524               	andwf	___flge@ff2,w
  5261  1C96  00A8               	movwf	??___flge
  5262  1C97  3000               	movlw	0
  5263  1C98  0525               	andwf	___flge@ff2+1,w
  5264  1C99  00A9               	movwf	??___flge+1
  5265  1C9A  3080               	movlw	128
  5266  1C9B  0526               	andwf	___flge@ff2+2,w
  5267  1C9C  00AA               	movwf	??___flge+2
  5268  1C9D  307F               	movlw	127
  5269  1C9E  0527               	andwf	___flge@ff2+3,w
  5270  1C9F  00AB               	movwf	??___flge+3
  5271  1CA0  082B               	movf	??___flge+3,w
  5272  1CA1  042A               	iorwf	??___flge+2,w
  5273  1CA2  0429               	iorwf	??___flge+1,w
  5274  1CA3  0428               	iorwf	??___flge,w
  5275  1CA4  1D03               	skipz
  5276  1CA5  2CA7               	goto	u7481
  5277  1CA6  2CA8               	goto	u7480
  5278  1CA7                     u7481:
  5279  1CA7  2CB0               	goto	l4256
  5280  1CA8                     u7480:
  5281  1CA8                     l4254:
  5282  1CA8  3000               	movlw	0
  5283  1CA9  00A7               	movwf	___flge@ff2+3
  5284  1CAA  3000               	movlw	0
  5285  1CAB  00A6               	movwf	___flge@ff2+2
  5286  1CAC  3000               	movlw	0
  5287  1CAD  00A5               	movwf	___flge@ff2+1
  5288  1CAE  3000               	movlw	0
  5289  1CAF  00A4               	movwf	___flge@ff2
  5290  1CB0                     l4256:
  5291  1CB0  1FA3               	btfss	___flge@ff1+3,7
  5292  1CB1  2CB3               	goto	u7491
  5293  1CB2  2CB4               	goto	u7490
  5294  1CB3                     u7491:
  5295  1CB3  2CD8               	goto	l4260
  5296  1CB4                     u7490:
  5297  1CB4                     l4258:
  5298  1CB4  3000               	movlw	0
  5299  1CB5  00A8               	movwf	??___flge
  5300  1CB6  3000               	movlw	0
  5301  1CB7  00A9               	movwf	??___flge+1
  5302  1CB8  3000               	movlw	0
  5303  1CB9  00AA               	movwf	??___flge+2
  5304  1CBA  3080               	movlw	128
  5305  1CBB  00AB               	movwf	??___flge+3
  5306  1CBC  0820               	movf	___flge@ff1,w
  5307  1CBD  02A8               	subwf	??___flge,f
  5308  1CBE  0821               	movf	___flge@ff1+1,w
  5309  1CBF  1C03               	skipc
  5310  1CC0  0F21               	incfsz	___flge@ff1+1,w
  5311  1CC1  2CC3               	goto	u7501
  5312  1CC2  2CC4               	goto	u7502
  5313  1CC3                     u7501:
  5314  1CC3  02A9               	subwf	??___flge+1,f
  5315  1CC4                     u7502:
  5316  1CC4  0822               	movf	___flge@ff1+2,w
  5317  1CC5  1C03               	skipc
  5318  1CC6  0F22               	incfsz	___flge@ff1+2,w
  5319  1CC7  2CC9               	goto	u7503
  5320  1CC8  2CCA               	goto	u7504
  5321  1CC9                     u7503:
  5322  1CC9  02AA               	subwf	??___flge+2,f
  5323  1CCA                     u7504:
  5324  1CCA  0823               	movf	___flge@ff1+3,w
  5325  1CCB  1C03               	skipc
  5326  1CCC  0F23               	incfsz	___flge@ff1+3,w
  5327  1CCD  2CCF               	goto	u7505
  5328  1CCE  2CD0               	goto	u7506
  5329  1CCF                     u7505:
  5330  1CCF  02AB               	subwf	??___flge+3,f
  5331  1CD0                     u7506:
  5332  1CD0  082B               	movf	??___flge+3,w
  5333  1CD1  00A3               	movwf	___flge@ff1+3
  5334  1CD2  082A               	movf	??___flge+2,w
  5335  1CD3  00A2               	movwf	___flge@ff1+2
  5336  1CD4  0829               	movf	??___flge+1,w
  5337  1CD5  00A1               	movwf	___flge@ff1+1
  5338  1CD6  0828               	movf	??___flge,w
  5339  1CD7  00A0               	movwf	___flge@ff1
  5340  1CD8                     l4260:
  5341  1CD8  1FA7               	btfss	___flge@ff2+3,7
  5342  1CD9  2CDB               	goto	u7511
  5343  1CDA  2CDC               	goto	u7510
  5344  1CDB                     u7511:
  5345  1CDB  2D00               	goto	l549
  5346  1CDC                     u7510:
  5347  1CDC                     l4262:
  5348  1CDC  3000               	movlw	0
  5349  1CDD  00A8               	movwf	??___flge
  5350  1CDE  3000               	movlw	0
  5351  1CDF  00A9               	movwf	??___flge+1
  5352  1CE0  3000               	movlw	0
  5353  1CE1  00AA               	movwf	??___flge+2
  5354  1CE2  3080               	movlw	128
  5355  1CE3  00AB               	movwf	??___flge+3
  5356  1CE4  0824               	movf	___flge@ff2,w
  5357  1CE5  02A8               	subwf	??___flge,f
  5358  1CE6  0825               	movf	___flge@ff2+1,w
  5359  1CE7  1C03               	skipc
  5360  1CE8  0F25               	incfsz	___flge@ff2+1,w
  5361  1CE9  2CEB               	goto	u7521
  5362  1CEA  2CEC               	goto	u7522
  5363  1CEB                     u7521:
  5364  1CEB  02A9               	subwf	??___flge+1,f
  5365  1CEC                     u7522:
  5366  1CEC  0826               	movf	___flge@ff2+2,w
  5367  1CED  1C03               	skipc
  5368  1CEE  0F26               	incfsz	___flge@ff2+2,w
  5369  1CEF  2CF1               	goto	u7523
  5370  1CF0  2CF2               	goto	u7524
  5371  1CF1                     u7523:
  5372  1CF1  02AA               	subwf	??___flge+2,f
  5373  1CF2                     u7524:
  5374  1CF2  0827               	movf	___flge@ff2+3,w
  5375  1CF3  1C03               	skipc
  5376  1CF4  0F27               	incfsz	___flge@ff2+3,w
  5377  1CF5  2CF7               	goto	u7525
  5378  1CF6  2CF8               	goto	u7526
  5379  1CF7                     u7525:
  5380  1CF7  02AB               	subwf	??___flge+3,f
  5381  1CF8                     u7526:
  5382  1CF8  082B               	movf	??___flge+3,w
  5383  1CF9  00A7               	movwf	___flge@ff2+3
  5384  1CFA  082A               	movf	??___flge+2,w
  5385  1CFB  00A6               	movwf	___flge@ff2+2
  5386  1CFC  0829               	movf	??___flge+1,w
  5387  1CFD  00A5               	movwf	___flge@ff2+1
  5388  1CFE  0828               	movf	??___flge,w
  5389  1CFF  00A4               	movwf	___flge@ff2
  5390  1D00                     l549:
  5391  1D00  3080               	movlw	128
  5392  1D01  06A3               	xorwf	___flge@ff1+3,f
  5393  1D02  3080               	movlw	128
  5394  1D03  06A7               	xorwf	___flge@ff2+3,f
  5395  1D04  0827               	movf	___flge@ff2+3,w
  5396  1D05  0223               	subwf	___flge@ff1+3,w
  5397  1D06  1D03               	skipz
  5398  1D07  2D12               	goto	u7535
  5399  1D08  0826               	movf	___flge@ff2+2,w
  5400  1D09  0222               	subwf	___flge@ff1+2,w
  5401  1D0A  1D03               	skipz
  5402  1D0B  2D12               	goto	u7535
  5403  1D0C  0825               	movf	___flge@ff2+1,w
  5404  1D0D  0221               	subwf	___flge@ff1+1,w
  5405  1D0E  1D03               	skipz
  5406  1D0F  2D12               	goto	u7535
  5407  1D10  0824               	movf	___flge@ff2,w
  5408  1D11  0220               	subwf	___flge@ff1,w
  5409  1D12                     u7535:
  5410  1D12  1803               	skipnc
  5411  1D13  2D15               	goto	u7531
  5412  1D14  2D16               	goto	u7530
  5413  1D15                     u7531:
  5414  1D15  2D18               	goto	l4266
  5415  1D16                     u7530:
  5416  1D16                     l4264:
  5417  1D16  1003               	clrc
  5418  1D17  2D19               	goto	l550
  5419  1D18                     l4266:
  5420  1D18  1403               	setc
  5421  1D19                     l550:
  5422  1D19  0008               	return
  5423  1D1A                     __end_of___flge:
  5424                           
  5425                           	psect	text14
  5426  196A                     __ptext14:	
  5427 ;; *************** function ___fleq *****************
  5428 ;; Defined at:
  5429 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  ff1             4    0[BANK0 ] unsigned long 
  5432 ;;  ff2             4    4[BANK0 ] unsigned long 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;		None               void
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5444 ;;      Params:         0       8       0       0       0
  5445 ;;      Locals:         0       0       0       0       0
  5446 ;;      Temps:          0       4       0       0       0
  5447 ;;      Totals:         0      12       0       0       0
  5448 ;;Total ram usage:       12 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_sprintf
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function ___fleq
  5460  196A                     ___fleq:
  5461  196A                     l4238:	
  5462                           ;incstack = 0
  5463                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5464                           
  5465  196A  3000               	movlw	0
  5466  196B  1283               	bcf	3,5	;RP0=0, select bank0
  5467  196C  1303               	bcf	3,6	;RP1=0, select bank0
  5468  196D  0520               	andwf	___fleq@ff1,w
  5469  196E  00A8               	movwf	??___fleq
  5470  196F  3000               	movlw	0
  5471  1970  0521               	andwf	___fleq@ff1+1,w
  5472  1971  00A9               	movwf	??___fleq+1
  5473  1972  3080               	movlw	128
  5474  1973  0522               	andwf	___fleq@ff1+2,w
  5475  1974  00AA               	movwf	??___fleq+2
  5476  1975  307F               	movlw	127
  5477  1976  0523               	andwf	___fleq@ff1+3,w
  5478  1977  00AB               	movwf	??___fleq+3
  5479  1978  082B               	movf	??___fleq+3,w
  5480  1979  042A               	iorwf	??___fleq+2,w
  5481  197A  0429               	iorwf	??___fleq+1,w
  5482  197B  0428               	iorwf	??___fleq,w
  5483  197C  1D03               	skipz
  5484  197D  297F               	goto	u7441
  5485  197E  2980               	goto	u7440
  5486  197F                     u7441:
  5487  197F  2988               	goto	l541
  5488  1980                     u7440:
  5489  1980                     l4240:
  5490  1980  3000               	movlw	0
  5491  1981  00A3               	movwf	___fleq@ff1+3
  5492  1982  3000               	movlw	0
  5493  1983  00A2               	movwf	___fleq@ff1+2
  5494  1984  3000               	movlw	0
  5495  1985  00A1               	movwf	___fleq@ff1+1
  5496  1986  3000               	movlw	0
  5497  1987  00A0               	movwf	___fleq@ff1
  5498  1988                     l541:
  5499  1988  3000               	movlw	0
  5500  1989  0524               	andwf	___fleq@ff2,w
  5501  198A  00A8               	movwf	??___fleq
  5502  198B  3000               	movlw	0
  5503  198C  0525               	andwf	___fleq@ff2+1,w
  5504  198D  00A9               	movwf	??___fleq+1
  5505  198E  3080               	movlw	128
  5506  198F  0526               	andwf	___fleq@ff2+2,w
  5507  1990  00AA               	movwf	??___fleq+2
  5508  1991  307F               	movlw	127
  5509  1992  0527               	andwf	___fleq@ff2+3,w
  5510  1993  00AB               	movwf	??___fleq+3
  5511  1994  082B               	movf	??___fleq+3,w
  5512  1995  042A               	iorwf	??___fleq+2,w
  5513  1996  0429               	iorwf	??___fleq+1,w
  5514  1997  0428               	iorwf	??___fleq,w
  5515  1998  1D03               	skipz
  5516  1999  299B               	goto	u7451
  5517  199A  299C               	goto	u7450
  5518  199B                     u7451:
  5519  199B  29A4               	goto	l542
  5520  199C                     u7450:
  5521  199C                     l4242:
  5522  199C  3000               	movlw	0
  5523  199D  00A7               	movwf	___fleq@ff2+3
  5524  199E  3000               	movlw	0
  5525  199F  00A6               	movwf	___fleq@ff2+2
  5526  19A0  3000               	movlw	0
  5527  19A1  00A5               	movwf	___fleq@ff2+1
  5528  19A2  3000               	movlw	0
  5529  19A3  00A4               	movwf	___fleq@ff2
  5530  19A4                     l542:
  5531  19A4  0827               	movf	___fleq@ff2+3,w
  5532  19A5  0623               	xorwf	___fleq@ff1+3,w
  5533  19A6  1D03               	skipz
  5534  19A7  29B2               	goto	u7465
  5535  19A8  0826               	movf	___fleq@ff2+2,w
  5536  19A9  0622               	xorwf	___fleq@ff1+2,w
  5537  19AA  1D03               	skipz
  5538  19AB  29B2               	goto	u7465
  5539  19AC  0825               	movf	___fleq@ff2+1,w
  5540  19AD  0621               	xorwf	___fleq@ff1+1,w
  5541  19AE  1D03               	skipz
  5542  19AF  29B2               	goto	u7465
  5543  19B0  0824               	movf	___fleq@ff2,w
  5544  19B1  0620               	xorwf	___fleq@ff1,w
  5545  19B2                     u7465:
  5546  19B2  1903               	skipnz
  5547  19B3  29B5               	goto	u7461
  5548  19B4  29B6               	goto	u7460
  5549  19B5                     u7461:
  5550  19B5  29B8               	goto	l4246
  5551  19B6                     u7460:
  5552  19B6                     l4244:
  5553  19B6  1003               	clrc
  5554  19B7  29B9               	goto	l543
  5555  19B8                     l4246:
  5556  19B8  1403               	setc
  5557  19B9                     l543:
  5558  19B9  0008               	return
  5559  19BA                     __end_of___fleq:
  5560                           
  5561                           	psect	text15
  5562  18BF                     __ptext15:	
  5563 ;; *************** function _init_ADC *****************
  5564 ;; Defined at:
  5565 ;;		line 108 in file "main.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		None
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5579 ;;      Params:         0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           
  5594                           ;psect for function _init_ADC
  5595  18BF                     _init_ADC:
  5596  18BF                     l4424:	
  5597                           ;incstack = 0
  5598                           ; Regs used in _init_ADC: []
  5599                           
  5600                           
  5601                           ;main.c: 111:     if(PID_error > 30)
  5602  18BF  1683               	bsf	3,5	;RP0=1, select bank1
  5603  18C0  1303               	bcf	3,6	;RP1=0, select bank1
  5604  18C1  131F               	bcf	31,6	;volatile
  5605  18C2  1283               	bcf	3,5	;RP0=0, select bank0
  5606  18C3  1303               	bcf	3,6	;RP1=0, select bank0
  5607  18C4  139F               	bcf	31,7	;volatile
  5608  18C5  171F               	bsf	31,6	;volatile
  5609                           
  5610                           ;main.c: 113:     PID_p = kp * PID_error;
  5611  18C6  129F               	bcf	31,5	;volatile
  5612  18C7  121F               	bcf	31,4	;volatile
  5613  18C8  119F               	bcf	31,3	;volatile
  5614                           
  5615                           ;main.c: 115:     PID_d = kd*((PID_error - previous_error)/T*1000);
  5616  18C9  1683               	bsf	3,5	;RP0=1, select bank1
  5617  18CA  1303               	bcf	3,6	;RP1=0, select bank1
  5618  18CB  179F               	bsf	31,7	;volatile
  5619                           
  5620                           ;main.c: 117:     if(PID_value < 0)
  5621  18CC  159F               	bsf	31,3	;volatile
  5622  18CD  151F               	bsf	31,2	;volatile
  5623  18CE  149F               	bsf	31,1	;volatile
  5624  18CF  101F               	bcf	31,0	;volatile
  5625                           
  5626                           ;main.c: 119:     if(PID_value > 9800)
  5627  18D0  1283               	bcf	3,5	;RP0=0, select bank0
  5628  18D1  1303               	bcf	3,6	;RP1=0, select bank0
  5629  18D2  141F               	bsf	31,0	;volatile
  5630  18D3                     l153:
  5631  18D3  0008               	return
  5632  18D4                     __end_of_init_ADC:
  5633                           
  5634                           	psect	text16
  5635  1D1A                     __ptext16:	
  5636 ;; *************** function _ReadTemp *****************
  5637 ;; Defined at:
  5638 ;;		line 122 in file "main.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  ADC_value       2   37[BANK1 ] unsigned int 
  5643 ;;  voltage         2   35[BANK1 ] unsigned int 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5653 ;;      Params:         0       0       0       0       0
  5654 ;;      Locals:         0       0       4       0       0
  5655 ;;      Temps:          0       0       4       0       0
  5656 ;;      Totals:         0       0       8       0       0
  5657 ;;Total ram usage:        8 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    3
  5660 ;; This function calls:
  5661 ;;		___flmul
  5662 ;;		___fltol
  5663 ;;		___lwdiv
  5664 ;;		___xxtofl
  5665 ;; This function is called by:
  5666 ;;		_main
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           
  5671                           ;psect for function _ReadTemp
  5672  1D1A                     _ReadTemp:
  5673  1D1A                     l4426:	
  5674                           ;incstack = 0
  5675                           ; Regs used in _ReadTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5676                           
  5677  1D1A                     l4428:
  5678                           
  5679                           ;main.c: 125: {
  5680  1D1A  1283               	bcf	3,5	;RP0=0, select bank0
  5681  1D1B  1303               	bcf	3,6	;RP1=0, select bank0
  5682  1D1C  151F               	bsf	31,2	;volatile
  5683  1D1D                     l156:	
  5684                           ;main.c: 126:     if(RBIF == 1)
  5685                           
  5686  1D1D  191F               	btfsc	31,2	;volatile
  5687  1D1E  2D20               	goto	u7901
  5688  1D1F  2D21               	goto	u7900
  5689  1D20                     u7901:
  5690  1D20  2D1D               	goto	l156
  5691  1D21                     u7900:
  5692  1D21                     l4430:
  5693                           
  5694                           ;main.c: 127:     {
  5695  1D21  081E               	movf	30,w	;volatile
  5696  1D22  1683               	bsf	3,5	;RP0=1, select bank1
  5697  1D23  1303               	bcf	3,6	;RP1=0, select bank1
  5698  1D24  00C6               	movwf	(ReadTemp@ADC_value+1)^(0+128)
  5699  1D25  081E               	movf	30,w	;volatile
  5700  1D26  00C5               	movwf	ReadTemp@ADC_value^(0+128)
  5701  1D27                     l4432:
  5702                           
  5703                           ;main.c: 128:         if(RB4 == 1)
  5704  1D27  0845               	movf	ReadTemp@ADC_value^(0+128),w
  5705  1D28  1283               	bcf	3,5	;RP0=0, select bank0
  5706  1D29  1303               	bcf	3,6	;RP1=0, select bank0
  5707  1D2A  00AC               	movwf	___xxtofl@val
  5708  1D2B  1683               	bsf	3,5	;RP0=1, select bank1
  5709  1D2C  1303               	bcf	3,6	;RP1=0, select bank1
  5710  1D2D  0846               	movf	(ReadTemp@ADC_value+1)^(0+128),w
  5711  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  5712  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  5713  1D30  00AD               	movwf	___xxtofl@val+1
  5714  1D31  01AE               	clrf	___xxtofl@val+2
  5715  1D32  01AF               	clrf	___xxtofl@val+3
  5716  1D33  3000               	movlw	0
  5717  1D34  160A  158A  25C9  160A  158A  	fcall	___xxtofl
  5718  1D39  1283               	bcf	3,5	;RP0=0, select bank0
  5719  1D3A  1303               	bcf	3,6	;RP1=0, select bank0
  5720  1D3B  082F               	movf	?___xxtofl+3,w
  5721  1D3C  00C1               	movwf	___flmul@a+3
  5722  1D3D  082E               	movf	?___xxtofl+2,w
  5723  1D3E  00C0               	movwf	___flmul@a+2
  5724  1D3F  082D               	movf	?___xxtofl+1,w
  5725  1D40  00BF               	movwf	___flmul@a+1
  5726  1D41  082C               	movf	?___xxtofl,w
  5727  1D42  00BE               	movwf	___flmul@a
  5728  1D43  3040               	movlw	64
  5729  1D44  00BD               	movwf	___flmul@b+3
  5730  1D45  309C               	movlw	156
  5731  1D46  00BC               	movwf	___flmul@b+2
  5732  1D47  3067               	movlw	103
  5733  1D48  00BB               	movwf	___flmul@b+1
  5734  1D49  301A               	movlw	26
  5735  1D4A  00BA               	movwf	___flmul@b
  5736  1D4B  160A  118A  249F  160A  158A  	fcall	___flmul
  5737  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  5738  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  5739  1D52  083D               	movf	?___flmul+3,w
  5740  1D53  1683               	bsf	3,5	;RP0=1, select bank1
  5741  1D54  1303               	bcf	3,6	;RP1=0, select bank1
  5742  1D55  00B7               	movwf	(___fltol@f1+3)^(0+128)
  5743  1D56  1283               	bcf	3,5	;RP0=0, select bank0
  5744  1D57  1303               	bcf	3,6	;RP1=0, select bank0
  5745  1D58  083C               	movf	?___flmul+2,w
  5746  1D59  1683               	bsf	3,5	;RP0=1, select bank1
  5747  1D5A  1303               	bcf	3,6	;RP1=0, select bank1
  5748  1D5B  00B6               	movwf	(___fltol@f1+2)^(0+128)
  5749  1D5C  1283               	bcf	3,5	;RP0=0, select bank0
  5750  1D5D  1303               	bcf	3,6	;RP1=0, select bank0
  5751  1D5E  083B               	movf	?___flmul+1,w
  5752  1D5F  1683               	bsf	3,5	;RP0=1, select bank1
  5753  1D60  1303               	bcf	3,6	;RP1=0, select bank1
  5754  1D61  00B5               	movwf	(___fltol@f1+1)^(0+128)
  5755  1D62  1283               	bcf	3,5	;RP0=0, select bank0
  5756  1D63  1303               	bcf	3,6	;RP1=0, select bank0
  5757  1D64  083A               	movf	?___flmul,w
  5758  1D65  1683               	bsf	3,5	;RP0=1, select bank1
  5759  1D66  1303               	bcf	3,6	;RP1=0, select bank1
  5760  1D67  00B4               	movwf	___fltol@f1^(0+128)
  5761  1D68  160A  158A  23FA  160A  158A  	fcall	___fltol
  5762  1D6D  1683               	bsf	3,5	;RP0=1, select bank1
  5763  1D6E  1303               	bcf	3,6	;RP1=0, select bank1
  5764  1D6F  0835               	movf	(?___fltol+1)^(0+128),w
  5765  1D70  00C4               	movwf	(ReadTemp@voltage+1)^(0+128)
  5766  1D71  0834               	movf	?___fltol^(0+128),w
  5767  1D72  00C3               	movwf	ReadTemp@voltage^(0+128)
  5768  1D73                     l4434:
  5769                           
  5770                           ;main.c: 129:         {
  5771  1D73  0844               	movf	(ReadTemp@voltage+1)^(0+128),w
  5772  1D74  1283               	bcf	3,5	;RP0=0, select bank0
  5773  1D75  1303               	bcf	3,6	;RP1=0, select bank0
  5774  1D76  00A7               	movwf	___lwdiv@dividend+1
  5775  1D77  1683               	bsf	3,5	;RP0=1, select bank1
  5776  1D78  1303               	bcf	3,6	;RP1=0, select bank1
  5777  1D79  0843               	movf	ReadTemp@voltage^(0+128),w
  5778  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  5779  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  5780  1D7C  00A6               	movwf	___lwdiv@dividend
  5781  1D7D  300A               	movlw	10
  5782  1D7E  00A4               	movwf	___lwdiv@divisor
  5783  1D7F  3000               	movlw	0
  5784  1D80  00A5               	movwf	___lwdiv@divisor+1
  5785  1D81  160A  158A  20D4  160A  158A  	fcall	___lwdiv
  5786  1D86  1283               	bcf	3,5	;RP0=0, select bank0
  5787  1D87  1303               	bcf	3,6	;RP1=0, select bank0
  5788  1D88  0824               	movf	?___lwdiv,w
  5789  1D89  1683               	bsf	3,5	;RP0=1, select bank1
  5790  1D8A  1303               	bcf	3,6	;RP1=0, select bank1
  5791  1D8B  00BF               	movwf	??_ReadTemp^(0+128)
  5792  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
  5793  1D8D  1303               	bcf	3,6	;RP1=0, select bank0
  5794  1D8E  0825               	movf	?___lwdiv+1,w
  5795  1D8F  1683               	bsf	3,5	;RP0=1, select bank1
  5796  1D90  1303               	bcf	3,6	;RP1=0, select bank1
  5797  1D91  00C0               	movwf	(??_ReadTemp^(0+128)+1)
  5798  1D92  01C1               	clrf	(??_ReadTemp^(0+128)+2)
  5799  1D93  01C2               	clrf	(??_ReadTemp^(0+128)+3)
  5800  1D94  0842               	movf	(??_ReadTemp+3)^(0+128),w
  5801  1D95  1283               	bcf	3,5	;RP0=0, select bank0
  5802  1D96  1303               	bcf	3,6	;RP1=0, select bank0
  5803  1D97  00AF               	movwf	___xxtofl@val+3
  5804  1D98  1683               	bsf	3,5	;RP0=1, select bank1
  5805  1D99  1303               	bcf	3,6	;RP1=0, select bank1
  5806  1D9A  0841               	movf	(??_ReadTemp+2)^(0+128),w
  5807  1D9B  1283               	bcf	3,5	;RP0=0, select bank0
  5808  1D9C  1303               	bcf	3,6	;RP1=0, select bank0
  5809  1D9D  00AE               	movwf	___xxtofl@val+2
  5810  1D9E  1683               	bsf	3,5	;RP0=1, select bank1
  5811  1D9F  1303               	bcf	3,6	;RP1=0, select bank1
  5812  1DA0  0840               	movf	(??_ReadTemp+1)^(0+128),w
  5813  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
  5814  1DA2  1303               	bcf	3,6	;RP1=0, select bank0
  5815  1DA3  00AD               	movwf	___xxtofl@val+1
  5816  1DA4  1683               	bsf	3,5	;RP0=1, select bank1
  5817  1DA5  1303               	bcf	3,6	;RP1=0, select bank1
  5818  1DA6  083F               	movf	??_ReadTemp^(0+128),w
  5819  1DA7  1283               	bcf	3,5	;RP0=0, select bank0
  5820  1DA8  1303               	bcf	3,6	;RP1=0, select bank0
  5821  1DA9  00AC               	movwf	___xxtofl@val
  5822  1DAA  3000               	movlw	0
  5823  1DAB  160A  158A  25C9  160A  158A  	fcall	___xxtofl
  5824  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  5825  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
  5826  1DB2  082F               	movf	?___xxtofl+3,w
  5827  1DB3  1683               	bsf	3,5	;RP0=1, select bank3
  5828  1DB4  1703               	bsf	3,6	;RP1=1, select bank3
  5829  1DB5  00AC               	movwf	(_temp+3)^(0+384)
  5830  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  5831  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  5832  1DB8  082E               	movf	?___xxtofl+2,w
  5833  1DB9  1683               	bsf	3,5	;RP0=1, select bank3
  5834  1DBA  1703               	bsf	3,6	;RP1=1, select bank3
  5835  1DBB  00AB               	movwf	(_temp+2)^(0+384)
  5836  1DBC  1283               	bcf	3,5	;RP0=0, select bank0
  5837  1DBD  1303               	bcf	3,6	;RP1=0, select bank0
  5838  1DBE  082D               	movf	?___xxtofl+1,w
  5839  1DBF  1683               	bsf	3,5	;RP0=1, select bank3
  5840  1DC0  1703               	bsf	3,6	;RP1=1, select bank3
  5841  1DC1  00AA               	movwf	(_temp+1)^(0+384)
  5842  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
  5843  1DC3  1303               	bcf	3,6	;RP1=0, select bank0
  5844  1DC4  082C               	movf	?___xxtofl,w
  5845  1DC5  1683               	bsf	3,5	;RP0=1, select bank3
  5846  1DC6  1703               	bsf	3,6	;RP1=1, select bank3
  5847  1DC7  00A9               	movwf	_temp^(0+384)
  5848  1DC8                     l159:
  5849  1DC8  0008               	return
  5850  1DC9                     __end_of_ReadTemp:
  5851                           
  5852                           	psect	text17
  5853  1DC9                     __ptext17:	
  5854 ;; *************** function ___xxtofl *****************
  5855 ;; Defined at:
  5856 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  sign            1    wreg     unsigned char 
  5859 ;;  val             4   12[BANK0 ] long 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  sign            1   20[BANK0 ] unsigned char 
  5862 ;;  arg             4   22[BANK0 ] unsigned long 
  5863 ;;  exp             1   21[BANK0 ] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  4   12[BANK0 ] unsigned char 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       4       0       0       0
  5874 ;;      Locals:         0       6       0       0       0
  5875 ;;      Temps:          0       4       0       0       0
  5876 ;;      Totals:         0      14       0       0       0
  5877 ;;Total ram usage:       14 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_main
  5884 ;;		_ReadTemp
  5885 ;;		_sprintf
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           
  5890                           ;psect for function ___xxtofl
  5891  1DC9                     ___xxtofl:
  5892                           
  5893                           ;incstack = 0
  5894                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5895                           ;___xxtofl@sign stored from wreg
  5896  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  5897  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  5898  1DCB  00B4               	movwf	___xxtofl@sign
  5899  1DCC                     l4340:
  5900  1DCC  0834               	movf	___xxtofl@sign,w
  5901  1DCD  1903               	btfsc	3,2
  5902  1DCE  2DD0               	goto	u7711
  5903  1DCF  2DD1               	goto	u7710
  5904  1DD0                     u7711:
  5905  1DD0  2DE5               	goto	l4346
  5906  1DD1                     u7710:
  5907  1DD1                     l4342:
  5908  1DD1  1FAF               	btfss	___xxtofl@val+3,7
  5909  1DD2  2DD4               	goto	u7721
  5910  1DD3  2DD5               	goto	u7720
  5911  1DD4                     u7721:
  5912  1DD4  2DE5               	goto	l4346
  5913  1DD5                     u7720:
  5914  1DD5                     l4344:
  5915  1DD5  092C               	comf	___xxtofl@val,w
  5916  1DD6  00B6               	movwf	___xxtofl@arg
  5917  1DD7  092D               	comf	___xxtofl@val+1,w
  5918  1DD8  00B7               	movwf	___xxtofl@arg+1
  5919  1DD9  092E               	comf	___xxtofl@val+2,w
  5920  1DDA  00B8               	movwf	___xxtofl@arg+2
  5921  1DDB  092F               	comf	___xxtofl@val+3,w
  5922  1DDC  00B9               	movwf	___xxtofl@arg+3
  5923  1DDD  0AB6               	incf	___xxtofl@arg,f
  5924  1DDE  1903               	skipnz
  5925  1DDF  0AB7               	incf	___xxtofl@arg+1,f
  5926  1DE0  1903               	skipnz
  5927  1DE1  0AB8               	incf	___xxtofl@arg+2,f
  5928  1DE2  1903               	skipnz
  5929  1DE3  0AB9               	incf	___xxtofl@arg+3,f
  5930  1DE4  2DED               	goto	l822
  5931  1DE5                     l4346:
  5932  1DE5  082F               	movf	___xxtofl@val+3,w
  5933  1DE6  00B9               	movwf	___xxtofl@arg+3
  5934  1DE7  082E               	movf	___xxtofl@val+2,w
  5935  1DE8  00B8               	movwf	___xxtofl@arg+2
  5936  1DE9  082D               	movf	___xxtofl@val+1,w
  5937  1DEA  00B7               	movwf	___xxtofl@arg+1
  5938  1DEB  082C               	movf	___xxtofl@val,w
  5939  1DEC  00B6               	movwf	___xxtofl@arg
  5940  1DED                     l822:
  5941  1DED  082F               	movf	___xxtofl@val+3,w
  5942  1DEE  042E               	iorwf	___xxtofl@val+2,w
  5943  1DEF  042D               	iorwf	___xxtofl@val+1,w
  5944  1DF0  042C               	iorwf	___xxtofl@val,w
  5945  1DF1  1D03               	skipz
  5946  1DF2  2DF4               	goto	u7731
  5947  1DF3  2DF5               	goto	u7730
  5948  1DF4                     u7731:
  5949  1DF4  2DFE               	goto	l4352
  5950  1DF5                     u7730:
  5951  1DF5                     l4348:
  5952  1DF5  3000               	movlw	0
  5953  1DF6  00AF               	movwf	?___xxtofl+3
  5954  1DF7  3000               	movlw	0
  5955  1DF8  00AE               	movwf	?___xxtofl+2
  5956  1DF9  3000               	movlw	0
  5957  1DFA  00AD               	movwf	?___xxtofl+1
  5958  1DFB  3000               	movlw	0
  5959  1DFC  00AC               	movwf	?___xxtofl
  5960  1DFD  2E84               	goto	l824
  5961  1DFE                     l4352:
  5962  1DFE  3096               	movlw	150
  5963  1DFF  00B0               	movwf	??___xxtofl
  5964  1E00  0830               	movf	??___xxtofl,w
  5965  1E01  00B5               	movwf	___xxtofl@exp
  5966  1E02  2E10               	goto	l4356
  5967  1E03                     l4354:
  5968  1E03  3001               	movlw	1
  5969  1E04  00B0               	movwf	??___xxtofl
  5970  1E05  0830               	movf	??___xxtofl,w
  5971  1E06  07B5               	addwf	___xxtofl@exp,f
  5972  1E07  3001               	movlw	1
  5973  1E08                     u7745:
  5974  1E08  1003               	clrc
  5975  1E09  0CB9               	rrf	___xxtofl@arg+3,f
  5976  1E0A  0CB8               	rrf	___xxtofl@arg+2,f
  5977  1E0B  0CB7               	rrf	___xxtofl@arg+1,f
  5978  1E0C  0CB6               	rrf	___xxtofl@arg,f
  5979  1E0D  3EFF               	addlw	-1
  5980  1E0E  1D03               	skipz
  5981  1E0F  2E08               	goto	u7745
  5982  1E10                     l4356:
  5983  1E10  30FE               	movlw	254
  5984  1E11  0539               	andwf	___xxtofl@arg+3,w
  5985  1E12  1D03               	btfss	3,2
  5986  1E13  2E15               	goto	u7751
  5987  1E14  2E16               	goto	u7750
  5988  1E15                     u7751:
  5989  1E15  2E03               	goto	l4354
  5990  1E16                     u7750:
  5991  1E16  2E32               	goto	l828
  5992  1E17                     l4358:
  5993  1E17  3001               	movlw	1
  5994  1E18  00B0               	movwf	??___xxtofl
  5995  1E19  0830               	movf	??___xxtofl,w
  5996  1E1A  07B5               	addwf	___xxtofl@exp,f
  5997  1E1B                     l4360:
  5998  1E1B  3001               	movlw	1
  5999  1E1C  07B6               	addwf	___xxtofl@arg,f
  6000  1E1D  3000               	movlw	0
  6001  1E1E  1803               	skipnc
  6002  1E1F  3001               	movlw	1
  6003  1E20  07B7               	addwf	___xxtofl@arg+1,f
  6004  1E21  3000               	movlw	0
  6005  1E22  1803               	skipnc
  6006  1E23  3001               	movlw	1
  6007  1E24  07B8               	addwf	___xxtofl@arg+2,f
  6008  1E25  3000               	movlw	0
  6009  1E26  1803               	skipnc
  6010  1E27  3001               	movlw	1
  6011  1E28  07B9               	addwf	___xxtofl@arg+3,f
  6012  1E29                     l4362:
  6013  1E29  3001               	movlw	1
  6014  1E2A                     u7765:
  6015  1E2A  1003               	clrc
  6016  1E2B  0CB9               	rrf	___xxtofl@arg+3,f
  6017  1E2C  0CB8               	rrf	___xxtofl@arg+2,f
  6018  1E2D  0CB7               	rrf	___xxtofl@arg+1,f
  6019  1E2E  0CB6               	rrf	___xxtofl@arg,f
  6020  1E2F  3EFF               	addlw	-1
  6021  1E30  1D03               	skipz
  6022  1E31  2E2A               	goto	u7765
  6023  1E32                     l828:
  6024  1E32  30FF               	movlw	255
  6025  1E33  0539               	andwf	___xxtofl@arg+3,w
  6026  1E34  1D03               	btfss	3,2
  6027  1E35  2E37               	goto	u7771
  6028  1E36  2E38               	goto	u7770
  6029  1E37                     u7771:
  6030  1E37  2E17               	goto	l4358
  6031  1E38                     u7770:
  6032  1E38  2E44               	goto	l4366
  6033  1E39                     l4364:
  6034  1E39  3001               	movlw	1
  6035  1E3A  02B5               	subwf	___xxtofl@exp,f
  6036  1E3B  3001               	movlw	1
  6037  1E3C  00B0               	movwf	??___xxtofl
  6038  1E3D                     u7785:
  6039  1E3D  1003               	clrc
  6040  1E3E  0DB6               	rlf	___xxtofl@arg,f
  6041  1E3F  0DB7               	rlf	___xxtofl@arg+1,f
  6042  1E40  0DB8               	rlf	___xxtofl@arg+2,f
  6043  1E41  0DB9               	rlf	___xxtofl@arg+3,f
  6044  1E42  0BB0               	decfsz	??___xxtofl,f
  6045  1E43  2E3D               	goto	u7785
  6046  1E44                     l4366:
  6047  1E44  1BB8               	btfsc	___xxtofl@arg+2,7
  6048  1E45  2E47               	goto	u7791
  6049  1E46  2E48               	goto	u7790
  6050  1E47                     u7791:
  6051  1E47  2E4E               	goto	l835
  6052  1E48                     u7790:
  6053  1E48                     l4368:
  6054  1E48  3002               	movlw	2
  6055  1E49  0235               	subwf	___xxtofl@exp,w
  6056  1E4A  1803               	skipnc
  6057  1E4B  2E4D               	goto	u7801
  6058  1E4C  2E4E               	goto	u7800
  6059  1E4D                     u7801:
  6060  1E4D  2E39               	goto	l4364
  6061  1E4E                     u7800:
  6062  1E4E                     l835:
  6063  1E4E  1835               	btfsc	___xxtofl@exp,0
  6064  1E4F  2E51               	goto	u7811
  6065  1E50  2E52               	goto	u7810
  6066  1E51                     u7811:
  6067  1E51  2E5A               	goto	l836
  6068  1E52                     u7810:
  6069  1E52                     l4370:
  6070  1E52  30FF               	movlw	255
  6071  1E53  05B6               	andwf	___xxtofl@arg,f
  6072  1E54  30FF               	movlw	255
  6073  1E55  05B7               	andwf	___xxtofl@arg+1,f
  6074  1E56  307F               	movlw	127
  6075  1E57  05B8               	andwf	___xxtofl@arg+2,f
  6076  1E58  30FF               	movlw	255
  6077  1E59  05B9               	andwf	___xxtofl@arg+3,f
  6078  1E5A                     l836:
  6079  1E5A  1003               	clrc
  6080  1E5B  0CB5               	rrf	___xxtofl@exp,f
  6081  1E5C                     l4372:
  6082  1E5C  0835               	movf	___xxtofl@exp,w
  6083  1E5D  00B0               	movwf	??___xxtofl
  6084  1E5E  01B1               	clrf	??___xxtofl+1
  6085  1E5F  01B2               	clrf	??___xxtofl+2
  6086  1E60  01B3               	clrf	??___xxtofl+3
  6087  1E61  3018               	movlw	24
  6088  1E62                     u7825:
  6089  1E62  1003               	clrc
  6090  1E63  0DB0               	rlf	??___xxtofl,f
  6091  1E64  0DB1               	rlf	??___xxtofl+1,f
  6092  1E65  0DB2               	rlf	??___xxtofl+2,f
  6093  1E66  0DB3               	rlf	??___xxtofl+3,f
  6094  1E67                     u7820:
  6095  1E67  3EFF               	addlw	-1
  6096  1E68  1D03               	skipz
  6097  1E69  2E62               	goto	u7825
  6098  1E6A  0830               	movf	??___xxtofl,w
  6099  1E6B  04B6               	iorwf	___xxtofl@arg,f
  6100  1E6C  0831               	movf	??___xxtofl+1,w
  6101  1E6D  04B7               	iorwf	___xxtofl@arg+1,f
  6102  1E6E  0832               	movf	??___xxtofl+2,w
  6103  1E6F  04B8               	iorwf	___xxtofl@arg+2,f
  6104  1E70  0833               	movf	??___xxtofl+3,w
  6105  1E71  04B9               	iorwf	___xxtofl@arg+3,f
  6106  1E72                     l4374:
  6107  1E72  0834               	movf	___xxtofl@sign,w
  6108  1E73  1903               	btfsc	3,2
  6109  1E74  2E76               	goto	u7831
  6110  1E75  2E77               	goto	u7830
  6111  1E76                     u7831:
  6112  1E76  2E7C               	goto	l4380
  6113  1E77                     u7830:
  6114  1E77                     l4376:
  6115  1E77  1FAF               	btfss	___xxtofl@val+3,7
  6116  1E78  2E7A               	goto	u7841
  6117  1E79  2E7B               	goto	u7840
  6118  1E7A                     u7841:
  6119  1E7A  2E7C               	goto	l4380
  6120  1E7B                     u7840:
  6121  1E7B                     l4378:
  6122  1E7B  17B9               	bsf	___xxtofl@arg+3,7
  6123  1E7C                     l4380:
  6124  1E7C  0839               	movf	___xxtofl@arg+3,w
  6125  1E7D  00AF               	movwf	?___xxtofl+3
  6126  1E7E  0838               	movf	___xxtofl@arg+2,w
  6127  1E7F  00AE               	movwf	?___xxtofl+2
  6128  1E80  0837               	movf	___xxtofl@arg+1,w
  6129  1E81  00AD               	movwf	?___xxtofl+1
  6130  1E82  0836               	movf	___xxtofl@arg,w
  6131  1E83  00AC               	movwf	?___xxtofl
  6132  1E84                     l824:
  6133  1E84  0008               	return
  6134  1E85                     __end_of___xxtofl:
  6135                           
  6136                           	psect	text18
  6137  149F                     __ptext18:	
  6138 ;; *************** function ___flmul *****************
  6139 ;; Defined at:
  6140 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  b               4   26[BANK0 ] unsigned char 
  6143 ;;  a               4   30[BANK0 ] unsigned char 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;  prod            4   46[BANK0 ] struct .
  6146 ;;  grs             4   41[BANK0 ] unsigned long 
  6147 ;;  temp            2   50[BANK0 ] struct .
  6148 ;;  bexp            1   45[BANK0 ] unsigned char 
  6149 ;;  aexp            1   40[BANK0 ] unsigned char 
  6150 ;;  sign            1   39[BANK0 ] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  4   26[BANK0 ] unsigned char 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6160 ;;      Params:         0       8       0       0       0
  6161 ;;      Locals:         0      13       0       0       0
  6162 ;;      Temps:          0       5       0       0       0
  6163 ;;      Totals:         0      26       0       0       0
  6164 ;;Total ram usage:       26 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    2
  6167 ;; This function calls:
  6168 ;;		__Umul8_16
  6169 ;; This function is called by:
  6170 ;;		_main
  6171 ;;		_ReadTemp
  6172 ;;		_fround
  6173 ;;		_scale
  6174 ;;		_sprintf
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           
  6179                           ;psect for function ___flmul
  6180  149F                     ___flmul:
  6181  149F                     l3856:	
  6182                           ;incstack = 0
  6183                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6184                           
  6185  149F  1283               	bcf	3,5	;RP0=0, select bank0
  6186  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  6187  14A1  083D               	movf	___flmul@b+3,w
  6188  14A2  3980               	andlw	128
  6189  14A3  00C2               	movwf	??___flmul
  6190  14A4  0842               	movf	??___flmul,w
  6191  14A5  00C7               	movwf	___flmul@sign
  6192  14A6                     l3858:
  6193  14A6  083D               	movf	___flmul@b+3,w
  6194  14A7  00C2               	movwf	??___flmul
  6195  14A8  0742               	addwf	??___flmul,w
  6196  14A9  00C3               	movwf	??___flmul+1
  6197  14AA  0843               	movf	??___flmul+1,w
  6198  14AB  00CD               	movwf	___flmul@bexp
  6199  14AC                     l3860:
  6200  14AC  1FBC               	btfss	___flmul@b+2,7
  6201  14AD  2CAF               	goto	u6421
  6202  14AE  2CB0               	goto	u6420
  6203  14AF                     u6421:
  6204  14AF  2CB1               	goto	l3864
  6205  14B0                     u6420:
  6206  14B0                     l3862:
  6207  14B0  144D               	bsf	___flmul@bexp,0
  6208  14B1                     l3864:
  6209  14B1  084D               	movf	___flmul@bexp,w
  6210  14B2  1903               	btfsc	3,2
  6211  14B3  2CB5               	goto	u6431
  6212  14B4  2CB6               	goto	u6430
  6213  14B5                     u6431:
  6214  14B5  2CC5               	goto	l3872
  6215  14B6                     u6430:
  6216  14B6                     l3866:
  6217  14B6  0A4D               	incf	___flmul@bexp,w
  6218  14B7  1D03               	btfss	3,2
  6219  14B8  2CBA               	goto	u6441
  6220  14B9  2CBB               	goto	u6440
  6221  14BA                     u6441:
  6222  14BA  2CC3               	goto	l3870
  6223  14BB                     u6440:
  6224  14BB                     l3868:
  6225  14BB  3000               	movlw	0
  6226  14BC  00BD               	movwf	___flmul@b+3
  6227  14BD  3000               	movlw	0
  6228  14BE  00BC               	movwf	___flmul@b+2
  6229  14BF  3000               	movlw	0
  6230  14C0  00BB               	movwf	___flmul@b+1
  6231  14C1  3000               	movlw	0
  6232  14C2  00BA               	movwf	___flmul@b
  6233  14C3                     l3870:
  6234  14C3  17BC               	bsf	___flmul@b+2,7
  6235  14C4  2CCD               	goto	l3874
  6236  14C5                     l3872:
  6237  14C5  3000               	movlw	0
  6238  14C6  00BD               	movwf	___flmul@b+3
  6239  14C7  3000               	movlw	0
  6240  14C8  00BC               	movwf	___flmul@b+2
  6241  14C9  3000               	movlw	0
  6242  14CA  00BB               	movwf	___flmul@b+1
  6243  14CB  3000               	movlw	0
  6244  14CC  00BA               	movwf	___flmul@b
  6245  14CD                     l3874:
  6246  14CD  0841               	movf	___flmul@a+3,w
  6247  14CE  3980               	andlw	128
  6248  14CF  00C2               	movwf	??___flmul
  6249  14D0  0842               	movf	??___flmul,w
  6250  14D1  06C7               	xorwf	___flmul@sign,f
  6251  14D2                     l3876:
  6252  14D2  0841               	movf	___flmul@a+3,w
  6253  14D3  00C2               	movwf	??___flmul
  6254  14D4  0742               	addwf	??___flmul,w
  6255  14D5  00C3               	movwf	??___flmul+1
  6256  14D6  0843               	movf	??___flmul+1,w
  6257  14D7  00C8               	movwf	___flmul@aexp
  6258  14D8                     l3878:
  6259  14D8  1FC0               	btfss	___flmul@a+2,7
  6260  14D9  2CDB               	goto	u6451
  6261  14DA  2CDC               	goto	u6450
  6262  14DB                     u6451:
  6263  14DB  2CDD               	goto	l3882
  6264  14DC                     u6450:
  6265  14DC                     l3880:
  6266  14DC  1448               	bsf	___flmul@aexp,0
  6267  14DD                     l3882:
  6268  14DD  0848               	movf	___flmul@aexp,w
  6269  14DE  1903               	btfsc	3,2
  6270  14DF  2CE1               	goto	u6461
  6271  14E0  2CE2               	goto	u6460
  6272  14E1                     u6461:
  6273  14E1  2CF1               	goto	l3890
  6274  14E2                     u6460:
  6275  14E2                     l3884:
  6276  14E2  0A48               	incf	___flmul@aexp,w
  6277  14E3  1D03               	btfss	3,2
  6278  14E4  2CE6               	goto	u6471
  6279  14E5  2CE7               	goto	u6470
  6280  14E6                     u6471:
  6281  14E6  2CEF               	goto	l3888
  6282  14E7                     u6470:
  6283  14E7                     l3886:
  6284  14E7  3000               	movlw	0
  6285  14E8  00C1               	movwf	___flmul@a+3
  6286  14E9  3000               	movlw	0
  6287  14EA  00C0               	movwf	___flmul@a+2
  6288  14EB  3000               	movlw	0
  6289  14EC  00BF               	movwf	___flmul@a+1
  6290  14ED  3000               	movlw	0
  6291  14EE  00BE               	movwf	___flmul@a
  6292  14EF                     l3888:
  6293  14EF  17C0               	bsf	___flmul@a+2,7
  6294  14F0  2CF9               	goto	l3892
  6295  14F1                     l3890:
  6296  14F1  3000               	movlw	0
  6297  14F2  00C1               	movwf	___flmul@a+3
  6298  14F3  3000               	movlw	0
  6299  14F4  00C0               	movwf	___flmul@a+2
  6300  14F5  3000               	movlw	0
  6301  14F6  00BF               	movwf	___flmul@a+1
  6302  14F7  3000               	movlw	0
  6303  14F8  00BE               	movwf	___flmul@a
  6304  14F9                     l3892:
  6305  14F9  0848               	movf	___flmul@aexp,w
  6306  14FA  1903               	btfsc	3,2
  6307  14FB  2CFD               	goto	u6481
  6308  14FC  2CFE               	goto	u6480
  6309  14FD                     u6481:
  6310  14FD  2D03               	goto	l3896
  6311  14FE                     u6480:
  6312  14FE                     l3894:
  6313  14FE  084D               	movf	___flmul@bexp,w
  6314  14FF  1D03               	btfss	3,2
  6315  1500  2D02               	goto	u6491
  6316  1501  2D03               	goto	u6490
  6317  1502                     u6491:
  6318  1502  2D0C               	goto	l3900
  6319  1503                     u6490:
  6320  1503                     l3896:
  6321  1503  3000               	movlw	0
  6322  1504  00BD               	movwf	?___flmul+3
  6323  1505  3000               	movlw	0
  6324  1506  00BC               	movwf	?___flmul+2
  6325  1507  3000               	movlw	0
  6326  1508  00BB               	movwf	?___flmul+1
  6327  1509  3000               	movlw	0
  6328  150A  00BA               	movwf	?___flmul
  6329  150B  2FFF               	goto	l778
  6330  150C                     l3900:
  6331  150C  083A               	movf	___flmul@b,w
  6332  150D  00C2               	movwf	??___flmul
  6333  150E  0842               	movf	??___flmul,w
  6334  150F  00F4               	movwf	__Umul8_16@multiplicand
  6335  1510  0840               	movf	___flmul@a+2,w
  6336  1511  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6337  1516  0875               	movf	?__Umul8_16+1,w
  6338  1517  1283               	bcf	3,5	;RP0=0, select bank0
  6339  1518  1303               	bcf	3,6	;RP1=0, select bank0
  6340  1519  00D3               	movwf	___flmul@temp+1
  6341  151A  0874               	movf	?__Umul8_16,w
  6342  151B  00D2               	movwf	___flmul@temp
  6343  151C                     l3902:
  6344  151C  0852               	movf	___flmul@temp,w
  6345  151D  00C2               	movwf	??___flmul
  6346  151E  01C3               	clrf	??___flmul+1
  6347  151F  01C4               	clrf	??___flmul+2
  6348  1520  01C5               	clrf	??___flmul+3
  6349  1521  0845               	movf	??___flmul+3,w
  6350  1522  00CC               	movwf	___flmul@grs+3
  6351  1523  0844               	movf	??___flmul+2,w
  6352  1524  00CB               	movwf	___flmul@grs+2
  6353  1525  0843               	movf	??___flmul+1,w
  6354  1526  00CA               	movwf	___flmul@grs+1
  6355  1527  0842               	movf	??___flmul,w
  6356  1528  00C9               	movwf	___flmul@grs
  6357  1529                     l3904:
  6358  1529  0853               	movf	___flmul@temp+1,w
  6359  152A  00C2               	movwf	??___flmul
  6360  152B  01C3               	clrf	??___flmul+1
  6361  152C  01C4               	clrf	??___flmul+2
  6362  152D  01C5               	clrf	??___flmul+3
  6363  152E  0845               	movf	??___flmul+3,w
  6364  152F  00D1               	movwf	___flmul@prod+3
  6365  1530  0844               	movf	??___flmul+2,w
  6366  1531  00D0               	movwf	___flmul@prod+2
  6367  1532  0843               	movf	??___flmul+1,w
  6368  1533  00CF               	movwf	___flmul@prod+1
  6369  1534  0842               	movf	??___flmul,w
  6370  1535  00CE               	movwf	___flmul@prod
  6371  1536  083B               	movf	___flmul@b+1,w
  6372  1537  00C2               	movwf	??___flmul
  6373  1538  0842               	movf	??___flmul,w
  6374  1539  00F4               	movwf	__Umul8_16@multiplicand
  6375  153A  083F               	movf	___flmul@a+1,w
  6376  153B  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6377  1540  0875               	movf	?__Umul8_16+1,w
  6378  1541  1283               	bcf	3,5	;RP0=0, select bank0
  6379  1542  1303               	bcf	3,6	;RP1=0, select bank0
  6380  1543  00D3               	movwf	___flmul@temp+1
  6381  1544  0874               	movf	?__Umul8_16,w
  6382  1545  00D2               	movwf	___flmul@temp
  6383  1546                     l3906:
  6384  1546  0852               	movf	___flmul@temp,w
  6385  1547  00C2               	movwf	??___flmul
  6386  1548  01C3               	clrf	??___flmul+1
  6387  1549  01C4               	clrf	??___flmul+2
  6388  154A  01C5               	clrf	??___flmul+3
  6389  154B  0842               	movf	??___flmul,w
  6390  154C  07C9               	addwf	___flmul@grs,f
  6391  154D  0843               	movf	??___flmul+1,w
  6392  154E  1103               	clrz
  6393  154F  1803               	skipnc
  6394  1550  3E01               	addlw	1
  6395  1551  1903               	skipnz
  6396  1552  2D54               	goto	u6501
  6397  1553  07CA               	addwf	___flmul@grs+1,f
  6398  1554                     u6501:
  6399  1554  0844               	movf	??___flmul+2,w
  6400  1555  1103               	clrz
  6401  1556  1803               	skipnc
  6402  1557  3E01               	addlw	1
  6403  1558  1903               	skipnz
  6404  1559  2D5B               	goto	u6502
  6405  155A  07CB               	addwf	___flmul@grs+2,f
  6406  155B                     u6502:
  6407  155B  0845               	movf	??___flmul+3,w
  6408  155C  1103               	clrz
  6409  155D  1803               	skipnc
  6410  155E  3E01               	addlw	1
  6411  155F  1903               	skipnz
  6412  1560  2D62               	goto	u6503
  6413  1561  07CC               	addwf	___flmul@grs+3,f
  6414  1562                     u6503:
  6415  1562                     l3908:
  6416  1562  0853               	movf	___flmul@temp+1,w
  6417  1563  00C2               	movwf	??___flmul
  6418  1564  01C3               	clrf	??___flmul+1
  6419  1565  01C4               	clrf	??___flmul+2
  6420  1566  01C5               	clrf	??___flmul+3
  6421  1567  0842               	movf	??___flmul,w
  6422  1568  07CE               	addwf	___flmul@prod,f
  6423  1569  0843               	movf	??___flmul+1,w
  6424  156A  1103               	clrz
  6425  156B  1803               	skipnc
  6426  156C  3E01               	addlw	1
  6427  156D  1903               	skipnz
  6428  156E  2D70               	goto	u6511
  6429  156F  07CF               	addwf	___flmul@prod+1,f
  6430  1570                     u6511:
  6431  1570  0844               	movf	??___flmul+2,w
  6432  1571  1103               	clrz
  6433  1572  1803               	skipnc
  6434  1573  3E01               	addlw	1
  6435  1574  1903               	skipnz
  6436  1575  2D77               	goto	u6512
  6437  1576  07D0               	addwf	___flmul@prod+2,f
  6438  1577                     u6512:
  6439  1577  0845               	movf	??___flmul+3,w
  6440  1578  1103               	clrz
  6441  1579  1803               	skipnc
  6442  157A  3E01               	addlw	1
  6443  157B  1903               	skipnz
  6444  157C  2D7E               	goto	u6513
  6445  157D  07D1               	addwf	___flmul@prod+3,f
  6446  157E                     u6513:
  6447  157E  083C               	movf	___flmul@b+2,w
  6448  157F  00C2               	movwf	??___flmul
  6449  1580  0842               	movf	??___flmul,w
  6450  1581  00F4               	movwf	__Umul8_16@multiplicand
  6451  1582  083E               	movf	___flmul@a,w
  6452  1583  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6453  1588  0875               	movf	?__Umul8_16+1,w
  6454  1589  1283               	bcf	3,5	;RP0=0, select bank0
  6455  158A  1303               	bcf	3,6	;RP1=0, select bank0
  6456  158B  00D3               	movwf	___flmul@temp+1
  6457  158C  0874               	movf	?__Umul8_16,w
  6458  158D  00D2               	movwf	___flmul@temp
  6459  158E                     l3910:
  6460  158E  0852               	movf	___flmul@temp,w
  6461  158F  00C2               	movwf	??___flmul
  6462  1590  01C3               	clrf	??___flmul+1
  6463  1591  01C4               	clrf	??___flmul+2
  6464  1592  01C5               	clrf	??___flmul+3
  6465  1593  0842               	movf	??___flmul,w
  6466  1594  07C9               	addwf	___flmul@grs,f
  6467  1595  0843               	movf	??___flmul+1,w
  6468  1596  1103               	clrz
  6469  1597  1803               	skipnc
  6470  1598  3E01               	addlw	1
  6471  1599  1903               	skipnz
  6472  159A  2D9C               	goto	u6521
  6473  159B  07CA               	addwf	___flmul@grs+1,f
  6474  159C                     u6521:
  6475  159C  0844               	movf	??___flmul+2,w
  6476  159D  1103               	clrz
  6477  159E  1803               	skipnc
  6478  159F  3E01               	addlw	1
  6479  15A0  1903               	skipnz
  6480  15A1  2DA3               	goto	u6522
  6481  15A2  07CB               	addwf	___flmul@grs+2,f
  6482  15A3                     u6522:
  6483  15A3  0845               	movf	??___flmul+3,w
  6484  15A4  1103               	clrz
  6485  15A5  1803               	skipnc
  6486  15A6  3E01               	addlw	1
  6487  15A7  1903               	skipnz
  6488  15A8  2DAA               	goto	u6523
  6489  15A9  07CC               	addwf	___flmul@grs+3,f
  6490  15AA                     u6523:
  6491  15AA                     l3912:
  6492  15AA  0853               	movf	___flmul@temp+1,w
  6493  15AB  00C2               	movwf	??___flmul
  6494  15AC  01C3               	clrf	??___flmul+1
  6495  15AD  01C4               	clrf	??___flmul+2
  6496  15AE  01C5               	clrf	??___flmul+3
  6497  15AF  0842               	movf	??___flmul,w
  6498  15B0  07CE               	addwf	___flmul@prod,f
  6499  15B1  0843               	movf	??___flmul+1,w
  6500  15B2  1103               	clrz
  6501  15B3  1803               	skipnc
  6502  15B4  3E01               	addlw	1
  6503  15B5  1903               	skipnz
  6504  15B6  2DB8               	goto	u6531
  6505  15B7  07CF               	addwf	___flmul@prod+1,f
  6506  15B8                     u6531:
  6507  15B8  0844               	movf	??___flmul+2,w
  6508  15B9  1103               	clrz
  6509  15BA  1803               	skipnc
  6510  15BB  3E01               	addlw	1
  6511  15BC  1903               	skipnz
  6512  15BD  2DBF               	goto	u6532
  6513  15BE  07D0               	addwf	___flmul@prod+2,f
  6514  15BF                     u6532:
  6515  15BF  0845               	movf	??___flmul+3,w
  6516  15C0  1103               	clrz
  6517  15C1  1803               	skipnc
  6518  15C2  3E01               	addlw	1
  6519  15C3  1903               	skipnz
  6520  15C4  2DC6               	goto	u6533
  6521  15C5  07D1               	addwf	___flmul@prod+3,f
  6522  15C6                     u6533:
  6523  15C6                     l3914:
  6524  15C6  3008               	movlw	8
  6525  15C7  00C2               	movwf	??___flmul
  6526  15C8                     u6545:
  6527  15C8  1003               	clrc
  6528  15C9  0DC9               	rlf	___flmul@grs,f
  6529  15CA  0DCA               	rlf	___flmul@grs+1,f
  6530  15CB  0DCB               	rlf	___flmul@grs+2,f
  6531  15CC  0DCC               	rlf	___flmul@grs+3,f
  6532  15CD  0BC2               	decfsz	??___flmul,f
  6533  15CE  2DC8               	goto	u6545
  6534  15CF                     l3916:
  6535  15CF  083B               	movf	___flmul@b+1,w
  6536  15D0  00C2               	movwf	??___flmul
  6537  15D1  0842               	movf	??___flmul,w
  6538  15D2  00F4               	movwf	__Umul8_16@multiplicand
  6539  15D3  083E               	movf	___flmul@a,w
  6540  15D4  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6541  15D9  0875               	movf	?__Umul8_16+1,w
  6542  15DA  1283               	bcf	3,5	;RP0=0, select bank0
  6543  15DB  1303               	bcf	3,6	;RP1=0, select bank0
  6544  15DC  00D3               	movwf	___flmul@temp+1
  6545  15DD  0874               	movf	?__Umul8_16,w
  6546  15DE  00D2               	movwf	___flmul@temp
  6547  15DF                     l3918:
  6548  15DF  0852               	movf	___flmul@temp,w
  6549  15E0  00C2               	movwf	??___flmul
  6550  15E1  0853               	movf	___flmul@temp+1,w
  6551  15E2  00C3               	movwf	??___flmul+1
  6552  15E3  01C4               	clrf	??___flmul+2
  6553  15E4  01C5               	clrf	??___flmul+3
  6554  15E5  0842               	movf	??___flmul,w
  6555  15E6  07C9               	addwf	___flmul@grs,f
  6556  15E7  0843               	movf	??___flmul+1,w
  6557  15E8  1103               	clrz
  6558  15E9  1803               	skipnc
  6559  15EA  3E01               	addlw	1
  6560  15EB  1903               	skipnz
  6561  15EC  2DEE               	goto	u6551
  6562  15ED  07CA               	addwf	___flmul@grs+1,f
  6563  15EE                     u6551:
  6564  15EE  0844               	movf	??___flmul+2,w
  6565  15EF  1103               	clrz
  6566  15F0  1803               	skipnc
  6567  15F1  3E01               	addlw	1
  6568  15F2  1903               	skipnz
  6569  15F3  2DF5               	goto	u6552
  6570  15F4  07CB               	addwf	___flmul@grs+2,f
  6571  15F5                     u6552:
  6572  15F5  0845               	movf	??___flmul+3,w
  6573  15F6  1103               	clrz
  6574  15F7  1803               	skipnc
  6575  15F8  3E01               	addlw	1
  6576  15F9  1903               	skipnz
  6577  15FA  2DFC               	goto	u6553
  6578  15FB  07CC               	addwf	___flmul@grs+3,f
  6579  15FC                     u6553:
  6580  15FC                     l3920:
  6581  15FC  083A               	movf	___flmul@b,w
  6582  15FD  00C2               	movwf	??___flmul
  6583  15FE  0842               	movf	??___flmul,w
  6584  15FF  00F4               	movwf	__Umul8_16@multiplicand
  6585  1600  083F               	movf	___flmul@a+1,w
  6586  1601  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6587  1606  0875               	movf	?__Umul8_16+1,w
  6588  1607  1283               	bcf	3,5	;RP0=0, select bank0
  6589  1608  1303               	bcf	3,6	;RP1=0, select bank0
  6590  1609  00D3               	movwf	___flmul@temp+1
  6591  160A  0874               	movf	?__Umul8_16,w
  6592  160B  00D2               	movwf	___flmul@temp
  6593  160C                     l3922:
  6594  160C  0852               	movf	___flmul@temp,w
  6595  160D  00C2               	movwf	??___flmul
  6596  160E  0853               	movf	___flmul@temp+1,w
  6597  160F  00C3               	movwf	??___flmul+1
  6598  1610  01C4               	clrf	??___flmul+2
  6599  1611  01C5               	clrf	??___flmul+3
  6600  1612  0842               	movf	??___flmul,w
  6601  1613  07C9               	addwf	___flmul@grs,f
  6602  1614  0843               	movf	??___flmul+1,w
  6603  1615  1103               	clrz
  6604  1616  1803               	skipnc
  6605  1617  3E01               	addlw	1
  6606  1618  1903               	skipnz
  6607  1619  2E1B               	goto	u6561
  6608  161A  07CA               	addwf	___flmul@grs+1,f
  6609  161B                     u6561:
  6610  161B  0844               	movf	??___flmul+2,w
  6611  161C  1103               	clrz
  6612  161D  1803               	skipnc
  6613  161E  3E01               	addlw	1
  6614  161F  1903               	skipnz
  6615  1620  2E22               	goto	u6562
  6616  1621  07CB               	addwf	___flmul@grs+2,f
  6617  1622                     u6562:
  6618  1622  0845               	movf	??___flmul+3,w
  6619  1623  1103               	clrz
  6620  1624  1803               	skipnc
  6621  1625  3E01               	addlw	1
  6622  1626  1903               	skipnz
  6623  1627  2E29               	goto	u6563
  6624  1628  07CC               	addwf	___flmul@grs+3,f
  6625  1629                     u6563:
  6626  1629                     l3924:
  6627  1629  3008               	movlw	8
  6628  162A  00C2               	movwf	??___flmul
  6629  162B                     u6575:
  6630  162B  1003               	clrc
  6631  162C  0DC9               	rlf	___flmul@grs,f
  6632  162D  0DCA               	rlf	___flmul@grs+1,f
  6633  162E  0DCB               	rlf	___flmul@grs+2,f
  6634  162F  0DCC               	rlf	___flmul@grs+3,f
  6635  1630  0BC2               	decfsz	??___flmul,f
  6636  1631  2E2B               	goto	u6575
  6637  1632  083A               	movf	___flmul@b,w
  6638  1633  00C2               	movwf	??___flmul
  6639  1634  0842               	movf	??___flmul,w
  6640  1635  00F4               	movwf	__Umul8_16@multiplicand
  6641  1636  083E               	movf	___flmul@a,w
  6642  1637  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6643  163C  0875               	movf	?__Umul8_16+1,w
  6644  163D  1283               	bcf	3,5	;RP0=0, select bank0
  6645  163E  1303               	bcf	3,6	;RP1=0, select bank0
  6646  163F  00D3               	movwf	___flmul@temp+1
  6647  1640  0874               	movf	?__Umul8_16,w
  6648  1641  00D2               	movwf	___flmul@temp
  6649  1642                     l3926:
  6650  1642  0852               	movf	___flmul@temp,w
  6651  1643  00C2               	movwf	??___flmul
  6652  1644  0853               	movf	___flmul@temp+1,w
  6653  1645  00C3               	movwf	??___flmul+1
  6654  1646  01C4               	clrf	??___flmul+2
  6655  1647  01C5               	clrf	??___flmul+3
  6656  1648  0842               	movf	??___flmul,w
  6657  1649  07C9               	addwf	___flmul@grs,f
  6658  164A  0843               	movf	??___flmul+1,w
  6659  164B  1103               	clrz
  6660  164C  1803               	skipnc
  6661  164D  3E01               	addlw	1
  6662  164E  1903               	skipnz
  6663  164F  2E51               	goto	u6581
  6664  1650  07CA               	addwf	___flmul@grs+1,f
  6665  1651                     u6581:
  6666  1651  0844               	movf	??___flmul+2,w
  6667  1652  1103               	clrz
  6668  1653  1803               	skipnc
  6669  1654  3E01               	addlw	1
  6670  1655  1903               	skipnz
  6671  1656  2E58               	goto	u6582
  6672  1657  07CB               	addwf	___flmul@grs+2,f
  6673  1658                     u6582:
  6674  1658  0845               	movf	??___flmul+3,w
  6675  1659  1103               	clrz
  6676  165A  1803               	skipnc
  6677  165B  3E01               	addlw	1
  6678  165C  1903               	skipnz
  6679  165D  2E5F               	goto	u6583
  6680  165E  07CC               	addwf	___flmul@grs+3,f
  6681  165F                     u6583:
  6682  165F                     l3928:
  6683  165F  083B               	movf	___flmul@b+1,w
  6684  1660  00C2               	movwf	??___flmul
  6685  1661  0842               	movf	??___flmul,w
  6686  1662  00F4               	movwf	__Umul8_16@multiplicand
  6687  1663  0840               	movf	___flmul@a+2,w
  6688  1664  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6689  1669  0875               	movf	?__Umul8_16+1,w
  6690  166A  1283               	bcf	3,5	;RP0=0, select bank0
  6691  166B  1303               	bcf	3,6	;RP1=0, select bank0
  6692  166C  00D3               	movwf	___flmul@temp+1
  6693  166D  0874               	movf	?__Umul8_16,w
  6694  166E  00D2               	movwf	___flmul@temp
  6695  166F  0852               	movf	___flmul@temp,w
  6696  1670  00C2               	movwf	??___flmul
  6697  1671  0853               	movf	___flmul@temp+1,w
  6698  1672  00C3               	movwf	??___flmul+1
  6699  1673  01C4               	clrf	??___flmul+2
  6700  1674  01C5               	clrf	??___flmul+3
  6701  1675  0842               	movf	??___flmul,w
  6702  1676  07CE               	addwf	___flmul@prod,f
  6703  1677  0843               	movf	??___flmul+1,w
  6704  1678  1103               	clrz
  6705  1679  1803               	skipnc
  6706  167A  3E01               	addlw	1
  6707  167B  1903               	skipnz
  6708  167C  2E7E               	goto	u6591
  6709  167D  07CF               	addwf	___flmul@prod+1,f
  6710  167E                     u6591:
  6711  167E  0844               	movf	??___flmul+2,w
  6712  167F  1103               	clrz
  6713  1680  1803               	skipnc
  6714  1681  3E01               	addlw	1
  6715  1682  1903               	skipnz
  6716  1683  2E85               	goto	u6592
  6717  1684  07D0               	addwf	___flmul@prod+2,f
  6718  1685                     u6592:
  6719  1685  0845               	movf	??___flmul+3,w
  6720  1686  1103               	clrz
  6721  1687  1803               	skipnc
  6722  1688  3E01               	addlw	1
  6723  1689  1903               	skipnz
  6724  168A  2E8C               	goto	u6593
  6725  168B  07D1               	addwf	___flmul@prod+3,f
  6726  168C                     u6593:
  6727  168C                     l3930:
  6728  168C  083C               	movf	___flmul@b+2,w
  6729  168D  00C2               	movwf	??___flmul
  6730  168E  0842               	movf	??___flmul,w
  6731  168F  00F4               	movwf	__Umul8_16@multiplicand
  6732  1690  083F               	movf	___flmul@a+1,w
  6733  1691  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6734  1696  0875               	movf	?__Umul8_16+1,w
  6735  1697  1283               	bcf	3,5	;RP0=0, select bank0
  6736  1698  1303               	bcf	3,6	;RP1=0, select bank0
  6737  1699  00D3               	movwf	___flmul@temp+1
  6738  169A  0874               	movf	?__Umul8_16,w
  6739  169B  00D2               	movwf	___flmul@temp
  6740  169C                     l3932:
  6741  169C  0852               	movf	___flmul@temp,w
  6742  169D  00C2               	movwf	??___flmul
  6743  169E  0853               	movf	___flmul@temp+1,w
  6744  169F  00C3               	movwf	??___flmul+1
  6745  16A0  01C4               	clrf	??___flmul+2
  6746  16A1  01C5               	clrf	??___flmul+3
  6747  16A2  0842               	movf	??___flmul,w
  6748  16A3  07CE               	addwf	___flmul@prod,f
  6749  16A4  0843               	movf	??___flmul+1,w
  6750  16A5  1103               	clrz
  6751  16A6  1803               	skipnc
  6752  16A7  3E01               	addlw	1
  6753  16A8  1903               	skipnz
  6754  16A9  2EAB               	goto	u6601
  6755  16AA  07CF               	addwf	___flmul@prod+1,f
  6756  16AB                     u6601:
  6757  16AB  0844               	movf	??___flmul+2,w
  6758  16AC  1103               	clrz
  6759  16AD  1803               	skipnc
  6760  16AE  3E01               	addlw	1
  6761  16AF  1903               	skipnz
  6762  16B0  2EB2               	goto	u6602
  6763  16B1  07D0               	addwf	___flmul@prod+2,f
  6764  16B2                     u6602:
  6765  16B2  0845               	movf	??___flmul+3,w
  6766  16B3  1103               	clrz
  6767  16B4  1803               	skipnc
  6768  16B5  3E01               	addlw	1
  6769  16B6  1903               	skipnz
  6770  16B7  2EB9               	goto	u6603
  6771  16B8  07D1               	addwf	___flmul@prod+3,f
  6772  16B9                     u6603:
  6773  16B9  083C               	movf	___flmul@b+2,w
  6774  16BA  00C2               	movwf	??___flmul
  6775  16BB  0842               	movf	??___flmul,w
  6776  16BC  00F4               	movwf	__Umul8_16@multiplicand
  6777  16BD  0840               	movf	___flmul@a+2,w
  6778  16BE  120A  118A  2090  160A  118A  	fcall	__Umul8_16
  6779  16C3  0875               	movf	?__Umul8_16+1,w
  6780  16C4  1283               	bcf	3,5	;RP0=0, select bank0
  6781  16C5  1303               	bcf	3,6	;RP1=0, select bank0
  6782  16C6  00D3               	movwf	___flmul@temp+1
  6783  16C7  0874               	movf	?__Umul8_16,w
  6784  16C8  00D2               	movwf	___flmul@temp
  6785  16C9                     l3934:
  6786  16C9  0852               	movf	___flmul@temp,w
  6787  16CA  00C2               	movwf	??___flmul
  6788  16CB  0853               	movf	___flmul@temp+1,w
  6789  16CC  00C3               	movwf	??___flmul+1
  6790  16CD  01C4               	clrf	??___flmul+2
  6791  16CE  01C5               	clrf	??___flmul+3
  6792  16CF  3008               	movlw	8
  6793  16D0                     u6615:
  6794  16D0  1003               	clrc
  6795  16D1  0DC2               	rlf	??___flmul,f
  6796  16D2  0DC3               	rlf	??___flmul+1,f
  6797  16D3  0DC4               	rlf	??___flmul+2,f
  6798  16D4  0DC5               	rlf	??___flmul+3,f
  6799  16D5                     u6610:
  6800  16D5  3EFF               	addlw	-1
  6801  16D6  1D03               	skipz
  6802  16D7  2ED0               	goto	u6615
  6803  16D8  0842               	movf	??___flmul,w
  6804  16D9  07CE               	addwf	___flmul@prod,f
  6805  16DA  0843               	movf	??___flmul+1,w
  6806  16DB  1103               	clrz
  6807  16DC  1803               	skipnc
  6808  16DD  3E01               	addlw	1
  6809  16DE  1903               	skipnz
  6810  16DF  2EE1               	goto	u6621
  6811  16E0  07CF               	addwf	___flmul@prod+1,f
  6812  16E1                     u6621:
  6813  16E1  0844               	movf	??___flmul+2,w
  6814  16E2  1103               	clrz
  6815  16E3  1803               	skipnc
  6816  16E4  3E01               	addlw	1
  6817  16E5  1903               	skipnz
  6818  16E6  2EE8               	goto	u6622
  6819  16E7  07D0               	addwf	___flmul@prod+2,f
  6820  16E8                     u6622:
  6821  16E8  0845               	movf	??___flmul+3,w
  6822  16E9  1103               	clrz
  6823  16EA  1803               	skipnc
  6824  16EB  3E01               	addlw	1
  6825  16EC  1903               	skipnz
  6826  16ED  2EEF               	goto	u6623
  6827  16EE  07D1               	addwf	___flmul@prod+3,f
  6828  16EF                     u6623:
  6829  16EF                     l3936:
  6830  16EF  0849               	movf	___flmul@grs,w
  6831  16F0  00C2               	movwf	??___flmul
  6832  16F1  084A               	movf	___flmul@grs+1,w
  6833  16F2  00C3               	movwf	??___flmul+1
  6834  16F3  084B               	movf	___flmul@grs+2,w
  6835  16F4  00C4               	movwf	??___flmul+2
  6836  16F5  084C               	movf	___flmul@grs+3,w
  6837  16F6  00C5               	movwf	??___flmul+3
  6838  16F7  3018               	movlw	24
  6839  16F8                     u6635:
  6840  16F8  1003               	clrc
  6841  16F9  0CC5               	rrf	??___flmul+3,f
  6842  16FA  0CC4               	rrf	??___flmul+2,f
  6843  16FB  0CC3               	rrf	??___flmul+1,f
  6844  16FC  0CC2               	rrf	??___flmul,f
  6845  16FD                     u6630:
  6846  16FD  3EFF               	addlw	-1
  6847  16FE  1D03               	skipz
  6848  16FF  2EF8               	goto	u6635
  6849  1700  0842               	movf	??___flmul,w
  6850  1701  07CE               	addwf	___flmul@prod,f
  6851  1702  0843               	movf	??___flmul+1,w
  6852  1703  1103               	clrz
  6853  1704  1803               	skipnc
  6854  1705  3E01               	addlw	1
  6855  1706  1903               	skipnz
  6856  1707  2F09               	goto	u6641
  6857  1708  07CF               	addwf	___flmul@prod+1,f
  6858  1709                     u6641:
  6859  1709  0844               	movf	??___flmul+2,w
  6860  170A  1103               	clrz
  6861  170B  1803               	skipnc
  6862  170C  3E01               	addlw	1
  6863  170D  1903               	skipnz
  6864  170E  2F10               	goto	u6642
  6865  170F  07D0               	addwf	___flmul@prod+2,f
  6866  1710                     u6642:
  6867  1710  0845               	movf	??___flmul+3,w
  6868  1711  1103               	clrz
  6869  1712  1803               	skipnc
  6870  1713  3E01               	addlw	1
  6871  1714  1903               	skipnz
  6872  1715  2F17               	goto	u6643
  6873  1716  07D1               	addwf	___flmul@prod+3,f
  6874  1717                     u6643:
  6875  1717                     l3938:
  6876  1717  3008               	movlw	8
  6877  1718  00C2               	movwf	??___flmul
  6878  1719                     u6655:
  6879  1719  1003               	clrc
  6880  171A  0DC9               	rlf	___flmul@grs,f
  6881  171B  0DCA               	rlf	___flmul@grs+1,f
  6882  171C  0DCB               	rlf	___flmul@grs+2,f
  6883  171D  0DCC               	rlf	___flmul@grs+3,f
  6884  171E  0BC2               	decfsz	??___flmul,f
  6885  171F  2F19               	goto	u6655
  6886  1720                     l3940:
  6887  1720  084D               	movf	___flmul@bexp,w
  6888  1721  0748               	addwf	___flmul@aexp,w
  6889  1722  00C2               	movwf	??___flmul
  6890  1723  01C3               	clrf	??___flmul+1
  6891  1724  0DC3               	rlf	??___flmul+1,f
  6892  1725  0842               	movf	??___flmul,w
  6893  1726  3E82               	addlw	130
  6894  1727  00D2               	movwf	___flmul@temp
  6895  1728  0843               	movf	??___flmul+1,w
  6896  1729  1803               	skipnc
  6897  172A  3E01               	addlw	1
  6898  172B  3EFF               	addlw	255
  6899  172C  00D3               	movwf	___flmul@temp+1
  6900  172D  2F4B               	goto	l3952
  6901  172E                     l3942:
  6902  172E  3001               	movlw	1
  6903  172F  00C2               	movwf	??___flmul
  6904  1730                     u6665:
  6905  1730  1003               	clrc
  6906  1731  0DCE               	rlf	___flmul@prod,f
  6907  1732  0DCF               	rlf	___flmul@prod+1,f
  6908  1733  0DD0               	rlf	___flmul@prod+2,f
  6909  1734  0DD1               	rlf	___flmul@prod+3,f
  6910  1735  0BC2               	decfsz	??___flmul,f
  6911  1736  2F30               	goto	u6665
  6912  1737                     l3944:
  6913  1737  1FCC               	btfss	___flmul@grs+3,7
  6914  1738  2F3A               	goto	u6671
  6915  1739  2F3B               	goto	u6670
  6916  173A                     u6671:
  6917  173A  2F3C               	goto	l3948
  6918  173B                     u6670:
  6919  173B                     l3946:
  6920  173B  144E               	bsf	___flmul@prod,0
  6921  173C                     l3948:
  6922  173C  3001               	movlw	1
  6923  173D  00C2               	movwf	??___flmul
  6924  173E                     u6685:
  6925  173E  1003               	clrc
  6926  173F  0DC9               	rlf	___flmul@grs,f
  6927  1740  0DCA               	rlf	___flmul@grs+1,f
  6928  1741  0DCB               	rlf	___flmul@grs+2,f
  6929  1742  0DCC               	rlf	___flmul@grs+3,f
  6930  1743  0BC2               	decfsz	??___flmul,f
  6931  1744  2F3E               	goto	u6685
  6932  1745                     l3950:
  6933  1745  30FF               	movlw	255
  6934  1746  07D2               	addwf	___flmul@temp,f
  6935  1747  1803               	skipnc
  6936  1748  0AD3               	incf	___flmul@temp+1,f
  6937  1749  30FF               	movlw	255
  6938  174A  07D3               	addwf	___flmul@temp+1,f
  6939  174B                     l3952:
  6940  174B  1FD0               	btfss	___flmul@prod+2,7
  6941  174C  2F4E               	goto	u6691
  6942  174D  2F4F               	goto	u6690
  6943  174E                     u6691:
  6944  174E  2F2E               	goto	l3942
  6945  174F                     u6690:
  6946  174F                     l3954:
  6947  174F  01C8               	clrf	___flmul@aexp
  6948  1750                     l3956:
  6949  1750  1FCC               	btfss	___flmul@grs+3,7
  6950  1751  2F53               	goto	u6701
  6951  1752  2F54               	goto	u6700
  6952  1753                     u6701:
  6953  1753  2F70               	goto	l3964
  6954  1754                     u6700:
  6955  1754                     l3958:
  6956  1754  30FF               	movlw	255
  6957  1755  0549               	andwf	___flmul@grs,w
  6958  1756  00C2               	movwf	??___flmul
  6959  1757  30FF               	movlw	255
  6960  1758  054A               	andwf	___flmul@grs+1,w
  6961  1759  00C3               	movwf	??___flmul+1
  6962  175A  30FF               	movlw	255
  6963  175B  054B               	andwf	___flmul@grs+2,w
  6964  175C  00C4               	movwf	??___flmul+2
  6965  175D  307F               	movlw	127
  6966  175E  054C               	andwf	___flmul@grs+3,w
  6967  175F  00C5               	movwf	??___flmul+3
  6968  1760  0845               	movf	??___flmul+3,w
  6969  1761  0444               	iorwf	??___flmul+2,w
  6970  1762  0443               	iorwf	??___flmul+1,w
  6971  1763  0442               	iorwf	??___flmul,w
  6972  1764  1903               	skipnz
  6973  1765  2F67               	goto	u6711
  6974  1766  2F68               	goto	u6710
  6975  1767                     u6711:
  6976  1767  2F6B               	goto	l784
  6977  1768                     u6710:
  6978  1768                     l3960:
  6979  1768  01C8               	clrf	___flmul@aexp
  6980  1769  0AC8               	incf	___flmul@aexp,f
  6981  176A  2F70               	goto	l3964
  6982  176B                     l784:
  6983  176B  1C4E               	btfss	___flmul@prod,0
  6984  176C  2F6E               	goto	u6721
  6985  176D  2F6F               	goto	u6720
  6986  176E                     u6721:
  6987  176E  2F70               	goto	l3964
  6988  176F                     u6720:
  6989  176F  2F68               	goto	l3960
  6990  1770                     l3964:
  6991  1770  0848               	movf	___flmul@aexp,w
  6992  1771  1903               	btfsc	3,2
  6993  1772  2F74               	goto	u6731
  6994  1773  2F75               	goto	u6730
  6995  1774                     u6731:
  6996  1774  2FA6               	goto	l3974
  6997  1775                     u6730:
  6998  1775                     l3966:
  6999  1775  3001               	movlw	1
  7000  1776  07CE               	addwf	___flmul@prod,f
  7001  1777  3000               	movlw	0
  7002  1778  1803               	skipnc
  7003  1779  3001               	movlw	1
  7004  177A  07CF               	addwf	___flmul@prod+1,f
  7005  177B  3000               	movlw	0
  7006  177C  1803               	skipnc
  7007  177D  3001               	movlw	1
  7008  177E  07D0               	addwf	___flmul@prod+2,f
  7009  177F  3000               	movlw	0
  7010  1780  1803               	skipnc
  7011  1781  3001               	movlw	1
  7012  1782  07D1               	addwf	___flmul@prod+3,f
  7013  1783                     l3968:
  7014  1783  1C51               	btfss	___flmul@prod+3,0
  7015  1784  2F86               	goto	u6741
  7016  1785  2F87               	goto	u6740
  7017  1786                     u6741:
  7018  1786  2FA6               	goto	l3974
  7019  1787                     u6740:
  7020  1787                     l3970:
  7021  1787  084E               	movf	___flmul@prod,w
  7022  1788  00C2               	movwf	??___flmul
  7023  1789  084F               	movf	___flmul@prod+1,w
  7024  178A  00C3               	movwf	??___flmul+1
  7025  178B  0850               	movf	___flmul@prod+2,w
  7026  178C  00C4               	movwf	??___flmul+2
  7027  178D  0851               	movf	___flmul@prod+3,w
  7028  178E  00C5               	movwf	??___flmul+3
  7029  178F  3001               	movlw	1
  7030  1790  00C6               	movwf	??___flmul+4
  7031  1791                     u6755:
  7032  1791  0D45               	rlf	??___flmul+3,w
  7033  1792  0CC5               	rrf	??___flmul+3,f
  7034  1793  0CC4               	rrf	??___flmul+2,f
  7035  1794  0CC3               	rrf	??___flmul+1,f
  7036  1795  0CC2               	rrf	??___flmul,f
  7037  1796                     u6750:
  7038  1796  0BC6               	decfsz	??___flmul+4,f
  7039  1797  2F91               	goto	u6755
  7040  1798  0845               	movf	??___flmul+3,w
  7041  1799  00D1               	movwf	___flmul@prod+3
  7042  179A  0844               	movf	??___flmul+2,w
  7043  179B  00D0               	movwf	___flmul@prod+2
  7044  179C  0843               	movf	??___flmul+1,w
  7045  179D  00CF               	movwf	___flmul@prod+1
  7046  179E  0842               	movf	??___flmul,w
  7047  179F  00CE               	movwf	___flmul@prod
  7048  17A0                     l3972:
  7049  17A0  3001               	movlw	1
  7050  17A1  07D2               	addwf	___flmul@temp,f
  7051  17A2  1803               	skipnc
  7052  17A3  0AD3               	incf	___flmul@temp+1,f
  7053  17A4  3000               	movlw	0
  7054  17A5  07D3               	addwf	___flmul@temp+1,f
  7055  17A6                     l3974:
  7056  17A6  0853               	movf	___flmul@temp+1,w
  7057  17A7  3A80               	xorlw	128
  7058  17A8  00FF               	movwf	btemp+1
  7059  17A9  3080               	movlw	128
  7060  17AA  027F               	subwf	btemp+1,w
  7061  17AB  1D03               	skipz
  7062  17AC  2FAF               	goto	u6765
  7063  17AD  30FF               	movlw	255
  7064  17AE  0252               	subwf	___flmul@temp,w
  7065  17AF                     u6765:
  7066  17AF  1C03               	skipc
  7067  17B0  2FB2               	goto	u6761
  7068  17B1  2FB3               	goto	u6760
  7069  17B2                     u6761:
  7070  17B2  2FBE               	goto	l3978
  7071  17B3                     u6760:
  7072  17B3                     l3976:
  7073  17B3  307F               	movlw	127
  7074  17B4  1283               	bcf	3,5	;RP0=0, select bank0
  7075  17B5  1303               	bcf	3,6	;RP1=0, select bank0
  7076  17B6  00D1               	movwf	___flmul@prod+3
  7077  17B7  3080               	movlw	128
  7078  17B8  00D0               	movwf	___flmul@prod+2
  7079  17B9  3000               	movlw	0
  7080  17BA  00CF               	movwf	___flmul@prod+1
  7081  17BB  3000               	movlw	0
  7082  17BC  00CE               	movwf	___flmul@prod
  7083  17BD  2FF3               	goto	l790
  7084  17BE                     l3978:
  7085  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  7086  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  7087  17C0  0853               	movf	___flmul@temp+1,w
  7088  17C1  3A80               	xorlw	128
  7089  17C2  00FF               	movwf	btemp+1
  7090  17C3  3080               	movlw	128
  7091  17C4  027F               	subwf	btemp+1,w
  7092  17C5  1D03               	skipz
  7093  17C6  2FC9               	goto	u6775
  7094  17C7  3001               	movlw	1
  7095  17C8  0252               	subwf	___flmul@temp,w
  7096  17C9                     u6775:
  7097  17C9  1803               	skipnc
  7098  17CA  2FCC               	goto	u6771
  7099  17CB  2FCD               	goto	u6770
  7100  17CC                     u6771:
  7101  17CC  2FD9               	goto	l3984
  7102  17CD                     u6770:
  7103  17CD                     l3980:
  7104  17CD  3000               	movlw	0
  7105  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  7106  17CF  1303               	bcf	3,6	;RP1=0, select bank0
  7107  17D0  00D1               	movwf	___flmul@prod+3
  7108  17D1  3000               	movlw	0
  7109  17D2  00D0               	movwf	___flmul@prod+2
  7110  17D3  3000               	movlw	0
  7111  17D4  00CF               	movwf	___flmul@prod+1
  7112  17D5  3000               	movlw	0
  7113  17D6  00CE               	movwf	___flmul@prod
  7114  17D7                     l3982:
  7115  17D7  01C7               	clrf	___flmul@sign
  7116  17D8  2FF3               	goto	l790
  7117  17D9                     l3984:
  7118  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  7119  17DA  1303               	bcf	3,6	;RP1=0, select bank0
  7120  17DB  0852               	movf	___flmul@temp,w
  7121  17DC  00C2               	movwf	??___flmul
  7122  17DD  0842               	movf	??___flmul,w
  7123  17DE  00CD               	movwf	___flmul@bexp
  7124  17DF  30FF               	movlw	255
  7125  17E0  05CE               	andwf	___flmul@prod,f
  7126  17E1  30FF               	movlw	255
  7127  17E2  05CF               	andwf	___flmul@prod+1,f
  7128  17E3  307F               	movlw	127
  7129  17E4  05D0               	andwf	___flmul@prod+2,f
  7130  17E5  3000               	movlw	0
  7131  17E6  05D1               	andwf	___flmul@prod+3,f
  7132  17E7                     l3986:
  7133  17E7  1C4D               	btfss	___flmul@bexp,0
  7134  17E8  2FEA               	goto	u6781
  7135  17E9  2FEB               	goto	u6780
  7136  17EA                     u6781:
  7137  17EA  2FEC               	goto	l3990
  7138  17EB                     u6780:
  7139  17EB                     l3988:
  7140  17EB  17D0               	bsf	___flmul@prod+2,7
  7141  17EC                     l3990:
  7142  17EC  084D               	movf	___flmul@bexp,w
  7143  17ED  00C2               	movwf	??___flmul
  7144  17EE  1003               	clrc
  7145  17EF  0C42               	rrf	??___flmul,w
  7146  17F0  00C3               	movwf	??___flmul+1
  7147  17F1  0843               	movf	??___flmul+1,w
  7148  17F2  00D1               	movwf	___flmul@prod+3
  7149  17F3                     l790:
  7150  17F3  0847               	movf	___flmul@sign,w
  7151  17F4  00C2               	movwf	??___flmul
  7152  17F5  0842               	movf	??___flmul,w
  7153  17F6  04D1               	iorwf	___flmul@prod+3,f
  7154  17F7                     l3992:
  7155  17F7  0851               	movf	___flmul@prod+3,w
  7156  17F8  00BD               	movwf	?___flmul+3
  7157  17F9  0850               	movf	___flmul@prod+2,w
  7158  17FA  00BC               	movwf	?___flmul+2
  7159  17FB  084F               	movf	___flmul@prod+1,w
  7160  17FC  00BB               	movwf	?___flmul+1
  7161  17FD  084E               	movf	___flmul@prod,w
  7162  17FE  00BA               	movwf	?___flmul
  7163  17FF                     l778:
  7164  17FF  0008               	return
  7165  1800                     __end_of___flmul:
  7166                           
  7167                           	psect	text19
  7168  0090                     __ptext19:	
  7169 ;; *************** function __Umul8_16 *****************
  7170 ;; Defined at:
  7171 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  multiplier      1    wreg     unsigned char 
  7174 ;;  multiplicand    1    4[COMMON] unsigned char 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  multiplier      1    6[BANK0 ] unsigned char 
  7177 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  7178 ;;  product         2    2[BANK0 ] unsigned int 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  2    4[COMMON] unsigned int 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2, status,0
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7188 ;;      Params:         2       0       0       0       0
  7189 ;;      Locals:         0       5       0       0       0
  7190 ;;      Temps:          0       2       0       0       0
  7191 ;;      Totals:         2       7       0       0       0
  7192 ;;Total ram usage:        9 bytes
  7193 ;; Hardware stack levels used:    1
  7194 ;; Hardware stack levels required when called:    1
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		___flmul
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           
  7203                           ;psect for function __Umul8_16
  7204  0090                     __Umul8_16:
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7208                           ;__Umul8_16@multiplier stored from wreg
  7209  0090  1283               	bcf	3,5	;RP0=0, select bank0
  7210  0091  1303               	bcf	3,6	;RP1=0, select bank0
  7211  0092  00A6               	movwf	__Umul8_16@multiplier
  7212  0093                     l3508:
  7213  0093  01A2               	clrf	__Umul8_16@product
  7214  0094  01A3               	clrf	__Umul8_16@product+1
  7215  0095                     l3510:
  7216  0095  0874               	movf	__Umul8_16@multiplicand,w
  7217  0096  00A0               	movwf	??__Umul8_16
  7218  0097  01A1               	clrf	??__Umul8_16+1
  7219  0098  0820               	movf	??__Umul8_16,w
  7220  0099  00A4               	movwf	__Umul8_16@word_mpld
  7221  009A  0821               	movf	??__Umul8_16+1,w
  7222  009B  00A5               	movwf	__Umul8_16@word_mpld+1
  7223  009C                     l3512:
  7224  009C  1C26               	btfss	__Umul8_16@multiplier,0
  7225  009D  289F               	goto	u5571
  7226  009E  28A0               	goto	u5570
  7227  009F                     u5571:
  7228  009F  28A6               	goto	l797
  7229  00A0                     u5570:
  7230  00A0                     l3514:
  7231  00A0  0824               	movf	__Umul8_16@word_mpld,w
  7232  00A1  07A2               	addwf	__Umul8_16@product,f
  7233  00A2  1803               	skipnc
  7234  00A3  0AA3               	incf	__Umul8_16@product+1,f
  7235  00A4  0825               	movf	__Umul8_16@word_mpld+1,w
  7236  00A5  07A3               	addwf	__Umul8_16@product+1,f
  7237  00A6                     l797:
  7238  00A6  3001               	movlw	1
  7239  00A7                     u5585:
  7240  00A7  1003               	clrc
  7241  00A8  0DA4               	rlf	__Umul8_16@word_mpld,f
  7242  00A9  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  7243  00AA  3EFF               	addlw	-1
  7244  00AB  1D03               	skipz
  7245  00AC  28A7               	goto	u5585
  7246  00AD  1003               	clrc
  7247  00AE  0CA6               	rrf	__Umul8_16@multiplier,f
  7248  00AF                     l3516:
  7249  00AF  0826               	movf	__Umul8_16@multiplier,w
  7250  00B0  1D03               	btfss	3,2
  7251  00B1  28B3               	goto	u5591
  7252  00B2  28B4               	goto	u5590
  7253  00B3                     u5591:
  7254  00B3  289C               	goto	l3512
  7255  00B4                     u5590:
  7256  00B4                     l3518:
  7257  00B4  0823               	movf	__Umul8_16@product+1,w
  7258  00B5  00F5               	movwf	?__Umul8_16+1
  7259  00B6  0822               	movf	__Umul8_16@product,w
  7260  00B7  00F4               	movwf	?__Umul8_16
  7261  00B8                     l799:
  7262  00B8  0008               	return
  7263  00B9                     __end_of__Umul8_16:
  7264                           
  7265                           	psect	text20
  7266  006B                     __ptext20:	
  7267 ;; *************** function _Lcd_Write_String *****************
  7268 ;; Defined at:
  7269 ;;		line 95 in file "./lcd.h"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  a               1    wreg     PTR unsigned char 
  7272 ;;		 -> main@str(20), 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  a               1    6[BANK0 ] PTR unsigned char 
  7275 ;;		 -> main@str(20), 
  7276 ;;  i               2    4[BANK0 ] int 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  1    wreg      void 
  7279 ;; Registers used:
  7280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7286 ;;      Params:         0       0       0       0       0
  7287 ;;      Locals:         0       3       0       0       0
  7288 ;;      Temps:          0       1       0       0       0
  7289 ;;      Totals:         0       4       0       0       0
  7290 ;;Total ram usage:        4 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:    3
  7293 ;; This function calls:
  7294 ;;		_Lcd_Write_Char
  7295 ;; This function is called by:
  7296 ;;		_main
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           
  7301                           ;psect for function _Lcd_Write_String
  7302  006B                     _Lcd_Write_String:
  7303                           
  7304                           ;incstack = 0
  7305                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7306                           ;Lcd_Write_String@a stored from wreg
  7307  006B  1283               	bcf	3,5	;RP0=0, select bank0
  7308  006C  1303               	bcf	3,6	;RP1=0, select bank0
  7309  006D  00A6               	movwf	Lcd_Write_String@a
  7310  006E                     l4416:
  7311                           
  7312                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  7313  006E  01A4               	clrf	Lcd_Write_String@i
  7314  006F  01A5               	clrf	Lcd_Write_String@i+1
  7315  0070  2884               	goto	l4422
  7316  0071                     l4418:
  7317                           
  7318                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  7319  0071  0824               	movf	Lcd_Write_String@i,w
  7320  0072  0726               	addwf	Lcd_Write_String@a,w
  7321  0073  00A3               	movwf	??_Lcd_Write_String
  7322  0074  0823               	movf	??_Lcd_Write_String,w
  7323  0075  0084               	movwf	4
  7324  0076  0800               	movf	0,w
  7325  0077  120A  118A  2034  120A  118A  	fcall	_Lcd_Write_Char
  7326  007C                     l4420:
  7327  007C  3001               	movlw	1
  7328  007D  1283               	bcf	3,5	;RP0=0, select bank0
  7329  007E  1303               	bcf	3,6	;RP1=0, select bank0
  7330  007F  07A4               	addwf	Lcd_Write_String@i,f
  7331  0080  1803               	skipnc
  7332  0081  0AA5               	incf	Lcd_Write_String@i+1,f
  7333  0082  3000               	movlw	0
  7334  0083  07A5               	addwf	Lcd_Write_String@i+1,f
  7335  0084                     l4422:
  7336  0084  0824               	movf	Lcd_Write_String@i,w
  7337  0085  0726               	addwf	Lcd_Write_String@a,w
  7338  0086  00A3               	movwf	??_Lcd_Write_String
  7339  0087  0823               	movf	??_Lcd_Write_String,w
  7340  0088  0084               	movwf	4
  7341  0089  1383               	bcf	3,7	;select IRP bank0
  7342  008A  0800               	movf	0,w
  7343  008B  1D03               	btfss	3,2
  7344  008C  288E               	goto	u7891
  7345  008D  288F               	goto	u7890
  7346  008E                     u7891:
  7347  008E  2871               	goto	l4418
  7348  008F                     u7890:
  7349  008F                     l105:
  7350  008F  0008               	return
  7351  0090                     __end_of_Lcd_Write_String:
  7352                           
  7353                           	psect	text21
  7354  0034                     __ptext21:	
  7355 ;; *************** function _Lcd_Write_Char *****************
  7356 ;; Defined at:
  7357 ;;		line 79 in file "./lcd.h"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  a               1    wreg     unsigned char 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  a               1    2[BANK0 ] unsigned char 
  7362 ;;  y               1    1[BANK0 ] unsigned char 
  7363 ;;  temp            1    0[BANK0 ] unsigned char 
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		wreg, status,2, status,0, pclath, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7373 ;;      Params:         0       0       0       0       0
  7374 ;;      Locals:         0       3       0       0       0
  7375 ;;      Temps:          1       0       0       0       0
  7376 ;;      Totals:         1       3       0       0       0
  7377 ;;Total ram usage:        4 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    2
  7380 ;; This function calls:
  7381 ;;		_Lcd_Port
  7382 ;; This function is called by:
  7383 ;;		_Lcd_Write_String
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function _Lcd_Write_Char
  7389  0034                     _Lcd_Write_Char:
  7390                           
  7391                           ;incstack = 0
  7392                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7393                           ;Lcd_Write_Char@a stored from wreg
  7394  0034  1283               	bcf	3,5	;RP0=0, select bank0
  7395  0035  1303               	bcf	3,6	;RP1=0, select bank0
  7396  0036  00A2               	movwf	Lcd_Write_Char@a
  7397  0037                     l4006:
  7398                           
  7399                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  7400  0037  0822               	movf	Lcd_Write_Char@a,w
  7401  0038  390F               	andlw	15
  7402  0039  00F5               	movwf	??_Lcd_Write_Char
  7403  003A  0875               	movf	??_Lcd_Write_Char,w
  7404  003B  00A0               	movwf	Lcd_Write_Char@temp
  7405                           
  7406                           ;./lcd.h: 83:    y = a&0xF0;
  7407  003C  0822               	movf	Lcd_Write_Char@a,w
  7408  003D  39F0               	andlw	240
  7409  003E  00F5               	movwf	??_Lcd_Write_Char
  7410  003F  0875               	movf	??_Lcd_Write_Char,w
  7411  0040  00A1               	movwf	Lcd_Write_Char@y
  7412  0041                     l4008:
  7413                           
  7414                           ;./lcd.h: 84:    RD2 = 1;
  7415  0041  1508               	bsf	8,2	;volatile
  7416  0042                     l4010:
  7417                           
  7418                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  7419  0042  0821               	movf	Lcd_Write_Char@y,w
  7420  0043  00F5               	movwf	??_Lcd_Write_Char
  7421  0044  3004               	movlw	4
  7422  0045                     u6795:
  7423  0045  1003               	clrc
  7424  0046  0CF5               	rrf	??_Lcd_Write_Char,f
  7425  0047  3EFF               	addlw	-1
  7426  0048  1D03               	skipz
  7427  0049  2845               	goto	u6795
  7428  004A  0875               	movf	??_Lcd_Write_Char,w
  7429  004B  120A  158A  2002  120A  118A  	fcall	_Lcd_Port
  7430  0050                     l4012:
  7431                           
  7432                           ;./lcd.h: 86:    RD3 = 1;
  7433  0050  1283               	bcf	3,5	;RP0=0, select bank0
  7434  0051  1303               	bcf	3,6	;RP1=0, select bank0
  7435  0052  1588               	bsf	8,3	;volatile
  7436  0053                     l4014:
  7437                           
  7438                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  7439  0053  300D               	movlw	13
  7440  0054  00F5               	movwf	??_Lcd_Write_Char
  7441  0055                     u8297:
  7442  0055  0BF5               	decfsz	??_Lcd_Write_Char,f
  7443  0056  2855               	goto	u8297
  7444  0057                     l4016:
  7445                           
  7446                           ;./lcd.h: 88:    RD3 = 0;
  7447  0057  1283               	bcf	3,5	;RP0=0, select bank0
  7448  0058  1303               	bcf	3,6	;RP1=0, select bank0
  7449  0059  1188               	bcf	8,3	;volatile
  7450  005A                     l4018:
  7451                           
  7452                           ;./lcd.h: 89:    Lcd_Port(temp);
  7453  005A  0820               	movf	Lcd_Write_Char@temp,w
  7454  005B  120A  158A  2002  120A  118A  	fcall	_Lcd_Port
  7455  0060                     l4020:
  7456                           
  7457                           ;./lcd.h: 90:    RD3 = 1;
  7458  0060  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0061  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0062  1588               	bsf	8,3	;volatile
  7461  0063                     l4022:
  7462                           
  7463                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  7464  0063  300D               	movlw	13
  7465  0064  00F5               	movwf	??_Lcd_Write_Char
  7466  0065                     u8307:
  7467  0065  0BF5               	decfsz	??_Lcd_Write_Char,f
  7468  0066  2865               	goto	u8307
  7469  0067                     l4024:
  7470                           
  7471                           ;./lcd.h: 92:    RD3 = 0;
  7472  0067  1283               	bcf	3,5	;RP0=0, select bank0
  7473  0068  1303               	bcf	3,6	;RP1=0, select bank0
  7474  0069  1188               	bcf	8,3	;volatile
  7475  006A                     l99:
  7476  006A  0008               	return
  7477  006B                     __end_of_Lcd_Write_Char:
  7478                           
  7479                           	psect	text22
  7480  1A10                     __ptext22:	
  7481 ;; *************** function _Lcd_Set_Cursor *****************
  7482 ;; Defined at:
  7483 ;;		line 39 in file "./lcd.h"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  a               1    wreg     unsigned char 
  7486 ;;  b               1    2[BANK0 ] unsigned char 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  a               1    5[BANK0 ] unsigned char 
  7489 ;;  temp            1    8[BANK0 ] unsigned char 
  7490 ;;  y               1    7[BANK0 ] unsigned char 
  7491 ;;  z               1    6[BANK0 ] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  1    wreg      void 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0, pclath, cstack
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7501 ;;      Params:         0       1       0       0       0
  7502 ;;      Locals:         0       4       0       0       0
  7503 ;;      Temps:          0       2       0       0       0
  7504 ;;      Totals:         0       7       0       0       0
  7505 ;;Total ram usage:        7 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    3
  7508 ;; This function calls:
  7509 ;;		_Lcd_Cmd
  7510 ;; This function is called by:
  7511 ;;		_main
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           
  7516                           ;psect for function _Lcd_Set_Cursor
  7517  1A10                     _Lcd_Set_Cursor:
  7518                           
  7519                           ;incstack = 0
  7520                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7521                           ;Lcd_Set_Cursor@a stored from wreg
  7522  1A10  1283               	bcf	3,5	;RP0=0, select bank0
  7523  1A11  1303               	bcf	3,6	;RP1=0, select bank0
  7524  1A12  00A5               	movwf	Lcd_Set_Cursor@a
  7525  1A13                     l4386:
  7526                           
  7527                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  7528  1A13  0325               	decf	Lcd_Set_Cursor@a,w
  7529  1A14  1D03               	btfss	3,2
  7530  1A15  2A17               	goto	u7851
  7531  1A16  2A18               	goto	u7850
  7532  1A17                     u7851:
  7533  1A17  2A3D               	goto	l4396
  7534  1A18                     u7850:
  7535  1A18                     l4388:
  7536                           
  7537                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  7538  1A18  0822               	movf	Lcd_Set_Cursor@b,w
  7539  1A19  3E7F               	addlw	127
  7540  1A1A  00A3               	movwf	??_Lcd_Set_Cursor
  7541  1A1B  0823               	movf	??_Lcd_Set_Cursor,w
  7542  1A1C  00A8               	movwf	Lcd_Set_Cursor@temp
  7543                           
  7544                           ;./lcd.h: 45:   z = temp>>4;
  7545  1A1D  0828               	movf	Lcd_Set_Cursor@temp,w
  7546  1A1E  00A3               	movwf	??_Lcd_Set_Cursor
  7547  1A1F  3004               	movlw	4
  7548  1A20                     u7865:
  7549  1A20  1003               	clrc
  7550  1A21  0CA3               	rrf	??_Lcd_Set_Cursor,f
  7551  1A22  3EFF               	addlw	-1
  7552  1A23  1D03               	skipz
  7553  1A24  2A20               	goto	u7865
  7554  1A25  0823               	movf	??_Lcd_Set_Cursor,w
  7555  1A26  00A4               	movwf	??_Lcd_Set_Cursor+1
  7556  1A27  0824               	movf	??_Lcd_Set_Cursor+1,w
  7557  1A28  00A6               	movwf	Lcd_Set_Cursor@z
  7558  1A29                     l4390:
  7559                           
  7560                           ;./lcd.h: 46:   y = temp & 0x0F;
  7561  1A29  0828               	movf	Lcd_Set_Cursor@temp,w
  7562  1A2A  390F               	andlw	15
  7563  1A2B  00A3               	movwf	??_Lcd_Set_Cursor
  7564  1A2C  0823               	movf	??_Lcd_Set_Cursor,w
  7565  1A2D  00A7               	movwf	Lcd_Set_Cursor@y
  7566  1A2E                     l4392:
  7567                           
  7568                           ;./lcd.h: 47:   Lcd_Cmd(z);
  7569  1A2E  0826               	movf	Lcd_Set_Cursor@z,w
  7570  1A2F  120A  118A  200F  160A  158A  	fcall	_Lcd_Cmd
  7571  1A34                     l4394:
  7572                           
  7573                           ;./lcd.h: 48:   Lcd_Cmd(y);
  7574  1A34  1283               	bcf	3,5	;RP0=0, select bank0
  7575  1A35  1303               	bcf	3,6	;RP1=0, select bank0
  7576  1A36  0827               	movf	Lcd_Set_Cursor@y,w
  7577  1A37  120A  118A  200F  160A  158A  	fcall	_Lcd_Cmd
  7578                           
  7579                           ;./lcd.h: 49:  }
  7580  1A3C  2A67               	goto	l93
  7581  1A3D                     l4396:
  7582  1A3D  3002               	movlw	2
  7583  1A3E  0625               	xorwf	Lcd_Set_Cursor@a,w
  7584  1A3F  1D03               	btfss	3,2
  7585  1A40  2A42               	goto	u7871
  7586  1A41  2A43               	goto	u7870
  7587  1A42                     u7871:
  7588  1A42  2A67               	goto	l93
  7589  1A43                     u7870:
  7590  1A43                     l4398:
  7591                           
  7592                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  7593  1A43  0822               	movf	Lcd_Set_Cursor@b,w
  7594  1A44  3EBF               	addlw	191
  7595  1A45  00A3               	movwf	??_Lcd_Set_Cursor
  7596  1A46  0823               	movf	??_Lcd_Set_Cursor,w
  7597  1A47  00A8               	movwf	Lcd_Set_Cursor@temp
  7598                           
  7599                           ;./lcd.h: 53:   z = temp>>4;
  7600  1A48  0828               	movf	Lcd_Set_Cursor@temp,w
  7601  1A49  00A3               	movwf	??_Lcd_Set_Cursor
  7602  1A4A  3004               	movlw	4
  7603  1A4B                     u7885:
  7604  1A4B  1003               	clrc
  7605  1A4C  0CA3               	rrf	??_Lcd_Set_Cursor,f
  7606  1A4D  3EFF               	addlw	-1
  7607  1A4E  1D03               	skipz
  7608  1A4F  2A4B               	goto	u7885
  7609  1A50  0823               	movf	??_Lcd_Set_Cursor,w
  7610  1A51  00A4               	movwf	??_Lcd_Set_Cursor+1
  7611  1A52  0824               	movf	??_Lcd_Set_Cursor+1,w
  7612  1A53  00A6               	movwf	Lcd_Set_Cursor@z
  7613  1A54                     l4400:
  7614                           
  7615                           ;./lcd.h: 54:   y = temp & 0x0F;
  7616  1A54  0828               	movf	Lcd_Set_Cursor@temp,w
  7617  1A55  390F               	andlw	15
  7618  1A56  00A3               	movwf	??_Lcd_Set_Cursor
  7619  1A57  0823               	movf	??_Lcd_Set_Cursor,w
  7620  1A58  00A7               	movwf	Lcd_Set_Cursor@y
  7621  1A59                     l4402:
  7622                           
  7623                           ;./lcd.h: 55:   Lcd_Cmd(z);
  7624  1A59  0826               	movf	Lcd_Set_Cursor@z,w
  7625  1A5A  120A  118A  200F  160A  158A  	fcall	_Lcd_Cmd
  7626  1A5F                     l4404:
  7627                           
  7628                           ;./lcd.h: 56:   Lcd_Cmd(y);
  7629  1A5F  1283               	bcf	3,5	;RP0=0, select bank0
  7630  1A60  1303               	bcf	3,6	;RP1=0, select bank0
  7631  1A61  0827               	movf	Lcd_Set_Cursor@y,w
  7632  1A62  120A  118A  200F  160A  158A  	fcall	_Lcd_Cmd
  7633  1A67                     l93:
  7634  1A67  0008               	return
  7635  1A68                     __end_of_Lcd_Set_Cursor:
  7636                           
  7637                           	psect	text23
  7638  1002                     __ptext23:	
  7639 ;; *************** function _Lcd_Init *****************
  7640 ;; Defined at:
  7641 ;;		line 60 in file "./lcd.h"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;		None
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0, pclath, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7655 ;;      Params:         0       0       0       0       0
  7656 ;;      Locals:         0       0       0       0       0
  7657 ;;      Temps:          0       2       0       0       0
  7658 ;;      Totals:         0       2       0       0       0
  7659 ;;Total ram usage:        2 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    3
  7662 ;; This function calls:
  7663 ;;		_Lcd_Cmd
  7664 ;;		_Lcd_Port
  7665 ;; This function is called by:
  7666 ;;		_main
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function _Lcd_Init
  7672  1002                     _Lcd_Init:
  7673  1002                     l4406:	
  7674                           ;incstack = 0
  7675                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7676                           
  7677                           
  7678                           ;./lcd.h: 62:   Lcd_Port(0x00);
  7679  1002  3000               	movlw	0
  7680  1003  120A  158A  2002  160A  118A  	fcall	_Lcd_Port
  7681  1008                     l4408:
  7682                           
  7683                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(4000000/4000.0)));
  7684  1008  301A               	movlw	26
  7685  1009  1283               	bcf	3,5	;RP0=0, select bank0
  7686  100A  1303               	bcf	3,6	;RP1=0, select bank0
  7687  100B  00A3               	movwf	??_Lcd_Init+1
  7688  100C  30F7               	movlw	247
  7689  100D  00A2               	movwf	??_Lcd_Init
  7690  100E                     u8317:
  7691  100E  0BA2               	decfsz	??_Lcd_Init,f
  7692  100F  280E               	goto	u8317
  7693  1010  0BA3               	decfsz	??_Lcd_Init+1,f
  7694  1011  280E               	goto	u8317
  7695  1012  2813               	nop2
  7696  1013                     l4410:
  7697                           
  7698                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  7699  1013  3003               	movlw	3
  7700  1014  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7701                           
  7702                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7703  1019  3007               	movlw	7
  7704  101A  1283               	bcf	3,5	;RP0=0, select bank0
  7705  101B  1303               	bcf	3,6	;RP1=0, select bank0
  7706  101C  00A3               	movwf	??_Lcd_Init+1
  7707  101D  307C               	movlw	124
  7708  101E  00A2               	movwf	??_Lcd_Init
  7709  101F                     u8327:
  7710  101F  0BA2               	decfsz	??_Lcd_Init,f
  7711  1020  281F               	goto	u8327
  7712  1021  0BA3               	decfsz	??_Lcd_Init+1,f
  7713  1022  281F               	goto	u8327
  7714  1023  0000               	nop
  7715  1024                     l4412:
  7716                           
  7717                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  7718  1024  3003               	movlw	3
  7719  1025  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7720  102A                     l4414:
  7721                           
  7722                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(4000000/4000.0)));
  7723  102A  300F               	movlw	15
  7724  102B  1283               	bcf	3,5	;RP0=0, select bank0
  7725  102C  1303               	bcf	3,6	;RP1=0, select bank0
  7726  102D  00A3               	movwf	??_Lcd_Init+1
  7727  102E  3047               	movlw	71
  7728  102F  00A2               	movwf	??_Lcd_Init
  7729  1030                     u8337:
  7730  1030  0BA2               	decfsz	??_Lcd_Init,f
  7731  1031  2830               	goto	u8337
  7732  1032  0BA3               	decfsz	??_Lcd_Init+1,f
  7733  1033  2830               	goto	u8337
  7734                           
  7735                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  7736  1034  3003               	movlw	3
  7737  1035  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7738                           
  7739                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  7740  103A  3002               	movlw	2
  7741  103B  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7742                           
  7743                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  7744  1040  3002               	movlw	2
  7745  1041  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7746                           
  7747                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  7748  1046  3008               	movlw	8
  7749  1047  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7750                           
  7751                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  7752  104C  3000               	movlw	0
  7753  104D  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7754                           
  7755                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  7756  1052  300C               	movlw	12
  7757  1053  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7758                           
  7759                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  7760  1058  3000               	movlw	0
  7761  1059  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7762                           
  7763                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  7764  105E  3006               	movlw	6
  7765  105F  120A  118A  200F  160A  118A  	fcall	_Lcd_Cmd
  7766  1064                     l96:
  7767  1064  0008               	return
  7768  1065                     __end_of_Lcd_Init:
  7769                           
  7770                           	psect	text24
  7771  0027                     __ptext24:	
  7772 ;; *************** function _Lcd_Clear *****************
  7773 ;; Defined at:
  7774 ;;		line 33 in file "./lcd.h"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  2   86[None  ] int 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0, pclath, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7788 ;;      Params:         0       0       0       0       0
  7789 ;;      Locals:         0       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0
  7791 ;;      Totals:         0       0       0       0       0
  7792 ;;Total ram usage:        0 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    3
  7795 ;; This function calls:
  7796 ;;		_Lcd_Cmd
  7797 ;; This function is called by:
  7798 ;;		_main
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _Lcd_Clear
  7804  0027                     _Lcd_Clear:
  7805  0027                     l4384:	
  7806                           ;incstack = 0
  7807                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  7808                           
  7809                           
  7810                           ;./lcd.h: 35:  Lcd_Cmd(0);
  7811  0027  3000               	movlw	0
  7812  0028  120A  118A  200F  120A  118A  	fcall	_Lcd_Cmd
  7813                           
  7814                           ;./lcd.h: 36:  Lcd_Cmd(1);
  7815  002D  3001               	movlw	1
  7816  002E  120A  118A  200F  120A  118A  	fcall	_Lcd_Cmd
  7817  0033                     l87:
  7818  0033  0008               	return
  7819  0034                     __end_of_Lcd_Clear:
  7820                           
  7821                           	psect	text25
  7822  000F                     __ptext25:	
  7823 ;; *************** function _Lcd_Cmd *****************
  7824 ;; Defined at:
  7825 ;;		line 24 in file "./lcd.h"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  a               1    wreg     unsigned char 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  a               1    5[COMMON] unsigned char 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1    wreg      void 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2, status,0, pclath, cstack
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7839 ;;      Params:         0       0       0       0       0
  7840 ;;      Locals:         1       0       0       0       0
  7841 ;;      Temps:          0       2       0       0       0
  7842 ;;      Totals:         1       2       0       0       0
  7843 ;;Total ram usage:        3 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; Hardware stack levels required when called:    2
  7846 ;; This function calls:
  7847 ;;		_Lcd_Port
  7848 ;; This function is called by:
  7849 ;;		_Lcd_Clear
  7850 ;;		_Lcd_Set_Cursor
  7851 ;;		_Lcd_Init
  7852 ;;		_Lcd_Shift_Right
  7853 ;;		_Lcd_Shift_Left
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function _Lcd_Cmd
  7859  000F                     _Lcd_Cmd:
  7860                           
  7861                           ;incstack = 0
  7862                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7863                           ;Lcd_Cmd@a stored from wreg
  7864  000F  00F5               	movwf	Lcd_Cmd@a
  7865  0010                     l3996:
  7866                           
  7867                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD2 = 0;
  7868  0010  1283               	bcf	3,5	;RP0=0, select bank0
  7869  0011  1303               	bcf	3,6	;RP1=0, select bank0
  7870  0012  1108               	bcf	8,2	;volatile
  7871  0013                     l3998:
  7872                           
  7873                           ;./lcd.h: 27:  Lcd_Port(a);
  7874  0013  0875               	movf	Lcd_Cmd@a,w
  7875  0014  120A  158A  2002  120A  118A  	fcall	_Lcd_Port
  7876  0019                     l4000:
  7877                           
  7878                           ;./lcd.h: 28:  RD3 = 1;
  7879  0019  1283               	bcf	3,5	;RP0=0, select bank0
  7880  001A  1303               	bcf	3,6	;RP1=0, select bank0
  7881  001B  1588               	bsf	8,3	;volatile
  7882  001C                     l4002:
  7883                           
  7884                           ;./lcd.h: 29:         _delay((unsigned long)((4)*(4000000/4000.0)));
  7885  001C  3006               	movlw	6
  7886  001D  1283               	bcf	3,5	;RP0=0, select bank0
  7887  001E  1303               	bcf	3,6	;RP1=0, select bank0
  7888  001F  00A1               	movwf	??_Lcd_Cmd+1
  7889  0020  302F               	movlw	47
  7890  0021  00A0               	movwf	??_Lcd_Cmd
  7891  0022                     u8347:
  7892  0022  0BA0               	decfsz	??_Lcd_Cmd,f
  7893  0023  2822               	goto	u8347
  7894  0024  0BA1               	decfsz	??_Lcd_Cmd+1,f
  7895  0025  2822               	goto	u8347
  7896  0026  2827               	nop2
  7897  0027                     l4004:
  7898                           
  7899                           ;./lcd.h: 30:         RD3 = 0;
  7900  0027  1283               	bcf	3,5	;RP0=0, select bank0
  7901  0028  1303               	bcf	3,6	;RP1=0, select bank0
  7902  0029  1188               	bcf	8,3	;volatile
  7903  002A                     l84:
  7904  002A  0008               	return
  7905  002B                     __end_of_Lcd_Cmd:
  7906                           
  7907                           	psect	text26
  7908  0802                     __ptext26:	
  7909 ;; *************** function _Lcd_Port *****************
  7910 ;; Defined at:
  7911 ;;		line 2 in file "./lcd.h"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  a               1    wreg     unsigned char 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  a               1    4[COMMON] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7925 ;;      Params:         0       0       0       0       0
  7926 ;;      Locals:         1       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0
  7928 ;;      Totals:         1       0       0       0       0
  7929 ;;Total ram usage:        1 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_Lcd_Cmd
  7936 ;;		_Lcd_Init
  7937 ;;		_Lcd_Write_Char
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function _Lcd_Port
  7943  0802                     _Lcd_Port:
  7944                           
  7945                           ;incstack = 0
  7946                           ; Regs used in _Lcd_Port: [wreg]
  7947                           ;Lcd_Port@a stored from wreg
  7948  0802  00F4               	movwf	Lcd_Port@a
  7949  0803                     l3522:
  7950                           
  7951                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
  7952  0803  1C74               	btfss	Lcd_Port@a,0
  7953  0804  2806               	goto	u5601
  7954  0805  2807               	goto	u5600
  7955  0806                     u5601:
  7956  0806  280B               	goto	l73
  7957  0807                     u5600:
  7958  0807                     l3524:
  7959                           
  7960                           ;./lcd.h: 5:   RD4 = 1;
  7961  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7962  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7963  0809  1608               	bsf	8,4	;volatile
  7964  080A  280E               	goto	l74
  7965  080B                     l73:	
  7966                           ;./lcd.h: 6:  else
  7967                           
  7968                           
  7969                           ;./lcd.h: 7:   RD4 = 0;
  7970  080B  1283               	bcf	3,5	;RP0=0, select bank0
  7971  080C  1303               	bcf	3,6	;RP1=0, select bank0
  7972  080D  1208               	bcf	8,4	;volatile
  7973  080E                     l74:
  7974                           
  7975                           ;./lcd.h: 9:  if(a & 2)
  7976  080E  1CF4               	btfss	Lcd_Port@a,1
  7977  080F  2811               	goto	u5611
  7978  0810  2812               	goto	u5610
  7979  0811                     u5611:
  7980  0811  2814               	goto	l75
  7981  0812                     u5610:
  7982  0812                     l3526:
  7983                           
  7984                           ;./lcd.h: 10:   RD5 = 1;
  7985  0812  1688               	bsf	8,5	;volatile
  7986  0813  2815               	goto	l76
  7987  0814                     l75:	
  7988                           ;./lcd.h: 11:  else
  7989                           
  7990                           
  7991                           ;./lcd.h: 12:   RD5 = 0;
  7992  0814  1288               	bcf	8,5	;volatile
  7993  0815                     l76:
  7994                           
  7995                           ;./lcd.h: 14:  if(a & 4)
  7996  0815  1D74               	btfss	Lcd_Port@a,2
  7997  0816  2818               	goto	u5621
  7998  0817  2819               	goto	u5620
  7999  0818                     u5621:
  8000  0818  281B               	goto	l77
  8001  0819                     u5620:
  8002  0819                     l3528:
  8003                           
  8004                           ;./lcd.h: 15:   RD6 = 1;
  8005  0819  1708               	bsf	8,6	;volatile
  8006  081A  281C               	goto	l78
  8007  081B                     l77:	
  8008                           ;./lcd.h: 16:  else
  8009                           
  8010                           
  8011                           ;./lcd.h: 17:   RD6 = 0;
  8012  081B  1308               	bcf	8,6	;volatile
  8013  081C                     l78:
  8014                           
  8015                           ;./lcd.h: 19:  if(a & 8)
  8016  081C  1DF4               	btfss	Lcd_Port@a,3
  8017  081D  281F               	goto	u5631
  8018  081E  2820               	goto	u5630
  8019  081F                     u5631:
  8020  081F  2822               	goto	l79
  8021  0820                     u5630:
  8022  0820                     l3530:
  8023                           
  8024                           ;./lcd.h: 20:   RD7 = 1;
  8025  0820  1788               	bsf	8,7	;volatile
  8026  0821  2823               	goto	l81
  8027  0822                     l79:	
  8028                           ;./lcd.h: 21:  else
  8029                           
  8030                           
  8031                           ;./lcd.h: 22:   RD7 = 0;
  8032  0822  1388               	bcf	8,7	;volatile
  8033  0823                     l81:
  8034  0823  0008               	return
  8035  0824                     __end_of_Lcd_Port:
  8036                           
  8037                           	psect	text27
  8038  0824                     __ptext27:	
  8039 ;; *************** function _Cal_PID *****************
  8040 ;; Defined at:
  8041 ;;		line 132 in file "main.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8055 ;;      Params:         0       0       0       0       0
  8056 ;;      Locals:         0       0       0       0       0
  8057 ;;      Temps:          0       0       2       0       0
  8058 ;;      Totals:         0       0       2       0       0
  8059 ;;Total ram usage:        2 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    3
  8062 ;; This function calls:
  8063 ;;		___flsub
  8064 ;;		___fltol
  8065 ;;		___lwdiv
  8066 ;;		___wmul
  8067 ;; This function is called by:
  8068 ;;		_main
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           
  8073                           ;psect for function _Cal_PID
  8074  0824                     _Cal_PID:
  8075  0824                     l4436:	
  8076                           ;incstack = 0
  8077                           ; Regs used in _Cal_PID: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8078                           
  8079                           
  8080                           ;main.c: 135:         }
  8081  0824  1683               	bsf	3,5	;RP0=1, select bank3
  8082  0825  1703               	bsf	3,6	;RP1=1, select bank3
  8083  0826  0834               	movf	(_setPoint+3)^(0+384),w
  8084  0827  1683               	bsf	3,5	;RP0=1, select bank1
  8085  0828  1303               	bcf	3,6	;RP1=0, select bank1
  8086  0829  00B3               	movwf	(___flsub@b+3)^(0+128)
  8087  082A  1683               	bsf	3,5	;RP0=1, select bank3
  8088  082B  1703               	bsf	3,6	;RP1=1, select bank3
  8089  082C  0833               	movf	(_setPoint+2)^(0+384),w
  8090  082D  1683               	bsf	3,5	;RP0=1, select bank1
  8091  082E  1303               	bcf	3,6	;RP1=0, select bank1
  8092  082F  00B2               	movwf	(___flsub@b+2)^(0+128)
  8093  0830  1683               	bsf	3,5	;RP0=1, select bank3
  8094  0831  1703               	bsf	3,6	;RP1=1, select bank3
  8095  0832  0832               	movf	(_setPoint+1)^(0+384),w
  8096  0833  1683               	bsf	3,5	;RP0=1, select bank1
  8097  0834  1303               	bcf	3,6	;RP1=0, select bank1
  8098  0835  00B1               	movwf	(___flsub@b+1)^(0+128)
  8099  0836  1683               	bsf	3,5	;RP0=1, select bank3
  8100  0837  1703               	bsf	3,6	;RP1=1, select bank3
  8101  0838  0831               	movf	_setPoint^(0+384),w
  8102  0839  1683               	bsf	3,5	;RP0=1, select bank1
  8103  083A  1303               	bcf	3,6	;RP1=0, select bank1
  8104  083B  00B0               	movwf	___flsub@b^(0+128)
  8105  083C  1683               	bsf	3,5	;RP0=1, select bank3
  8106  083D  1703               	bsf	3,6	;RP1=1, select bank3
  8107  083E  082C               	movf	(_temp+3)^(0+384),w
  8108  083F  1683               	bsf	3,5	;RP0=1, select bank1
  8109  0840  1303               	bcf	3,6	;RP1=0, select bank1
  8110  0841  00AF               	movwf	(___flsub@a+3)^(0+128)
  8111  0842  1683               	bsf	3,5	;RP0=1, select bank3
  8112  0843  1703               	bsf	3,6	;RP1=1, select bank3
  8113  0844  082B               	movf	(_temp+2)^(0+384),w
  8114  0845  1683               	bsf	3,5	;RP0=1, select bank1
  8115  0846  1303               	bcf	3,6	;RP1=0, select bank1
  8116  0847  00AE               	movwf	(___flsub@a+2)^(0+128)
  8117  0848  1683               	bsf	3,5	;RP0=1, select bank3
  8118  0849  1703               	bsf	3,6	;RP1=1, select bank3
  8119  084A  082A               	movf	(_temp+1)^(0+384),w
  8120  084B  1683               	bsf	3,5	;RP0=1, select bank1
  8121  084C  1303               	bcf	3,6	;RP1=0, select bank1
  8122  084D  00AD               	movwf	(___flsub@a+1)^(0+128)
  8123  084E  1683               	bsf	3,5	;RP0=1, select bank3
  8124  084F  1703               	bsf	3,6	;RP1=1, select bank3
  8125  0850  0829               	movf	_temp^(0+384),w
  8126  0851  1683               	bsf	3,5	;RP0=1, select bank1
  8127  0852  1303               	bcf	3,6	;RP1=0, select bank1
  8128  0853  00AC               	movwf	___flsub@a^(0+128)
  8129  0854  160A  158A  211A  120A  158A  	fcall	___flsub
  8130  0859  1683               	bsf	3,5	;RP0=1, select bank1
  8131  085A  1303               	bcf	3,6	;RP1=0, select bank1
  8132  085B  082F               	movf	(?___flsub+3)^(0+128),w
  8133  085C  00B7               	movwf	(___fltol@f1+3)^(0+128)
  8134  085D  082E               	movf	(?___flsub+2)^(0+128),w
  8135  085E  00B6               	movwf	(___fltol@f1+2)^(0+128)
  8136  085F  082D               	movf	(?___flsub+1)^(0+128),w
  8137  0860  00B5               	movwf	(___fltol@f1+1)^(0+128)
  8138  0861  082C               	movf	?___flsub^(0+128),w
  8139  0862  00B4               	movwf	___fltol@f1^(0+128)
  8140  0863  160A  158A  23FA  120A  158A  	fcall	___fltol
  8141  0868  1683               	bsf	3,5	;RP0=1, select bank1
  8142  0869  1303               	bcf	3,6	;RP1=0, select bank1
  8143  086A  0835               	movf	(?___fltol+1)^(0+128),w
  8144  086B  00E9               	movwf	(_PID_error+1)^(0+128)
  8145  086C  0834               	movf	?___fltol^(0+128),w
  8146  086D  00E8               	movwf	_PID_error^(0+128)
  8147  086E                     l4438:
  8148                           
  8149                           ;main.c: 136:         RBIF = 0;
  8150  086E  3000               	movlw	0
  8151  086F  0269               	subwf	(_PID_error+1)^(0+128),w
  8152  0870  301F               	movlw	31
  8153  0871  1903               	skipnz
  8154  0872  0268               	subwf	_PID_error^(0+128),w
  8155  0873  1C03               	skipc
  8156  0874  2876               	goto	u7911
  8157  0875  2877               	goto	u7910
  8158  0876                     u7911:
  8159  0876  2879               	goto	l4442
  8160  0877                     u7910:
  8161  0877                     l4440:
  8162                           
  8163                           ;main.c: 137:     }
  8164  0877  01E0               	clrf	_PID_i^(0+128)
  8165  0878  01E1               	clrf	(_PID_i+1)^(0+128)
  8166  0879                     l4442:
  8167                           
  8168                           ;main.c: 138: 
  8169  0879  0869               	movf	(_PID_error+1)^(0+128),w
  8170  087A  1283               	bcf	3,5	;RP0=0, select bank0
  8171  087B  1303               	bcf	3,6	;RP1=0, select bank0
  8172  087C  00AD               	movwf	___wmul@multiplier+1
  8173  087D  1683               	bsf	3,5	;RP0=1, select bank1
  8174  087E  1303               	bcf	3,6	;RP1=0, select bank1
  8175  087F  0868               	movf	_PID_error^(0+128),w
  8176  0880  1283               	bcf	3,5	;RP0=0, select bank0
  8177  0881  1303               	bcf	3,6	;RP1=0, select bank0
  8178  0882  00AC               	movwf	___wmul@multiplier
  8179  0883  30CB               	movlw	203
  8180  0884  00AE               	movwf	___wmul@multiplicand
  8181  0885  3000               	movlw	0
  8182  0886  00AF               	movwf	___wmul@multiplicand+1
  8183  0887  120A  118A  2000  120A  158A  	fcall	___wmul
  8184  088C  1283               	bcf	3,5	;RP0=0, select bank0
  8185  088D  1303               	bcf	3,6	;RP1=0, select bank0
  8186  088E  082D               	movf	?___wmul+1,w
  8187  088F  1683               	bsf	3,5	;RP0=1, select bank1
  8188  0890  1303               	bcf	3,6	;RP1=0, select bank1
  8189  0891  00E3               	movwf	(_PID_p+1)^(0+128)
  8190  0892  1283               	bcf	3,5	;RP0=0, select bank0
  8191  0893  1303               	bcf	3,6	;RP1=0, select bank0
  8192  0894  082C               	movf	?___wmul,w
  8193  0895  1683               	bsf	3,5	;RP0=1, select bank1
  8194  0896  1303               	bcf	3,6	;RP1=0, select bank1
  8195  0897  00E2               	movwf	_PID_p^(0+128)
  8196  0898                     l4444:
  8197                           
  8198                           ;main.c: 139:     if(TMR1IF == 1)
  8199  0898  0869               	movf	(_PID_error+1)^(0+128),w
  8200  0899  1283               	bcf	3,5	;RP0=0, select bank0
  8201  089A  1303               	bcf	3,6	;RP1=0, select bank0
  8202  089B  00AD               	movwf	___wmul@multiplier+1
  8203  089C  1683               	bsf	3,5	;RP0=1, select bank1
  8204  089D  1303               	bcf	3,6	;RP1=0, select bank1
  8205  089E  0868               	movf	_PID_error^(0+128),w
  8206  089F  1283               	bcf	3,5	;RP0=0, select bank0
  8207  08A0  1303               	bcf	3,6	;RP1=0, select bank0
  8208  08A1  00AC               	movwf	___wmul@multiplier
  8209  08A2  3007               	movlw	7
  8210  08A3  00AE               	movwf	___wmul@multiplicand
  8211  08A4  3000               	movlw	0
  8212  08A5  00AF               	movwf	___wmul@multiplicand+1
  8213  08A6  120A  118A  2000  120A  158A  	fcall	___wmul
  8214  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  8215  08AC  1303               	bcf	3,6	;RP1=0, select bank1
  8216  08AD  0860               	movf	_PID_i^(0+128),w
  8217  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  8218  08AF  1303               	bcf	3,6	;RP1=0, select bank0
  8219  08B0  072C               	addwf	?___wmul,w
  8220  08B1  1683               	bsf	3,5	;RP0=1, select bank1
  8221  08B2  1303               	bcf	3,6	;RP1=0, select bank1
  8222  08B3  00E0               	movwf	_PID_i^(0+128)
  8223  08B4  0861               	movf	(_PID_i+1)^(0+128),w
  8224  08B5  1803               	skipnc
  8225  08B6  0A61               	incf	(_PID_i+1)^(0+128),w
  8226  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  8227  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  8228  08B9  072D               	addwf	?___wmul+1,w
  8229  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  8230  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  8231  08BC  00E1               	movwf	(_PID_i+1)^(0+128)
  8232  08BD                     l4446:
  8233                           
  8234                           ;main.c: 140:     {
  8235  08BD  086B               	movf	(_T+1)^(0+128),w
  8236  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  8237  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  8238  08C0  00A5               	movwf	___lwdiv@divisor+1
  8239  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  8240  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  8241  08C3  086A               	movf	_T^(0+128),w
  8242  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  8243  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  8244  08C6  00A4               	movwf	___lwdiv@divisor
  8245  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  8246  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  8247  08C9  0866               	movf	_previous_error^(0+128),w
  8248  08CA  0268               	subwf	_PID_error^(0+128),w
  8249  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  8250  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  8251  08CD  00A6               	movwf	___lwdiv@dividend
  8252  08CE  1683               	bsf	3,5	;RP0=1, select bank1
  8253  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  8254  08D0  0867               	movf	(_previous_error+1)^(0+128),w
  8255  08D1  1C03               	skipc
  8256  08D2  0A67               	incf	(_previous_error+1)^(0+128),w
  8257  08D3  0269               	subwf	(_PID_error+1)^(0+128),w
  8258  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  8259  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  8260  08D6  00A7               	movwf	___lwdiv@dividend+1
  8261  08D7  160A  158A  20D4  120A  158A  	fcall	___lwdiv
  8262  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  8263  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  8264  08DE  0825               	movf	?___lwdiv+1,w
  8265  08DF  00AD               	movwf	___wmul@multiplier+1
  8266  08E0  0824               	movf	?___lwdiv,w
  8267  08E1  00AC               	movwf	___wmul@multiplier
  8268  08E2  30E8               	movlw	232
  8269  08E3  00AE               	movwf	___wmul@multiplicand
  8270  08E4  3003               	movlw	3
  8271  08E5  00AF               	movwf	___wmul@multiplicand+1
  8272  08E6  120A  118A  2000  120A  158A  	fcall	___wmul
  8273  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  8274  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  8275  08ED  082D               	movf	?___wmul+1,w
  8276  08EE  1683               	bsf	3,5	;RP0=1, select bank1
  8277  08EF  1303               	bcf	3,6	;RP1=0, select bank1
  8278  08F0  00DF               	movwf	(_PID_d+1)^(0+128)
  8279  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  8280  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  8281  08F3  082C               	movf	?___wmul,w
  8282  08F4  1683               	bsf	3,5	;RP0=1, select bank1
  8283  08F5  1303               	bcf	3,6	;RP1=0, select bank1
  8284  08F6  00DE               	movwf	_PID_d^(0+128)
  8285  08F7                     l4448:
  8286                           
  8287                           ;main.c: 141: 
  8288  08F7  0860               	movf	_PID_i^(0+128),w
  8289  08F8  0762               	addwf	_PID_p^(0+128),w
  8290  08F9  00BF               	movwf	??_Cal_PID^(0+128)
  8291  08FA  0861               	movf	(_PID_i+1)^(0+128),w
  8292  08FB  1803               	skipnc
  8293  08FC  0A61               	incf	(_PID_i+1)^(0+128),w
  8294  08FD  0763               	addwf	(_PID_p+1)^(0+128),w
  8295  08FE  00C0               	movwf	(??_Cal_PID+1)^(0+128)
  8296  08FF  085E               	movf	_PID_d^(0+128),w
  8297  0900  073F               	addwf	??_Cal_PID^(0+128),w
  8298  0901  00E4               	movwf	_PID_value^(0+128)
  8299  0902  085F               	movf	(_PID_d+1)^(0+128),w
  8300  0903  1803               	skipnc
  8301  0904  0A5F               	incf	(_PID_d+1)^(0+128),w
  8302  0905  0740               	addwf	(??_Cal_PID+1)^(0+128),w
  8303  0906  00E5               	movwf	(_PID_value+1)^(0+128)
  8304  0907                     l4452:	
  8305                           ;main.c: 142:         TMR1 = 0xFC18;
  8306                           
  8307                           
  8308                           ;main.c: 144:         if(count == T)
  8309  0907  3026               	movlw	38
  8310  0908  0265               	subwf	(_PID_value+1)^(0+128),w
  8311  0909  3049               	movlw	73
  8312  090A  1903               	skipnz
  8313  090B  0264               	subwf	_PID_value^(0+128),w
  8314  090C  1C03               	skipc
  8315  090D  290F               	goto	u7921
  8316  090E  2910               	goto	u7920
  8317  090F                     u7921:
  8318  090F  2914               	goto	l164
  8319  0910                     u7920:
  8320  0910                     l4454:
  8321                           
  8322                           ;main.c: 145:         {
  8323  0910  3048               	movlw	72
  8324  0911  00E4               	movwf	_PID_value^(0+128)
  8325  0912  3026               	movlw	38
  8326  0913  00E5               	movwf	(_PID_value^(0+128)+1)
  8327  0914                     l164:
  8328                           
  8329                           ;main.c: 146:             samp = 1;
  8330  0914  0869               	movf	(_PID_error+1)^(0+128),w
  8331  0915  00E7               	movwf	(_previous_error+1)^(0+128)
  8332  0916  0868               	movf	_PID_error^(0+128),w
  8333  0917  00E6               	movwf	_previous_error^(0+128)
  8334  0918                     l165:
  8335  0918  0008               	return
  8336  0919                     __end_of_Cal_PID:
  8337                           
  8338                           	psect	text28
  8339  0000                     __ptext28:	
  8340 ;; *************** function ___wmul *****************
  8341 ;; Defined at:
  8342 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  multiplier      2   12[BANK0 ] unsigned int 
  8345 ;;  multiplicand    2   14[BANK0 ] unsigned int 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  product         2   16[BANK0 ] unsigned int 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  2   12[BANK0 ] unsigned int 
  8350 ;; Registers used:
  8351 ;;		wreg, status,2, status,0
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8357 ;;      Params:         0       4       0       0       0
  8358 ;;      Locals:         0       2       0       0       0
  8359 ;;      Temps:          0       0       0       0       0
  8360 ;;      Totals:         0       6       0       0       0
  8361 ;;Total ram usage:        6 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    1
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_Cal_PID
  8368 ;;		_sprintf
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           
  8373                           ;psect for function ___wmul
  8374  0000                     ___wmul:
  8375  0000                     l4200:	
  8376                           ;incstack = 0
  8377                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8378                           
  8379  0000  1283               	bcf	3,5	;RP0=0, select bank0
  8380  0001  1303               	bcf	3,6	;RP1=0, select bank0
  8381  0002  01B0               	clrf	___wmul@product
  8382  0003  01B1               	clrf	___wmul@product+1
  8383  0004                     l4202:
  8384  0004  1C2C               	btfss	___wmul@multiplier,0
  8385  0005  2807               	goto	u7331
  8386  0006  2808               	goto	u7330
  8387  0007                     u7331:
  8388  0007  280E               	goto	l355
  8389  0008                     u7330:
  8390  0008                     l4204:
  8391  0008  082E               	movf	___wmul@multiplicand,w
  8392  0009  07B0               	addwf	___wmul@product,f
  8393  000A  1803               	skipnc
  8394  000B  0AB1               	incf	___wmul@product+1,f
  8395  000C  082F               	movf	___wmul@multiplicand+1,w
  8396  000D  07B1               	addwf	___wmul@product+1,f
  8397  000E                     l355:
  8398  000E  3001               	movlw	1
  8399  000F                     u7345:
  8400  000F  1003               	clrc
  8401  0010  0DAE               	rlf	___wmul@multiplicand,f
  8402  0011  0DAF               	rlf	___wmul@multiplicand+1,f
  8403  0012  3EFF               	addlw	-1
  8404  0013  1D03               	skipz
  8405  0014  280F               	goto	u7345
  8406  0015                     l4206:
  8407  0015  3001               	movlw	1
  8408  0016                     u7355:
  8409  0016  1003               	clrc
  8410  0017  0CAD               	rrf	___wmul@multiplier+1,f
  8411  0018  0CAC               	rrf	___wmul@multiplier,f
  8412  0019  3EFF               	addlw	-1
  8413  001A  1D03               	skipz
  8414  001B  2816               	goto	u7355
  8415  001C                     l4208:
  8416  001C  082C               	movf	___wmul@multiplier,w
  8417  001D  042D               	iorwf	___wmul@multiplier+1,w
  8418  001E  1D03               	btfss	3,2
  8419  001F  2821               	goto	u7361
  8420  0020  2822               	goto	u7360
  8421  0021                     u7361:
  8422  0021  2804               	goto	l4202
  8423  0022                     u7360:
  8424  0022                     l4210:
  8425  0022  0831               	movf	___wmul@product+1,w
  8426  0023  00AD               	movwf	?___wmul+1
  8427  0024  0830               	movf	___wmul@product,w
  8428  0025  00AC               	movwf	?___wmul
  8429  0026                     l357:
  8430  0026  0008               	return
  8431  0027                     __end_of___wmul:
  8432                           
  8433                           	psect	text29
  8434  18D4                     __ptext29:	
  8435 ;; *************** function ___lwdiv *****************
  8436 ;; Defined at:
  8437 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  divisor         2    4[BANK0 ] unsigned int 
  8440 ;;  dividend        2    6[BANK0 ] unsigned int 
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  quotient        2   10[BANK0 ] unsigned int 
  8443 ;;  counter         1    9[BANK0 ] unsigned char 
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  2    4[BANK0 ] unsigned int 
  8446 ;; Registers used:
  8447 ;;		wreg, status,2, status,0
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8453 ;;      Params:         0       4       0       0       0
  8454 ;;      Locals:         0       3       0       0       0
  8455 ;;      Temps:          0       1       0       0       0
  8456 ;;      Totals:         0       8       0       0       0
  8457 ;;Total ram usage:        8 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    1
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_ReadTemp
  8464 ;;		_Cal_PID
  8465 ;;		_fround
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           
  8470                           ;psect for function ___lwdiv
  8471  18D4                     ___lwdiv:
  8472  18D4                     l3614:	
  8473                           ;incstack = 0
  8474                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8475                           
  8476  18D4  1283               	bcf	3,5	;RP0=0, select bank0
  8477  18D5  1303               	bcf	3,6	;RP1=0, select bank0
  8478  18D6  01AA               	clrf	___lwdiv@quotient
  8479  18D7  01AB               	clrf	___lwdiv@quotient+1
  8480  18D8                     l3616:
  8481  18D8  0824               	movf	___lwdiv@divisor,w
  8482  18D9  0425               	iorwf	___lwdiv@divisor+1,w
  8483  18DA  1903               	btfsc	3,2
  8484  18DB  28DD               	goto	u5831
  8485  18DC  28DE               	goto	u5830
  8486  18DD                     u5831:
  8487  18DD  2915               	goto	l3636
  8488  18DE                     u5830:
  8489  18DE                     l3618:
  8490  18DE  01A9               	clrf	___lwdiv@counter
  8491  18DF  0AA9               	incf	___lwdiv@counter,f
  8492  18E0  28EC               	goto	l3624
  8493  18E1                     l3620:
  8494  18E1  3001               	movlw	1
  8495  18E2                     u5845:
  8496  18E2  1003               	clrc
  8497  18E3  0DA4               	rlf	___lwdiv@divisor,f
  8498  18E4  0DA5               	rlf	___lwdiv@divisor+1,f
  8499  18E5  3EFF               	addlw	-1
  8500  18E6  1D03               	skipz
  8501  18E7  28E2               	goto	u5845
  8502  18E8                     l3622:
  8503  18E8  3001               	movlw	1
  8504  18E9  00A8               	movwf	??___lwdiv
  8505  18EA  0828               	movf	??___lwdiv,w
  8506  18EB  07A9               	addwf	___lwdiv@counter,f
  8507  18EC                     l3624:
  8508  18EC  1FA5               	btfss	___lwdiv@divisor+1,7
  8509  18ED  28EF               	goto	u5851
  8510  18EE  28F0               	goto	u5850
  8511  18EF                     u5851:
  8512  18EF  28E1               	goto	l3620
  8513  18F0                     u5850:
  8514  18F0                     l3626:
  8515  18F0  3001               	movlw	1
  8516  18F1                     u5865:
  8517  18F1  1003               	clrc
  8518  18F2  0DAA               	rlf	___lwdiv@quotient,f
  8519  18F3  0DAB               	rlf	___lwdiv@quotient+1,f
  8520  18F4  3EFF               	addlw	-1
  8521  18F5  1D03               	skipz
  8522  18F6  28F1               	goto	u5865
  8523  18F7  0825               	movf	___lwdiv@divisor+1,w
  8524  18F8  0227               	subwf	___lwdiv@dividend+1,w
  8525  18F9  1D03               	skipz
  8526  18FA  28FD               	goto	u5875
  8527  18FB  0824               	movf	___lwdiv@divisor,w
  8528  18FC  0226               	subwf	___lwdiv@dividend,w
  8529  18FD                     u5875:
  8530  18FD  1C03               	skipc
  8531  18FE  2900               	goto	u5871
  8532  18FF  2901               	goto	u5870
  8533  1900                     u5871:
  8534  1900  2908               	goto	l3632
  8535  1901                     u5870:
  8536  1901                     l3628:
  8537  1901  0824               	movf	___lwdiv@divisor,w
  8538  1902  02A6               	subwf	___lwdiv@dividend,f
  8539  1903  0825               	movf	___lwdiv@divisor+1,w
  8540  1904  1C03               	skipc
  8541  1905  03A7               	decf	___lwdiv@dividend+1,f
  8542  1906  02A7               	subwf	___lwdiv@dividend+1,f
  8543  1907                     l3630:
  8544  1907  142A               	bsf	___lwdiv@quotient,0
  8545  1908                     l3632:
  8546  1908  3001               	movlw	1
  8547  1909                     u5885:
  8548  1909  1003               	clrc
  8549  190A  0CA5               	rrf	___lwdiv@divisor+1,f
  8550  190B  0CA4               	rrf	___lwdiv@divisor,f
  8551  190C  3EFF               	addlw	-1
  8552  190D  1D03               	skipz
  8553  190E  2909               	goto	u5885
  8554  190F                     l3634:
  8555  190F  3001               	movlw	1
  8556  1910  02A9               	subwf	___lwdiv@counter,f
  8557  1911  1D03               	btfss	3,2
  8558  1912  2914               	goto	u5891
  8559  1913  2915               	goto	u5890
  8560  1914                     u5891:
  8561  1914  28F0               	goto	l3626
  8562  1915                     u5890:
  8563  1915                     l3636:
  8564  1915  082B               	movf	___lwdiv@quotient+1,w
  8565  1916  00A5               	movwf	?___lwdiv+1
  8566  1917  082A               	movf	___lwdiv@quotient,w
  8567  1918  00A4               	movwf	?___lwdiv
  8568  1919                     l661:
  8569  1919  0008               	return
  8570  191A                     __end_of___lwdiv:
  8571                           
  8572                           	psect	text30
  8573  1BFA                     __ptext30:	
  8574 ;; *************** function ___fltol *****************
  8575 ;; Defined at:
  8576 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  f1              4   20[BANK1 ] unsigned int 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  exp1            1   30[BANK1 ] unsigned char 
  8581 ;;  sign1           1   29[BANK1 ] unsigned char 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  4   20[BANK1 ] long 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2, status,0
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8591 ;;      Params:         0       0       4       0       0
  8592 ;;      Locals:         0       0       2       0       0
  8593 ;;      Temps:          0       0       5       0       0
  8594 ;;      Totals:         0       0      11       0       0
  8595 ;;Total ram usage:       11 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    1
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_ReadTemp
  8602 ;;		_Cal_PID
  8603 ;;		_sprintf
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function ___fltol
  8609  1BFA                     ___fltol:
  8610  1BFA                     l4278:	
  8611                           ;incstack = 0
  8612                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8613                           
  8614  1BFA  1003               	clrc
  8615  1BFB  1683               	bsf	3,5	;RP0=1, select bank1
  8616  1BFC  1303               	bcf	3,6	;RP1=0, select bank1
  8617  1BFD  0D36               	rlf	(___fltol@f1+2)^(0+128),w
  8618  1BFE  0D37               	rlf	(___fltol@f1+3)^(0+128),w
  8619  1BFF  00B8               	movwf	??___fltol^(0+128)
  8620  1C00  0838               	movf	??___fltol^(0+128),w
  8621  1C01  00BE               	movwf	___fltol@exp1^(0+128)
  8622  1C02  083E               	movf	___fltol@exp1^(0+128),w
  8623  1C03  1D03               	btfss	3,2
  8624  1C04  2C06               	goto	u7551
  8625  1C05  2C07               	goto	u7550
  8626  1C06                     u7551:
  8627  1C06  2C10               	goto	l4284
  8628  1C07                     u7550:
  8629  1C07                     l4280:
  8630  1C07  3000               	movlw	0
  8631  1C08  00B7               	movwf	(?___fltol+3)^(0+128)
  8632  1C09  3000               	movlw	0
  8633  1C0A  00B6               	movwf	(?___fltol+2)^(0+128)
  8634  1C0B  3000               	movlw	0
  8635  1C0C  00B5               	movwf	(?___fltol+1)^(0+128)
  8636  1C0D  3000               	movlw	0
  8637  1C0E  00B4               	movwf	?___fltol^(0+128)
  8638  1C0F  2C75               	goto	l558
  8639  1C10                     l4284:
  8640  1C10  0834               	movf	___fltol@f1^(0+128),w
  8641  1C11  00B8               	movwf	??___fltol^(0+128)
  8642  1C12  0835               	movf	(___fltol@f1+1)^(0+128),w
  8643  1C13  00B9               	movwf	(??___fltol^(0+128)+1)
  8644  1C14  0836               	movf	(___fltol@f1+2)^(0+128),w
  8645  1C15  00BA               	movwf	(??___fltol^(0+128)+2)
  8646  1C16  0837               	movf	(___fltol@f1+3)^(0+128),w
  8647  1C17  00BB               	movwf	(??___fltol^(0+128)+3)
  8648  1C18  301F               	movlw	31
  8649  1C19                     u7565:
  8650  1C19  1003               	clrc
  8651  1C1A  0CBB               	rrf	(??___fltol^(0+128)+3),f
  8652  1C1B  0CBA               	rrf	(??___fltol^(0+128)+2),f
  8653  1C1C  0CB9               	rrf	(??___fltol^(0+128)+1),f
  8654  1C1D  0CB8               	rrf	??___fltol^(0+128),f
  8655  1C1E                     u7560:
  8656  1C1E  3EFF               	addlw	-1
  8657  1C1F  1D03               	skipz
  8658  1C20  2C19               	goto	u7565
  8659  1C21  0838               	movf	??___fltol^(0+128),w
  8660  1C22  00BC               	movwf	(??___fltol+4)^(0+128)
  8661  1C23  083C               	movf	(??___fltol+4)^(0+128),w
  8662  1C24  00BD               	movwf	___fltol@sign1^(0+128)
  8663  1C25                     l4286:
  8664  1C25  17B6               	bsf	(___fltol@f1^(0+128)+2),7
  8665  1C26                     l4288:
  8666  1C26  30FF               	movlw	255
  8667  1C27  05B4               	andwf	___fltol@f1^(0+128),f
  8668  1C28  30FF               	movlw	255
  8669  1C29  05B5               	andwf	(___fltol@f1+1)^(0+128),f
  8670  1C2A  30FF               	movlw	255
  8671  1C2B  05B6               	andwf	(___fltol@f1+2)^(0+128),f
  8672  1C2C  3000               	movlw	0
  8673  1C2D  05B7               	andwf	(___fltol@f1+3)^(0+128),f
  8674  1C2E                     l4290:
  8675  1C2E  3096               	movlw	150
  8676  1C2F  02BE               	subwf	___fltol@exp1^(0+128),f
  8677  1C30                     l4292:
  8678  1C30  1FBE               	btfss	___fltol@exp1^(0+128),7
  8679  1C31  2C33               	goto	u7571
  8680  1C32  2C34               	goto	u7570
  8681  1C33                     u7571:
  8682  1C33  2C4E               	goto	l4302
  8683  1C34                     u7570:
  8684  1C34                     l4294:
  8685  1C34  083E               	movf	___fltol@exp1^(0+128),w
  8686  1C35  3A80               	xorlw	128
  8687  1C36  3E97               	addlw	151
  8688  1C37  1803               	skipnc
  8689  1C38  2C3A               	goto	u7581
  8690  1C39  2C3B               	goto	u7580
  8691  1C3A                     u7581:
  8692  1C3A  2C3C               	goto	l4300
  8693  1C3B                     u7580:
  8694  1C3B  2C07               	goto	l4280
  8695  1C3C                     l4300:
  8696  1C3C  3001               	movlw	1
  8697  1C3D                     u7595:
  8698  1C3D  1003               	clrc
  8699  1C3E  0CB7               	rrf	(___fltol@f1+3)^(0+128),f
  8700  1C3F  0CB6               	rrf	(___fltol@f1+2)^(0+128),f
  8701  1C40  0CB5               	rrf	(___fltol@f1+1)^(0+128),f
  8702  1C41  0CB4               	rrf	___fltol@f1^(0+128),f
  8703  1C42  3EFF               	addlw	-1
  8704  1C43  1D03               	skipz
  8705  1C44  2C3D               	goto	u7595
  8706  1C45  3001               	movlw	1
  8707  1C46  00B8               	movwf	??___fltol^(0+128)
  8708  1C47  0838               	movf	??___fltol^(0+128),w
  8709  1C48  07BE               	addwf	___fltol@exp1^(0+128),f
  8710  1C49  1D03               	btfss	3,2
  8711  1C4A  2C4C               	goto	u7601
  8712  1C4B  2C4D               	goto	u7600
  8713  1C4C                     u7601:
  8714  1C4C  2C3C               	goto	l4300
  8715  1C4D                     u7600:
  8716  1C4D  2C65               	goto	l4310
  8717  1C4E                     l4302:
  8718  1C4E  3020               	movlw	32
  8719  1C4F  023E               	subwf	___fltol@exp1^(0+128),w
  8720  1C50  1C03               	skipc
  8721  1C51  2C53               	goto	u7611
  8722  1C52  2C54               	goto	u7610
  8723  1C53                     u7611:
  8724  1C53  2C60               	goto	l565
  8725  1C54                     u7610:
  8726  1C54  2C07               	goto	l4280
  8727  1C55                     l4308:
  8728  1C55  3001               	movlw	1
  8729  1C56  00B8               	movwf	??___fltol^(0+128)
  8730  1C57                     u7625:
  8731  1C57  1003               	clrc
  8732  1C58  0DB4               	rlf	___fltol@f1^(0+128),f
  8733  1C59  0DB5               	rlf	(___fltol@f1+1)^(0+128),f
  8734  1C5A  0DB6               	rlf	(___fltol@f1+2)^(0+128),f
  8735  1C5B  0DB7               	rlf	(___fltol@f1+3)^(0+128),f
  8736  1C5C  0BB8               	decfsz	??___fltol^(0+128),f
  8737  1C5D  2C57               	goto	u7625
  8738  1C5E  3001               	movlw	1
  8739  1C5F  02BE               	subwf	___fltol@exp1^(0+128),f
  8740  1C60                     l565:
  8741  1C60  083E               	movf	___fltol@exp1^(0+128),w
  8742  1C61  1D03               	btfss	3,2
  8743  1C62  2C64               	goto	u7631
  8744  1C63  2C65               	goto	u7630
  8745  1C64                     u7631:
  8746  1C64  2C55               	goto	l4308
  8747  1C65                     u7630:
  8748  1C65                     l4310:
  8749  1C65  083D               	movf	___fltol@sign1^(0+128),w
  8750  1C66  1903               	btfsc	3,2
  8751  1C67  2C69               	goto	u7641
  8752  1C68  2C6A               	goto	u7640
  8753  1C69                     u7641:
  8754  1C69  2C75               	goto	l568
  8755  1C6A                     u7640:
  8756  1C6A                     l4312:
  8757  1C6A  09B4               	comf	___fltol@f1^(0+128),f
  8758  1C6B  09B5               	comf	(___fltol@f1+1)^(0+128),f
  8759  1C6C  09B6               	comf	(___fltol@f1+2)^(0+128),f
  8760  1C6D  09B7               	comf	(___fltol@f1+3)^(0+128),f
  8761  1C6E  0AB4               	incf	___fltol@f1^(0+128),f
  8762  1C6F  1903               	skipnz
  8763  1C70  0AB5               	incf	(___fltol@f1+1)^(0+128),f
  8764  1C71  1903               	skipnz
  8765  1C72  0AB6               	incf	(___fltol@f1+2)^(0+128),f
  8766  1C73  1903               	skipnz
  8767  1C74  0AB7               	incf	(___fltol@f1+3)^(0+128),f
  8768  1C75                     l568:
  8769  1C75                     l558:
  8770  1C75  0008               	return
  8771  1C76                     __end_of___fltol:
  8772                           
  8773                           	psect	text31
  8774  191A                     __ptext31:	
  8775 ;; *************** function ___flsub *****************
  8776 ;; Defined at:
  8777 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  a               4   12[BANK1 ] long 
  8780 ;;  b               4   16[BANK1 ] long 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  4   12[BANK1 ] long 
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8792 ;;      Params:         0       0       8       0       0
  8793 ;;      Locals:         0       0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0
  8795 ;;      Totals:         0       0       8       0       0
  8796 ;;Total ram usage:        8 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    2
  8799 ;; This function calls:
  8800 ;;		___fladd
  8801 ;; This function is called by:
  8802 ;;		_Cal_PID
  8803 ;;		_sprintf
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           
  8808                           ;psect for function ___flsub
  8809  191A                     ___flsub:
  8810  191A                     l4334:	
  8811                           ;incstack = 0
  8812                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8813                           
  8814  191A  3080               	movlw	128
  8815  191B  1683               	bsf	3,5	;RP0=1, select bank1
  8816  191C  1303               	bcf	3,6	;RP1=0, select bank1
  8817  191D  06AF               	xorwf	(___flsub@a+3)^(0+128),f
  8818  191E                     l4336:
  8819  191E  0833               	movf	(___flsub@b+3)^(0+128),w
  8820  191F  1283               	bcf	3,5	;RP0=0, select bank0
  8821  1920  1303               	bcf	3,6	;RP1=0, select bank0
  8822  1921  00EB               	movwf	___fladd@b+3
  8823  1922  1683               	bsf	3,5	;RP0=1, select bank1
  8824  1923  1303               	bcf	3,6	;RP1=0, select bank1
  8825  1924  0832               	movf	(___flsub@b+2)^(0+128),w
  8826  1925  1283               	bcf	3,5	;RP0=0, select bank0
  8827  1926  1303               	bcf	3,6	;RP1=0, select bank0
  8828  1927  00EA               	movwf	___fladd@b+2
  8829  1928  1683               	bsf	3,5	;RP0=1, select bank1
  8830  1929  1303               	bcf	3,6	;RP1=0, select bank1
  8831  192A  0831               	movf	(___flsub@b+1)^(0+128),w
  8832  192B  1283               	bcf	3,5	;RP0=0, select bank0
  8833  192C  1303               	bcf	3,6	;RP1=0, select bank0
  8834  192D  00E9               	movwf	___fladd@b+1
  8835  192E  1683               	bsf	3,5	;RP0=1, select bank1
  8836  192F  1303               	bcf	3,6	;RP1=0, select bank1
  8837  1930  0830               	movf	___flsub@b^(0+128),w
  8838  1931  1283               	bcf	3,5	;RP0=0, select bank0
  8839  1932  1303               	bcf	3,6	;RP1=0, select bank0
  8840  1933  00E8               	movwf	___fladd@b
  8841  1934  1683               	bsf	3,5	;RP0=1, select bank1
  8842  1935  1303               	bcf	3,6	;RP1=0, select bank1
  8843  1936  082F               	movf	(___flsub@a+3)^(0+128),w
  8844  1937  1283               	bcf	3,5	;RP0=0, select bank0
  8845  1938  1303               	bcf	3,6	;RP1=0, select bank0
  8846  1939  00EF               	movwf	___fladd@a+3
  8847  193A  1683               	bsf	3,5	;RP0=1, select bank1
  8848  193B  1303               	bcf	3,6	;RP1=0, select bank1
  8849  193C  082E               	movf	(___flsub@a+2)^(0+128),w
  8850  193D  1283               	bcf	3,5	;RP0=0, select bank0
  8851  193E  1303               	bcf	3,6	;RP1=0, select bank0
  8852  193F  00EE               	movwf	___fladd@a+2
  8853  1940  1683               	bsf	3,5	;RP0=1, select bank1
  8854  1941  1303               	bcf	3,6	;RP1=0, select bank1
  8855  1942  082D               	movf	(___flsub@a+1)^(0+128),w
  8856  1943  1283               	bcf	3,5	;RP0=0, select bank0
  8857  1944  1303               	bcf	3,6	;RP1=0, select bank0
  8858  1945  00ED               	movwf	___fladd@a+1
  8859  1946  1683               	bsf	3,5	;RP0=1, select bank1
  8860  1947  1303               	bcf	3,6	;RP1=0, select bank1
  8861  1948  082C               	movf	___flsub@a^(0+128),w
  8862  1949  1283               	bcf	3,5	;RP0=0, select bank0
  8863  194A  1303               	bcf	3,6	;RP1=0, select bank0
  8864  194B  00EC               	movwf	___fladd@a
  8865  194C  120A  158A  247C  160A  158A  	fcall	___fladd
  8866  1951  1283               	bcf	3,5	;RP0=0, select bank0
  8867  1952  1303               	bcf	3,6	;RP1=0, select bank0
  8868  1953  086B               	movf	?___fladd+3,w
  8869  1954  1683               	bsf	3,5	;RP0=1, select bank1
  8870  1955  1303               	bcf	3,6	;RP1=0, select bank1
  8871  1956  00AF               	movwf	(?___flsub+3)^(0+128)
  8872  1957  1283               	bcf	3,5	;RP0=0, select bank0
  8873  1958  1303               	bcf	3,6	;RP1=0, select bank0
  8874  1959  086A               	movf	?___fladd+2,w
  8875  195A  1683               	bsf	3,5	;RP0=1, select bank1
  8876  195B  1303               	bcf	3,6	;RP1=0, select bank1
  8877  195C  00AE               	movwf	(?___flsub+2)^(0+128)
  8878  195D  1283               	bcf	3,5	;RP0=0, select bank0
  8879  195E  1303               	bcf	3,6	;RP1=0, select bank0
  8880  195F  0869               	movf	?___fladd+1,w
  8881  1960  1683               	bsf	3,5	;RP0=1, select bank1
  8882  1961  1303               	bcf	3,6	;RP1=0, select bank1
  8883  1962  00AD               	movwf	(?___flsub+1)^(0+128)
  8884  1963  1283               	bcf	3,5	;RP0=0, select bank0
  8885  1964  1303               	bcf	3,6	;RP1=0, select bank0
  8886  1965  0868               	movf	?___fladd,w
  8887  1966  1683               	bsf	3,5	;RP0=1, select bank1
  8888  1967  1303               	bcf	3,6	;RP1=0, select bank1
  8889  1968  00AC               	movwf	?___flsub^(0+128)
  8890  1969                     l728:
  8891  1969  0008               	return
  8892  196A                     __end_of___flsub:
  8893                           
  8894                           	psect	text32
  8895  0C7C                     __ptext32:	
  8896 ;; *************** function ___fladd *****************
  8897 ;; Defined at:
  8898 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;  b               4   72[BANK0 ] long 
  8901 ;;  a               4   76[BANK0 ] long 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  grs             1   11[BANK1 ] unsigned char 
  8904 ;;  bexp            1   10[BANK1 ] unsigned char 
  8905 ;;  aexp            1    9[BANK1 ] unsigned char 
  8906 ;;  signs           1    8[BANK1 ] unsigned char 
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  4   72[BANK0 ] unsigned char 
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0, btemp+1
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8916 ;;      Params:         0       8       0       0       0
  8917 ;;      Locals:         0       0       4       0       0
  8918 ;;      Temps:          0       0       8       0       0
  8919 ;;      Totals:         0       8      12       0       0
  8920 ;;Total ram usage:       20 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:    1
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_main
  8927 ;;		_sprintf
  8928 ;;		___flsub
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           
  8933                           ;psect for function ___fladd
  8934  0C7C                     ___fladd:
  8935  0C7C                     l3662:	
  8936                           ;incstack = 0
  8937                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8938                           
  8939  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  8940  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  8941  0C7E  086B               	movf	___fladd@b+3,w
  8942  0C7F  3980               	andlw	128
  8943  0C80  1683               	bsf	3,5	;RP0=1, select bank1
  8944  0C81  1303               	bcf	3,6	;RP1=0, select bank1
  8945  0C82  00A0               	movwf	??___fladd^(0+128)
  8946  0C83  0820               	movf	??___fladd^(0+128),w
  8947  0C84  00A8               	movwf	___fladd@signs^(0+128)
  8948  0C85                     l3664:
  8949  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  8950  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  8951  0C87  086B               	movf	___fladd@b+3,w
  8952  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  8953  0C89  1303               	bcf	3,6	;RP1=0, select bank1
  8954  0C8A  00A0               	movwf	??___fladd^(0+128)
  8955  0C8B  0720               	addwf	??___fladd^(0+128),w
  8956  0C8C  00A1               	movwf	(??___fladd+1)^(0+128)
  8957  0C8D  0821               	movf	(??___fladd+1)^(0+128),w
  8958  0C8E  00AA               	movwf	___fladd@bexp^(0+128)
  8959  0C8F                     l3666:
  8960  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  8961  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  8962  0C91  1FEA               	btfss	___fladd@b+2,7
  8963  0C92  2C94               	goto	u5961
  8964  0C93  2C95               	goto	u5960
  8965  0C94                     u5961:
  8966  0C94  2C98               	goto	l3670
  8967  0C95                     u5960:
  8968  0C95                     l3668:
  8969  0C95  1683               	bsf	3,5	;RP0=1, select bank1
  8970  0C96  1303               	bcf	3,6	;RP1=0, select bank1
  8971  0C97  142A               	bsf	___fladd@bexp^(0+128),0
  8972  0C98                     l3670:
  8973  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  8974  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  8975  0C9A  082A               	movf	___fladd@bexp^(0+128),w
  8976  0C9B  1903               	btfsc	3,2
  8977  0C9C  2C9E               	goto	u5971
  8978  0C9D  2C9F               	goto	u5970
  8979  0C9E                     u5971:
  8980  0C9E  2CB2               	goto	l3680
  8981  0C9F                     u5970:
  8982  0C9F                     l3672:
  8983  0C9F  0A2A               	incf	___fladd@bexp^(0+128),w
  8984  0CA0  1D03               	btfss	3,2
  8985  0CA1  2CA3               	goto	u5981
  8986  0CA2  2CA4               	goto	u5980
  8987  0CA3                     u5981:
  8988  0CA3  2CAE               	goto	l3676
  8989  0CA4                     u5980:
  8990  0CA4                     l3674:
  8991  0CA4  3000               	movlw	0
  8992  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  8993  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  8994  0CA7  00EB               	movwf	___fladd@b+3
  8995  0CA8  3000               	movlw	0
  8996  0CA9  00EA               	movwf	___fladd@b+2
  8997  0CAA  3000               	movlw	0
  8998  0CAB  00E9               	movwf	___fladd@b+1
  8999  0CAC  3000               	movlw	0
  9000  0CAD  00E8               	movwf	___fladd@b
  9001  0CAE                     l3676:
  9002  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  9003  0CAF  17EA               	bsf	___fladd@b+2,7
  9004  0CB0                     l3678:
  9005  0CB0  01EB               	clrf	___fladd@b+3
  9006  0CB1  2CBC               	goto	l3682
  9007  0CB2                     l3680:
  9008  0CB2  3000               	movlw	0
  9009  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  9010  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  9011  0CB5  00EB               	movwf	___fladd@b+3
  9012  0CB6  3000               	movlw	0
  9013  0CB7  00EA               	movwf	___fladd@b+2
  9014  0CB8  3000               	movlw	0
  9015  0CB9  00E9               	movwf	___fladd@b+1
  9016  0CBA  3000               	movlw	0
  9017  0CBB  00E8               	movwf	___fladd@b
  9018  0CBC                     l3682:
  9019  0CBC  086F               	movf	___fladd@a+3,w
  9020  0CBD  3980               	andlw	128
  9021  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  9022  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  9023  0CC0  00A0               	movwf	??___fladd^(0+128)
  9024  0CC1  0820               	movf	??___fladd^(0+128),w
  9025  0CC2  00A9               	movwf	___fladd@aexp^(0+128)
  9026  0CC3                     l3684:
  9027  0CC3  0829               	movf	___fladd@aexp^(0+128),w
  9028  0CC4  0628               	xorwf	___fladd@signs^(0+128),w
  9029  0CC5  1903               	skipnz
  9030  0CC6  2CC8               	goto	u5991
  9031  0CC7  2CC9               	goto	u5990
  9032  0CC8                     u5991:
  9033  0CC8  2CCA               	goto	l3688
  9034  0CC9                     u5990:
  9035  0CC9                     l3686:
  9036  0CC9  1728               	bsf	___fladd@signs^(0+128),6
  9037  0CCA                     l3688:
  9038  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  9039  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  9040  0CCC  086F               	movf	___fladd@a+3,w
  9041  0CCD  1683               	bsf	3,5	;RP0=1, select bank1
  9042  0CCE  1303               	bcf	3,6	;RP1=0, select bank1
  9043  0CCF  00A0               	movwf	??___fladd^(0+128)
  9044  0CD0  0720               	addwf	??___fladd^(0+128),w
  9045  0CD1  00A1               	movwf	(??___fladd+1)^(0+128)
  9046  0CD2  0821               	movf	(??___fladd+1)^(0+128),w
  9047  0CD3  00A9               	movwf	___fladd@aexp^(0+128)
  9048  0CD4                     l3690:
  9049  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  9050  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  9051  0CD6  1FEE               	btfss	___fladd@a+2,7
  9052  0CD7  2CD9               	goto	u6001
  9053  0CD8  2CDA               	goto	u6000
  9054  0CD9                     u6001:
  9055  0CD9  2CDD               	goto	l3694
  9056  0CDA                     u6000:
  9057  0CDA                     l3692:
  9058  0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  9059  0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  9060  0CDC  1429               	bsf	___fladd@aexp^(0+128),0
  9061  0CDD                     l3694:
  9062  0CDD  1683               	bsf	3,5	;RP0=1, select bank1
  9063  0CDE  1303               	bcf	3,6	;RP1=0, select bank1
  9064  0CDF  0829               	movf	___fladd@aexp^(0+128),w
  9065  0CE0  1903               	btfsc	3,2
  9066  0CE1  2CE3               	goto	u6011
  9067  0CE2  2CE4               	goto	u6010
  9068  0CE3                     u6011:
  9069  0CE3  2CF7               	goto	l3704
  9070  0CE4                     u6010:
  9071  0CE4                     l3696:
  9072  0CE4  0A29               	incf	___fladd@aexp^(0+128),w
  9073  0CE5  1D03               	btfss	3,2
  9074  0CE6  2CE8               	goto	u6021
  9075  0CE7  2CE9               	goto	u6020
  9076  0CE8                     u6021:
  9077  0CE8  2CF3               	goto	l3700
  9078  0CE9                     u6020:
  9079  0CE9                     l3698:
  9080  0CE9  3000               	movlw	0
  9081  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  9082  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  9083  0CEC  00EF               	movwf	___fladd@a+3
  9084  0CED  3000               	movlw	0
  9085  0CEE  00EE               	movwf	___fladd@a+2
  9086  0CEF  3000               	movlw	0
  9087  0CF0  00ED               	movwf	___fladd@a+1
  9088  0CF1  3000               	movlw	0
  9089  0CF2  00EC               	movwf	___fladd@a
  9090  0CF3                     l3700:
  9091  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  9092  0CF4  17EE               	bsf	___fladd@a+2,7
  9093  0CF5                     l3702:
  9094  0CF5  01EF               	clrf	___fladd@a+3
  9095  0CF6  2D01               	goto	l682
  9096  0CF7                     l3704:
  9097  0CF7  3000               	movlw	0
  9098  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  9099  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  9100  0CFA  00EF               	movwf	___fladd@a+3
  9101  0CFB  3000               	movlw	0
  9102  0CFC  00EE               	movwf	___fladd@a+2
  9103  0CFD  3000               	movlw	0
  9104  0CFE  00ED               	movwf	___fladd@a+1
  9105  0CFF  3000               	movlw	0
  9106  0D00  00EC               	movwf	___fladd@a
  9107  0D01                     l682:
  9108  0D01  1683               	bsf	3,5	;RP0=1, select bank1
  9109  0D02  1303               	bcf	3,6	;RP1=0, select bank1
  9110  0D03  082A               	movf	___fladd@bexp^(0+128),w
  9111  0D04  0229               	subwf	___fladd@aexp^(0+128),w
  9112  0D05  1803               	skipnc
  9113  0D06  2D08               	goto	u6031
  9114  0D07  2D09               	goto	u6030
  9115  0D08                     u6031:
  9116  0D08  2D7F               	goto	l3740
  9117  0D09                     u6030:
  9118  0D09                     l3706:
  9119  0D09  1F28               	btfss	___fladd@signs^(0+128),6
  9120  0D0A  2D0C               	goto	u6041
  9121  0D0B  2D0D               	goto	u6040
  9122  0D0C                     u6041:
  9123  0D0C  2D11               	goto	l3710
  9124  0D0D                     u6040:
  9125  0D0D                     l3708:
  9126  0D0D  3080               	movlw	128
  9127  0D0E  00A0               	movwf	??___fladd^(0+128)
  9128  0D0F  0820               	movf	??___fladd^(0+128),w
  9129  0D10  06A8               	xorwf	___fladd@signs^(0+128),f
  9130  0D11                     l3710:
  9131  0D11  082A               	movf	___fladd@bexp^(0+128),w
  9132  0D12  00A0               	movwf	??___fladd^(0+128)
  9133  0D13  0820               	movf	??___fladd^(0+128),w
  9134  0D14  00AB               	movwf	___fladd@grs^(0+128)
  9135  0D15                     l3712:
  9136  0D15  0829               	movf	___fladd@aexp^(0+128),w
  9137  0D16  00A0               	movwf	??___fladd^(0+128)
  9138  0D17  0820               	movf	??___fladd^(0+128),w
  9139  0D18  00AA               	movwf	___fladd@bexp^(0+128)
  9140  0D19                     l3714:
  9141  0D19  082B               	movf	___fladd@grs^(0+128),w
  9142  0D1A  00A0               	movwf	??___fladd^(0+128)
  9143  0D1B  0820               	movf	??___fladd^(0+128),w
  9144  0D1C  00A9               	movwf	___fladd@aexp^(0+128)
  9145  0D1D                     l3716:
  9146  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  9147  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  9148  0D1F  0868               	movf	___fladd@b,w
  9149  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  9150  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  9151  0D22  00A0               	movwf	??___fladd^(0+128)
  9152  0D23  0820               	movf	??___fladd^(0+128),w
  9153  0D24  00AB               	movwf	___fladd@grs^(0+128)
  9154  0D25                     l3718:
  9155  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  9156  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  9157  0D27  086C               	movf	___fladd@a,w
  9158  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  9159  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  9160  0D2A  00A0               	movwf	??___fladd^(0+128)
  9161  0D2B  0820               	movf	??___fladd^(0+128),w
  9162  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  9163  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  9164  0D2E  00E8               	movwf	___fladd@b
  9165  0D2F                     l3720:
  9166  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  9167  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  9168  0D31  082B               	movf	___fladd@grs^(0+128),w
  9169  0D32  00A0               	movwf	??___fladd^(0+128)
  9170  0D33  0820               	movf	??___fladd^(0+128),w
  9171  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  9172  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  9173  0D36  00EC               	movwf	___fladd@a
  9174  0D37                     l3722:
  9175  0D37  0869               	movf	___fladd@b+1,w
  9176  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  9177  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  9178  0D3A  00A0               	movwf	??___fladd^(0+128)
  9179  0D3B  0820               	movf	??___fladd^(0+128),w
  9180  0D3C  00AB               	movwf	___fladd@grs^(0+128)
  9181  0D3D                     l3724:
  9182  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  9183  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  9184  0D3F  086D               	movf	___fladd@a+1,w
  9185  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  9186  0D41  1303               	bcf	3,6	;RP1=0, select bank1
  9187  0D42  00A0               	movwf	??___fladd^(0+128)
  9188  0D43  0820               	movf	??___fladd^(0+128),w
  9189  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  9190  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  9191  0D46  00E9               	movwf	___fladd@b+1
  9192  0D47                     l3726:
  9193  0D47  1683               	bsf	3,5	;RP0=1, select bank1
  9194  0D48  1303               	bcf	3,6	;RP1=0, select bank1
  9195  0D49  082B               	movf	___fladd@grs^(0+128),w
  9196  0D4A  00A0               	movwf	??___fladd^(0+128)
  9197  0D4B  0820               	movf	??___fladd^(0+128),w
  9198  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  9199  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  9200  0D4E  00ED               	movwf	___fladd@a+1
  9201  0D4F                     l3728:
  9202  0D4F  086A               	movf	___fladd@b+2,w
  9203  0D50  1683               	bsf	3,5	;RP0=1, select bank1
  9204  0D51  1303               	bcf	3,6	;RP1=0, select bank1
  9205  0D52  00A0               	movwf	??___fladd^(0+128)
  9206  0D53  0820               	movf	??___fladd^(0+128),w
  9207  0D54  00AB               	movwf	___fladd@grs^(0+128)
  9208  0D55                     l3730:
  9209  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  9210  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  9211  0D57  086E               	movf	___fladd@a+2,w
  9212  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  9213  0D59  1303               	bcf	3,6	;RP1=0, select bank1
  9214  0D5A  00A0               	movwf	??___fladd^(0+128)
  9215  0D5B  0820               	movf	??___fladd^(0+128),w
  9216  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  9217  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  9218  0D5E  00EA               	movwf	___fladd@b+2
  9219  0D5F                     l3732:
  9220  0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  9221  0D60  1303               	bcf	3,6	;RP1=0, select bank1
  9222  0D61  082B               	movf	___fladd@grs^(0+128),w
  9223  0D62  00A0               	movwf	??___fladd^(0+128)
  9224  0D63  0820               	movf	??___fladd^(0+128),w
  9225  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  9226  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  9227  0D66  00EE               	movwf	___fladd@a+2
  9228  0D67                     l3734:
  9229  0D67  086B               	movf	___fladd@b+3,w
  9230  0D68  1683               	bsf	3,5	;RP0=1, select bank1
  9231  0D69  1303               	bcf	3,6	;RP1=0, select bank1
  9232  0D6A  00A0               	movwf	??___fladd^(0+128)
  9233  0D6B  0820               	movf	??___fladd^(0+128),w
  9234  0D6C  00AB               	movwf	___fladd@grs^(0+128)
  9235  0D6D                     l3736:
  9236  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  9237  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  9238  0D6F  086F               	movf	___fladd@a+3,w
  9239  0D70  1683               	bsf	3,5	;RP0=1, select bank1
  9240  0D71  1303               	bcf	3,6	;RP1=0, select bank1
  9241  0D72  00A0               	movwf	??___fladd^(0+128)
  9242  0D73  0820               	movf	??___fladd^(0+128),w
  9243  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  9244  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  9245  0D76  00EB               	movwf	___fladd@b+3
  9246  0D77                     l3738:
  9247  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  9248  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  9249  0D79  082B               	movf	___fladd@grs^(0+128),w
  9250  0D7A  00A0               	movwf	??___fladd^(0+128)
  9251  0D7B  0820               	movf	??___fladd^(0+128),w
  9252  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  9253  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  9254  0D7E  00EF               	movwf	___fladd@a+3
  9255  0D7F                     l3740:
  9256  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  9257  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  9258  0D81  01AB               	clrf	___fladd@grs^(0+128)
  9259  0D82                     l3742:
  9260  0D82  0829               	movf	___fladd@aexp^(0+128),w
  9261  0D83  00A0               	movwf	??___fladd^(0+128)
  9262  0D84  01A1               	clrf	(??___fladd^(0+128)+1)
  9263  0D85  0821               	movf	(??___fladd+1)^(0+128),w
  9264  0D86  00A3               	movwf	((??___fladd+2)^(0+128)+1)
  9265  0D87  082A               	movf	___fladd@bexp^(0+128),w
  9266  0D88  0220               	subwf	??___fladd^(0+128),w
  9267  0D89  00A2               	movwf	(??___fladd+2)^(0+128)
  9268  0D8A  1C03               	skipc
  9269  0D8B  03A3               	decf	((??___fladd+2)^(0+128)+1),f
  9270  0D8C  0823               	movf	(??___fladd+3)^(0+128),w
  9271  0D8D  3A80               	xorlw	128
  9272  0D8E  00FF               	movwf	btemp+1
  9273  0D8F  3080               	movlw	128
  9274  0D90  027F               	subwf	btemp+1,w
  9275  0D91  1D03               	skipz
  9276  0D92  2D95               	goto	u6055
  9277  0D93  301A               	movlw	26
  9278  0D94  0222               	subwf	(??___fladd+2)^(0+128),w
  9279  0D95                     u6055:
  9280  0D95  1C03               	skipc
  9281  0D96  2D98               	goto	u6051
  9282  0D97  2D99               	goto	u6050
  9283  0D98                     u6051:
  9284  0D98  2DE6               	goto	l3758
  9285  0D99                     u6050:
  9286  0D99                     l3744:
  9287  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  9288  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  9289  0D9B  086B               	movf	___fladd@b+3,w
  9290  0D9C  046A               	iorwf	___fladd@b+2,w
  9291  0D9D  0469               	iorwf	___fladd@b+1,w
  9292  0D9E  0468               	iorwf	___fladd@b,w
  9293  0D9F  1D03               	skipz
  9294  0DA0  2DA2               	goto	u6061
  9295  0DA1  2DA4               	goto	u6060
  9296  0DA2                     u6061:
  9297  0DA2  3001               	movlw	1
  9298  0DA3  2DA5               	goto	u6070
  9299  0DA4                     u6060:
  9300  0DA4  3000               	movlw	0
  9301  0DA5                     u6070:
  9302  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  9303  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  9304  0DA7  00A0               	movwf	??___fladd^(0+128)
  9305  0DA8  0820               	movf	??___fladd^(0+128),w
  9306  0DA9  00AB               	movwf	___fladd@grs^(0+128)
  9307  0DAA  3000               	movlw	0
  9308  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  9309  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  9310  0DAD  00EB               	movwf	___fladd@b+3
  9311  0DAE  3000               	movlw	0
  9312  0DAF  00EA               	movwf	___fladd@b+2
  9313  0DB0  3000               	movlw	0
  9314  0DB1  00E9               	movwf	___fladd@b+1
  9315  0DB2  3000               	movlw	0
  9316  0DB3  00E8               	movwf	___fladd@b
  9317  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  9318  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  9319  0DB6  0829               	movf	___fladd@aexp^(0+128),w
  9320  0DB7  00A0               	movwf	??___fladd^(0+128)
  9321  0DB8  0820               	movf	??___fladd^(0+128),w
  9322  0DB9  00AA               	movwf	___fladd@bexp^(0+128)
  9323  0DBA  2DEE               	goto	l686
  9324  0DBB                     l688:
  9325  0DBB  1C2B               	btfss	___fladd@grs^(0+128),0
  9326  0DBC  2DBE               	goto	u6081
  9327  0DBD  2DBF               	goto	u6080
  9328  0DBE                     u6081:
  9329  0DBE  2DC8               	goto	l3748
  9330  0DBF                     u6080:
  9331  0DBF                     l3746:
  9332  0DBF  082B               	movf	___fladd@grs^(0+128),w
  9333  0DC0  00A0               	movwf	??___fladd^(0+128)
  9334  0DC1  1003               	clrc
  9335  0DC2  0C20               	rrf	??___fladd^(0+128),w
  9336  0DC3  3801               	iorlw	1
  9337  0DC4  00A1               	movwf	(??___fladd+1)^(0+128)
  9338  0DC5  0821               	movf	(??___fladd+1)^(0+128),w
  9339  0DC6  00AB               	movwf	___fladd@grs^(0+128)
  9340  0DC7  2DCA               	goto	l3750
  9341  0DC8                     l3748:
  9342  0DC8  1003               	clrc
  9343  0DC9  0CAB               	rrf	___fladd@grs^(0+128),f
  9344  0DCA                     l3750:
  9345  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  9346  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  9347  0DCC  1C68               	btfss	___fladd@b,0
  9348  0DCD  2DCF               	goto	u6091
  9349  0DCE  2DD0               	goto	u6090
  9350  0DCF                     u6091:
  9351  0DCF  2DD3               	goto	l3754
  9352  0DD0                     u6090:
  9353  0DD0                     l3752:
  9354  0DD0  1683               	bsf	3,5	;RP0=1, select bank1
  9355  0DD1  1303               	bcf	3,6	;RP1=0, select bank1
  9356  0DD2  17AB               	bsf	___fladd@grs^(0+128),7
  9357  0DD3                     l3754:
  9358  0DD3  3001               	movlw	1
  9359  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  9360  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  9361  0DD6  00A0               	movwf	??___fladd^(0+128)
  9362  0DD7                     u6105:
  9363  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  9364  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  9365  0DD9  0D6B               	rlf	___fladd@b+3,w
  9366  0DDA  0CEB               	rrf	___fladd@b+3,f
  9367  0DDB  0CEA               	rrf	___fladd@b+2,f
  9368  0DDC  0CE9               	rrf	___fladd@b+1,f
  9369  0DDD  0CE8               	rrf	___fladd@b,f
  9370  0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  9371  0DDF  1303               	bcf	3,6	;RP1=0, select bank1
  9372  0DE0  0BA0               	decfsz	(??___fladd^(0+128))& (0+127),f
  9373  0DE1  2DD7               	goto	u6105
  9374  0DE2                     l3756:
  9375  0DE2  3001               	movlw	1
  9376  0DE3  00A0               	movwf	??___fladd^(0+128)
  9377  0DE4  0820               	movf	??___fladd^(0+128),w
  9378  0DE5  07AA               	addwf	___fladd@bexp^(0+128),f
  9379  0DE6                     l3758:
  9380  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  9381  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  9382  0DE8  0829               	movf	___fladd@aexp^(0+128),w
  9383  0DE9  022A               	subwf	___fladd@bexp^(0+128),w
  9384  0DEA  1C03               	skipc
  9385  0DEB  2DED               	goto	u6111
  9386  0DEC  2DEE               	goto	u6110
  9387  0DED                     u6111:
  9388  0DED  2DBB               	goto	l688
  9389  0DEE                     u6110:
  9390  0DEE                     l686:
  9391  0DEE  1B28               	btfsc	___fladd@signs^(0+128),6
  9392  0DEF  2DF1               	goto	u6121
  9393  0DF0  2DF2               	goto	u6120
  9394  0DF1                     u6121:
  9395  0DF1  2E4D               	goto	l3784
  9396  0DF2                     u6120:
  9397  0DF2                     l3760:
  9398  0DF2  082A               	movf	___fladd@bexp^(0+128),w
  9399  0DF3  1D03               	btfss	3,2
  9400  0DF4  2DF6               	goto	u6131
  9401  0DF5  2DF7               	goto	u6130
  9402  0DF6                     u6131:
  9403  0DF6  2E02               	goto	l3766
  9404  0DF7                     u6130:
  9405  0DF7                     l3762:
  9406  0DF7  3000               	movlw	0
  9407  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  9408  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  9409  0DFA  00EB               	movwf	?___fladd+3
  9410  0DFB  3000               	movlw	0
  9411  0DFC  00EA               	movwf	?___fladd+2
  9412  0DFD  3000               	movlw	0
  9413  0DFE  00E9               	movwf	?___fladd+1
  9414  0DFF  3000               	movlw	0
  9415  0E00  00E8               	movwf	?___fladd
  9416  0E01  2FFF               	goto	l695
  9417  0E02                     l3766:
  9418  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  9419  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  9420  0E04  086C               	movf	___fladd@a,w
  9421  0E05  07E8               	addwf	___fladd@b,f
  9422  0E06  086D               	movf	___fladd@a+1,w
  9423  0E07  1103               	clrz
  9424  0E08  1803               	skipnc
  9425  0E09  3E01               	addlw	1
  9426  0E0A  1903               	skipnz
  9427  0E0B  2E0D               	goto	u6141
  9428  0E0C  07E9               	addwf	___fladd@b+1,f
  9429  0E0D                     u6141:
  9430  0E0D  086E               	movf	___fladd@a+2,w
  9431  0E0E  1103               	clrz
  9432  0E0F  1803               	skipnc
  9433  0E10  3E01               	addlw	1
  9434  0E11  1903               	skipnz
  9435  0E12  2E14               	goto	u6142
  9436  0E13  07EA               	addwf	___fladd@b+2,f
  9437  0E14                     u6142:
  9438  0E14  086F               	movf	___fladd@a+3,w
  9439  0E15  1103               	clrz
  9440  0E16  1803               	skipnc
  9441  0E17  3E01               	addlw	1
  9442  0E18  1903               	skipnz
  9443  0E19  2E1B               	goto	u6143
  9444  0E1A  07EB               	addwf	___fladd@b+3,f
  9445  0E1B                     u6143:
  9446  0E1B                     l3768:
  9447  0E1B  1C6B               	btfss	___fladd@b+3,0
  9448  0E1C  2E1E               	goto	u6151
  9449  0E1D  2E1F               	goto	u6150
  9450  0E1E                     u6151:
  9451  0E1E  2F4B               	goto	l3818
  9452  0E1F                     u6150:
  9453  0E1F                     l3770:
  9454  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  9455  0E20  1303               	bcf	3,6	;RP1=0, select bank1
  9456  0E21  1C2B               	btfss	___fladd@grs^(0+128),0
  9457  0E22  2E24               	goto	u6161
  9458  0E23  2E25               	goto	u6160
  9459  0E24                     u6161:
  9460  0E24  2E2E               	goto	l3774
  9461  0E25                     u6160:
  9462  0E25                     l3772:
  9463  0E25  082B               	movf	___fladd@grs^(0+128),w
  9464  0E26  00A0               	movwf	??___fladd^(0+128)
  9465  0E27  1003               	clrc
  9466  0E28  0C20               	rrf	??___fladd^(0+128),w
  9467  0E29  3801               	iorlw	1
  9468  0E2A  00A1               	movwf	(??___fladd+1)^(0+128)
  9469  0E2B  0821               	movf	(??___fladd+1)^(0+128),w
  9470  0E2C  00AB               	movwf	___fladd@grs^(0+128)
  9471  0E2D  2E30               	goto	l3776
  9472  0E2E                     l3774:
  9473  0E2E  1003               	clrc
  9474  0E2F  0CAB               	rrf	___fladd@grs^(0+128),f
  9475  0E30                     l3776:
  9476  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  9477  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  9478  0E32  1C68               	btfss	___fladd@b,0
  9479  0E33  2E35               	goto	u6171
  9480  0E34  2E36               	goto	u6170
  9481  0E35                     u6171:
  9482  0E35  2E39               	goto	l3780
  9483  0E36                     u6170:
  9484  0E36                     l3778:
  9485  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  9486  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  9487  0E38  17AB               	bsf	___fladd@grs^(0+128),7
  9488  0E39                     l3780:
  9489  0E39  3001               	movlw	1
  9490  0E3A  1683               	bsf	3,5	;RP0=1, select bank1
  9491  0E3B  1303               	bcf	3,6	;RP1=0, select bank1
  9492  0E3C  00A0               	movwf	??___fladd^(0+128)
  9493  0E3D                     u6185:
  9494  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  9495  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  9496  0E3F  0D6B               	rlf	___fladd@b+3,w
  9497  0E40  0CEB               	rrf	___fladd@b+3,f
  9498  0E41  0CEA               	rrf	___fladd@b+2,f
  9499  0E42  0CE9               	rrf	___fladd@b+1,f
  9500  0E43  0CE8               	rrf	___fladd@b,f
  9501  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  9502  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  9503  0E46  0BA0               	decfsz	(??___fladd^(0+128))& (0+127),f
  9504  0E47  2E3D               	goto	u6185
  9505  0E48                     l3782:
  9506  0E48  3001               	movlw	1
  9507  0E49  00A0               	movwf	??___fladd^(0+128)
  9508  0E4A  0820               	movf	??___fladd^(0+128),w
  9509  0E4B  07AA               	addwf	___fladd@bexp^(0+128),f
  9510  0E4C  2F4B               	goto	l3818
  9511  0E4D                     l3784:
  9512  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  9513  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  9514  0E4F  086B               	movf	___fladd@b+3,w
  9515  0E50  3A80               	xorlw	128
  9516  0E51  00FF               	movwf	btemp+1
  9517  0E52  086F               	movf	___fladd@a+3,w
  9518  0E53  3A80               	xorlw	128
  9519  0E54  027F               	subwf	btemp+1,w
  9520  0E55  1D03               	skipz
  9521  0E56  2E61               	goto	u6193
  9522  0E57  086E               	movf	___fladd@a+2,w
  9523  0E58  026A               	subwf	___fladd@b+2,w
  9524  0E59  1D03               	skipz
  9525  0E5A  2E61               	goto	u6193
  9526  0E5B  086D               	movf	___fladd@a+1,w
  9527  0E5C  0269               	subwf	___fladd@b+1,w
  9528  0E5D  1D03               	skipz
  9529  0E5E  2E61               	goto	u6193
  9530  0E5F  086C               	movf	___fladd@a,w
  9531  0E60  0268               	subwf	___fladd@b,w
  9532  0E61                     u6193:
  9533  0E61  1803               	skipnc
  9534  0E62  2E64               	goto	u6191
  9535  0E63  2E65               	goto	u6190
  9536  0E64                     u6191:
  9537  0E64  2EF5               	goto	l3794
  9538  0E65                     u6190:
  9539  0E65                     l3786:
  9540  0E65  30FF               	movlw	255
  9541  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  9542  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  9543  0E68  00A0               	movwf	??___fladd^(0+128)
  9544  0E69  30FF               	movlw	255
  9545  0E6A  00A1               	movwf	(??___fladd^(0+128)+1)
  9546  0E6B  30FF               	movlw	255
  9547  0E6C  00A2               	movwf	(??___fladd^(0+128)+2)
  9548  0E6D  30FF               	movlw	255
  9549  0E6E  00A3               	movwf	(??___fladd^(0+128)+3)
  9550  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  9551  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  9552  0E71  086C               	movf	___fladd@a,w
  9553  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  9554  0E73  1303               	bcf	3,6	;RP1=0, select bank1
  9555  0E74  00A4               	movwf	(??___fladd+4)^(0+128)
  9556  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  9557  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  9558  0E77  086D               	movf	___fladd@a+1,w
  9559  0E78  1683               	bsf	3,5	;RP0=1, select bank1
  9560  0E79  1303               	bcf	3,6	;RP1=0, select bank1
  9561  0E7A  00A5               	movwf	((??___fladd+4)^(0+128)+1)
  9562  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  9563  0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  9564  0E7D  086E               	movf	___fladd@a+2,w
  9565  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  9566  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  9567  0E80  00A6               	movwf	((??___fladd+4)^(0+128)+2)
  9568  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  9569  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  9570  0E83  086F               	movf	___fladd@a+3,w
  9571  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  9572  0E85  1303               	bcf	3,6	;RP1=0, select bank1
  9573  0E86  00A7               	movwf	((??___fladd+4)^(0+128)+3)
  9574  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  9575  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  9576  0E89  0868               	movf	___fladd@b,w
  9577  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  9578  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  9579  0E8C  02A4               	subwf	(??___fladd+4)^(0+128),f
  9580  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  9581  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  9582  0E8F  0869               	movf	___fladd@b+1,w
  9583  0E90  1C03               	skipc
  9584  0E91  0F69               	incfsz	___fladd@b+1,w
  9585  0E92  2E94               	goto	u6201
  9586  0E93  2E97               	goto	u6202
  9587  0E94                     u6201:
  9588  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  9589  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  9590  0E96  02A5               	subwf	((??___fladd+4)^(0+128)+1),f
  9591  0E97                     u6202:
  9592  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  9593  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  9594  0E99  086A               	movf	___fladd@b+2,w
  9595  0E9A  1C03               	skipc
  9596  0E9B  0F6A               	incfsz	___fladd@b+2,w
  9597  0E9C  2E9E               	goto	u6203
  9598  0E9D  2EA1               	goto	u6204
  9599  0E9E                     u6203:
  9600  0E9E  1683               	bsf	3,5	;RP0=1, select bank1
  9601  0E9F  1303               	bcf	3,6	;RP1=0, select bank1
  9602  0EA0  02A6               	subwf	((??___fladd+4)^(0+128)+2),f
  9603  0EA1                     u6204:
  9604  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  9605  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  9606  0EA3  086B               	movf	___fladd@b+3,w
  9607  0EA4  1C03               	skipc
  9608  0EA5  0F6B               	incfsz	___fladd@b+3,w
  9609  0EA6  2EA8               	goto	u6205
  9610  0EA7  2EAB               	goto	u6206
  9611  0EA8                     u6205:
  9612  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  9613  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  9614  0EAA  02A7               	subwf	((??___fladd+4)^(0+128)+3),f
  9615  0EAB                     u6206:
  9616  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  9617  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  9618  0EAD  1683               	bsf	3,5	;RP0=1, select bank1
  9619  0EAE  1303               	bcf	3,6	;RP1=0, select bank1
  9620  0EAF  0824               	movf	(??___fladd+4)^(0+128),w
  9621  0EB0  07A0               	addwf	??___fladd^(0+128),f
  9622  0EB1  0825               	movf	(??___fladd+5)^(0+128),w
  9623  0EB2  1803               	skipnc
  9624  0EB3  0F25               	incfsz	(??___fladd+5)^(0+128),w
  9625  0EB4  2EB6               	goto	u6210
  9626  0EB5  2EB7               	goto	u6211
  9627  0EB6                     u6210:
  9628  0EB6  07A1               	addwf	(??___fladd^(0+128)+1),f
  9629  0EB7                     u6211:
  9630  0EB7  0826               	movf	(??___fladd+6)^(0+128),w
  9631  0EB8  1803               	skipnc
  9632  0EB9  0F26               	incfsz	(??___fladd+6)^(0+128),w
  9633  0EBA  2EBC               	goto	u6212
  9634  0EBB  2EBD               	goto	u6213
  9635  0EBC                     u6212:
  9636  0EBC  07A2               	addwf	(??___fladd^(0+128)+2),f
  9637  0EBD                     u6213:
  9638  0EBD  0827               	movf	(??___fladd+7)^(0+128),w
  9639  0EBE  1803               	skipnc
  9640  0EBF  0A27               	incf	(??___fladd+7)^(0+128),w
  9641  0EC0  07A3               	addwf	(??___fladd^(0+128)+3),f
  9642  0EC1  0823               	movf	(??___fladd+3)^(0+128),w
  9643  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  9644  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  9645  0EC4  00EB               	movwf	___fladd@b+3
  9646  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  9647  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  9648  0EC7  0822               	movf	(??___fladd+2)^(0+128),w
  9649  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  9650  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  9651  0ECA  00EA               	movwf	___fladd@b+2
  9652  0ECB  1683               	bsf	3,5	;RP0=1, select bank1
  9653  0ECC  1303               	bcf	3,6	;RP1=0, select bank1
  9654  0ECD  0821               	movf	(??___fladd+1)^(0+128),w
  9655  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  9656  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  9657  0ED0  00E9               	movwf	___fladd@b+1
  9658  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  9659  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  9660  0ED3  0820               	movf	??___fladd^(0+128),w
  9661  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  9662  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  9663  0ED6  00E8               	movwf	___fladd@b
  9664  0ED7                     l3788:
  9665  0ED7  3080               	movlw	128
  9666  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  9667  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  9668  0EDA  00A0               	movwf	??___fladd^(0+128)
  9669  0EDB  0820               	movf	??___fladd^(0+128),w
  9670  0EDC  06A8               	xorwf	___fladd@signs^(0+128),f
  9671  0EDD  09AB               	comf	___fladd@grs^(0+128),f
  9672  0EDE  0AAB               	incf	___fladd@grs^(0+128),f
  9673  0EDF                     l3790:
  9674  0EDF  082B               	movf	___fladd@grs^(0+128),w
  9675  0EE0  1D03               	btfss	3,2
  9676  0EE1  2EE3               	goto	u6221
  9677  0EE2  2EE4               	goto	u6220
  9678  0EE3                     u6221:
  9679  0EE3  2F03               	goto	l703
  9680  0EE4                     u6220:
  9681  0EE4                     l3792:
  9682  0EE4  3001               	movlw	1
  9683  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  9684  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  9685  0EE7  07E8               	addwf	___fladd@b,f
  9686  0EE8  3000               	movlw	0
  9687  0EE9  1803               	skipnc
  9688  0EEA  3001               	movlw	1
  9689  0EEB  07E9               	addwf	___fladd@b+1,f
  9690  0EEC  3000               	movlw	0
  9691  0EED  1803               	skipnc
  9692  0EEE  3001               	movlw	1
  9693  0EEF  07EA               	addwf	___fladd@b+2,f
  9694  0EF0  3000               	movlw	0
  9695  0EF1  1803               	skipnc
  9696  0EF2  3001               	movlw	1
  9697  0EF3  07EB               	addwf	___fladd@b+3,f
  9698  0EF4  2F03               	goto	l703
  9699  0EF5                     l3794:
  9700  0EF5  086C               	movf	___fladd@a,w
  9701  0EF6  02E8               	subwf	___fladd@b,f
  9702  0EF7  086D               	movf	___fladd@a+1,w
  9703  0EF8  1C03               	skipc
  9704  0EF9  0F6D               	incfsz	___fladd@a+1,w
  9705  0EFA  02E9               	subwf	___fladd@b+1,f
  9706  0EFB  086E               	movf	___fladd@a+2,w
  9707  0EFC  1C03               	skipc
  9708  0EFD  0F6E               	incfsz	___fladd@a+2,w
  9709  0EFE  02EA               	subwf	___fladd@b+2,f
  9710  0EFF  086F               	movf	___fladd@a+3,w
  9711  0F00  1C03               	skipc
  9712  0F01  0F6F               	incfsz	___fladd@a+3,w
  9713  0F02  02EB               	subwf	___fladd@b+3,f
  9714  0F03                     l703:
  9715  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  9716  0F04  086B               	movf	___fladd@b+3,w
  9717  0F05  046A               	iorwf	___fladd@b+2,w
  9718  0F06  0469               	iorwf	___fladd@b+1,w
  9719  0F07  0468               	iorwf	___fladd@b,w
  9720  0F08  1D03               	skipz
  9721  0F09  2F0B               	goto	u6231
  9722  0F0A  2F0C               	goto	u6230
  9723  0F0B                     u6231:
  9724  0F0B  2F46               	goto	l3816
  9725  0F0C                     u6230:
  9726  0F0C                     l3796:
  9727  0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  9728  0F0D  1303               	bcf	3,6	;RP1=0, select bank1
  9729  0F0E  082B               	movf	___fladd@grs^(0+128),w
  9730  0F0F  1D03               	btfss	3,2
  9731  0F10  2F12               	goto	u6241
  9732  0F11  2F13               	goto	u6240
  9733  0F12                     u6241:
  9734  0F12  2F46               	goto	l3816
  9735  0F13                     u6240:
  9736  0F13                     l3798:
  9737  0F13  3000               	movlw	0
  9738  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  9739  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  9740  0F16  00EB               	movwf	?___fladd+3
  9741  0F17  3000               	movlw	0
  9742  0F18  00EA               	movwf	?___fladd+2
  9743  0F19  3000               	movlw	0
  9744  0F1A  00E9               	movwf	?___fladd+1
  9745  0F1B  3000               	movlw	0
  9746  0F1C  00E8               	movwf	?___fladd
  9747  0F1D  2FFF               	goto	l695
  9748  0F1E                     l3802:
  9749  0F1E  3001               	movlw	1
  9750  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  9751  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  9752  0F21  00A0               	movwf	??___fladd^(0+128)
  9753  0F22                     u6255:
  9754  0F22  1003               	clrc
  9755  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  9756  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  9757  0F25  0DE8               	rlf	___fladd@b,f
  9758  0F26  0DE9               	rlf	___fladd@b+1,f
  9759  0F27  0DEA               	rlf	___fladd@b+2,f
  9760  0F28  0DEB               	rlf	___fladd@b+3,f
  9761  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  9762  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  9763  0F2B  0BA0               	decfsz	??___fladd^(0+128),f
  9764  0F2C  2F22               	goto	u6255
  9765  0F2D                     l3804:
  9766  0F2D  1FAB               	btfss	___fladd@grs^(0+128),7
  9767  0F2E  2F30               	goto	u6261
  9768  0F2F  2F31               	goto	u6260
  9769  0F30                     u6261:
  9770  0F30  2F34               	goto	l707
  9771  0F31                     u6260:
  9772  0F31                     l3806:
  9773  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  9774  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  9775  0F33  1468               	bsf	___fladd@b,0
  9776  0F34                     l707:
  9777  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  9778  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  9779  0F36  1C2B               	btfss	___fladd@grs^(0+128),0
  9780  0F37  2F39               	goto	u6271
  9781  0F38  2F3A               	goto	u6270
  9782  0F39                     u6271:
  9783  0F39  2F3D               	goto	l3810
  9784  0F3A                     u6270:
  9785  0F3A                     l3808:
  9786  0F3A  1403               	setc
  9787  0F3B  0DAB               	rlf	___fladd@grs^(0+128),f
  9788  0F3C  2F3F               	goto	l3812
  9789  0F3D                     l3810:
  9790  0F3D  1003               	clrc
  9791  0F3E  0DAB               	rlf	___fladd@grs^(0+128),f
  9792  0F3F                     l3812:
  9793  0F3F  082A               	movf	___fladd@bexp^(0+128),w
  9794  0F40  1903               	btfsc	3,2
  9795  0F41  2F43               	goto	u6281
  9796  0F42  2F44               	goto	u6280
  9797  0F43                     u6281:
  9798  0F43  2F46               	goto	l3816
  9799  0F44                     u6280:
  9800  0F44                     l3814:
  9801  0F44  3001               	movlw	1
  9802  0F45  02AA               	subwf	___fladd@bexp^(0+128),f
  9803  0F46                     l3816:
  9804  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  9805  0F47  1FEA               	btfss	___fladd@b+2,7
  9806  0F48  2F4A               	goto	u6291
  9807  0F49  2F4B               	goto	u6290
  9808  0F4A                     u6291:
  9809  0F4A  2F1E               	goto	l3802
  9810  0F4B                     u6290:
  9811  0F4B                     l3818:
  9812  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  9813  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  9814  0F4D  01A9               	clrf	___fladd@aexp^(0+128)
  9815  0F4E                     l3820:
  9816  0F4E  1FAB               	btfss	___fladd@grs^(0+128),7
  9817  0F4F  2F51               	goto	u6301
  9818  0F50  2F52               	goto	u6300
  9819  0F51                     u6301:
  9820  0F51  2F64               	goto	l3828
  9821  0F52                     u6300:
  9822  0F52                     l3822:
  9823  0F52  082B               	movf	___fladd@grs^(0+128),w
  9824  0F53  397F               	andlw	127
  9825  0F54  1903               	btfsc	3,2
  9826  0F55  2F57               	goto	u6311
  9827  0F56  2F58               	goto	u6310
  9828  0F57                     u6311:
  9829  0F57  2F5D               	goto	l713
  9830  0F58                     u6310:
  9831  0F58                     l3824:
  9832  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  9833  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  9834  0F5A  01A9               	clrf	___fladd@aexp^(0+128)
  9835  0F5B  0AA9               	incf	___fladd@aexp^(0+128),f
  9836  0F5C  2F64               	goto	l3828
  9837  0F5D                     l713:
  9838  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  9839  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  9840  0F5F  1C68               	btfss	___fladd@b,0
  9841  0F60  2F62               	goto	u6321
  9842  0F61  2F63               	goto	u6320
  9843  0F62                     u6321:
  9844  0F62  2F64               	goto	l3828
  9845  0F63                     u6320:
  9846  0F63  2F58               	goto	l3824
  9847  0F64                     l3828:
  9848  0F64  1683               	bsf	3,5	;RP0=1, select bank1
  9849  0F65  1303               	bcf	3,6	;RP1=0, select bank1
  9850  0F66  0829               	movf	___fladd@aexp^(0+128),w
  9851  0F67  1903               	btfsc	3,2
  9852  0F68  2F6A               	goto	u6331
  9853  0F69  2F6B               	goto	u6330
  9854  0F6A                     u6331:
  9855  0F6A  2FBF               	goto	l716
  9856  0F6B                     u6330:
  9857  0F6B                     l3830:
  9858  0F6B  3001               	movlw	1
  9859  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  9860  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  9861  0F6E  07E8               	addwf	___fladd@b,f
  9862  0F6F  3000               	movlw	0
  9863  0F70  1803               	skipnc
  9864  0F71  3001               	movlw	1
  9865  0F72  07E9               	addwf	___fladd@b+1,f
  9866  0F73  3000               	movlw	0
  9867  0F74  1803               	skipnc
  9868  0F75  3001               	movlw	1
  9869  0F76  07EA               	addwf	___fladd@b+2,f
  9870  0F77  3000               	movlw	0
  9871  0F78  1803               	skipnc
  9872  0F79  3001               	movlw	1
  9873  0F7A  07EB               	addwf	___fladd@b+3,f
  9874  0F7B                     l3832:
  9875  0F7B  1C6B               	btfss	___fladd@b+3,0
  9876  0F7C  2F7E               	goto	u6341
  9877  0F7D  2F7F               	goto	u6340
  9878  0F7E                     u6341:
  9879  0F7E  2FBF               	goto	l716
  9880  0F7F                     u6340:
  9881  0F7F                     l3834:
  9882  0F7F  0868               	movf	___fladd@b,w
  9883  0F80  1683               	bsf	3,5	;RP0=1, select bank1
  9884  0F81  1303               	bcf	3,6	;RP1=0, select bank1
  9885  0F82  00A0               	movwf	??___fladd^(0+128)
  9886  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  9887  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  9888  0F85  0869               	movf	___fladd@b+1,w
  9889  0F86  1683               	bsf	3,5	;RP0=1, select bank1
  9890  0F87  1303               	bcf	3,6	;RP1=0, select bank1
  9891  0F88  00A1               	movwf	(??___fladd^(0+128)+1)
  9892  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  9893  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  9894  0F8B  086A               	movf	___fladd@b+2,w
  9895  0F8C  1683               	bsf	3,5	;RP0=1, select bank1
  9896  0F8D  1303               	bcf	3,6	;RP1=0, select bank1
  9897  0F8E  00A2               	movwf	(??___fladd^(0+128)+2)
  9898  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  9899  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  9900  0F91  086B               	movf	___fladd@b+3,w
  9901  0F92  1683               	bsf	3,5	;RP0=1, select bank1
  9902  0F93  1303               	bcf	3,6	;RP1=0, select bank1
  9903  0F94  00A3               	movwf	(??___fladd^(0+128)+3)
  9904  0F95  3001               	movlw	1
  9905  0F96  00A4               	movwf	(??___fladd+4)^(0+128)
  9906  0F97                     u6355:
  9907  0F97  0D23               	rlf	(??___fladd^(0+128)+3),w
  9908  0F98  0CA3               	rrf	(??___fladd^(0+128)+3),f
  9909  0F99  0CA2               	rrf	(??___fladd^(0+128)+2),f
  9910  0F9A  0CA1               	rrf	(??___fladd^(0+128)+1),f
  9911  0F9B  0CA0               	rrf	??___fladd^(0+128),f
  9912  0F9C                     u6350:
  9913  0F9C  0BA4               	decfsz	(??___fladd+4)^(0+128),f
  9914  0F9D  2F97               	goto	u6355
  9915  0F9E  0823               	movf	(??___fladd+3)^(0+128),w
  9916  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  9917  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  9918  0FA1  00EB               	movwf	___fladd@b+3
  9919  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  9920  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  9921  0FA4  0822               	movf	(??___fladd+2)^(0+128),w
  9922  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  9923  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  9924  0FA7  00EA               	movwf	___fladd@b+2
  9925  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  9926  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  9927  0FAA  0821               	movf	(??___fladd+1)^(0+128),w
  9928  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  9929  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  9930  0FAD  00E9               	movwf	___fladd@b+1
  9931  0FAE  1683               	bsf	3,5	;RP0=1, select bank1
  9932  0FAF  1303               	bcf	3,6	;RP1=0, select bank1
  9933  0FB0  0820               	movf	??___fladd^(0+128),w
  9934  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  9935  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  9936  0FB3  00E8               	movwf	___fladd@b
  9937  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  9938  0FB5  1303               	bcf	3,6	;RP1=0, select bank1
  9939  0FB6  0A2A               	incf	___fladd@bexp^(0+128),w
  9940  0FB7  1903               	btfsc	3,2
  9941  0FB8  2FBA               	goto	u6361
  9942  0FB9  2FBB               	goto	u6360
  9943  0FBA                     u6361:
  9944  0FBA  2FBF               	goto	l716
  9945  0FBB                     u6360:
  9946  0FBB                     l3836:
  9947  0FBB  3001               	movlw	1
  9948  0FBC  00A0               	movwf	??___fladd^(0+128)
  9949  0FBD  0820               	movf	??___fladd^(0+128),w
  9950  0FBE  07AA               	addwf	___fladd@bexp^(0+128),f
  9951  0FBF                     l716:
  9952  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  9953  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  9954  0FC1  0A2A               	incf	___fladd@bexp^(0+128),w
  9955  0FC2  1903               	btfsc	3,2
  9956  0FC3  2FC5               	goto	u6371
  9957  0FC4  2FC6               	goto	u6370
  9958  0FC5                     u6371:
  9959  0FC5  2FCB               	goto	l3840
  9960  0FC6                     u6370:
  9961  0FC6                     l3838:
  9962  0FC6  082A               	movf	___fladd@bexp^(0+128),w
  9963  0FC7  1D03               	btfss	3,2
  9964  0FC8  2FCA               	goto	u6381
  9965  0FC9  2FCB               	goto	u6380
  9966  0FCA                     u6381:
  9967  0FCA  2FDD               	goto	l3846
  9968  0FCB                     u6380:
  9969  0FCB                     l3840:
  9970  0FCB  3000               	movlw	0
  9971  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  9972  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  9973  0FCE  00EB               	movwf	___fladd@b+3
  9974  0FCF  3000               	movlw	0
  9975  0FD0  00EA               	movwf	___fladd@b+2
  9976  0FD1  3000               	movlw	0
  9977  0FD2  00E9               	movwf	___fladd@b+1
  9978  0FD3  3000               	movlw	0
  9979  0FD4  00E8               	movwf	___fladd@b
  9980  0FD5                     l3842:
  9981  0FD5  1683               	bsf	3,5	;RP0=1, select bank1
  9982  0FD6  1303               	bcf	3,6	;RP1=0, select bank1
  9983  0FD7  082A               	movf	___fladd@bexp^(0+128),w
  9984  0FD8  1D03               	btfss	3,2
  9985  0FD9  2FDB               	goto	u6391
  9986  0FDA  2FDC               	goto	u6390
  9987  0FDB                     u6391:
  9988  0FDB  2FDD               	goto	l3846
  9989  0FDC                     u6390:
  9990  0FDC                     l3844:
  9991  0FDC  01A8               	clrf	___fladd@signs^(0+128)
  9992  0FDD                     l3846:
  9993  0FDD  1C2A               	btfss	___fladd@bexp^(0+128),0
  9994  0FDE  2FE0               	goto	u6401
  9995  0FDF  2FE1               	goto	u6400
  9996  0FE0                     u6401:
  9997  0FE0  2FE5               	goto	l3850
  9998  0FE1                     u6400:
  9999  0FE1                     l3848:
 10000  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
 10001  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
 10002  0FE3  17EA               	bsf	___fladd@b+2,7
 10003  0FE4  2FEB               	goto	l724
 10004  0FE5                     l3850:
 10005  0FE5  307F               	movlw	127
 10006  0FE6  00A0               	movwf	??___fladd^(0+128)
 10007  0FE7  0820               	movf	??___fladd^(0+128),w
 10008  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
 10009  0FE9  1303               	bcf	3,6	;RP1=0, select bank0
 10010  0FEA  05EA               	andwf	___fladd@b+2,f
 10011  0FEB                     l724:
 10012  0FEB  1683               	bsf	3,5	;RP0=1, select bank1
 10013  0FEC  1303               	bcf	3,6	;RP1=0, select bank1
 10014  0FED  082A               	movf	___fladd@bexp^(0+128),w
 10015  0FEE  00A0               	movwf	??___fladd^(0+128)
 10016  0FEF  1003               	clrc
 10017  0FF0  0C20               	rrf	??___fladd^(0+128),w
 10018  0FF1  00A1               	movwf	(??___fladd+1)^(0+128)
 10019  0FF2  0821               	movf	(??___fladd+1)^(0+128),w
 10020  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
 10021  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
 10022  0FF5  00EB               	movwf	___fladd@b+3
 10023  0FF6                     l3852:
 10024  0FF6  1683               	bsf	3,5	;RP0=1, select bank1
 10025  0FF7  1303               	bcf	3,6	;RP1=0, select bank1
 10026  0FF8  1FA8               	btfss	___fladd@signs^(0+128),7
 10027  0FF9  2FFB               	goto	u6411
 10028  0FFA  2FFC               	goto	u6410
 10029  0FFB                     u6411:
 10030  0FFB  2FFF               	goto	l725
 10031  0FFC                     u6410:
 10032  0FFC                     l3854:
 10033  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
 10034  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
 10035  0FFE  17EB               	bsf	___fladd@b+3,7
 10036  0FFF                     l725:
 10037  0FFF                     l695:
 10038  0FFF  0008               	return
 10039  1000                     __end_of___fladd:
 10040                           
 10041                           	psect	text33
 10042  1AC3                     __ptext33:	
 10043 ;; *************** function _ISR *****************
 10044 ;; Defined at:
 10045 ;;		line 149 in file "main.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;		None
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;		None
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  1    wreg      void 
 10052 ;; Registers used:
 10053 ;;		wreg, status,2
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10059 ;;      Params:         0       0       0       0       0
 10060 ;;      Locals:         0       0       0       0       0
 10061 ;;      Temps:          4       0       0       0       0
 10062 ;;      Totals:         4       0       0       0       0
 10063 ;;Total ram usage:        4 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; This function calls:
 10066 ;;		Nothing
 10067 ;; This function is called by:
 10068 ;;		Interrupt level 1
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           
 10073                           ;psect for function _ISR
 10074  1AC3                     _ISR:
 10075  1AC3                     i1l3436:
 10076                           
 10077                           ;main.c: 151: 
 10078  1AC3  1C0B               	btfss	11,0	;volatile
 10079  1AC4  2AC6               	goto	u551_21
 10080  1AC5  2AC7               	goto	u551_20
 10081  1AC6                     u551_21:
 10082  1AC6  2AE4               	goto	i1l3448
 10083  1AC7                     u551_20:
 10084  1AC7                     i1l3438:
 10085                           
 10086                           ;main.c: 152:     if(INTF == 1);main.c: 153:     {
 10087  1AC7  1283               	bcf	3,5	;RP0=0, select bank0
 10088  1AC8  1303               	bcf	3,6	;RP1=0, select bank0
 10089  1AC9  1E06               	btfss	6,4	;volatile
 10090  1ACA  2ACC               	goto	u552_21
 10091  1ACB  2ACD               	goto	u552_20
 10092  1ACC                     u552_21:
 10093  1ACC  2AD5               	goto	i1l3442
 10094  1ACD                     u552_20:
 10095  1ACD                     i1l3440:
 10096                           
 10097                           ;main.c: 154:         _delay((unsigned long)((5000)*(4000000/4000000.0)));;main.c: 155: 
      +                                  RD0 = 1;
 10098  1ACD  3001               	movlw	1
 10099  1ACE  1683               	bsf	3,5	;RP0=1, select bank3
 10100  1ACF  1703               	bsf	3,6	;RP1=1, select bank3
 10101  1AD0  07AF               	addwf	_tmp^(0+384),f
 10102  1AD1  1803               	skipnc
 10103  1AD2  0AB0               	incf	(_tmp+1)^(0+384),f
 10104  1AD3  3000               	movlw	0
 10105  1AD4  07B0               	addwf	(_tmp+1)^(0+384),f
 10106  1AD5                     i1l3442:
 10107                           
 10108                           ;main.c: 157:         RD0 = 0;
 10109  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
 10110  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
 10111  1AD7  1E86               	btfss	6,5	;volatile
 10112  1AD8  2ADA               	goto	u553_21
 10113  1AD9  2ADB               	goto	u553_20
 10114  1ADA                     u553_21:
 10115  1ADA  2AE3               	goto	i1l3446
 10116  1ADB                     u553_20:
 10117  1ADB                     i1l3444:
 10118                           
 10119                           ;main.c: 158:         INTF = 0;;main.c: 159:     }
 10120  1ADB  30FF               	movlw	255
 10121  1ADC  1683               	bsf	3,5	;RP0=1, select bank3
 10122  1ADD  1703               	bsf	3,6	;RP1=1, select bank3
 10123  1ADE  07AF               	addwf	_tmp^(0+384),f
 10124  1ADF  1803               	skipnc
 10125  1AE0  0AB0               	incf	(_tmp+1)^(0+384),f
 10126  1AE1  30FF               	movlw	255
 10127  1AE2  07B0               	addwf	(_tmp+1)^(0+384),f
 10128  1AE3                     i1l3446:
 10129  1AE3  100B               	bcf	11,0	;volatile
 10130  1AE4                     i1l3448:
 10131  1AE4  1283               	bcf	3,5	;RP0=0, select bank0
 10132  1AE5  1303               	bcf	3,6	;RP1=0, select bank0
 10133  1AE6  1C0C               	btfss	12,0	;volatile
 10134  1AE7  2AE9               	goto	u554_21
 10135  1AE8  2AEA               	goto	u554_20
 10136  1AE9                     u554_21:
 10137  1AE9  2B0B               	goto	i1l3460
 10138  1AEA                     u554_20:
 10139  1AEA                     i1l3450:
 10140  1AEA  30FC               	movlw	252
 10141  1AEB  008F               	movwf	15	;volatile
 10142  1AEC  3018               	movlw	24
 10143  1AED  008E               	movwf	14	;volatile
 10144  1AEE                     i1l3452:
 10145  1AEE  3001               	movlw	1
 10146  1AEF  07F6               	addwf	_count,f
 10147  1AF0  1803               	skipnc
 10148  1AF1  0AF7               	incf	_count+1,f
 10149  1AF2  3000               	movlw	0
 10150  1AF3  07F7               	addwf	_count+1,f
 10151  1AF4  0877               	movf	_count+1,w
 10152  1AF5  1683               	bsf	3,5	;RP0=1, select bank1
 10153  1AF6  1303               	bcf	3,6	;RP1=0, select bank1
 10154  1AF7  066B               	xorwf	(_T+1)^(0+128),w
 10155  1AF8  1D03               	skipz
 10156  1AF9  2AFC               	goto	u555_25
 10157  1AFA  0876               	movf	_count,w
 10158  1AFB  066A               	xorwf	_T^(0+128),w
 10159  1AFC                     u555_25:
 10160  1AFC  1D03               	skipz
 10161  1AFD  2AFF               	goto	u555_21
 10162  1AFE  2B00               	goto	u555_20
 10163  1AFF                     u555_21:
 10164  1AFF  2B08               	goto	i1l3458
 10165  1B00                     u555_20:
 10166  1B00                     i1l3454:
 10167  1B00  3001               	movlw	1
 10168  1B01  1683               	bsf	3,5	;RP0=1, select bank3
 10169  1B02  1703               	bsf	3,6	;RP1=1, select bank3
 10170  1B03  00AD               	movwf	_samp^(0+384)
 10171  1B04  3000               	movlw	0
 10172  1B05  00AE               	movwf	(_samp^(0+384)+1)
 10173  1B06                     i1l3456:
 10174  1B06  01F6               	clrf	_count
 10175  1B07  01F7               	clrf	_count+1
 10176  1B08                     i1l3458:
 10177  1B08  1283               	bcf	3,5	;RP0=0, select bank0
 10178  1B09  1303               	bcf	3,6	;RP1=0, select bank0
 10179  1B0A  100C               	bcf	12,0	;volatile
 10180  1B0B                     i1l3460:
 10181  1B0B  1C8B               	btfss	11,1	;volatile
 10182  1B0C  2B0E               	goto	u556_21
 10183  1B0D  2B0F               	goto	u556_20
 10184  1B0E                     u556_21:
 10185  1B0E  2B22               	goto	i1l176
 10186  1B0F                     u556_20:
 10187  1B0F                     i1l3462:
 10188  1B0F  3007               	movlw	7
 10189  1B10  00F1               	movwf	??_ISR+1
 10190  1B11  307D               	movlw	125
 10191  1B12  00F0               	movwf	??_ISR
 10192  1B13                     u835_27:
 10193  1B13  0BF0               	decfsz	??_ISR,f
 10194  1B14  2B13               	goto	u835_27
 10195  1B15  0BF1               	decfsz	??_ISR+1,f
 10196  1B16  2B13               	goto	u835_27
 10197  1B17                     i1l3464:
 10198  1B17  1283               	bcf	3,5	;RP0=0, select bank0
 10199  1B18  1303               	bcf	3,6	;RP1=0, select bank0
 10200  1B19  1408               	bsf	8,0	;volatile
 10201  1B1A  3003               	movlw	3
 10202  1B1B  00F0               	movwf	??_ISR
 10203  1B1C                     u836_27:
 10204  1B1C  0BF0               	decfsz	??_ISR,f
 10205  1B1D  2B1C               	goto	u836_27
 10206  1B1E                     i1l3466:
 10207  1B1E  1283               	bcf	3,5	;RP0=0, select bank0
 10208  1B1F  1303               	bcf	3,6	;RP1=0, select bank0
 10209  1B20  1008               	bcf	8,0	;volatile
 10210  1B21                     i1l3468:
 10211  1B21  108B               	bcf	11,1	;volatile
 10212  1B22                     i1l176:
 10213  1B22  0873               	movf	??_ISR+3,w
 10214  1B23  008A               	movwf	10
 10215  1B24  0E72               	swapf	??_ISR+2,w
 10216  1B25  0083               	movwf	3
 10217  1B26  0EFE               	swapf	btemp,f
 10218  1B27  0E7E               	swapf	btemp,w
 10219  1B28  0009               	retfie
 10220  1B29                     __end_of_ISR:
 10221  007E                     btemp	set	126	;btemp
 10222  007E                     wtemp0	set	126
 10223                           
 10224                           	psect	intentry
 10225  0000                     __pintentry:	
 10226                           ;incstack = 0
 10227                           ; Regs used in _ISR: [wreg+status,2]
 10228                           
 10229  0000                     interrupt_function:
 10230  007E                     saved_w	set	btemp
 10231  0000  00FE               	movwf	btemp
 10232  0001  0E03               	swapf	3,w
 10233  0002  00F2               	movwf	??_ISR+2
 10234  0003  080A               	movf	10,w
 10235  0004  00F3               	movwf	??_ISR+3
 10236  0005  160A  158A  2AC3   	ljmp	_ISR
 10237                           
 10238                           	psect	config
 10239                           
 10240                           ;Config register CONFIG @ 0x2007
 10241                           ;	Oscillator Selection bits
 10242                           ;	FOSC = XT, XT oscillator
 10243                           ;	Watchdog Timer Enable bit
 10244                           ;	WDTE = OFF, WDT disabled
 10245                           ;	Power-up Timer Enable bit
 10246                           ;	PWRTE = ON, PWRT enabled
 10247                           ;	Brown-out Reset Enable bit
 10248                           ;	BOREN = ON, BOR enabled
 10249                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10250                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10251                           ;	Data EEPROM Memory Code Protection bit
 10252                           ;	CPD = OFF, Data EEPROM code protection off
 10253                           ;	Flash Program Memory Write Enable bits
 10254                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10255                           ;	In-Circuit Debugger Mode bit
 10256                           ;	DEBUG = 0x1, unprogrammed default
 10257                           ;	Flash Program Memory Code Protection bit
 10258                           ;	CP = OFF, Code protection off
 10259  2007                     	org	8199
 10260  2007  3F71               	dw	16241
 10261                           
 10262                           	psect	text1_split_1
 10263  0238                     u8040:
 10264  0238                     l4540:
 10265  0238  1683               	bsf	3,5	;RP0=1, select bank3
 10266  0239  1703               	bsf	3,6	;RP1=1, select bank3
 10267  023A  0827               	movf	(sprintf@fval+3)^(0+384),w
 10268  023B  1283               	bcf	3,5	;RP0=0, select bank0
 10269  023C  1303               	bcf	3,6	;RP1=0, select bank0
 10270  023D  00A3               	movwf	___fleq@ff1+3
 10271  023E  1683               	bsf	3,5	;RP0=1, select bank3
 10272  023F  1703               	bsf	3,6	;RP1=1, select bank3
 10273  0240  0826               	movf	(sprintf@fval+2)^(0+384),w
 10274  0241  1283               	bcf	3,5	;RP0=0, select bank0
 10275  0242  1303               	bcf	3,6	;RP1=0, select bank0
 10276  0243  00A2               	movwf	___fleq@ff1+2
 10277  0244  1683               	bsf	3,5	;RP0=1, select bank3
 10278  0245  1703               	bsf	3,6	;RP1=1, select bank3
 10279  0246  0825               	movf	(sprintf@fval+1)^(0+384),w
 10280  0247  1283               	bcf	3,5	;RP0=0, select bank0
 10281  0248  1303               	bcf	3,6	;RP1=0, select bank0
 10282  0249  00A1               	movwf	___fleq@ff1+1
 10283  024A  1683               	bsf	3,5	;RP0=1, select bank3
 10284  024B  1703               	bsf	3,6	;RP1=1, select bank3
 10285  024C  0824               	movf	sprintf@fval^(0+384),w
 10286  024D  1283               	bcf	3,5	;RP0=0, select bank0
 10287  024E  1303               	bcf	3,6	;RP1=0, select bank0
 10288  024F  00A0               	movwf	___fleq@ff1
 10289  0250  3000               	movlw	0
 10290  0251  00A7               	movwf	___fleq@ff2+3
 10291  0252  3000               	movlw	0
 10292  0253  00A6               	movwf	___fleq@ff2+2
 10293  0254  3000               	movlw	0
 10294  0255  00A5               	movwf	___fleq@ff2+1
 10295  0256  3000               	movlw	0
 10296  0257  00A4               	movwf	___fleq@ff2
 10297  0258  160A  158A  216A  120A  118A  	fcall	___fleq
 10298  025D  1803               	btfsc	3,0
 10299  025E  2A60               	goto	u8051
 10300  025F  2A61               	goto	u8050
 10301  0260                     u8051:
 10302  0260  2B43               	goto	l4560
 10303  0261                     u8050:
 10304  0261                     l4542:
 10305  0261  1683               	bsf	3,5	;RP0=1, select bank3
 10306  0262  1703               	bsf	3,6	;RP1=1, select bank3
 10307  0263  0827               	movf	(sprintf@fval+3)^(0+384),w
 10308  0264  1683               	bsf	3,5	;RP0=1, select bank1
 10309  0265  1303               	bcf	3,6	;RP1=0, select bank1
 10310  0266  00B7               	movwf	(___fltol@f1+3)^(0+128)
 10311  0267  1683               	bsf	3,5	;RP0=1, select bank3
 10312  0268  1703               	bsf	3,6	;RP1=1, select bank3
 10313  0269  0826               	movf	(sprintf@fval+2)^(0+384),w
 10314  026A  1683               	bsf	3,5	;RP0=1, select bank1
 10315  026B  1303               	bcf	3,6	;RP1=0, select bank1
 10316  026C  00B6               	movwf	(___fltol@f1+2)^(0+128)
 10317  026D  1683               	bsf	3,5	;RP0=1, select bank3
 10318  026E  1703               	bsf	3,6	;RP1=1, select bank3
 10319  026F  0825               	movf	(sprintf@fval+1)^(0+384),w
 10320  0270  1683               	bsf	3,5	;RP0=1, select bank1
 10321  0271  1303               	bcf	3,6	;RP1=0, select bank1
 10322  0272  00B5               	movwf	(___fltol@f1+1)^(0+128)
 10323  0273  1683               	bsf	3,5	;RP0=1, select bank3
 10324  0274  1703               	bsf	3,6	;RP1=1, select bank3
 10325  0275  0824               	movf	sprintf@fval^(0+384),w
 10326  0276  1683               	bsf	3,5	;RP0=1, select bank1
 10327  0277  1303               	bcf	3,6	;RP1=0, select bank1
 10328  0278  00B4               	movwf	___fltol@f1^(0+128)
 10329  0279  160A  158A  23FA  120A  118A  	fcall	___fltol
 10330  027E  1683               	bsf	3,5	;RP0=1, select bank1
 10331  027F  1303               	bcf	3,6	;RP1=0, select bank1
 10332  0280  0837               	movf	(?___fltol+3)^(0+128),w
 10333  0281  0436               	iorwf	(?___fltol+2)^(0+128),w
 10334  0282  0435               	iorwf	(?___fltol+1)^(0+128),w
 10335  0283  0434               	iorwf	?___fltol^(0+128),w
 10336  0284  1D03               	skipz
 10337  0285  2A87               	goto	u8061
 10338  0286  2A88               	goto	u8060
 10339  0287                     u8061:
 10340  0287  2B43               	goto	l4560
 10341  0288                     u8060:
 10342  0288                     l4544:
 10343  0288  1683               	bsf	3,5	;RP0=1, select bank3
 10344  0289  1703               	bsf	3,6	;RP1=1, select bank3
 10345  028A  081C               	movf	(sprintf@eexp+1)^(0+384),w
 10346  028B  3A80               	xorlw	128
 10347  028C  00FF               	movwf	btemp+1
 10348  028D  3080               	movlw	128
 10349  028E  027F               	subwf	btemp+1,w
 10350  028F  1D03               	skipz
 10351  0290  2A93               	goto	u8075
 10352  0291  3002               	movlw	2
 10353  0292  021B               	subwf	sprintf@eexp^(0+384),w
 10354  0293                     u8075:
 10355  0293  1C03               	skipc
 10356  0294  2A96               	goto	u8071
 10357  0295  2A97               	goto	u8070
 10358  0296                     u8071:
 10359  0296  2B43               	goto	l4560
 10360  0297                     u8070:
 10361  0297                     l4546:
 10362                           
 10363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10364  0297  1683               	bsf	3,5	;RP0=1, select bank3
 10365  0298  1703               	bsf	3,6	;RP1=1, select bank3
 10366  0299  0820               	movf	(sprintf@tmpval+3)^(0+384),w
 10367  029A  1283               	bcf	3,5	;RP0=0, select bank0
 10368  029B  1303               	bcf	3,6	;RP1=0, select bank0
 10369  029C  00A3               	movwf	___flge@ff1+3
 10370  029D  1683               	bsf	3,5	;RP0=1, select bank3
 10371  029E  1703               	bsf	3,6	;RP1=1, select bank3
 10372  029F  081F               	movf	(sprintf@tmpval+2)^(0+384),w
 10373  02A0  1283               	bcf	3,5	;RP0=0, select bank0
 10374  02A1  1303               	bcf	3,6	;RP1=0, select bank0
 10375  02A2  00A2               	movwf	___flge@ff1+2
 10376  02A3  1683               	bsf	3,5	;RP0=1, select bank3
 10377  02A4  1703               	bsf	3,6	;RP1=1, select bank3
 10378  02A5  081E               	movf	(sprintf@tmpval+1)^(0+384),w
 10379  02A6  1283               	bcf	3,5	;RP0=0, select bank0
 10380  02A7  1303               	bcf	3,6	;RP1=0, select bank0
 10381  02A8  00A1               	movwf	___flge@ff1+1
 10382  02A9  1683               	bsf	3,5	;RP0=1, select bank3
 10383  02AA  1703               	bsf	3,6	;RP1=1, select bank3
 10384  02AB  081D               	movf	sprintf@tmpval^(0+384),w
 10385  02AC  1283               	bcf	3,5	;RP0=0, select bank0
 10386  02AD  1303               	bcf	3,6	;RP1=0, select bank0
 10387  02AE  00A0               	movwf	___flge@ff1
 10388  02AF  3040               	movlw	64
 10389  02B0  00A7               	movwf	___flge@ff2+3
 10390  02B1  3089               	movlw	137
 10391  02B2  00A6               	movwf	___flge@ff2+2
 10392  02B3  3070               	movlw	112
 10393  02B4  00A5               	movwf	___flge@ff2+1
 10394  02B5  305F               	movlw	95
 10395  02B6  00A4               	movwf	___flge@ff2
 10396  02B7  160A  158A  2476  120A  118A  	fcall	___flge
 10397  02BC  1803               	btfsc	3,0
 10398  02BD  2ABF               	goto	u8081
 10399  02BE  2AC0               	goto	u8080
 10400  02BF                     u8081:
 10401  02BF  2AC9               	goto	l4550
 10402  02C0                     u8080:
 10403  02C0                     l4548:
 10404                           
 10405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10406  02C0  30F7               	movlw	247
 10407  02C1  1683               	bsf	3,5	;RP0=1, select bank3
 10408  02C2  1703               	bsf	3,6	;RP1=1, select bank3
 10409  02C3  079B               	addwf	sprintf@eexp^(0+384),f
 10410  02C4  1803               	skipnc
 10411  02C5  0A9C               	incf	(sprintf@eexp+1)^(0+384),f
 10412  02C6  30FF               	movlw	255
 10413  02C7  079C               	addwf	(sprintf@eexp+1)^(0+384),f
 10414                           
 10415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10416  02C8  2AD1               	goto	l4552
 10417  02C9                     l4550:
 10418                           
 10419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10420  02C9  30F8               	movlw	248
 10421  02CA  1683               	bsf	3,5	;RP0=1, select bank3
 10422  02CB  1703               	bsf	3,6	;RP1=1, select bank3
 10423  02CC  079B               	addwf	sprintf@eexp^(0+384),f
 10424  02CD  1803               	skipnc
 10425  02CE  0A9C               	incf	(sprintf@eexp+1)^(0+384),f
 10426  02CF  30FF               	movlw	255
 10427  02D0  079C               	addwf	(sprintf@eexp+1)^(0+384),f
 10428  02D1                     l4552:
 10429                           
 10430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10431  02D1  081B               	movf	sprintf@eexp^(0+384),w
 10432  02D2  120A  158A  2119  120A  118A  	fcall	_scale
 10433  02D7  1283               	bcf	3,5	;RP0=0, select bank0
 10434  02D8  1303               	bcf	3,6	;RP1=0, select bank0
 10435  02D9  0857               	movf	?_scale+3,w
 10436  02DA  1683               	bsf	3,5	;RP0=1, select bank3
 10437  02DB  1703               	bsf	3,6	;RP1=1, select bank3
 10438  02DC  00A0               	movwf	(sprintf@tmpval+3)^(0+384)
 10439  02DD  1283               	bcf	3,5	;RP0=0, select bank0
 10440  02DE  1303               	bcf	3,6	;RP1=0, select bank0
 10441  02DF  0856               	movf	?_scale+2,w
 10442  02E0  1683               	bsf	3,5	;RP0=1, select bank3
 10443  02E1  1703               	bsf	3,6	;RP1=1, select bank3
 10444  02E2  009F               	movwf	(sprintf@tmpval+2)^(0+384)
 10445  02E3  1283               	bcf	3,5	;RP0=0, select bank0
 10446  02E4  1303               	bcf	3,6	;RP1=0, select bank0
 10447  02E5  0855               	movf	?_scale+1,w
 10448  02E6  1683               	bsf	3,5	;RP0=1, select bank3
 10449  02E7  1703               	bsf	3,6	;RP1=1, select bank3
 10450  02E8  009E               	movwf	(sprintf@tmpval+1)^(0+384)
 10451  02E9  1283               	bcf	3,5	;RP0=0, select bank0
 10452  02EA  1303               	bcf	3,6	;RP1=0, select bank0
 10453  02EB  0854               	movf	?_scale,w
 10454  02EC  1683               	bsf	3,5	;RP0=1, select bank3
 10455  02ED  1703               	bsf	3,6	;RP1=1, select bank3
 10456  02EE  009D               	movwf	sprintf@tmpval^(0+384)
 10457  02EF                     l4554:
 10458  02EF  0827               	movf	(sprintf@fval+3)^(0+384),w
 10459  02F0  1283               	bcf	3,5	;RP0=0, select bank0
 10460  02F1  1303               	bcf	3,6	;RP1=0, select bank0
 10461  02F2  00A3               	movwf	__div_to_l_@f1+3
 10462  02F3  1683               	bsf	3,5	;RP0=1, select bank3
 10463  02F4  1703               	bsf	3,6	;RP1=1, select bank3
 10464  02F5  0826               	movf	(sprintf@fval+2)^(0+384),w
 10465  02F6  1283               	bcf	3,5	;RP0=0, select bank0
 10466  02F7  1303               	bcf	3,6	;RP1=0, select bank0
 10467  02F8  00A2               	movwf	__div_to_l_@f1+2
 10468  02F9  1683               	bsf	3,5	;RP0=1, select bank3
 10469  02FA  1703               	bsf	3,6	;RP1=1, select bank3
 10470  02FB  0825               	movf	(sprintf@fval+1)^(0+384),w
 10471  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10472  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10473  02FE  00A1               	movwf	__div_to_l_@f1+1
 10474  02FF  1683               	bsf	3,5	;RP0=1, select bank3
 10475  0300  1703               	bsf	3,6	;RP1=1, select bank3
 10476  0301  0824               	movf	sprintf@fval^(0+384),w
 10477  0302  1283               	bcf	3,5	;RP0=0, select bank0
 10478  0303  1303               	bcf	3,6	;RP1=0, select bank0
 10479  0304  00A0               	movwf	__div_to_l_@f1
 10480  0305  1683               	bsf	3,5	;RP0=1, select bank3
 10481  0306  1703               	bsf	3,6	;RP1=1, select bank3
 10482  0307  0820               	movf	(sprintf@tmpval+3)^(0+384),w
 10483  0308  1283               	bcf	3,5	;RP0=0, select bank0
 10484  0309  1303               	bcf	3,6	;RP1=0, select bank0
 10485  030A  00A7               	movwf	__div_to_l_@f2+3
 10486  030B  1683               	bsf	3,5	;RP0=1, select bank3
 10487  030C  1703               	bsf	3,6	;RP1=1, select bank3
 10488  030D  081F               	movf	(sprintf@tmpval+2)^(0+384),w
 10489  030E  1283               	bcf	3,5	;RP0=0, select bank0
 10490  030F  1303               	bcf	3,6	;RP1=0, select bank0
 10491  0310  00A6               	movwf	__div_to_l_@f2+2
 10492  0311  1683               	bsf	3,5	;RP0=1, select bank3
 10493  0312  1703               	bsf	3,6	;RP1=1, select bank3
 10494  0313  081E               	movf	(sprintf@tmpval+1)^(0+384),w
 10495  0314  1283               	bcf	3,5	;RP0=0, select bank0
 10496  0315  1303               	bcf	3,6	;RP1=0, select bank0
 10497  0316  00A5               	movwf	__div_to_l_@f2+1
 10498  0317  1683               	bsf	3,5	;RP0=1, select bank3
 10499  0318  1703               	bsf	3,6	;RP1=1, select bank3
 10500  0319  081D               	movf	sprintf@tmpval^(0+384),w
 10501  031A  1283               	bcf	3,5	;RP0=0, select bank0
 10502  031B  1303               	bcf	3,6	;RP1=0, select bank0
 10503  031C  00A4               	movwf	__div_to_l_@f2
 10504  031D  160A  158A  2742  120A  118A  	fcall	__div_to_l_
 10505  0322  1283               	bcf	3,5	;RP0=0, select bank0
 10506  0323  1303               	bcf	3,6	;RP1=0, select bank0
 10507  0324  0823               	movf	?__div_to_l_+3,w
 10508  0325  1683               	bsf	3,5	;RP0=1, select bank3
 10509  0326  1703               	bsf	3,6	;RP1=1, select bank3
 10510  0327  009A               	movwf	(sprintf@val+3)^(0+384)
 10511  0328  1283               	bcf	3,5	;RP0=0, select bank0
 10512  0329  1303               	bcf	3,6	;RP1=0, select bank0
 10513  032A  0822               	movf	?__div_to_l_+2,w
 10514  032B  1683               	bsf	3,5	;RP0=1, select bank3
 10515  032C  1703               	bsf	3,6	;RP1=1, select bank3
 10516  032D  0099               	movwf	(sprintf@val+2)^(0+384)
 10517  032E  1283               	bcf	3,5	;RP0=0, select bank0
 10518  032F  1303               	bcf	3,6	;RP1=0, select bank0
 10519  0330  0821               	movf	?__div_to_l_+1,w
 10520  0331  1683               	bsf	3,5	;RP0=1, select bank3
 10521  0332  1703               	bsf	3,6	;RP1=1, select bank3
 10522  0333  0098               	movwf	(sprintf@val+1)^(0+384)
 10523  0334  1283               	bcf	3,5	;RP0=0, select bank0
 10524  0335  1303               	bcf	3,6	;RP1=0, select bank0
 10525  0336  0820               	movf	?__div_to_l_,w
 10526  0337  1683               	bsf	3,5	;RP0=1, select bank3
 10527  0338  1703               	bsf	3,6	;RP1=1, select bank3
 10528  0339  0097               	movwf	sprintf@val^(0+384)
 10529  033A                     l4558:
 10530                           
 10531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10532  033A  3000               	movlw	0
 10533  033B  00A7               	movwf	(sprintf@fval+3)^(0+384)
 10534  033C  3000               	movlw	0
 10535  033D  00A6               	movwf	(sprintf@fval+2)^(0+384)
 10536  033E  3000               	movlw	0
 10537  033F  00A5               	movwf	(sprintf@fval+1)^(0+384)
 10538  0340  3000               	movlw	0
 10539  0341  00A4               	movwf	sprintf@fval^(0+384)
 10540                           
 10541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10542  0342  2BE3               	goto	l4566
 10543  0343                     l4560:
 10544                           
 10545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10546  0343  1683               	bsf	3,5	;RP0=1, select bank3
 10547  0344  1703               	bsf	3,6	;RP1=1, select bank3
 10548  0345  0827               	movf	(sprintf@fval+3)^(0+384),w
 10549  0346  1683               	bsf	3,5	;RP0=1, select bank1
 10550  0347  1303               	bcf	3,6	;RP1=0, select bank1
 10551  0348  00B7               	movwf	(___fltol@f1+3)^(0+128)
 10552  0349  1683               	bsf	3,5	;RP0=1, select bank3
 10553  034A  1703               	bsf	3,6	;RP1=1, select bank3
 10554  034B  0826               	movf	(sprintf@fval+2)^(0+384),w
 10555  034C  1683               	bsf	3,5	;RP0=1, select bank1
 10556  034D  1303               	bcf	3,6	;RP1=0, select bank1
 10557  034E  00B6               	movwf	(___fltol@f1+2)^(0+128)
 10558  034F  1683               	bsf	3,5	;RP0=1, select bank3
 10559  0350  1703               	bsf	3,6	;RP1=1, select bank3
 10560  0351  0825               	movf	(sprintf@fval+1)^(0+384),w
 10561  0352  1683               	bsf	3,5	;RP0=1, select bank1
 10562  0353  1303               	bcf	3,6	;RP1=0, select bank1
 10563  0354  00B5               	movwf	(___fltol@f1+1)^(0+128)
 10564  0355  1683               	bsf	3,5	;RP0=1, select bank3
 10565  0356  1703               	bsf	3,6	;RP1=1, select bank3
 10566  0357  0824               	movf	sprintf@fval^(0+384),w
 10567  0358  1683               	bsf	3,5	;RP0=1, select bank1
 10568  0359  1303               	bcf	3,6	;RP1=0, select bank1
 10569  035A  00B4               	movwf	___fltol@f1^(0+128)
 10570  035B  160A  158A  23FA  120A  118A  	fcall	___fltol
 10571  0360  1683               	bsf	3,5	;RP0=1, select bank1
 10572  0361  1303               	bcf	3,6	;RP1=0, select bank1
 10573  0362  0837               	movf	(?___fltol+3)^(0+128),w
 10574  0363  1683               	bsf	3,5	;RP0=1, select bank3
 10575  0364  1703               	bsf	3,6	;RP1=1, select bank3
 10576  0365  009A               	movwf	(sprintf@val+3)^(0+384)
 10577  0366  1683               	bsf	3,5	;RP0=1, select bank1
 10578  0367  1303               	bcf	3,6	;RP1=0, select bank1
 10579  0368  0836               	movf	(?___fltol+2)^(0+128),w
 10580  0369  1683               	bsf	3,5	;RP0=1, select bank3
 10581  036A  1703               	bsf	3,6	;RP1=1, select bank3
 10582  036B  0099               	movwf	(sprintf@val+2)^(0+384)
 10583  036C  1683               	bsf	3,5	;RP0=1, select bank1
 10584  036D  1303               	bcf	3,6	;RP1=0, select bank1
 10585  036E  0835               	movf	(?___fltol+1)^(0+128),w
 10586  036F  1683               	bsf	3,5	;RP0=1, select bank3
 10587  0370  1703               	bsf	3,6	;RP1=1, select bank3
 10588  0371  0098               	movwf	(sprintf@val+1)^(0+384)
 10589  0372  1683               	bsf	3,5	;RP0=1, select bank1
 10590  0373  1303               	bcf	3,6	;RP1=0, select bank1
 10591  0374  0834               	movf	?___fltol^(0+128),w
 10592  0375  1683               	bsf	3,5	;RP0=1, select bank3
 10593  0376  1703               	bsf	3,6	;RP1=1, select bank3
 10594  0377  0097               	movwf	sprintf@val^(0+384)
 10595  0378                     l4562:
 10596                           
 10597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10598  0378  081A               	movf	(sprintf@val+3)^(0+384),w
 10599  0379  1283               	bcf	3,5	;RP0=0, select bank0
 10600  037A  1303               	bcf	3,6	;RP1=0, select bank0
 10601  037B  00AF               	movwf	___xxtofl@val+3
 10602  037C  1683               	bsf	3,5	;RP0=1, select bank3
 10603  037D  1703               	bsf	3,6	;RP1=1, select bank3
 10604  037E  0819               	movf	(sprintf@val+2)^(0+384),w
 10605  037F  1283               	bcf	3,5	;RP0=0, select bank0
 10606  0380  1303               	bcf	3,6	;RP1=0, select bank0
 10607  0381  00AE               	movwf	___xxtofl@val+2
 10608  0382  1683               	bsf	3,5	;RP0=1, select bank3
 10609  0383  1703               	bsf	3,6	;RP1=1, select bank3
 10610  0384  0818               	movf	(sprintf@val+1)^(0+384),w
 10611  0385  1283               	bcf	3,5	;RP0=0, select bank0
 10612  0386  1303               	bcf	3,6	;RP1=0, select bank0
 10613  0387  00AD               	movwf	___xxtofl@val+1
 10614  0388  1683               	bsf	3,5	;RP0=1, select bank3
 10615  0389  1703               	bsf	3,6	;RP1=1, select bank3
 10616  038A  0817               	movf	sprintf@val^(0+384),w
 10617  038B  1283               	bcf	3,5	;RP0=0, select bank0
 10618  038C  1303               	bcf	3,6	;RP1=0, select bank0
 10619  038D  00AC               	movwf	___xxtofl@val
 10620  038E  3000               	movlw	0
 10621  038F  160A  158A  25C9  120A  118A  	fcall	___xxtofl
 10622  0394  1283               	bcf	3,5	;RP0=0, select bank0
 10623  0395  1303               	bcf	3,6	;RP1=0, select bank0
 10624  0396  082F               	movf	?___xxtofl+3,w
 10625  0397  1683               	bsf	3,5	;RP0=1, select bank1
 10626  0398  1303               	bcf	3,6	;RP1=0, select bank1
 10627  0399  00AF               	movwf	(___flsub@a+3)^(0+128)
 10628  039A  1283               	bcf	3,5	;RP0=0, select bank0
 10629  039B  1303               	bcf	3,6	;RP1=0, select bank0
 10630  039C  082E               	movf	?___xxtofl+2,w
 10631  039D  1683               	bsf	3,5	;RP0=1, select bank1
 10632  039E  1303               	bcf	3,6	;RP1=0, select bank1
 10633  039F  00AE               	movwf	(___flsub@a+2)^(0+128)
 10634  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 10635  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 10636  03A2  082D               	movf	?___xxtofl+1,w
 10637  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 10638  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 10639  03A5  00AD               	movwf	(___flsub@a+1)^(0+128)
 10640  03A6  1283               	bcf	3,5	;RP0=0, select bank0
 10641  03A7  1303               	bcf	3,6	;RP1=0, select bank0
 10642  03A8  082C               	movf	?___xxtofl,w
 10643  03A9  1683               	bsf	3,5	;RP0=1, select bank1
 10644  03AA  1303               	bcf	3,6	;RP1=0, select bank1
 10645  03AB  00AC               	movwf	___flsub@a^(0+128)
 10646  03AC  1683               	bsf	3,5	;RP0=1, select bank3
 10647  03AD  1703               	bsf	3,6	;RP1=1, select bank3
 10648  03AE  0827               	movf	(sprintf@fval+3)^(0+384),w
 10649  03AF  1683               	bsf	3,5	;RP0=1, select bank1
 10650  03B0  1303               	bcf	3,6	;RP1=0, select bank1
 10651  03B1  00B3               	movwf	(___flsub@b+3)^(0+128)
 10652  03B2  1683               	bsf	3,5	;RP0=1, select bank3
 10653  03B3  1703               	bsf	3,6	;RP1=1, select bank3
 10654  03B4  0826               	movf	(sprintf@fval+2)^(0+384),w
 10655  03B5  1683               	bsf	3,5	;RP0=1, select bank1
 10656  03B6  1303               	bcf	3,6	;RP1=0, select bank1
 10657  03B7  00B2               	movwf	(___flsub@b+2)^(0+128)
 10658  03B8  1683               	bsf	3,5	;RP0=1, select bank3
 10659  03B9  1703               	bsf	3,6	;RP1=1, select bank3
 10660  03BA  0825               	movf	(sprintf@fval+1)^(0+384),w
 10661  03BB  1683               	bsf	3,5	;RP0=1, select bank1
 10662  03BC  1303               	bcf	3,6	;RP1=0, select bank1
 10663  03BD  00B1               	movwf	(___flsub@b+1)^(0+128)
 10664  03BE  1683               	bsf	3,5	;RP0=1, select bank3
 10665  03BF  1703               	bsf	3,6	;RP1=1, select bank3
 10666  03C0  0824               	movf	sprintf@fval^(0+384),w
 10667  03C1  1683               	bsf	3,5	;RP0=1, select bank1
 10668  03C2  1303               	bcf	3,6	;RP1=0, select bank1
 10669  03C3  00B0               	movwf	___flsub@b^(0+128)
 10670  03C4  160A  158A  211A  120A  118A  	fcall	___flsub
 10671  03C9  1683               	bsf	3,5	;RP0=1, select bank1
 10672  03CA  1303               	bcf	3,6	;RP1=0, select bank1
 10673  03CB  082F               	movf	(?___flsub+3)^(0+128),w
 10674  03CC  1683               	bsf	3,5	;RP0=1, select bank3
 10675  03CD  1703               	bsf	3,6	;RP1=1, select bank3
 10676  03CE  00A7               	movwf	(sprintf@fval+3)^(0+384)
 10677  03CF  1683               	bsf	3,5	;RP0=1, select bank1
 10678  03D0  1303               	bcf	3,6	;RP1=0, select bank1
 10679  03D1  082E               	movf	(?___flsub+2)^(0+128),w
 10680  03D2  1683               	bsf	3,5	;RP0=1, select bank3
 10681  03D3  1703               	bsf	3,6	;RP1=1, select bank3
 10682  03D4  00A6               	movwf	(sprintf@fval+2)^(0+384)
 10683  03D5  1683               	bsf	3,5	;RP0=1, select bank1
 10684  03D6  1303               	bcf	3,6	;RP1=0, select bank1
 10685  03D7  082D               	movf	(?___flsub+1)^(0+128),w
 10686  03D8  1683               	bsf	3,5	;RP0=1, select bank3
 10687  03D9  1703               	bsf	3,6	;RP1=1, select bank3
 10688  03DA  00A5               	movwf	(sprintf@fval+1)^(0+384)
 10689  03DB  1683               	bsf	3,5	;RP0=1, select bank1
 10690  03DC  1303               	bcf	3,6	;RP1=0, select bank1
 10691  03DD  082C               	movf	?___flsub^(0+128),w
 10692  03DE  1683               	bsf	3,5	;RP0=1, select bank3
 10693  03DF  1703               	bsf	3,6	;RP1=1, select bank3
 10694  03E0  00A4               	movwf	sprintf@fval^(0+384)
 10695  03E1                     l4564:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10698  03E1  019B               	clrf	sprintf@eexp^(0+384)
 10699  03E2  019C               	clrf	(sprintf@eexp+1)^(0+384)
 10700  03E3                     l4566:
 10701                           
 10702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10703  03E3  01A8               	clrf	sprintf@c^(0+384)
 10704  03E4  0AA8               	incf	sprintf@c^(0+384),f
 10705  03E5                     l4572:
 10706                           
 10707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10708  03E5  0828               	movf	sprintf@c^(0+384),w
 10709  03E6  1683               	bsf	3,5	;RP0=1, select bank1
 10710  03E7  1303               	bcf	3,6	;RP1=0, select bank1
 10711  03E8  00C4               	movwf	??_sprintf^(0+128)
 10712  03E9  3001               	movlw	1
 10713  03EA                     u8095:
 10714  03EA  1003               	clrc
 10715  03EB  0DC4               	rlf	??_sprintf^(0+128),f
 10716  03EC  3EFF               	addlw	-1
 10717  03ED  1D03               	skipz
 10718  03EE  2BEA               	goto	u8095
 10719  03EF  1003               	clrc
 10720  03F0  0D44               	rlf	??_sprintf^(0+128),w
 10721  03F1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10722  03F2  0084               	movwf	4
 10723  03F3  160A  158A  2000  120A  118A  	fcall	stringdir
 10724  03F8  00C5               	movwf	(??_sprintf+1)^(0+128)
 10725  03F9  160A  158A  2000  120A  118A  	fcall	stringdir
 10726  03FE  00C6               	movwf	((??_sprintf+1)^(0+128)+1)
 10727  03FF  160A  158A  2000  120A  118A  	fcall	stringdir
 10728  0404  00C7               	movwf	((??_sprintf+1)^(0+128)+2)
 10729  0405  160A  158A  2000  120A  118A  	fcall	stringdir
 10730  040A  00C8               	movwf	((??_sprintf+1)^(0+128)+3)
 10731  040B  0848               	movf	(??_sprintf+4)^(0+128),w
 10732  040C  1683               	bsf	3,5	;RP0=1, select bank3
 10733  040D  1703               	bsf	3,6	;RP1=1, select bank3
 10734  040E  021A               	subwf	(sprintf@val+3)^(0+384),w
 10735  040F  1D03               	skipz
 10736  0410  2C27               	goto	u8105
 10737  0411  1683               	bsf	3,5	;RP0=1, select bank1
 10738  0412  1303               	bcf	3,6	;RP1=0, select bank1
 10739  0413  0847               	movf	(??_sprintf+3)^(0+128),w
 10740  0414  1683               	bsf	3,5	;RP0=1, select bank3
 10741  0415  1703               	bsf	3,6	;RP1=1, select bank3
 10742  0416  0219               	subwf	(sprintf@val+2)^(0+384),w
 10743  0417  1D03               	skipz
 10744  0418  2C27               	goto	u8105
 10745  0419  1683               	bsf	3,5	;RP0=1, select bank1
 10746  041A  1303               	bcf	3,6	;RP1=0, select bank1
 10747  041B  0846               	movf	(??_sprintf+2)^(0+128),w
 10748  041C  1683               	bsf	3,5	;RP0=1, select bank3
 10749  041D  1703               	bsf	3,6	;RP1=1, select bank3
 10750  041E  0218               	subwf	(sprintf@val+1)^(0+384),w
 10751  041F  1D03               	skipz
 10752  0420  2C27               	goto	u8105
 10753  0421  1683               	bsf	3,5	;RP0=1, select bank1
 10754  0422  1303               	bcf	3,6	;RP1=0, select bank1
 10755  0423  0845               	movf	(??_sprintf+1)^(0+128),w
 10756  0424  1683               	bsf	3,5	;RP0=1, select bank3
 10757  0425  1703               	bsf	3,6	;RP1=1, select bank3
 10758  0426  0217               	subwf	sprintf@val^(0+384),w
 10759  0427                     u8105:
 10760  0427  1803               	skipnc
 10761  0428  2C2A               	goto	u8101
 10762  0429  2C2B               	goto	u8100
 10763  042A                     u8101:
 10764  042A  2C2C               	goto	l4576
 10765  042B                     u8100:
 10766  042B  2C3A               	goto	l4578
 10767  042C                     l4576:
 10768  042C  3001               	movlw	1
 10769  042D  1683               	bsf	3,5	;RP0=1, select bank1
 10770  042E  1303               	bcf	3,6	;RP1=0, select bank1
 10771  042F  00C4               	movwf	??_sprintf^(0+128)
 10772  0430  0844               	movf	??_sprintf^(0+128),w
 10773  0431  1683               	bsf	3,5	;RP0=1, select bank3
 10774  0432  1703               	bsf	3,6	;RP1=1, select bank3
 10775  0433  07A8               	addwf	sprintf@c^(0+384),f
 10776  0434  300A               	movlw	10
 10777  0435  0628               	xorwf	sprintf@c^(0+384),w
 10778  0436  1D03               	btfss	3,2
 10779  0437  2C39               	goto	u8111
 10780  0438  2C3A               	goto	u8110
 10781  0439                     u8111:
 10782  0439  2BE5               	goto	l4572
 10783  043A                     u8110:
 10784  043A                     l4578:
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
 10787  043A  3003               	movlw	3
 10788  043B  0515               	andwf	sprintf@flag^(0+384),w
 10789  043C  1683               	bsf	3,5	;RP0=1, select bank1
 10790  043D  1303               	bcf	3,6	;RP1=0, select bank1
 10791  043E  00C4               	movwf	??_sprintf^(0+128)
 10792  043F  3000               	movlw	0
 10793  0440  1683               	bsf	3,5	;RP0=1, select bank3
 10794  0441  1703               	bsf	3,6	;RP1=1, select bank3
 10795  0442  0516               	andwf	(sprintf@flag+1)^(0+384),w
 10796  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10797  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10798  0445  00C5               	movwf	(??_sprintf+1)^(0+128)
 10799  0446  0844               	movf	??_sprintf^(0+128),w
 10800  0447  0445               	iorwf	(??_sprintf^(0+128)+1),w
 10801  0448  1903               	btfsc	3,2
 10802  0449  2C4B               	goto	u8121
 10803  044A  2C4C               	goto	u8120
 10804  044B                     u8121:
 10805  044B  2D0E               	goto	l330
 10806  044C                     u8120:
 10807  044C                     l4580:
 10808                           
 10809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10810  044C  302D               	movlw	45
 10811  044D  00C4               	movwf	??_sprintf^(0+128)
 10812  044E  1683               	bsf	3,5	;RP0=1, select bank3
 10813  044F  1703               	bsf	3,6	;RP1=1, select bank3
 10814  0450  0821               	movf	sprintf@sp^(0+384),w
 10815  0451  0084               	movwf	4
 10816  0452  1683               	bsf	3,5	;RP0=1, select bank1
 10817  0453  1303               	bcf	3,6	;RP1=0, select bank1
 10818  0454  0844               	movf	??_sprintf^(0+128),w
 10819  0455  1383               	bcf	3,7	;select IRP bank0
 10820  0456  0080               	movwf	0
 10821  0457                     l4582:
 10822  0457  3001               	movlw	1
 10823  0458  00C4               	movwf	??_sprintf^(0+128)
 10824  0459  0844               	movf	??_sprintf^(0+128),w
 10825  045A  1683               	bsf	3,5	;RP0=1, select bank3
 10826  045B  1703               	bsf	3,6	;RP1=1, select bank3
 10827  045C  07A1               	addwf	sprintf@sp^(0+384),f
 10828  045D  2D0E               	goto	l330
 10829  045E                     l4584:
 10830                           
 10831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10832  045E  0828               	movf	sprintf@c^(0+384),w
 10833  045F  1683               	bsf	3,5	;RP0=1, select bank1
 10834  0460  1303               	bcf	3,6	;RP1=0, select bank1
 10835  0461  00C4               	movwf	??_sprintf^(0+128)
 10836  0462  3001               	movlw	1
 10837  0463                     u8135:
 10838  0463  1003               	clrc
 10839  0464  0DC4               	rlf	??_sprintf^(0+128),f
 10840  0465  3EFF               	addlw	-1
 10841  0466  1D03               	skipz
 10842  0467  2C63               	goto	u8135
 10843  0468  1003               	clrc
 10844  0469  0D44               	rlf	??_sprintf^(0+128),w
 10845  046A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10846  046B  0084               	movwf	4
 10847  046C  160A  158A  2000  120A  118A  	fcall	stringdir
 10848  0471  1283               	bcf	3,5	;RP0=0, select bank0
 10849  0472  1303               	bcf	3,6	;RP1=0, select bank0
 10850  0473  00A0               	movwf	___lldiv@divisor
 10851  0474  160A  158A  2000  120A  118A  	fcall	stringdir
 10852  0479  00A1               	movwf	___lldiv@divisor+1
 10853  047A  160A  158A  2000  120A  118A  	fcall	stringdir
 10854  047F  00A2               	movwf	___lldiv@divisor+2
 10855  0480  160A  158A  2000  120A  118A  	fcall	stringdir
 10856  0485  00A3               	movwf	___lldiv@divisor+3
 10857  0486  1683               	bsf	3,5	;RP0=1, select bank3
 10858  0487  1703               	bsf	3,6	;RP1=1, select bank3
 10859  0488  081A               	movf	(sprintf@val+3)^(0+384),w
 10860  0489  1283               	bcf	3,5	;RP0=0, select bank0
 10861  048A  1303               	bcf	3,6	;RP1=0, select bank0
 10862  048B  00A7               	movwf	___lldiv@dividend+3
 10863  048C  1683               	bsf	3,5	;RP0=1, select bank3
 10864  048D  1703               	bsf	3,6	;RP1=1, select bank3
 10865  048E  0819               	movf	(sprintf@val+2)^(0+384),w
 10866  048F  1283               	bcf	3,5	;RP0=0, select bank0
 10867  0490  1303               	bcf	3,6	;RP1=0, select bank0
 10868  0491  00A6               	movwf	___lldiv@dividend+2
 10869  0492  1683               	bsf	3,5	;RP0=1, select bank3
 10870  0493  1703               	bsf	3,6	;RP1=1, select bank3
 10871  0494  0818               	movf	(sprintf@val+1)^(0+384),w
 10872  0495  1283               	bcf	3,5	;RP0=0, select bank0
 10873  0496  1303               	bcf	3,6	;RP1=0, select bank0
 10874  0497  00A5               	movwf	___lldiv@dividend+1
 10875  0498  1683               	bsf	3,5	;RP0=1, select bank3
 10876  0499  1703               	bsf	3,6	;RP1=1, select bank3
 10877  049A  0817               	movf	sprintf@val^(0+384),w
 10878  049B  1283               	bcf	3,5	;RP0=0, select bank0
 10879  049C  1303               	bcf	3,6	;RP1=0, select bank0
 10880  049D  00A4               	movwf	___lldiv@dividend
 10881  049E  160A  158A  2329  120A  118A  	fcall	___lldiv
 10882  04A3  1283               	bcf	3,5	;RP0=0, select bank0
 10883  04A4  1303               	bcf	3,6	;RP1=0, select bank0
 10884  04A5  0823               	movf	?___lldiv+3,w
 10885  04A6  1683               	bsf	3,5	;RP0=1, select bank3
 10886  04A7  1703               	bsf	3,6	;RP1=1, select bank3
 10887  04A8  00A0               	movwf	(sprintf@tmpval+3)^(0+384)
 10888  04A9  1283               	bcf	3,5	;RP0=0, select bank0
 10889  04AA  1303               	bcf	3,6	;RP1=0, select bank0
 10890  04AB  0822               	movf	?___lldiv+2,w
 10891  04AC  1683               	bsf	3,5	;RP0=1, select bank3
 10892  04AD  1703               	bsf	3,6	;RP1=1, select bank3
 10893  04AE  009F               	movwf	(sprintf@tmpval+2)^(0+384)
 10894  04AF  1283               	bcf	3,5	;RP0=0, select bank0
 10895  04B0  1303               	bcf	3,6	;RP1=0, select bank0
 10896  04B1  0821               	movf	?___lldiv+1,w
 10897  04B2  1683               	bsf	3,5	;RP0=1, select bank3
 10898  04B3  1703               	bsf	3,6	;RP1=1, select bank3
 10899  04B4  009E               	movwf	(sprintf@tmpval+1)^(0+384)
 10900  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 10901  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 10902  04B7  0820               	movf	?___lldiv,w
 10903  04B8  1683               	bsf	3,5	;RP0=1, select bank3
 10904  04B9  1703               	bsf	3,6	;RP1=1, select bank3
 10905  04BA  009D               	movwf	sprintf@tmpval^(0+384)
 10906  04BB                     l4586:
 10907                           
 10908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10909  04BB  3000               	movlw	0
 10910  04BC  1283               	bcf	3,5	;RP0=0, select bank0
 10911  04BD  1303               	bcf	3,6	;RP1=0, select bank0
 10912  04BE  00A3               	movwf	___llmod@divisor+3
 10913  04BF  3000               	movlw	0
 10914  04C0  00A2               	movwf	___llmod@divisor+2
 10915  04C1  3000               	movlw	0
 10916  04C2  00A1               	movwf	___llmod@divisor+1
 10917  04C3  300A               	movlw	10
 10918  04C4  00A0               	movwf	___llmod@divisor
 10919  04C5  1683               	bsf	3,5	;RP0=1, select bank3
 10920  04C6  1703               	bsf	3,6	;RP1=1, select bank3
 10921  04C7  0820               	movf	(sprintf@tmpval+3)^(0+384),w
 10922  04C8  1283               	bcf	3,5	;RP0=0, select bank0
 10923  04C9  1303               	bcf	3,6	;RP1=0, select bank0
 10924  04CA  00A7               	movwf	___llmod@dividend+3
 10925  04CB  1683               	bsf	3,5	;RP0=1, select bank3
 10926  04CC  1703               	bsf	3,6	;RP1=1, select bank3
 10927  04CD  081F               	movf	(sprintf@tmpval+2)^(0+384),w
 10928  04CE  1283               	bcf	3,5	;RP0=0, select bank0
 10929  04CF  1303               	bcf	3,6	;RP1=0, select bank0
 10930  04D0  00A6               	movwf	___llmod@dividend+2
 10931  04D1  1683               	bsf	3,5	;RP0=1, select bank3
 10932  04D2  1703               	bsf	3,6	;RP1=1, select bank3
 10933  04D3  081E               	movf	(sprintf@tmpval+1)^(0+384),w
 10934  04D4  1283               	bcf	3,5	;RP0=0, select bank0
 10935  04D5  1303               	bcf	3,6	;RP1=0, select bank0
 10936  04D6  00A5               	movwf	___llmod@dividend+1
 10937  04D7  1683               	bsf	3,5	;RP0=1, select bank3
 10938  04D8  1703               	bsf	3,6	;RP1=1, select bank3
 10939  04D9  081D               	movf	sprintf@tmpval^(0+384),w
 10940  04DA  1283               	bcf	3,5	;RP0=0, select bank0
 10941  04DB  1303               	bcf	3,6	;RP1=0, select bank0
 10942  04DC  00A4               	movwf	___llmod@dividend
 10943  04DD  160A  158A  21BA  120A  118A  	fcall	___llmod
 10944  04E2  1283               	bcf	3,5	;RP0=0, select bank0
 10945  04E3  1303               	bcf	3,6	;RP1=0, select bank0
 10946  04E4  0823               	movf	?___llmod+3,w
 10947  04E5  1683               	bsf	3,5	;RP0=1, select bank3
 10948  04E6  1703               	bsf	3,6	;RP1=1, select bank3
 10949  04E7  00A0               	movwf	(sprintf@tmpval+3)^(0+384)
 10950  04E8  1283               	bcf	3,5	;RP0=0, select bank0
 10951  04E9  1303               	bcf	3,6	;RP1=0, select bank0
 10952  04EA  0822               	movf	?___llmod+2,w
 10953  04EB  1683               	bsf	3,5	;RP0=1, select bank3
 10954  04EC  1703               	bsf	3,6	;RP1=1, select bank3
 10955  04ED  009F               	movwf	(sprintf@tmpval+2)^(0+384)
 10956  04EE  1283               	bcf	3,5	;RP0=0, select bank0
 10957  04EF  1303               	bcf	3,6	;RP1=0, select bank0
 10958  04F0  0821               	movf	?___llmod+1,w
 10959  04F1  1683               	bsf	3,5	;RP0=1, select bank3
 10960  04F2  1703               	bsf	3,6	;RP1=1, select bank3
 10961  04F3  009E               	movwf	(sprintf@tmpval+1)^(0+384)
 10962  04F4  1283               	bcf	3,5	;RP0=0, select bank0
 10963  04F5  1303               	bcf	3,6	;RP1=0, select bank0
 10964  04F6  0820               	movf	?___llmod,w
 10965  04F7  1683               	bsf	3,5	;RP0=1, select bank3
 10966  04F8  1703               	bsf	3,6	;RP1=1, select bank3
 10967  04F9  009D               	movwf	sprintf@tmpval^(0+384)
 10968  04FA                     l4588:
 10969                           
 10970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10971  04FA  081D               	movf	sprintf@tmpval^(0+384),w
 10972  04FB  3E30               	addlw	48
 10973  04FC  1683               	bsf	3,5	;RP0=1, select bank1
 10974  04FD  1303               	bcf	3,6	;RP1=0, select bank1
 10975  04FE  00C4               	movwf	??_sprintf^(0+128)
 10976  04FF  1683               	bsf	3,5	;RP0=1, select bank3
 10977  0500  1703               	bsf	3,6	;RP1=1, select bank3
 10978  0501  0821               	movf	sprintf@sp^(0+384),w
 10979  0502  0084               	movwf	4
 10980  0503  1683               	bsf	3,5	;RP0=1, select bank1
 10981  0504  1303               	bcf	3,6	;RP1=0, select bank1
 10982  0505  0844               	movf	??_sprintf^(0+128),w
 10983  0506  1383               	bcf	3,7	;select IRP bank0
 10984  0507  0080               	movwf	0
 10985  0508  3001               	movlw	1
 10986  0509  00C4               	movwf	??_sprintf^(0+128)
 10987  050A  0844               	movf	??_sprintf^(0+128),w
 10988  050B  1683               	bsf	3,5	;RP0=1, select bank3
 10989  050C  1703               	bsf	3,6	;RP1=1, select bank3
 10990  050D  07A1               	addwf	sprintf@sp^(0+384),f
 10991  050E                     l330:	
 10992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10993                           
 10994                           
 10995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10996  050E  3001               	movlw	1
 10997  050F  1683               	bsf	3,5	;RP0=1, select bank3
 10998  0510  1703               	bsf	3,6	;RP1=1, select bank3
 10999  0511  02A8               	subwf	sprintf@c^(0+384),f
 11000  0512  0A28               	incf	sprintf@c^(0+384),w
 11001  0513  1D03               	btfss	3,2
 11002  0514  2D16               	goto	u8141
 11003  0515  2D17               	goto	u8140
 11004  0516                     u8141:
 11005  0516  2C5E               	goto	l4584
 11006  0517                     u8140:
 11007  0517  2D31               	goto	l4596
 11008  0518                     l4590:
 11009                           
 11010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11011  0518  3030               	movlw	48
 11012  0519  1683               	bsf	3,5	;RP0=1, select bank1
 11013  051A  1303               	bcf	3,6	;RP1=0, select bank1
 11014  051B  00C4               	movwf	??_sprintf^(0+128)
 11015  051C  1683               	bsf	3,5	;RP0=1, select bank3
 11016  051D  1703               	bsf	3,6	;RP1=1, select bank3
 11017  051E  0821               	movf	sprintf@sp^(0+384),w
 11018  051F  0084               	movwf	4
 11019  0520  1683               	bsf	3,5	;RP0=1, select bank1
 11020  0521  1303               	bcf	3,6	;RP1=0, select bank1
 11021  0522  0844               	movf	??_sprintf^(0+128),w
 11022  0523  1383               	bcf	3,7	;select IRP bank0
 11023  0524  0080               	movwf	0
 11024  0525                     l4592:
 11025  0525  3001               	movlw	1
 11026  0526  00C4               	movwf	??_sprintf^(0+128)
 11027  0527  0844               	movf	??_sprintf^(0+128),w
 11028  0528  1683               	bsf	3,5	;RP0=1, select bank3
 11029  0529  1703               	bsf	3,6	;RP1=1, select bank3
 11030  052A  07A1               	addwf	sprintf@sp^(0+384),f
 11031  052B                     l4594:
 11032                           
 11033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11034  052B  30FF               	movlw	255
 11035  052C  079B               	addwf	sprintf@eexp^(0+384),f
 11036  052D  1803               	skipnc
 11037  052E  0A9C               	incf	(sprintf@eexp+1)^(0+384),f
 11038  052F  30FF               	movlw	255
 11039  0530  079C               	addwf	(sprintf@eexp+1)^(0+384),f
 11040  0531                     l4596:
 11041                           
 11042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11043  0531  081C               	movf	(sprintf@eexp+1)^(0+384),w
 11044  0532  3A80               	xorlw	128
 11045  0533  00FF               	movwf	btemp+1
 11046  0534  3080               	movlw	128
 11047  0535  027F               	subwf	btemp+1,w
 11048  0536  1D03               	skipz
 11049  0537  2D3A               	goto	u8155
 11050  0538  3001               	movlw	1
 11051  0539  021B               	subwf	sprintf@eexp^(0+384),w
 11052  053A                     u8155:
 11053  053A  1803               	skipnc
 11054  053B  2D3D               	goto	u8151
 11055  053C  2D3E               	goto	u8150
 11056  053D                     u8151:
 11057  053D  2D18               	goto	l4590
 11058  053E                     u8150:
 11059  053E                     l4598:
 11060                           
 11061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11062  053E  1683               	bsf	3,5	;RP0=1, select bank3
 11063  053F  1703               	bsf	3,6	;RP1=1, select bank3
 11064  0540  0823               	movf	(sprintf@prec+1)^(0+384),w
 11065  0541  3A80               	xorlw	128
 11066  0542  00FF               	movwf	btemp+1
 11067  0543  3080               	movlw	128
 11068  0544  027F               	subwf	btemp+1,w
 11069  0545  1D03               	skipz
 11070  0546  2D49               	goto	u8165
 11071  0547  3009               	movlw	9
 11072  0548  0222               	subwf	sprintf@prec^(0+384),w
 11073  0549                     u8165:
 11074  0549  1C03               	skipc
 11075  054A  2D4C               	goto	u8161
 11076  054B  2D4D               	goto	u8160
 11077  054C                     u8161:
 11078  054C  2D56               	goto	l4602
 11079  054D                     u8160:
 11080  054D                     l4600:
 11081                           
 11082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11083  054D  3008               	movlw	8
 11084  054E  1683               	bsf	3,5	;RP0=1, select bank1
 11085  054F  1303               	bcf	3,6	;RP1=0, select bank1
 11086  0550  00C4               	movwf	??_sprintf^(0+128)
 11087  0551  0844               	movf	??_sprintf^(0+128),w
 11088  0552  1683               	bsf	3,5	;RP0=1, select bank3
 11089  0553  1703               	bsf	3,6	;RP1=1, select bank3
 11090  0554  00A8               	movwf	sprintf@c^(0+384)
 11091  0555  2D60               	goto	l337
 11092  0556                     l4602:
 11093                           
 11094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11095  0556  1683               	bsf	3,5	;RP0=1, select bank3
 11096  0557  1703               	bsf	3,6	;RP1=1, select bank3
 11097  0558  0822               	movf	sprintf@prec^(0+384),w
 11098  0559  1683               	bsf	3,5	;RP0=1, select bank1
 11099  055A  1303               	bcf	3,6	;RP1=0, select bank1
 11100  055B  00C4               	movwf	??_sprintf^(0+128)
 11101  055C  0844               	movf	??_sprintf^(0+128),w
 11102  055D  1683               	bsf	3,5	;RP0=1, select bank3
 11103  055E  1703               	bsf	3,6	;RP1=1, select bank3
 11104  055F  00A8               	movwf	sprintf@c^(0+384)
 11105  0560                     l337:
 11106                           
 11107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11108  0560  0828               	movf	sprintf@c^(0+384),w
 11109  0561  1683               	bsf	3,5	;RP0=1, select bank1
 11110  0562  1303               	bcf	3,6	;RP1=0, select bank1
 11111  0563  00C4               	movwf	??_sprintf^(0+128)
 11112  0564  01C5               	clrf	(??_sprintf^(0+128)+1)
 11113  0565  0844               	movf	??_sprintf^(0+128),w
 11114  0566  1683               	bsf	3,5	;RP0=1, select bank3
 11115  0567  1703               	bsf	3,6	;RP1=1, select bank3
 11116  0568  02A2               	subwf	sprintf@prec^(0+384),f
 11117  0569  1683               	bsf	3,5	;RP0=1, select bank1
 11118  056A  1303               	bcf	3,6	;RP1=0, select bank1
 11119  056B  0845               	movf	(??_sprintf+1)^(0+128),w
 11120  056C  1683               	bsf	3,5	;RP0=1, select bank3
 11121  056D  1703               	bsf	3,6	;RP1=1, select bank3
 11122  056E  1C03               	skipc
 11123  056F  03A3               	decf	(sprintf@prec+1)^(0+384),f
 11124  0570  02A3               	subwf	(sprintf@prec+1)^(0+384),f
 11125  0571                     l4604:
 11126                           
 11127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11128  0571  0828               	movf	sprintf@c^(0+384),w
 11129  0572  1903               	btfsc	3,2
 11130  0573  2D75               	goto	u8171
 11131  0574  2D76               	goto	u8170
 11132  0575                     u8171:
 11133  0575  2D89               	goto	l4610
 11134  0576                     u8170:
 11135  0576                     l4606:
 11136                           
 11137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11138  0576  302E               	movlw	46
 11139  0577  1683               	bsf	3,5	;RP0=1, select bank1
 11140  0578  1303               	bcf	3,6	;RP1=0, select bank1
 11141  0579  00C4               	movwf	??_sprintf^(0+128)
 11142  057A  1683               	bsf	3,5	;RP0=1, select bank3
 11143  057B  1703               	bsf	3,6	;RP1=1, select bank3
 11144  057C  0821               	movf	sprintf@sp^(0+384),w
 11145  057D  0084               	movwf	4
 11146  057E  1683               	bsf	3,5	;RP0=1, select bank1
 11147  057F  1303               	bcf	3,6	;RP1=0, select bank1
 11148  0580  0844               	movf	??_sprintf^(0+128),w
 11149  0581  1383               	bcf	3,7	;select IRP bank0
 11150  0582  0080               	movwf	0
 11151  0583                     l4608:
 11152  0583  3001               	movlw	1
 11153  0584  00C4               	movwf	??_sprintf^(0+128)
 11154  0585  0844               	movf	??_sprintf^(0+128),w
 11155  0586  1683               	bsf	3,5	;RP0=1, select bank3
 11156  0587  1703               	bsf	3,6	;RP1=1, select bank3
 11157  0588  07A1               	addwf	sprintf@sp^(0+384),f
 11158  0589                     l4610:
 11159                           
 11160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11161  0589  0828               	movf	sprintf@c^(0+384),w
 11162  058A  120A  158A  2119  120A  118A  	fcall	_scale
 11163  058F  1283               	bcf	3,5	;RP0=0, select bank0
 11164  0590  1303               	bcf	3,6	;RP1=0, select bank0
 11165  0591  0857               	movf	?_scale+3,w
 11166  0592  1683               	bsf	3,5	;RP0=1, select bank3
 11167  0593  1703               	bsf	3,6	;RP1=1, select bank3
 11168  0594  0093               	movwf	(_sprintf$928+3)^(0+384)
 11169  0595  1283               	bcf	3,5	;RP0=0, select bank0
 11170  0596  1303               	bcf	3,6	;RP1=0, select bank0
 11171  0597  0856               	movf	?_scale+2,w
 11172  0598  1683               	bsf	3,5	;RP0=1, select bank3
 11173  0599  1703               	bsf	3,6	;RP1=1, select bank3
 11174  059A  0092               	movwf	(_sprintf$928+2)^(0+384)
 11175  059B  1283               	bcf	3,5	;RP0=0, select bank0
 11176  059C  1303               	bcf	3,6	;RP1=0, select bank0
 11177  059D  0855               	movf	?_scale+1,w
 11178  059E  1683               	bsf	3,5	;RP0=1, select bank3
 11179  059F  1703               	bsf	3,6	;RP1=1, select bank3
 11180  05A0  0091               	movwf	(_sprintf$928+1)^(0+384)
 11181  05A1  1283               	bcf	3,5	;RP0=0, select bank0
 11182  05A2  1303               	bcf	3,6	;RP1=0, select bank0
 11183  05A3  0854               	movf	?_scale,w
 11184  05A4  1683               	bsf	3,5	;RP0=1, select bank3
 11185  05A5  1703               	bsf	3,6	;RP1=1, select bank3
 11186  05A6  0090               	movwf	_sprintf$928^(0+384)
 11187  05A7                     l4612:
 11188                           
 11189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11190  05A7  0813               	movf	(_sprintf$928+3)^(0+384),w
 11191  05A8  1283               	bcf	3,5	;RP0=0, select bank0
 11192  05A9  1303               	bcf	3,6	;RP1=0, select bank0
 11193  05AA  00C1               	movwf	___flmul@a+3
 11194  05AB  1683               	bsf	3,5	;RP0=1, select bank3
 11195  05AC  1703               	bsf	3,6	;RP1=1, select bank3
 11196  05AD  0812               	movf	(_sprintf$928+2)^(0+384),w
 11197  05AE  1283               	bcf	3,5	;RP0=0, select bank0
 11198  05AF  1303               	bcf	3,6	;RP1=0, select bank0
 11199  05B0  00C0               	movwf	___flmul@a+2
 11200  05B1  1683               	bsf	3,5	;RP0=1, select bank3
 11201  05B2  1703               	bsf	3,6	;RP1=1, select bank3
 11202  05B3  0811               	movf	(_sprintf$928+1)^(0+384),w
 11203  05B4  1283               	bcf	3,5	;RP0=0, select bank0
 11204  05B5  1303               	bcf	3,6	;RP1=0, select bank0
 11205  05B6  00BF               	movwf	___flmul@a+1
 11206  05B7  1683               	bsf	3,5	;RP0=1, select bank3
 11207  05B8  1703               	bsf	3,6	;RP1=1, select bank3
 11208  05B9  0810               	movf	_sprintf$928^(0+384),w
 11209  05BA  1283               	bcf	3,5	;RP0=0, select bank0
 11210  05BB  1303               	bcf	3,6	;RP1=0, select bank0
 11211  05BC  00BE               	movwf	___flmul@a
 11212  05BD  1683               	bsf	3,5	;RP0=1, select bank3
 11213  05BE  1703               	bsf	3,6	;RP1=1, select bank3
 11214  05BF  0827               	movf	(sprintf@fval+3)^(0+384),w
 11215  05C0  1283               	bcf	3,5	;RP0=0, select bank0
 11216  05C1  1303               	bcf	3,6	;RP1=0, select bank0
 11217  05C2  00BD               	movwf	___flmul@b+3
 11218  05C3  1683               	bsf	3,5	;RP0=1, select bank3
 11219  05C4  1703               	bsf	3,6	;RP1=1, select bank3
 11220  05C5  0826               	movf	(sprintf@fval+2)^(0+384),w
 11221  05C6  1283               	bcf	3,5	;RP0=0, select bank0
 11222  05C7  1303               	bcf	3,6	;RP1=0, select bank0
 11223  05C8  00BC               	movwf	___flmul@b+2
 11224  05C9  1683               	bsf	3,5	;RP0=1, select bank3
 11225  05CA  1703               	bsf	3,6	;RP1=1, select bank3
 11226  05CB  0825               	movf	(sprintf@fval+1)^(0+384),w
 11227  05CC  1283               	bcf	3,5	;RP0=0, select bank0
 11228  05CD  1303               	bcf	3,6	;RP1=0, select bank0
 11229  05CE  00BB               	movwf	___flmul@b+1
 11230  05CF  1683               	bsf	3,5	;RP0=1, select bank3
 11231  05D0  1703               	bsf	3,6	;RP1=1, select bank3
 11232  05D1  0824               	movf	sprintf@fval^(0+384),w
 11233  05D2  1283               	bcf	3,5	;RP0=0, select bank0
 11234  05D3  1303               	bcf	3,6	;RP1=0, select bank0
 11235  05D4  00BA               	movwf	___flmul@b
 11236  05D5  160A  118A  249F  120A  118A  	fcall	___flmul
 11237  05DA  1283               	bcf	3,5	;RP0=0, select bank0
 11238  05DB  1303               	bcf	3,6	;RP1=0, select bank0
 11239  05DC  083D               	movf	?___flmul+3,w
 11240  05DD  1683               	bsf	3,5	;RP0=1, select bank1
 11241  05DE  1303               	bcf	3,6	;RP1=0, select bank1
 11242  05DF  00B7               	movwf	(___fltol@f1+3)^(0+128)
 11243  05E0  1283               	bcf	3,5	;RP0=0, select bank0
 11244  05E1  1303               	bcf	3,6	;RP1=0, select bank0
 11245  05E2  083C               	movf	?___flmul+2,w
 11246  05E3  1683               	bsf	3,5	;RP0=1, select bank1
 11247  05E4  1303               	bcf	3,6	;RP1=0, select bank1
 11248  05E5  00B6               	movwf	(___fltol@f1+2)^(0+128)
 11249  05E6  1283               	bcf	3,5	;RP0=0, select bank0
 11250  05E7  1303               	bcf	3,6	;RP1=0, select bank0
 11251  05E8  083B               	movf	?___flmul+1,w
 11252  05E9  1683               	bsf	3,5	;RP0=1, select bank1
 11253  05EA  1303               	bcf	3,6	;RP1=0, select bank1
 11254  05EB  00B5               	movwf	(___fltol@f1+1)^(0+128)
 11255  05EC  1283               	bcf	3,5	;RP0=0, select bank0
 11256  05ED  1303               	bcf	3,6	;RP1=0, select bank0
 11257  05EE  083A               	movf	?___flmul,w
 11258  05EF  1683               	bsf	3,5	;RP0=1, select bank1
 11259  05F0  1303               	bcf	3,6	;RP1=0, select bank1
 11260  05F1  00B4               	movwf	___fltol@f1^(0+128)
 11261  05F2  160A  158A  23FA  120A  118A  	fcall	___fltol
 11262  05F7  1683               	bsf	3,5	;RP0=1, select bank1
 11263  05F8  1303               	bcf	3,6	;RP1=0, select bank1
 11264  05F9  0837               	movf	(?___fltol+3)^(0+128),w
 11265  05FA  1683               	bsf	3,5	;RP0=1, select bank3
 11266  05FB  1703               	bsf	3,6	;RP1=1, select bank3
 11267  05FC  009A               	movwf	(sprintf@val+3)^(0+384)
 11268  05FD  1683               	bsf	3,5	;RP0=1, select bank1
 11269  05FE  1303               	bcf	3,6	;RP1=0, select bank1
 11270  05FF  0836               	movf	(?___fltol+2)^(0+128),w
 11271  0600  1683               	bsf	3,5	;RP0=1, select bank3
 11272  0601  1703               	bsf	3,6	;RP1=1, select bank3
 11273  0602  0099               	movwf	(sprintf@val+2)^(0+384)
 11274  0603  1683               	bsf	3,5	;RP0=1, select bank1
 11275  0604  1303               	bcf	3,6	;RP1=0, select bank1
 11276  0605  0835               	movf	(?___fltol+1)^(0+128),w
 11277  0606  1683               	bsf	3,5	;RP0=1, select bank3
 11278  0607  1703               	bsf	3,6	;RP1=1, select bank3
 11279  0608  0098               	movwf	(sprintf@val+1)^(0+384)
 11280  0609  1683               	bsf	3,5	;RP0=1, select bank1
 11281  060A  1303               	bcf	3,6	;RP1=0, select bank1
 11282  060B  0834               	movf	?___fltol^(0+128),w
 11283  060C  1683               	bsf	3,5	;RP0=1, select bank3
 11284  060D  1703               	bsf	3,6	;RP1=1, select bank3
 11285  060E  0097               	movwf	sprintf@val^(0+384)
 11286                           
 11287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11288  060F  2F1D               	goto	l4622
 11289  0610                     l4614:
 11290                           
 11291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11292  0610  0828               	movf	sprintf@c^(0+384),w
 11293  0611  1683               	bsf	3,5	;RP0=1, select bank1
 11294  0612  1303               	bcf	3,6	;RP1=0, select bank1
 11295  0613  00C4               	movwf	??_sprintf^(0+128)
 11296  0614  3001               	movlw	1
 11297  0615                     u8185:
 11298  0615  1003               	clrc
 11299  0616  0DC4               	rlf	??_sprintf^(0+128),f
 11300  0617  3EFF               	addlw	-1
 11301  0618  1D03               	skipz
 11302  0619  2E15               	goto	u8185
 11303  061A  1003               	clrc
 11304  061B  0D44               	rlf	??_sprintf^(0+128),w
 11305  061C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11306  061D  0084               	movwf	4
 11307  061E  160A  158A  2000  120A  118A  	fcall	stringdir
 11308  0623  1283               	bcf	3,5	;RP0=0, select bank0
 11309  0624  1303               	bcf	3,6	;RP1=0, select bank0
 11310  0625  00A0               	movwf	___lldiv@divisor
 11311  0626  160A  158A  2000  120A  118A  	fcall	stringdir
 11312  062B  00A1               	movwf	___lldiv@divisor+1
 11313  062C  160A  158A  2000  120A  118A  	fcall	stringdir
 11314  0631  00A2               	movwf	___lldiv@divisor+2
 11315  0632  160A  158A  2000  120A  118A  	fcall	stringdir
 11316  0637  00A3               	movwf	___lldiv@divisor+3
 11317  0638  1683               	bsf	3,5	;RP0=1, select bank3
 11318  0639  1703               	bsf	3,6	;RP1=1, select bank3
 11319  063A  081A               	movf	(sprintf@val+3)^(0+384),w
 11320  063B  1283               	bcf	3,5	;RP0=0, select bank0
 11321  063C  1303               	bcf	3,6	;RP1=0, select bank0
 11322  063D  00A7               	movwf	___lldiv@dividend+3
 11323  063E  1683               	bsf	3,5	;RP0=1, select bank3
 11324  063F  1703               	bsf	3,6	;RP1=1, select bank3
 11325  0640  0819               	movf	(sprintf@val+2)^(0+384),w
 11326  0641  1283               	bcf	3,5	;RP0=0, select bank0
 11327  0642  1303               	bcf	3,6	;RP1=0, select bank0
 11328  0643  00A6               	movwf	___lldiv@dividend+2
 11329  0644  1683               	bsf	3,5	;RP0=1, select bank3
 11330  0645  1703               	bsf	3,6	;RP1=1, select bank3
 11331  0646  0818               	movf	(sprintf@val+1)^(0+384),w
 11332  0647  1283               	bcf	3,5	;RP0=0, select bank0
 11333  0648  1303               	bcf	3,6	;RP1=0, select bank0
 11334  0649  00A5               	movwf	___lldiv@dividend+1
 11335  064A  1683               	bsf	3,5	;RP0=1, select bank3
 11336  064B  1703               	bsf	3,6	;RP1=1, select bank3
 11337  064C  0817               	movf	sprintf@val^(0+384),w
 11338  064D  1283               	bcf	3,5	;RP0=0, select bank0
 11339  064E  1303               	bcf	3,6	;RP1=0, select bank0
 11340  064F  00A4               	movwf	___lldiv@dividend
 11341  0650  160A  158A  2329  120A  118A  	fcall	___lldiv
 11342  0655  1283               	bcf	3,5	;RP0=0, select bank0
 11343  0656  1303               	bcf	3,6	;RP1=0, select bank0
 11344  0657  0823               	movf	?___lldiv+3,w
 11345  0658  1683               	bsf	3,5	;RP0=1, select bank3
 11346  0659  1703               	bsf	3,6	;RP1=1, select bank3
 11347  065A  00A0               	movwf	(sprintf@tmpval+3)^(0+384)
 11348  065B  1283               	bcf	3,5	;RP0=0, select bank0
 11349  065C  1303               	bcf	3,6	;RP1=0, select bank0
 11350  065D  0822               	movf	?___lldiv+2,w
 11351  065E  1683               	bsf	3,5	;RP0=1, select bank3
 11352  065F  1703               	bsf	3,6	;RP1=1, select bank3
 11353  0660  009F               	movwf	(sprintf@tmpval+2)^(0+384)
 11354  0661  1283               	bcf	3,5	;RP0=0, select bank0
 11355  0662  1303               	bcf	3,6	;RP1=0, select bank0
 11356  0663  0821               	movf	?___lldiv+1,w
 11357  0664  1683               	bsf	3,5	;RP0=1, select bank3
 11358  0665  1703               	bsf	3,6	;RP1=1, select bank3
 11359  0666  009E               	movwf	(sprintf@tmpval+1)^(0+384)
 11360  0667  1283               	bcf	3,5	;RP0=0, select bank0
 11361  0668  1303               	bcf	3,6	;RP1=0, select bank0
 11362  0669  0820               	movf	?___lldiv,w
 11363  066A  1683               	bsf	3,5	;RP0=1, select bank3
 11364  066B  1703               	bsf	3,6	;RP1=1, select bank3
 11365  066C  009D               	movwf	sprintf@tmpval^(0+384)
 11366  066D                     l4616:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11369  066D  3000               	movlw	0
 11370  066E  1283               	bcf	3,5	;RP0=0, select bank0
 11371  066F  1303               	bcf	3,6	;RP1=0, select bank0
 11372  0670  00A3               	movwf	___llmod@divisor+3
 11373  0671  3000               	movlw	0
 11374  0672  00A2               	movwf	___llmod@divisor+2
 11375  0673  3000               	movlw	0
 11376  0674  00A1               	movwf	___llmod@divisor+1
 11377  0675  300A               	movlw	10
 11378  0676  00A0               	movwf	___llmod@divisor
 11379  0677  1683               	bsf	3,5	;RP0=1, select bank3
 11380  0678  1703               	bsf	3,6	;RP1=1, select bank3
 11381  0679  0820               	movf	(sprintf@tmpval+3)^(0+384),w
 11382  067A  1283               	bcf	3,5	;RP0=0, select bank0
 11383  067B  1303               	bcf	3,6	;RP1=0, select bank0
 11384  067C  00A7               	movwf	___llmod@dividend+3
 11385  067D  1683               	bsf	3,5	;RP0=1, select bank3
 11386  067E  1703               	bsf	3,6	;RP1=1, select bank3
 11387  067F  081F               	movf	(sprintf@tmpval+2)^(0+384),w
 11388  0680  1283               	bcf	3,5	;RP0=0, select bank0
 11389  0681  1303               	bcf	3,6	;RP1=0, select bank0
 11390  0682  00A6               	movwf	___llmod@dividend+2
 11391  0683  1683               	bsf	3,5	;RP0=1, select bank3
 11392  0684  1703               	bsf	3,6	;RP1=1, select bank3
 11393  0685  081E               	movf	(sprintf@tmpval+1)^(0+384),w
 11394  0686  1283               	bcf	3,5	;RP0=0, select bank0
 11395  0687  1303               	bcf	3,6	;RP1=0, select bank0
 11396  0688  00A5               	movwf	___llmod@dividend+1
 11397  0689  1683               	bsf	3,5	;RP0=1, select bank3
 11398  068A  1703               	bsf	3,6	;RP1=1, select bank3
 11399  068B  081D               	movf	sprintf@tmpval^(0+384),w
 11400  068C  1283               	bcf	3,5	;RP0=0, select bank0
 11401  068D  1303               	bcf	3,6	;RP1=0, select bank0
 11402  068E  00A4               	movwf	___llmod@dividend
 11403  068F  160A  158A  21BA  120A  118A  	fcall	___llmod
 11404  0694  1283               	bcf	3,5	;RP0=0, select bank0
 11405  0695  1303               	bcf	3,6	;RP1=0, select bank0
 11406  0696  0823               	movf	?___llmod+3,w
 11407  0697  1683               	bsf	3,5	;RP0=1, select bank3
 11408  0698  1703               	bsf	3,6	;RP1=1, select bank3
 11409  0699  00A0               	movwf	(sprintf@tmpval+3)^(0+384)
 11410  069A  1283               	bcf	3,5	;RP0=0, select bank0
 11411  069B  1303               	bcf	3,6	;RP1=0, select bank0
 11412  069C  0822               	movf	?___llmod+2,w
 11413  069D  1683               	bsf	3,5	;RP0=1, select bank3
 11414  069E  1703               	bsf	3,6	;RP1=1, select bank3
 11415  069F  009F               	movwf	(sprintf@tmpval+2)^(0+384)
 11416  06A0  1283               	bcf	3,5	;RP0=0, select bank0
 11417  06A1  1303               	bcf	3,6	;RP1=0, select bank0
 11418  06A2  0821               	movf	?___llmod+1,w
 11419  06A3  1683               	bsf	3,5	;RP0=1, select bank3
 11420  06A4  1703               	bsf	3,6	;RP1=1, select bank3
 11421  06A5  009E               	movwf	(sprintf@tmpval+1)^(0+384)
 11422  06A6  1283               	bcf	3,5	;RP0=0, select bank0
 11423  06A7  1303               	bcf	3,6	;RP1=0, select bank0
 11424  06A8  0820               	movf	?___llmod,w
 11425  06A9  1683               	bsf	3,5	;RP0=1, select bank3
 11426  06AA  1703               	bsf	3,6	;RP1=1, select bank3
 11427  06AB  009D               	movwf	sprintf@tmpval^(0+384)
 11428  06AC                     l4618:
 11429                           
 11430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11431  06AC  081D               	movf	sprintf@tmpval^(0+384),w
 11432  06AD  3E30               	addlw	48
 11433  06AE  1683               	bsf	3,5	;RP0=1, select bank1
 11434  06AF  1303               	bcf	3,6	;RP1=0, select bank1
 11435  06B0  00C4               	movwf	??_sprintf^(0+128)
 11436  06B1  1683               	bsf	3,5	;RP0=1, select bank3
 11437  06B2  1703               	bsf	3,6	;RP1=1, select bank3
 11438  06B3  0821               	movf	sprintf@sp^(0+384),w
 11439  06B4  0084               	movwf	4
 11440  06B5  1683               	bsf	3,5	;RP0=1, select bank1
 11441  06B6  1303               	bcf	3,6	;RP1=0, select bank1
 11442  06B7  0844               	movf	??_sprintf^(0+128),w
 11443  06B8  1383               	bcf	3,7	;select IRP bank0
 11444  06B9  0080               	movwf	0
 11445  06BA  3001               	movlw	1
 11446  06BB  00C4               	movwf	??_sprintf^(0+128)
 11447  06BC  0844               	movf	??_sprintf^(0+128),w
 11448  06BD  1683               	bsf	3,5	;RP0=1, select bank3
 11449  06BE  1703               	bsf	3,6	;RP1=1, select bank3
 11450  06BF  07A1               	addwf	sprintf@sp^(0+384),f
 11451  06C0                     l4620:
 11452                           
 11453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11454  06C0  0828               	movf	sprintf@c^(0+384),w
 11455  06C1  1683               	bsf	3,5	;RP0=1, select bank1
 11456  06C2  1303               	bcf	3,6	;RP1=0, select bank1
 11457  06C3  00C4               	movwf	??_sprintf^(0+128)
 11458  06C4  3001               	movlw	1
 11459  06C5                     u8195:
 11460  06C5  1003               	clrc
 11461  06C6  0DC4               	rlf	??_sprintf^(0+128),f
 11462  06C7  3EFF               	addlw	-1
 11463  06C8  1D03               	skipz
 11464  06C9  2EC5               	goto	u8195
 11465  06CA  1003               	clrc
 11466  06CB  0D44               	rlf	??_sprintf^(0+128),w
 11467  06CC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11468  06CD  0084               	movwf	4
 11469  06CE  160A  158A  2000  120A  118A  	fcall	stringdir
 11470  06D3  1283               	bcf	3,5	;RP0=0, select bank0
 11471  06D4  1303               	bcf	3,6	;RP1=0, select bank0
 11472  06D5  00A0               	movwf	___llmod@divisor
 11473  06D6  160A  158A  2000  120A  118A  	fcall	stringdir
 11474  06DB  00A1               	movwf	___llmod@divisor+1
 11475  06DC  160A  158A  2000  120A  118A  	fcall	stringdir
 11476  06E1  00A2               	movwf	___llmod@divisor+2
 11477  06E2  160A  158A  2000  120A  118A  	fcall	stringdir
 11478  06E7  00A3               	movwf	___llmod@divisor+3
 11479  06E8  1683               	bsf	3,5	;RP0=1, select bank3
 11480  06E9  1703               	bsf	3,6	;RP1=1, select bank3
 11481  06EA  081A               	movf	(sprintf@val+3)^(0+384),w
 11482  06EB  1283               	bcf	3,5	;RP0=0, select bank0
 11483  06EC  1303               	bcf	3,6	;RP1=0, select bank0
 11484  06ED  00A7               	movwf	___llmod@dividend+3
 11485  06EE  1683               	bsf	3,5	;RP0=1, select bank3
 11486  06EF  1703               	bsf	3,6	;RP1=1, select bank3
 11487  06F0  0819               	movf	(sprintf@val+2)^(0+384),w
 11488  06F1  1283               	bcf	3,5	;RP0=0, select bank0
 11489  06F2  1303               	bcf	3,6	;RP1=0, select bank0
 11490  06F3  00A6               	movwf	___llmod@dividend+2
 11491  06F4  1683               	bsf	3,5	;RP0=1, select bank3
 11492  06F5  1703               	bsf	3,6	;RP1=1, select bank3
 11493  06F6  0818               	movf	(sprintf@val+1)^(0+384),w
 11494  06F7  1283               	bcf	3,5	;RP0=0, select bank0
 11495  06F8  1303               	bcf	3,6	;RP1=0, select bank0
 11496  06F9  00A5               	movwf	___llmod@dividend+1
 11497  06FA  1683               	bsf	3,5	;RP0=1, select bank3
 11498  06FB  1703               	bsf	3,6	;RP1=1, select bank3
 11499  06FC  0817               	movf	sprintf@val^(0+384),w
 11500  06FD  1283               	bcf	3,5	;RP0=0, select bank0
 11501  06FE  1303               	bcf	3,6	;RP1=0, select bank0
 11502  06FF  00A4               	movwf	___llmod@dividend
 11503  0700  160A  158A  21BA  120A  118A  	fcall	___llmod
 11504  0705  1283               	bcf	3,5	;RP0=0, select bank0
 11505  0706  1303               	bcf	3,6	;RP1=0, select bank0
 11506  0707  0823               	movf	?___llmod+3,w
 11507  0708  1683               	bsf	3,5	;RP0=1, select bank3
 11508  0709  1703               	bsf	3,6	;RP1=1, select bank3
 11509  070A  009A               	movwf	(sprintf@val+3)^(0+384)
 11510  070B  1283               	bcf	3,5	;RP0=0, select bank0
 11511  070C  1303               	bcf	3,6	;RP1=0, select bank0
 11512  070D  0822               	movf	?___llmod+2,w
 11513  070E  1683               	bsf	3,5	;RP0=1, select bank3
 11514  070F  1703               	bsf	3,6	;RP1=1, select bank3
 11515  0710  0099               	movwf	(sprintf@val+2)^(0+384)
 11516  0711  1283               	bcf	3,5	;RP0=0, select bank0
 11517  0712  1303               	bcf	3,6	;RP1=0, select bank0
 11518  0713  0821               	movf	?___llmod+1,w
 11519  0714  1683               	bsf	3,5	;RP0=1, select bank3
 11520  0715  1703               	bsf	3,6	;RP1=1, select bank3
 11521  0716  0098               	movwf	(sprintf@val+1)^(0+384)
 11522  0717  1283               	bcf	3,5	;RP0=0, select bank0
 11523  0718  1303               	bcf	3,6	;RP1=0, select bank0
 11524  0719  0820               	movf	?___llmod,w
 11525  071A  1683               	bsf	3,5	;RP0=1, select bank3
 11526  071B  1703               	bsf	3,6	;RP1=1, select bank3
 11527  071C  0097               	movwf	sprintf@val^(0+384)
 11528  071D                     l4622:
 11529                           
 11530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11531  071D  3001               	movlw	1
 11532  071E  02A8               	subwf	sprintf@c^(0+384),f
 11533  071F  0A28               	incf	sprintf@c^(0+384),w
 11534  0720  1D03               	btfss	3,2
 11535  0721  2F23               	goto	u8201
 11536  0722  2F24               	goto	u8200
 11537  0723                     u8201:
 11538  0723  2E10               	goto	l4614
 11539  0724                     u8200:
 11540  0724  2F3E               	goto	l4630
 11541  0725                     l4624:
 11542                           
 11543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11544  0725  3030               	movlw	48
 11545  0726  1683               	bsf	3,5	;RP0=1, select bank1
 11546  0727  1303               	bcf	3,6	;RP1=0, select bank1
 11547  0728  00C4               	movwf	??_sprintf^(0+128)
 11548  0729  1683               	bsf	3,5	;RP0=1, select bank3
 11549  072A  1703               	bsf	3,6	;RP1=1, select bank3
 11550  072B  0821               	movf	sprintf@sp^(0+384),w
 11551  072C  0084               	movwf	4
 11552  072D  1683               	bsf	3,5	;RP0=1, select bank1
 11553  072E  1303               	bcf	3,6	;RP1=0, select bank1
 11554  072F  0844               	movf	??_sprintf^(0+128),w
 11555  0730  1383               	bcf	3,7	;select IRP bank0
 11556  0731  0080               	movwf	0
 11557  0732                     l4626:
 11558  0732  3001               	movlw	1
 11559  0733  00C4               	movwf	??_sprintf^(0+128)
 11560  0734  0844               	movf	??_sprintf^(0+128),w
 11561  0735  1683               	bsf	3,5	;RP0=1, select bank3
 11562  0736  1703               	bsf	3,6	;RP1=1, select bank3
 11563  0737  07A1               	addwf	sprintf@sp^(0+384),f
 11564  0738                     l4628:
 11565                           
 11566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11567  0738  30FF               	movlw	255
 11568  0739  07A2               	addwf	sprintf@prec^(0+384),f
 11569  073A  1803               	skipnc
 11570  073B  0AA3               	incf	(sprintf@prec+1)^(0+384),f
 11571  073C  30FF               	movlw	255
 11572  073D  07A3               	addwf	(sprintf@prec+1)^(0+384),f
 11573  073E                     l4630:
 11574                           
 11575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11576  073E  0822               	movf	sprintf@prec^(0+384),w
 11577  073F  0423               	iorwf	(sprintf@prec+1)^(0+384),w
 11578  0740  1D03               	btfss	3,2
 11579  0741  2F43               	goto	u8211
 11580  0742  2F44               	goto	u8210
 11581  0743                     u8211:
 11582  0743  2F25               	goto	l4624
 11583  0744                     u8210:
 11584  0744  2F9C               	goto	l4650
 11585  0745                     l4632:
 11586                           
 11587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11588  0745  1683               	bsf	3,5	;RP0=1, select bank3
 11589  0746  1703               	bsf	3,6	;RP1=1, select bank3
 11590  0747  0822               	movf	sprintf@prec^(0+384),w
 11591  0748  0423               	iorwf	(sprintf@prec+1)^(0+384),w
 11592  0749  1D03               	btfss	3,2
 11593  074A  2F4C               	goto	u8221
 11594  074B  2F4D               	goto	u8220
 11595  074C                     u8221:
 11596  074C  2F5B               	goto	l345
 11597  074D                     u8220:
 11598  074D                     l4634:
 11599  074D  081A               	movf	(sprintf@val+3)^(0+384),w
 11600  074E  0419               	iorwf	(sprintf@val+2)^(0+384),w
 11601  074F  0418               	iorwf	(sprintf@val+1)^(0+384),w
 11602  0750  0417               	iorwf	sprintf@val^(0+384),w
 11603  0751  1D03               	skipz
 11604  0752  2F54               	goto	u8231
 11605  0753  2F55               	goto	u8230
 11606  0754                     u8231:
 11607  0754  2F5B               	goto	l345
 11608  0755                     u8230:
 11609  0755                     l4636:
 11610                           
 11611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11612  0755  3001               	movlw	1
 11613  0756  07A2               	addwf	sprintf@prec^(0+384),f
 11614  0757  1803               	skipnc
 11615  0758  0AA3               	incf	(sprintf@prec+1)^(0+384),f
 11616  0759  3000               	movlw	0
 11617  075A  07A3               	addwf	(sprintf@prec+1)^(0+384),f
 11618  075B                     l345:
 11619                           
 11620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11621  075B  0823               	movf	(sprintf@prec+1)^(0+384),w
 11622  075C  3A80               	xorlw	128
 11623  075D  3C80               	sublw	128
 11624  075E  1D03               	skipz
 11625  075F  2F62               	goto	u8245
 11626  0760  0822               	movf	sprintf@prec^(0+384),w
 11627  0761  0228               	subwf	sprintf@c^(0+384),w
 11628  0762                     u8245:
 11629  0762  1803               	skipnc
 11630  0763  2F65               	goto	u8241
 11631  0764  2F66               	goto	u8240
 11632  0765                     u8241:
 11633  0765  2F67               	goto	l4640
 11634  0766                     u8240:
 11635  0766                     l4638:
 11636  0766  2F7A               	goto	l4644
 11637  0767                     l4640:
 11638  0767  1683               	bsf	3,5	;RP0=1, select bank3
 11639  0768  1703               	bsf	3,6	;RP1=1, select bank3
 11640  0769  0823               	movf	(sprintf@prec+1)^(0+384),w
 11641  076A  3A80               	xorlw	128
 11642  076B  1683               	bsf	3,5	;RP0=1, select bank1
 11643  076C  1303               	bcf	3,6	;RP1=0, select bank1
 11644  076D  00C4               	movwf	??_sprintf^(0+128)
 11645  076E  3080               	movlw	128
 11646  076F  0244               	subwf	??_sprintf^(0+128),w
 11647  0770  1D03               	skipz
 11648  0771  2F76               	goto	u8255
 11649  0772  1683               	bsf	3,5	;RP0=1, select bank3
 11650  0773  1703               	bsf	3,6	;RP1=1, select bank3
 11651  0774  0828               	movf	sprintf@c^(0+384),w
 11652  0775  0222               	subwf	sprintf@prec^(0+384),w
 11653  0776                     u8255:
 11654  0776  1803               	skipnc
 11655  0777  2F79               	goto	u8251
 11656  0778  2F7A               	goto	u8250
 11657  0779                     u8251:
 11658  0779  2F7A               	goto	l4644
 11659  077A                     u8250:
 11660  077A                     l4642:
 11661  077A                     l4644:
 11662                           
 11663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11664  077A  3003               	movlw	3
 11665  077B  1683               	bsf	3,5	;RP0=1, select bank3
 11666  077C  1703               	bsf	3,6	;RP1=1, select bank3
 11667  077D  0515               	andwf	sprintf@flag^(0+384),w
 11668  077E  1683               	bsf	3,5	;RP0=1, select bank1
 11669  077F  1303               	bcf	3,6	;RP1=0, select bank1
 11670  0780  00C4               	movwf	??_sprintf^(0+128)
 11671  0781  3000               	movlw	0
 11672  0782  1683               	bsf	3,5	;RP0=1, select bank3
 11673  0783  1703               	bsf	3,6	;RP1=1, select bank3
 11674  0784  0516               	andwf	(sprintf@flag+1)^(0+384),w
 11675  0785  1683               	bsf	3,5	;RP0=1, select bank1
 11676  0786  1303               	bcf	3,6	;RP1=0, select bank1
 11677  0787  00C5               	movwf	(??_sprintf+1)^(0+128)
 11678  0788  0844               	movf	??_sprintf^(0+128),w
 11679  0789  0445               	iorwf	(??_sprintf^(0+128)+1),w
 11680  078A  1903               	btfsc	3,2
 11681  078B  2F8D               	goto	u8261
 11682  078C  2F8E               	goto	u8260
 11683  078D                     u8261:
 11684  078D  2F9C               	goto	l4650
 11685  078E                     u8260:
 11686  078E                     l4646:
 11687                           
 11688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11689  078E  302D               	movlw	45
 11690  078F  00C4               	movwf	??_sprintf^(0+128)
 11691  0790  1683               	bsf	3,5	;RP0=1, select bank3
 11692  0791  1703               	bsf	3,6	;RP1=1, select bank3
 11693  0792  0821               	movf	sprintf@sp^(0+384),w
 11694  0793  0084               	movwf	4
 11695  0794  1683               	bsf	3,5	;RP0=1, select bank1
 11696  0795  1303               	bcf	3,6	;RP1=0, select bank1
 11697  0796  0844               	movf	??_sprintf^(0+128),w
 11698  0797  1383               	bcf	3,7	;select IRP bank0
 11699  0798  0080               	movwf	0
 11700  0799  160A  118A  29A3   	goto	l4462
 11701  079C                     l4650:
 11702                           
 11703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11704  079C  3001               	movlw	1
 11705  079D  1303               	bcf	3,6	;RP1=0, select bank1
 11706  079E  07BF               	addwf	sprintf@f^(0+128),f
 11707  079F  30FF               	movlw	-1
 11708  07A0  073F               	addwf	sprintf@f^(0+128),w
 11709  07A1  0084               	movwf	4
 11710  07A2  160A  158A  2000  120A  118A  	fcall	stringdir
 11711  07A7  00C4               	movwf	??_sprintf^(0+128)
 11712  07A8  0844               	movf	??_sprintf^(0+128),w
 11713  07A9  1683               	bsf	3,5	;RP0=1, select bank3
 11714  07AA  1703               	bsf	3,6	;RP1=1, select bank3
 11715  07AB  00A8               	movwf	sprintf@c^(0+384)
 11716  07AC  0828               	movf	sprintf@c^(0+384),w
 11717  07AD  1D03               	btfss	3,2
 11718  07AE  2FB0               	goto	u8271
 11719  07AF  2FB3               	goto	u8270
 11720  07B0                     u8271:
 11721  07B0  160A  118A  2990   	goto	l4458
 11722  07B3                     u8270:
 11723  07B3                     l4652:
 11724                           
 11725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11726  07B3  1683               	bsf	3,5	;RP0=1, select bank3
 11727  07B4  1703               	bsf	3,6	;RP1=1, select bank3
 11728  07B5  0821               	movf	sprintf@sp^(0+384),w
 11729  07B6  0084               	movwf	4
 11730  07B7  1383               	bcf	3,7	;select IRP bank0
 11731  07B8  0180               	clrf	0
 11732  07B9                     l351:
 11733  07B9  0008               	return
 11734  07BA                     __end_of_sprintf:

Data Sizes:
    Strings     26
    Constant    144
    Data        12
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     62      78
    BANK3            96     25      39
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK1[20]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___llmod
    _sprintf->_isdigit
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___awdiv
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    ___lwdiv->___lwmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fladd
    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___xxtofl->___lwdiv
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    ___wmul->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___fltol
    _ReadTemp->___fltol
    _Cal_PID->___fltol
    ___fltol->___flsub
    ___flsub->___fladd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   71643
                                             41 BANK1     21    21      0
                            _Cal_PID
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _ReadTemp
                            ___fladd
                            ___flmul
                           ___xxtofl
                           _init_ADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   43559
                                             31 BANK1     10     5      5
                                              0 BANK3     25    25      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9900
                                             52 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              5 COMMON     1     1      0
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    8316
                                             52 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadTemp                                             8     8      0    8888
                                             31 BANK1      8     8      0
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     836
                                             12 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    6053
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     456
                                              3 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     725
                                              2 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Cal_PID                                              2     2      0    7026
                                             31 BANK1      2     2      0
                            ___flsub
                            ___fltol
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1188
                                             12 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1141
                                              4 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     787
                                             20 BANK1     11     7      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3907
                                             12 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3482
                                             72 BANK0      8     0      8
                                              0 BANK1     12    12      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cal_PID
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
     ___lwdiv
       ___lwmod (ARG)
     ___wmul
       ___lwdiv (ARG)
         ___lwmod (ARG)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ReadTemp
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
     ___lwdiv
       ___lwmod (ARG)
     ___xxtofl
       ___lwdiv (ARG)
         ___lwmod (ARG)
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
   ___xxtofl
     ___lwdiv (ARG)
       ___lwmod (ARG)
   _init_ADC
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
       ___lwdiv (ARG)
         ___lwmod (ARG)
     ___xxtofl
       ___lwdiv (ARG)
         ___lwmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     19      27       9       40.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     3E      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CF      12        0.0%
ABS                  0      0      CF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 02 13:24:46 2021

          ReadTemp@voltage 00C3                          _T 00EA                          pc 0002  
                       l81 0823                         l73 080B                         l74 080E  
                       l75 0814                         l76 0815                         l84 002A  
                       l77 081B                         l93 1A67                         l78 081C  
                       l79 0822                         l87 0033                         l96 1064  
                       l99 006A               ___awdiv@sign 002B                         _kd 01B5  
                       _ki 0078                         _kp 00EC                         fsr 0004  
      ___wmul@multiplicand 002E        __Umul8_16@word_mpld 0024                        l105 008F  
                      l304 1224                        l153 18D3                        l330 050E  
                      l164 0914                        l156 1D1D                        l165 0918  
                      l159 1DC8                        l351 07B9                        l521 1AC2  
                      l345 075B                        l337 0560                        l355 000E  
                      l611 1A0F                        l508 1BF9                        l357 0026  
                      l541 1988                        l525 1FFF                        l285 0C7B  
                      l542 19A4                        l550 1D19                        l526 1F64  
                      l278 0237                        l703 0F03                        l543 19B9  
                      l391 1B90                        l536 1FF2                        l713 0F5D  
                      l529 1FC2                        l546 1C94                        l554 18BE  
                      l707 0F34                        l724 0FEB                        l716 0FBF  
                      l572 1F41                        l725 0FFF                        l565 1C60  
                      l661 1919                        l549 1D00                        l573 1EB3  
                      l558 1C75                        l822 1DED                        l583 1F34  
                      l671 00F4                        l728 1969                        l568 1C75  
                      l824 1E84                        l576 1F04                        l682 0D01  
                      l842 0106                        l835 1E4E                        l836 1E5A  
                      l828 1E32                        l686 0DEE                        l790 17F3  
                      l695 0FFF                        l688 0DBB                        l784 176B  
                      l778 17FF                        l797 00A6                        l799 00B8  
                      _GIE 005F                        _RD0 0040                        _RB4 0034  
                      _RB5 0035                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _ISR 1AC3                        fsr0 0004  
                      _tmp 01AF                        indf 0000               ___awmod@sign 0025  
             ___flmul@aexp 0048               ___flmul@bexp 004D                _sprintf$928 0190  
             ___flmul@sign 0047               ___flmul@temp 0052               ___flmul@prod 004E  
                     ?_ISR 0070               ___fltol@exp1 00BE                       l4000 0019  
                     l4002 001C                       l4010 0042                       l4004 0027  
                     l4020 0060                       l4012 0050                       l4022 0063  
                     l4014 0053                       l4006 0037                       l4110 1EBA  
                     l4102 1EA1                       l4200 0000                       l4024 0067  
                     l4016 0057                       l4008 0041                       l4120 1EEB  
                     l4112 1EC9                       l4040 01F4                       l4210 0022  
                     l4202 0004                       l4018 005A                       l4122 1EF5  
                     l4114 1ECB                       l4034 0143                       l4026 002E  
                     l4050 0929                       l4300 1C3C                       l4204 0008  
                     l4220 1B4B                       l4124 1EF6                       l4116 1ED4  
                     l4108 1EB4                       l4036 0149                       l4028 0034  
                     l4044 091C                       l4310 1C65                       l4302 1C4E  
                     l4206 0015                       l3510 0095                       l4230 1B79  
                     l4222 1B4F                       l4214 1B29                       l4150 1F4F  
                     l4142 1F29                       l4134 1F10                       l4126 1EFE  
                     l4118 1EDD                       l4062 0AA2                       l4046 0920  
                     l4312 1C6A                       l4208 001C                       l4400 1A54  
                     l3512 009C                       l4240 1980                       l4232 1B82  
                     l4224 1B58                       l4216 1B3B                       l4320 19D4  
                     l4160 1F65                       l4144 1F39                       l4128 1F08  
                     l4136 1F22                       l3600 1AA1                       l4080 0C4F  
                     l4056 0A13                       l4048 0922                       l3530 0820  
                     l3522 0803                       l4410 1013                       l4402 1A59  
                     l3514 00A0                       l4242 199C                       l4250 1C76  
                     l4226 1B6A                       l4218 1B3E                       l4234 1B88  
                     l4322 19D8                       l4330 1A07                       l4314 19BA  
                     l4170 1F92                       l4162 1F6D                       l4154 1F58  
                     l4090 0103                       l3610 1ABE                       l3602 1AA7  
                     l4074 0BC0                       l4058 0A1A                       l4066 0ACF  
                     l3700 0CF3                       l4308 1C55                       l3620 18E1  
                     l3524 0807                       l4412 1024                       l4404 1A5F  
                     l4420 007C                       l3516 00AF                       l3508 0093  
                     l4340 1DCC                       l4244 19B6                       l4260 1CD8  
                     l4252 1C8C                       l4228 1B78                       l4324 19EA  
                     l4316 19C4                       l4180 1FC6                       l4172 1FA4  
                     l4164 1F7E                       l4148 1F42                       l4092 0105  
                     l4084 00F6                       l3540 1B9F                       l3532 1B91  
                     l3604 1AAE                       l4076 0BC7                       l4068 0AD6  
                     l4500 127C                       l3710 0D11                       l3702 0CF5  
                     l4334 191A                       l3630 1907                       l3622 18E8  
                     l3614 18D4                       l3526 0812                       l4414 102A  
                     l4406 1002                       l4422 0084                       l3518 00B4  
                     l4342 1DD1                       l4430 1D21                       l4246 19B8  
                     l4238 196A                       l4262 1CDC                       l4254 1CA8  
                     l4270 18B2                       l4326 19F8                       l4318 19C7  
                     l4174 1FB2                       l4166 1F80                       l4086 00F7  
                     l3550 1BB4                       l3542 1BA3                       l3534 1B94  
                     l3606 1AB4                       l4510 1307                       l4502 12A3  
                     l3720 0D2F                       l3712 0D15                       l3704 0CF7  
                     l4336 191E                       l4280 1C07                       l3632 1908  
                     l3624 18EC                       l3616 18D8                       l4440 0877  
                     l3528 0819                       l4408 1008                       l4416 006E  
                     l4360 1E1B                       l4352 1DFE                       l4344 1DD5  
                     l4432 1D27                       l4424 18BF                       l4264 1D16  
                     l4256 1CB0                       l4272 18BC                       l4328 1A01  
                     l4176 1FB3                       l4168 1F89                       l4096 1E85  
                     l3640 00B9                       l4088 00FD                       l3560 1BD7  
                     l3552 1BB7                       l3544 1BA8                       l3536 1B98  
                     l3608 1AB9                       l4600 054D                       l4520 1362  
                     l4512 1312                       l4504 12D8                       l3810 0F3D  
                     l3802 0F1E                       l3730 0D55                       l3722 0D37  
                     l3714 0D19                       l3706 0D09                       l4290 1C2E  
                     l3634 190F                       l3626 18F0                       l3618 18DE  
                     l4442 0879                       l4418 0071                       l4370 1E52  
                     l4362 1E29                       l4354 1E03                       l4346 1DE5  
                     l4434 1D73                       l4426 1D1A                       l4266 1D18  
                     l4258 1CB4                       l4274 18BE                       l4194 1FE7  
                     l4186 1FCE                       l4178 1FBC                       l4098 1E98  
                     l3650 00D3                       l3642 00C1                       l3570 1BF0  
                     l3562 1BDD                       l3554 1BBE                       l3546 1BAC  
                     l3538 1B9D                       l4610 0589                       l4602 0556  
                     l4530 1402                       l4522 1368                       l4514 1318  
                     l4506 12DC                       l3820 0F4E                       l3812 0F3F  
                     l3804 0F2D                       l3732 0D5F                       l3724 0D3D  
                     l3716 0D1D                       l3708 0D0D                       l3740 0D7F  
                     l4292 1C30                       l4284 1C10                       l3628 1901  
                     l3636 1915                       l4452 0907                       l4444 0898  
                     l4436 0824                       l3900 150C                       l4380 1E7C  
                     l4372 1E5C                       l4364 1E39                       l4356 1E10  
                     l4348 1DF5                       l4428 1D1A                       l4196 1FF7  
                     l4188 1FE0                       l3652 00DD                       l3644 00C4  
                     l3572 1BF5                       l3564 1BDE                       l3556 1BC2  
                     l3548 1BAE                       l3580 1A6F                       l4620 06C0  
                     l4612 05A7                       l4604 0571                       l4540 0238  
                     l4532 142B                       l4524 1387                       l4516 133B  
                     l4508 12E0                       l4460 1196                       l4700 108D  
                     l3830 0F6B                       l3822 0F52                       l3814 0F44  
                     l3806 0F31                       l3750 0DCA                       l3742 0D82  
                     l3734 0D67                       l3726 0D47                       l3718 0D25  
                     l3670 0C98                       l3662 0C7C                       l4294 1C34  
                     l4286 1C25                       l4278 1BFA                       l4454 0910  
                     l4446 08BD                       l4438 086E                       l4390 1A29  
                     l3910 158E                       l3902 151C                       l4374 1E72  
                     l4366 1E44                       l4358 1E17                       l3654 00E3  
                     l3646 00CB                       l3566 1BE5                       l3558 1BC6  
                     l3590 1A85                       l3582 1A74                       l4630 073E  
                     l4614 0610                       l4622 071D                       l4606 0576  
                     l4550 02C9                       l4542 0261                       l4526 13D2  
                     l4518 135E                       l4534 1433                       l4470 11BD  
                     l4462 11A3                       l4710 110D                       l4702 108E  
                     l3840 0FCB                       l3832 0F7B                       l3824 0F58  
                     l3808 0F3A                       l3816 0F46                       l3760 0DF2  
                     l3752 0DD0                       l3744 0D99                       l3736 0D6D  
                     l3728 0D4F                       l3672 0C9F                       l3680 0CB2  
                     l3664 0C85                       l4288 1C26                       l4448 08F7  
                     l4384 0027                       l4392 1A2E                       l3920 15FC  
                     l3912 15AA                       l3904 1529                       l4376 1E77  
                     l4368 1E48                       l3656 00EA                       l3648 00CF  
                     l3568 1BEB                       l3592 1A88                       l3584 1A76  
                     l3576 1A68                       l4640 0767                       l4624 0725  
                     l4616 066D                       l4608 0583                       l4552 02D1  
                     l4544 0288                       l4560 0343                       l4536 1442  
                     l4528 13F9                       l4632 0745                       l4480 120C  
                     l4472 11C3                       l4464 11AA                       l4456 1185  
                     l4720 114A                       l4712 1111                       l4704 10FB  
                     l3850 0FE5                       l3842 0FD5                       l3834 0F7F  
                     l3770 0E1F                       l3818 0F4B                       l3762 0DF7  
                     l3754 0DD3                       l3746 0DBF                       l3738 0D77  
                     l3690 0CD4                       l3682 0CBC                       l3674 0CA4  
                     l3666 0C8F                       l4394 1A34                       l4386 1A13  
                     l3930 168C                       l3922 160C                       l3914 15C6  
                     l3906 1546                       l4378 1E7B                       l3658 00F0  
                     l3594 1A8F                       l3586 1A7A                       l3578 1A6B  
                     l4642 077A                       l4634 074D                       l4626 0732  
                     l4618 06AC                       l4562 0378                       l4554 02EF  
                     l4546 0297                       l4538 1489                       l4490 1248  
                     l4474 11C8                       l4482 121E                       l4466 11AC  
                     l4458 1190                       l4650 079C                       l4722 116E  
                     l4714 1116                       l4706 10FD                       l3852 0FF6  
                     l3844 0FDC                       l3836 0FBB                       l3828 0F64  
                     l3780 0E39                       l3772 0E25                       l3756 0DE2  
                     l3748 0DC8                       l3692 0CDA                       l3684 0CC3  
                     l3676 0CAE                       l3668 0C95                       l4388 1A18  
                     l4396 1A3D                       l3940 1720                       l3932 169C  
                     l3924 1629                       l3916 15CF                       l3908 1562  
                     l3860 14AC                       l3596 1A93                       l3588 1A7F  
                     l4644 077A                       l4636 0755                       l4628 0738  
                     l4580 044C                       l4572 03E5                       l4564 03E1  
                     l4548 02C0                       l4492 125C                       l4652 07B3  
                     l4484 1222                       l4476 11EB                       l4468 11BA  
                     l4724 1178                       l4716 113A                       l4708 1103  
                     l3854 0FFC                       l3846 0FDD                       l3838 0FC6  
                     l3790 0EDF                       l3782 0E48                       l3774 0E2E  
                     l3766 0E02                       l3758 0DE6                       l3694 0CDD  
                     l3686 0CC9                       l3678 0CB0                       l4398 1A43  
                     l3950 1745                       l3942 172E                       l3934 16C9  
                     l3926 1642                       l3918 15DF                       l3870 14C3  
                     l3862 14B0                       l3598 1A97                       l4646 078E  
                     l4638 0766                       l4590 0518                       l4582 0457  
                     l4566 03E3                       l4558 033A                       l4494 1262  
                     l4478 1206                       l4718 1144                       l4670 106D  
                     l3848 0FE1                       l3792 0EE4                       l3776 0E30  
                     l3768 0E1B                       l3784 0E4D                       l3696 0CE4  
                     l3688 0CCA                       l3960 1768                       l3944 1737  
                     l3952 174B                       l3936 16EF                       l3928 165F  
                     l3880 14DC                       l3872 14C5                       l3864 14B1  
                     l3856 149F                       l4592 0525                       l4584 045E  
                     l4576 042C                       l4496 1266                       l4488 1228  
                     l4680 107A                       l4672 106E                       l3786 0E65  
                     l3794 0EF5                       l3778 0E36                       l3698 0CE9  
                     l3970 1787                       l3954 174F                       l3946 173B  
                     l3938 1717                       l3890 14F1                       l3882 14DD  
                     l3874 14CD                       l3866 14B6                       l3858 14A6  
                     l4594 052B                       l4586 04BB                       l4578 043A  
                     l4498 1274                       l4690 1082                       l4682 107E  
                     l4674 1073                       l4666 1065                       l3796 0F0C  
                     l3788 0ED7                       l3980 17CD                       l3972 17A0  
                     l3964 1770                       l3956 1750                       l3948 173C  
                     l3892 14F9                       l3884 14E2                       l3876 14D2  
                     l3868 14BB                       l4596 0531                       l4588 04FA  
                     l4756 1240                       l4692 1083                       l4684 107F  
                     l4676 1076                       l4668 106A                       l3798 0F13  
                     l3990 17EC                       l3982 17D7                       l3966 1775  
                     l3974 17A6                       l3958 1754                       l3894 14FE  
                     l3886 14E7                       l3878 14D8                       l4598 053E  
                     l4694 1086                       l4686 1080                       l4678 1077  
                     l3992 17F7                       l3984 17D9                       l3976 17B3  
                     l3968 1783                       l3896 1503                       l3888 14EF  
                     l4696 1089                       l4688 1081                       l3986 17E7  
                     l3978 17BE                       l4698 108A                       l3996 0010  
                     l3988 17EB                       l3998 0013                       STR_1 1896  
                     STR_2 18A3                       u6000 0CDA                       u6001 0CD9  
                     u6010 0CE4                       u6011 0CE3                       u6020 0CE9  
                     u6021 0CE8                       u6110 0DEE                       u6030 0D09  
                     u6111 0DED                       u6031 0D08                       u6120 0DF2  
                     u6040 0D0D                       u6201 0E94                       u6121 0DF1  
                     u6105 0DD7                       u6041 0D0C                       u6210 0EB6  
                     u6202 0E97                       u6130 0DF7                       u6050 0D99  
                     u7010 0BC7                       u6211 0EB7                       u6203 0E9E  
                     u6131 0DF6                       u6051 0D98                       u7011 0BC6  
                     _PEIE 005E                       u6300 0F52                       u6220 0EE4  
                     u6212 0EBC                       u6204 0EA1                       u6060 0DA4  
                     u7100 1EEB                       u6301 0F51                       u6221 0EE3  
                     u6213 0EBD                       u6205 0EA8                       u6141 0E0D  
                     u6061 0DA2                       u7101 1EEA                       u7005 0B7F  
                     _INTE 005C                       u6310 0F58                       u6230 0F0C  
                     u6206 0EAB                       u6150 0E1F                       u6142 0E14  
                     u6070 0DA5                       _INTF 0059                       u6311 0F57  
                     u6231 0F0B                       u6151 0E1E                       u6143 0E1B  
                     u6055 0D95                       u6400 0FE1                       u6320 0F63  
                     u6240 0F13                       u6160 0E25                       u6080 0DBF  
                     u5600 0807                       u7200 1F4F                       u7120 1F04  
                     u8000 1362                       _RBIF 0058                       u6401 0FE0  
                     u6321 0F62                       u6241 0F12                       u6161 0E24  
                     u6081 0DBE                       u5601 0806                       u7201 1F4E  
                     u7121 1F03                       u7105 1EE7                       u7025 0BDA  
                     u8001 1361                       u6410 0FFC                       u6330 0F6B  
                     u6170 0E36                       u6090 0DD0                       u5610 0812  
                     u7210 1F63                       u7130 1F08                       u7050 00FD  
                     u8010 13F9                       u6411 0FFB                       u6331 0F6A  
                     u6171 0E35                       u6091 0DCF                       u5611 0811  
                     u7211 1F62                       u7131 1F07                       u7115 1EF7  
                     u7051 00FC                       u7035 0C16                       u8011 13F8  
                     u6340 0F7F                       u6260 0F31                       u5620 0819  
                     u6420 14B0                       u7300 1FE6                       u7140 1F0F  
                     u7060 0103                       u5700 1BD7                       u8100 042B  
                     u8020 142B                       u6341 0F7E                       u6261 0F30  
                     u5621 0818                       u6501 1554                       u6421 14AF  
                     u7301 1FE5                       u7141 1F0E                       u7061 0102  
                     u5701 1BD6                       u7045 0C52                       u8101 042A  
                     u8021 142A                       u6350 0F9C                       u6270 0F3A  
                     u6190 0E65                       u5630 0820                       u6502 155B  
                     u6430 14B6                       u7230 1FA4                       u7070 1E98  
                     u8110 043A                       u8030 1442                       u6271 0F39  
                     u6255 0F22                       u6191 0E64                       u5631 081F  
                     u6511 1570                       u6503 1562                       u6431 14B5  
                     u7231 1FA3                       u7071 1E97                       u8111 0439  
                     u8031 1441                       u6360 0FBB                       u6280 0F44  
                     u6512 1577                       u6440 14BB                       u7320 1FF7  
                     u7160 1F21                       u7080 1EB2                       u5720 1BEB  
                     u5640 1B98                       u8200 0724                       u8120 044C  
                     u8040 0238                       u6361 0FBA                       u6281 0F43  
                     u6193 0E61                       u6185 0E3D                       u6601 16AB  
                     u6521 159C                       u6513 157E                       u6441 14BA  
                     u7321 1FF6                       u7225 1F8B                       u7161 1F20  
                     u7081 1EB1                       u5721 1BEA                       u5705 1BD3  
                     u5641 1B97                       u8201 0723                       u8121 044B  
                     u8105 0427                       u8041 1499                       u6370 0FC6  
                     u6290 0F4B                       u7330 0008                       u5570 00A0  
                     u6610 16D5                       u6602 16B2                       u6522 15A3  
                     u6450 14DC                       u7410 1B6A                       u7250 1FC2  
                     u7170 1F28                       u5730 1BF0                       u5650 1BA3  
                     u5810 1AB4                       u8210 0744                       u8050 0261  
                     u6371 0FC5                       u6355 0F97                       u6291 0F4A  
                     u7331 0007                       u5571 009F                       u6603 16B9  
                     u6531 15B8                       u6523 15AA                       u6451 14DB  
                     u7411 1B69                       u7315 1FE9                       u7251 1FC1  
                     u7235 1FA0                       u7171 1F27                       u7155 1F11  
                     u5731 1BEF                       u5715 1BDF                       u5651 1BA2  
                     u5811 1AB3                       u8211 0743                       u8051 0260  
                     u8035 143E                       u6380 0FCB                       u6700 1754  
                     u6532 15BF                       u6460 14E2                       u7260 1FC6  
                     u5900 00C1                       u5660 1BB4                       u5820 1AB9  
                     u5740 1A6F                       u8220 074D                       u8140 0517  
                     u8060 0288                       u6381 0FCA                       u6701 1753  
                     u6621 16E1                       u6533 15C6                       u6461 14E1  
                     u7501 1CC3                       u7405 1B51                       u7261 1FC5  
                     u7245 1FB5                       u5901 00C0                       u5661 1BB3  
                     u5821 1AB8                       u5805 1AA8                       u5741 1A6E  
                     u8221 074C                       u8141 0516                       u8061 0287  
                     u8045 1494                       u6390 0FDC                       u5830 18DE  
                     u5590 00B4                       u6710 1768                       u6630 16FD  
                     u6622 16E8                       u6470 14E7                       u7510 1CDC  
                     u7502 1CC4                       u7430 1B88                       u7270 1FCD  
                     u7190 1F39                       u5750 1A7A                       u8230 0755  
                     u8150 053E                       u8070 0297                       u6391 0FDB  
                     u5831 18DD                       u5591 00B3                       u6711 1767  
                     u6623 16EF                       u6615 16D0                       u6551 15EE  
                     u6471 14E6                       u7511 1CDB                       u7503 1CC9  
                     u7431 1B87                       u7415 1B66                       u7271 1FCC  
                     u7191 1F38                       u7095 1ED6                       u5751 1A79  
                     u8231 0754                       u8151 053D                       u8135 0463  
                     u8071 0296                       u7600 1C4D                       u7360 0022  
                     u6720 176F                       u6552 15F5                       u6480 14FE  
                     u7440 1980                       u7504 1CCA                       u5920 00D3  
                     u6800 0034                       u5680 1BC6                       u5760 1A85  
                     u8240 0766                       u8160 054D                       u8080 02C0  
                     u7601 1C4C                       u7361 0021                       u7345 000F  
                     u5585 00A7                       u6721 176E                       u6641 1709  
                     u6561 161B                       u6553 15FC                       u6545 15C8  
                     u6481 14FD                       u7441 197F                       u7521 1CEB  
                     u7505 1CCF                       u7425 1B7A                       u7185 1F2B  
                     u5921 00D2                       u6801 0033                       u5681 1BC5  
                     u5761 1A84                       u8241 0765                       u8161 054C  
                     u8081 02BF                       u7610 1C54                       u5850 18F0  
                     u6730 1775                       u6642 1710                       u6562 1622  
                     u6490 1503                       u7450 199C                       u7530 1D16  
                     u7522 1CEC                       u7506 1CD0                       u7370 1B3B  
                     u7290 1FDF                       u5930 00DD                       u8250 077A  
                     u8170 0576                       u7611 1C53                       u5851 18EF  
                     u7355 0016                       u8307 0065                       u6731 1774  
                     u6643 1717                       u6635 16F8                       u6563 1629  
                     u6491 1502                       u7451 199B                       u7531 1D15  
                     u7523 1CF1                       u7371 1B3A                       u7291 1FDE  
                     u5931 00DC                       u5915 00C5                       u5675 1BB8  
                     u8251 0779                       u8171 0575                       u8155 053A  
                     u8075 0293                       u6740 1787                       u7460 19B6  
                     u7524 1CF2                       u7540 18BC                       u7700 1A07  
                     u5780 1A97                       u8260 078E                       u5845 18E2  
                     u8317 100E                       u6741 1786                       u6581 1651  
                     u7461 19B5                       u7525 1CF7                       u7541 18BB  
                     u7701 1A06                       u7285 1FCF                       u5781 1A96  
                     u8261 078D                       u8245 0762                       u8165 0549  
                     u7630 1C65                       u7550 1C07                       u5870 1901  
                     u6750 1796                       u6670 173B                       u6582 1658  
                     u7710 1DD1                       u7526 1CF8                       u7470 1C8C  
                     u7390 1B4F                       u5950 00F0                       u5790 1AA1  
                     u8270 07B3                       u7631 1C64                       u7551 1C06  
                     u5871 1900                       u8327 101F                       u6671 173A  
                     u6655 1719                       u6591 167E                       u6583 165F  
                     u6575 162B                       u7711 1DD0                       u7535 1D12  
                     u7471 1C8B                       u7391 1B4E                       u5951 00EF  
                     u5935 00D9                       u6815 0051                       u5695 1BC7  
                     u5791 1AA0                       u5775 1A89                       u8271 07B0  
                     u8255 0776                       u8095 03EA                       u5960 0C95  
                     u7640 1C6A                       u7560 1C1E                       u6760 17B3  
                     u6592 1685                       u7800 1E4E                       u7720 1DD5  
                     u7480 1CA8                       u6840 0149                       u8280 1103  
                     u5961 0C94                       u7641 1C69                       u7625 1C57  
                     u5865 18F1                       u8337 1030                       u6761 17B2  
                     u6665 1730                       u6593 168C                       u7801 1E4D  
                     u7721 1DD4                       u7465 19B2                       u7481 1CA7  
                     u7385 1B40                       u5945 00E4                       u6841 0148  
                     u6825 00AD                       u6905 094B                       u8185 0615  
                     u8281 1102                       u5970 0C9F                       u7570 1C34  
                     u5890 1915                       u6770 17CD                       u6690 174F  
                     u7810 1E52                       u7730 1DF5                       u7490 1CB4  
                     u7650 19C4                       u6930 0A1A                       u5971 0C9E  
                     u7571 1C33                       u5891 1914                       u5875 18FD  
                     u8347 0022                       u6771 17CC                       u6755 1791  
                     u6691 174E                       u7811 1E51                       u7731 1DF4  
                     u7491 1CB3                       u7651 19C3                       u6835 0102  
                     u5795 1A9D                       u6931 0A19                       u6915 0987  
                     u8195 06C5                       u5980 0CA4                       u7580 1C3B  
                     u6780 17EB                       u7820 1E67                       u7900 1D21  
                     u5981 0CA3                       u7581 1C3A                       u7565 1C19  
                     u5885 1909                       u6781 17EA                       u6765 17AF  
                     u6685 173E                       u7901 1D20                       u6925 09D2  
                     u5990 0CC9                       u7910 0877                       u7830 1E77  
                     u7750 1E16                       u7670 19D8                       u5991 0CC8  
                     u7911 0876                       u6775 17C9                       u7831 1E76  
                     u7751 1E15                       u7671 19D7                       u6855 0166  
                     u7920 0910                       u7840 1E7B                       u7680 19EA  
                     u6880 0920                       u7921 090F                       u8297 0055  
                     u7841 1E7A                       u7825 1E62                       u7745 1E08  
                     u7681 19E9                       u7665 19C9                       u6865 01B3  
                     u6945 0A2D                       u6881 091F                       u7850 1A18  
                     u7770 1E38                       u6970 0AD6                       u6890 0929  
                     u7930 1196                       u7595 1C3D                       u7851 1A17  
                     u6795 0045                       u7771 1E37                       u6875 01FF  
                     u6971 0AD5                       u6955 0A69                       u6891 0928  
                     u7931 1195                       u7940 11BA                       u7765 1E2A  
                     u7685 19E6                       u6965 0AA5                       u7941 11B9  
                     u7870 1A43                       u7790 1E48                       u7950 121D  
                     u7871 1A42                       u7791 1E47                       u7695 19F9  
                     u7951 121C                       u7960 125C                       u7865 1A20  
                     u7785 1E3D                       u6985 0AF8                       u7961 1259  
                     u7890 008F                       u7970 1262                       u7891 008E  
                     u6995 0B34                       u7971 1261                       u7980 12A3  
                     u7885 1A4B                       u7981 12A2                       u7990 1307  
                     u7991 1306                       _TMR1 000E          ?_Lcd_Write_String 0070  
                     _main 1065                       _samp 01AD                       _temp 01A9  
          __end_of_Cal_PID 0919                       btemp 007E                       start 0008  
       ??_Lcd_Write_String 0023            __end_of_Lcd_Cmd 002B                      ??_ISR 0070  
            ___fltol@sign1 00BD            __end_of___fladd 1000                      ?_main 0070  
          __end_of___awdiv 1BFA            __end_of___flneg 18BF            __end_of___awmod 1AC3  
          __end_of___flmul 1800            __end_of___flsub 196A            __end_of___fltol 1C76  
          __end_of___lldiv 1B91            ___awdiv@divisor 0026            __end_of___llmod 1A10  
          __end_of___lwdiv 191A                      i1l176 1B22            __end_of___lwmod 00F5  
          ___awdiv@counter 002A                      _PID_d 00DE                      _PID_i 00E0  
                    _PID_p 00E2    __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088  
          __end_of_dpowers 1896                      _count 0076                      _scale 0919  
          __end_of_isdigit 0107                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07BA           __end_of_Lcd_Init 1065  
         __end_of_Lcd_Port 0824            __initialization 07BA               __end_of_main 1182  
         __end_of_ReadTemp 1DC9                     ??_main 00C9         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024                     ?_scale 0054  
                   _ADRESH 001E                     _ADRESL 009E                  ??_Cal_PID 00BF  
         ___awdiv@dividend 0028                     i1l3440 1ACD                     i1l3450 1AEA  
                   i1l3442 1AD5                     i1l3452 1AEE                     i1l3460 1B0B  
                   i1l3444 1ADB                     i1l3436 1AC3                     i1l3462 1B0F  
                   i1l3454 1B00                     i1l3446 1AE3                     i1l3438 1AC7  
                   i1l3464 1B17                     i1l3456 1B06                     i1l3448 1AE4  
                   i1l3466 1B1E                     i1l3458 1B08                     i1l3468 1B21  
                   _INTEDG 040E                     u551_20 1AC7                     u551_21 1AC6  
                   u552_20 1ACD                     u552_21 1ACC                     u553_20 1ADB  
                   u553_21 1ADA                     u554_20 1AEA                     u554_21 1AE9  
                   u555_20 1B00                     u555_21 1AFF                     u555_25 1AFC  
                   u556_20 1B0F                     u556_21 1B0E                  ??_Lcd_Cmd 0020  
                   u835_27 1B13                     u836_27 1B1C                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR1CS 0081                     _TMR1ON 0080  
  __size_of_Lcd_Write_Char 0037                     _TRISA0 0428                     _TRISB0 0430  
                   _TRISD0 0440           __end_of___xxtofl 1E85           __end_of__powers_ 183A  
                   ___flge 1C76                     ___fleq 196A                  ??___fladd 00A0  
                   ___wmul 0000                  ??___awdiv 0075                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 0042                  ??___flsub 0076  
                ??___fltol 00B8                  ??___lldiv 0074                  ??___llmod 0074  
         __end_of_init_ADC 18D4                  ??___lwdiv 0028                  ??___lwmod 0074  
                   _fround 002B           ___awdiv@quotient 002C            ___awmod@divisor 0020  
          ___awmod@counter 0024               __pdataCOMMON 0078                  ??_isdigit 0074  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 00C4  
          Lcd_Set_Cursor@a 0025            Lcd_Set_Cursor@b 0022            Lcd_Set_Cursor@y 0027  
          Lcd_Set_Cursor@z 0026                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 0036               ___xxtofl@exp 0035               ___xxtofl@val 002C  
               ___fleq@ff1 0020                 ___fleq@ff2 0024    __end_of__initialization 07FC  
               ___flneg@f1 0020          __end_of_Lcd_Clear 0034                 ___fltol@f1 00B4  
           __pcstackCOMMON 0070               __pidataBANK1 0120               __pidataBANK3 011A  
            __end_of_scale 0C7C             _Lcd_Set_Cursor 1A10                 __div_to_l_ 1F42  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 002D  
          __div_to_l_@cntr 002C                    ??_scale 0058            __div_to_l_@quot 0028  
               __pbssBANK1 00DE                 __pbssBANK3 01A9                  ?_ReadTemp 0070  
            __div_to_l_@f1 0020              __div_to_l_@f2 0024          __end_of__Umul8_16 00B9  
               __pmaintext 1065                    ?___flge 0020                    ?___fleq 0020  
                  ?___wmul 002C                 __pintentry 0000                    ?_fround 0054  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 1A68                    _T1CKPS0 0084  
                  _T1CKPS1 0085                  ?___xxtofl 002C                 ??_Lcd_Init 0022  
               ??_Lcd_Port 0074                    _Cal_PID 0824                 __stringtab 1800  
                ?_init_ADC 0070             _Lcd_Write_Char 0034                    _Lcd_Cmd 000F  
               ??_ReadTemp 00BF          __end_of__npowers_ 186E            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 0C7C                    ___awdiv 1B91  
                  ___flneg 18B2                    ___awmod 1A68                    ___flmul 149F  
                  ___flsub 191A                    ___fltol 1BFA                    ___lldiv 1B29  
          __size_of___wmul 0027                    ___llmod 19BA                    ___lwdiv 18D4  
               _fround$925 0063                 _fround$926 005F                    ___lwmod 00B9  
          __size_of_fround 020D            ?_Lcd_Set_Cursor 0022                    __ptext1 1182  
                  __ptext2 0919                    __ptext3 1A68                    __ptext4 1B91  
                  __ptext5 00F5                    __ptext6 002B                    __ptext7 00B9  
                  __ptext8 1E85                    __ptext9 1F42               __size_of_ISR 0066  
              ?__div_to_l_ 0020                    _dpowers 186E                    _isdigit 00F5  
               ??___xxtofl 0030           ___awmod@dividend 0022                    _sprintf 1182  
                  main@str 00CA     __end_of_Lcd_Write_Char 006B       end_of_initialization 07FC  
               ??_init_ADC 0074            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                  psplit$0 130036                  Lcd_Port@a 0074                  _PID_error 00E8  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024                  _PID_value 00E4  
            ??__tdiv_to_l_ 0028                ___fladd@grs 00AB              ___xxtofl@sign 0034  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0026          Lcd_Write_String@i 0024  
              ___flmul@grs 0049        __size_of__div_to_l_ 00BE                  _Lcd_Clear 0027  
           __end_of___flge 1D1A             __end_of___fleq 19BA             __end_of___wmul 0027  
         _Lcd_Write_String 006B              __pidataCOMMON 000D          pnum$text1_split_1 0036  
           __end_of_fround 0238        start_initialization 07BA                __end_of_ISR 1B29  
      __end_of__tdiv_to_l_ 1F42          __size_of_Lcd_Init 0063          __size_of_Lcd_Port 0022  
          ___llmod@divisor 0020            ___llmod@counter 0075          __size_of_ReadTemp 00AF  
               ?_Lcd_Clear 0070                   ??___flge 0028                   ??___fleq 0028  
                 ??___wmul 0076                 init_fetch0 0107                  __Umul8_16 0090  
              __pdataBANK1 00EA                __pdataBANK3 01B1            Lcd_Write_Char@a 0022  
          Lcd_Write_Char@y 0021                   ??_fround 0058              sprintf@tmpval 019D  
                ___fladd@a 006C                  ___fladd@b 0068                 fround@prec 0067  
                ___flmul@a 003E                  ___flmul@b 003A                __pbssCOMMON 0076  
                ___flsub@a 00AC                  ___flsub@b 00B0                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK3 0190  
        __size_of___xxtofl 00BC                   ?_Cal_PID 0070                   ?_Lcd_Cmd 0070  
              sprintf@flag 0195                sprintf@eexp 019B                sprintf@fval 01A4  
              sprintf@prec 01A2          __size_of_init_ADC 0015          ReadTemp@ADC_value 00C5  
         ___lwdiv@dividend 0026           ??_Lcd_Set_Cursor 0023                   ?___fladd 0068  
                 ?___awdiv 0026                   ?___flneg 0020                   ?___awmod 0020  
                 ?___flmul 003A                   ?___flsub 00AC                   ?___fltol 00B4  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 183A  
               ?__Umul8_16 0074                   ?___lwdiv 0024                   ?___lwmod 0020  
                __pstrings 1800                __tdiv_to_l_ 1E85               ??__div_to_l_ 0074  
                 ?_isdigit 0070                  _scale$927 0062           ___lwdiv@quotient 002A  
                 ?_sprintf 00BF             __size_of_scale 0363          interrupt_function 0000  
           ___wmul@product 0030                   Lcd_Cmd@a 0075         __end_of__div_to_l_ 2000  
              ??_Lcd_Clear 0076                 _ADCON0bits 001F                __stringbase 1805  
               _ADCON1bits 009F          ___wmul@multiplier 002C           ??_Lcd_Write_Char 0075  
                 _Lcd_Init 1002                   _Lcd_Port 0802           __size_of_Cal_PID 00F5  
 __end_of_Lcd_Write_String 0090                   _ReadTemp 1D1A           __size_of_Lcd_Cmd 001C  
              ??__Umul8_16 0020           __size_of___fladd 0384           __size_of___awdiv 0069  
         __size_of___flneg 000D           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 1806                _isdigit$735 0074                 sprintf@val 0197  
                 ___xxtofl 1DC9           __size_of_isdigit 0012            ___lwdiv@divisor 0024  
          ___lwdiv@counter 0029                   __ptext10 19BA                   __ptext11 1B29  
                 __ptext20 006B                   __ptext12 18B2                   __ptext21 0034  
                 __ptext13 1C76                   __ptext30 1BFA                   __ptext22 1A10  
                 __ptext14 196A                   __ptext31 191A                   __ptext23 1002  
                 __ptext15 18BF                   __ptext32 0C7C                   __ptext24 0027  
                 __ptext16 1D1A                   __ptext33 1AC3                   __ptext25 000F  
                 __ptext17 1DC9                   __ptext26 0802                   __ptext18 149F  
                 __ptext27 0824                   __ptext19 0090                   __ptext28 0000  
                 __ptext29 18D4                   __powers_ 1806           __size_of_sprintf F638  
                 _init_ADC 18BF              __size_of_main 011D                  pnum$text1 0013  
                 _setPoint 01B1             _previous_error 00E6                   init_ram0 010B  
                 isdigit@c 0075                   scale@scl 0066         Lcd_Write_Char@temp 0020  
                 intlevel1 0000                  sprintf@ap 0194           __tdiv_to_l_@exp1 0031  
         __tdiv_to_l_@cntr 0030                  sprintf@sp 01A1           __tdiv_to_l_@quot 002C  
         ___lwmod@dividend 0022           ___lldiv@dividend 0024                  stringcode 1800  
       Lcd_Set_Cursor@temp 0028               ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0074  
                 sprintf@c 01A8                   sprintf@f 00BF           ___lldiv@quotient 0028  
          ___lwmod@divisor 0020            ___lwmod@counter 0075                   stringdir 1800  
                 stringtab 1800              ___fladd@signs 00A8               ___fladd@aexp 00A9  
             ___fladd@bexp 00AA       __Umul8_16@multiplier 0026          __Umul8_16@product 0022  
