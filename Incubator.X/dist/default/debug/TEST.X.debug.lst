

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 25 15:43:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK0
   199  0AF1                     __pidataBANK0:
   200                           
   201                           ;initializer for _ki
   202  0AF1  3407               	retlw	7
   203  0AF2  3400               	retlw	0
   204                           
   205                           ;initializer for _kp
   206  0AF3  342F               	retlw	47
   207  0AF4  3401               	retlw	1
   208                           
   209                           ;initializer for _setPoint
   210  0AF5  341F               	retlw	31
   211  0AF6  3400               	retlw	0
   212                           
   213                           	psect	idataBANK1
   214  0AEF                     __pidataBANK1:
   215                           
   216                           ;initializer for _kd
   217  0AEF  3401               	retlw	1
   218  0AF0  3400               	retlw	0
   219                           
   220                           	psect	strings
   221  0800                     __pstrings:
   222  0800                     stringtab:
   223  0800                     __stringtab:
   224  0800                     stringcode:	
   225                           ;	String table - string pointers are 1 byte each
   226                           
   227  0800                     stringdir:
   228  0800  3008               	movlw	high stringdir
   229  0801  008A               	movwf	10
   230  0802  0804               	movf	4,w
   231  0803  0A84               	incf	4,f
   232  0804  0782               	addwf	2,f
   233  0805                     __stringbase:
   234  0805  3400               	retlw	0
   235  0806                     __end_of__stringtab:
   236  0806                     _dpowers:
   237  0806  3401               	retlw	1
   238  0807  3400               	retlw	0
   239  0808  340A               	retlw	10
   240  0809  3400               	retlw	0
   241  080A  3464               	retlw	100
   242  080B  3400               	retlw	0
   243  080C  34E8               	retlw	232
   244  080D  3403               	retlw	3
   245  080E  3410               	retlw	16
   246  080F  3427               	retlw	39
   247  0810                     __end_of_dpowers:
   248  001B                     _CCPR2	set	27
   249  000E                     _TMR1	set	14
   250  001D                     _CCP2CON	set	29
   251  001E                     _ADRESH	set	30
   252  001F                     _ADCON0bits	set	31
   253  0012                     _T2CON	set	18
   254  0011                     _TMR2	set	17
   255  0001                     _TMR0	set	1
   256  0059                     _INTF	set	89
   257  0039                     _RC1	set	57
   258  0035                     _RB5	set	53
   259  0034                     _RB4	set	52
   260  0058                     _RBIF	set	88
   261  0061                     _TMR2IF	set	97
   262  0060                     _TMR1IF	set	96
   263  005A                     _TMR0IF	set	90
   264  005D                     _TMR0IE	set	93
   265  005B                     _RBIE	set	91
   266  005C                     _INTE	set	92
   267  005E                     _PEIE	set	94
   268  005F                     _GIE	set	95
   269  0080                     _TMR1ON	set	128
   270  0085                     _T1CKPS1	set	133
   271  0084                     _T1CKPS0	set	132
   272  0081                     _TMR1CS	set	129
   273  0037                     _RB7	set	55
   274  0033                     _RB3	set	51
   275  0040                     _RD0	set	64
   276  0046                     _RD6	set	70
   277  0047                     _RD7	set	71
   278  0042                     _RD2	set	66
   279  0043                     _RD3	set	67
   280  0044                     _RD4	set	68
   281  0045                     _RD5	set	69
   282  009E                     _ADRESL	set	158
   283  009F                     _ADCON1bits	set	159
   284  0081                     _OPTION_REG	set	129
   285  0088                     _TRISD	set	136
   286  0461                     _TMR2IE	set	1121
   287  0460                     _TMR1IE	set	1120
   288  040E                     _INTEDG	set	1038
   289  0437                     _TRISB7	set	1079
   290  0433                     _TRISB3	set	1075
   291  0430                     _TRISB0	set	1072
   292  0435                     _TRISB5	set	1077
   293  0434                     _TRISB4	set	1076
   294  0428                     _TRISA0	set	1064
   295  0810                     STR_1:
   296  0810  3453               	retlw	83	;'S'
   297  0811  3465               	retlw	101	;'e'
   298  0812  3474               	retlw	116	;'t'
   299  0813  3420               	retlw	32	;' '
   300  0814  3420               	retlw	32	;' '
   301  0815  343D               	retlw	61	;'='
   302  0816  3420               	retlw	32	;' '
   303  0817  3425               	retlw	37	;'%'
   304  0818  3464               	retlw	100	;'d'
   305  0819  3420               	retlw	32	;' '
   306  081A  3400               	retlw	0
   307  081B                     STR_2:
   308  081B  3452               	retlw	82	;'R'
   309  081C  3465               	retlw	101	;'e'
   310  081D  3461               	retlw	97	;'a'
   311  081E  346C               	retlw	108	;'l'
   312  081F  3420               	retlw	32	;' '
   313  0820  343D               	retlw	61	;'='
   314  0821  3420               	retlw	32	;' '
   315  0822  3425               	retlw	37	;'%'
   316  0823  3464               	retlw	100	;'d'
   317  0824  3420               	retlw	32	;' '
   318  0825  3400               	retlw	0
   319  0817                     
   320                           	psect	cinit
   321  000F                     start_initialization:	
   322                           ; #config settings
   323                           
   324  000F                     __initialization:
   325                           
   326                           ; Initialize objects allocated to BANK1
   327  000F  1683               	bsf	3,5	;RP0=1, select bank1
   328  0010  1303               	bcf	3,6	;RP1=0, select bank1
   329  0011  120A  158A  22EF  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   330  0016  00B2               	movwf	__pdataBANK1& (0+127)
   331  0017  120A  158A  22F0  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   332  001C  00B3               	movwf	(__pdataBANK1+1)& (0+127)
   333                           
   334                           ; Initialize objects allocated to BANK0
   335  001D  1283               	bcf	3,5	;RP0=0, select bank0
   336  001E  1303               	bcf	3,6	;RP1=0, select bank0
   337  001F  120A  158A  22F1  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   338  0024  00DD               	movwf	__pdataBANK0& (0+127)
   339  0025  120A  158A  22F2  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   340  002A  00DE               	movwf	(__pdataBANK0+1)& (0+127)
   341  002B  120A  158A  22F3  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   342  0030  00DF               	movwf	(__pdataBANK0+2)& (0+127)
   343  0031  120A  158A  22F4  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   344  0036  00E0               	movwf	(__pdataBANK0+3)& (0+127)
   345  0037  120A  158A  22F5  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   346  003C  00E1               	movwf	(__pdataBANK0+4)& (0+127)
   347  003D  120A  158A  22F6  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   348  0042  00E2               	movwf	(__pdataBANK0+5)& (0+127)
   349                           
   350                           ; Clear objects allocated to BANK1
   351  0043  1683               	bsf	3,5	;RP0=1, select bank1
   352  0044  1303               	bcf	3,6	;RP1=0, select bank1
   353  0045  01B0               	clrf	__pbssBANK1& (0+127)
   354  0046  01B1               	clrf	(__pbssBANK1+1)& (0+127)
   355                           
   356                           ; Clear objects allocated to BANK0
   357  0047  1383               	bcf	3,7	;select IRP bank0
   358  0048  304B               	movlw	low __pbssBANK0
   359  0049  0084               	movwf	4
   360  004A  305D               	movlw	low (__pbssBANK0+18)
   361  004B  120A  158A  22F7  120A  118A  	fcall	clear_ram0
   362                           
   363                           ; Clear objects allocated to COMMON
   364  0050  01F6               	clrf	__pbssCOMMON& (0+127)
   365  0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   366  0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   367  0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   368  0054                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  0054                     __end_of__initialization:
   372  0054  0183               	clrf	3
   373  0055  120A  118A  2E80   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376  0076                     __pbssCOMMON:
   377  0076                     _PID_i:
   378  0076                     	ds	2
   379  0078                     _PID_error:
   380  0078                     	ds	2
   381                           
   382                           	psect	bssBANK0
   383  004B                     __pbssBANK0:
   384  004B                     _samp:
   385  004B                     	ds	2
   386  004D                     _tmp:
   387  004D                     	ds	2
   388  004F                     _cnt2:
   389  004F                     	ds	2
   390  0051                     _cnt0:
   391  0051                     	ds	2
   392  0053                     _PID_d:
   393  0053                     	ds	2
   394  0055                     _PID_p:
   395  0055                     	ds	2
   396  0057                     _PID_value:
   397  0057                     	ds	2
   398  0059                     _previous_error:
   399  0059                     	ds	2
   400  005B                     _Temperature:
   401  005B                     	ds	2
   402                           
   403                           	psect	dataBANK0
   404  005D                     __pdataBANK0:
   405  005D                     _ki:
   406  005D                     	ds	2
   407  005F                     _kp:
   408  005F                     	ds	2
   409  0061                     _setPoint:
   410  0061                     	ds	2
   411                           
   412                           	psect	bssBANK1
   413  00B0                     __pbssBANK1:
   414  00B0                     _cnt1:
   415  00B0                     	ds	2
   416                           
   417                           	psect	dataBANK1
   418  00B2                     __pdataBANK1:
   419  00B2                     _kd:
   420  00B2                     	ds	2
   421                           
   422                           	psect	clrtext
   423  0AF7                     clear_ram0:	
   424                           ;	Called with FSR containing the base address, and
   425                           ;	W with the last address+1
   426                           
   427  0AF7  0064               	clrwdt	;clear the watchdog before getting into this loop
   428  0AF8                     clrloop0:
   429  0AF8  0180               	clrf	0	;clear RAM location pointed to by FSR
   430  0AF9  0A84               	incf	4,f	;increment pointer
   431  0AFA  0604               	xorwf	4,w	;XOR with final address
   432  0AFB  1903               	btfsc	3,2	;have we reached the end yet?
   433  0AFC  3400               	retlw	0	;all done for this memory range, return
   434  0AFD  0604               	xorwf	4,w	;XOR again to restore value
   435  0AFE  2AF8               	goto	clrloop0	;do the next byte
   436                           
   437                           	psect	cstackBANK1
   438  00A0                     __pcstackBANK1:
   439  00A0                     main@str:
   440                           
   441                           ; 16 bytes @ 0x0
   442  00A0                     	ds	16
   443                           
   444                           	psect	cstackCOMMON
   445  0070                     __pcstackCOMMON:
   446  0070                     ?_init_ADC:
   447  0070                     ?_Read_Temp:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_Cal_PID:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_Lcd_Port:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_Lcd_Cmd:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_Lcd_Clear:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_Lcd_Init:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_Lcd_Write_Char:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_Lcd_Write_String:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_ISR:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ??_ISR:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_main:	
   478                           ; 1 bytes @ 0x0
   479                           
   480                           
   481                           ; 2 bytes @ 0x0
   482  0070                     	ds	4
   483  0074                     ??_init_ADC:
   484  0074                     ??_Lcd_Port:	
   485                           ; 1 bytes @ 0x4
   486                           
   487  0074                     ??___wmul:	
   488                           ; 1 bytes @ 0x4
   489                           
   490  0074                     ??___awdiv:	
   491                           ; 1 bytes @ 0x4
   492                           
   493  0074                     ??___lwdiv:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0074                     ?__Umul8_16:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     Lcd_Port@a:	
   500                           ; 2 bytes @ 0x4
   501                           
   502  0074                     ___fltol@sign1:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0074                     __Umul8_16@multiplicand:	
   506                           ; 1 bytes @ 0x4
   507                           
   508  0074                     ___wmul@product:	
   509                           ; 1 bytes @ 0x4
   510                           
   511                           
   512                           ; 2 bytes @ 0x4
   513  0074                     	ds	1
   514  0075                     ??_Lcd_Write_Char:
   515  0075                     ??___lwmod:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0075                     Lcd_Cmd@a:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0075                     ___fltol@exp1:	
   522                           ; 1 bytes @ 0x5
   523                           
   524                           
   525                           ; 1 bytes @ 0x5
   526  0075                     	ds	1
   527  0076                     ??_Lcd_Clear:
   528                           
   529                           	psect	cstackBANK0
   530  0020                     __pcstackBANK0:	
   531                           ; 1 bytes @ 0x6
   532                           
   533  0020                     ??__Umul8_16:
   534  0020                     ??_Lcd_Cmd:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0020                     ?___wmul:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0020                     ?___awdiv:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0020                     ?___lwdiv:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  0020                     ?___fldiv:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0020                     ?___xxtofl:	
   550                           ; 4 bytes @ 0x0
   551                           
   552  0020                     Lcd_Write_Char@temp:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0020                     ___wmul@multiplier:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0020                     ___awdiv@divisor:	
   559                           ; 2 bytes @ 0x0
   560                           
   561  0020                     ___lwdiv@divisor:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0020                     ___fldiv@a:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0020                     ___xxtofl@val:	
   568                           ; 4 bytes @ 0x0
   569                           
   570                           
   571                           ; 4 bytes @ 0x0
   572  0020                     	ds	1
   573  0021                     Lcd_Write_Char@y:
   574                           
   575                           ; 1 bytes @ 0x1
   576  0021                     	ds	1
   577  0022                     ?_Lcd_Set_Cursor:
   578  0022                     ??_Lcd_Init:	
   579                           ; 1 bytes @ 0x2
   580                           
   581  0022                     Lcd_Set_Cursor@b:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0022                     Lcd_Write_Char@a:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0022                     ___wmul@multiplicand:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0022                     ___awdiv@dividend:	
   591                           ; 2 bytes @ 0x2
   592                           
   593  0022                     ___lwdiv@dividend:	
   594                           ; 2 bytes @ 0x2
   595                           
   596  0022                     __Umul8_16@product:	
   597                           ; 2 bytes @ 0x2
   598                           
   599                           
   600                           ; 2 bytes @ 0x2
   601  0022                     	ds	1
   602  0023                     ??_Lcd_Set_Cursor:
   603  0023                     ??_Lcd_Write_String:	
   604                           ; 1 bytes @ 0x3
   605                           
   606                           
   607                           ; 1 bytes @ 0x3
   608  0023                     	ds	1
   609  0024                     ??___xxtofl:
   610  0024                     ___awdiv@counter:	
   611                           ; 1 bytes @ 0x4
   612                           
   613  0024                     ___lwdiv@counter:	
   614                           ; 1 bytes @ 0x4
   615                           
   616  0024                     Lcd_Write_String@i:	
   617                           ; 1 bytes @ 0x4
   618                           
   619  0024                     __Umul8_16@word_mpld:	
   620                           ; 2 bytes @ 0x4
   621                           
   622  0024                     ___fldiv@b:	
   623                           ; 2 bytes @ 0x4
   624                           
   625                           
   626                           ; 4 bytes @ 0x4
   627  0024                     	ds	1
   628  0025                     Lcd_Set_Cursor@a:
   629  0025                     ___awdiv@sign:	
   630                           ; 1 bytes @ 0x5
   631                           
   632  0025                     ___lwdiv@quotient:	
   633                           ; 1 bytes @ 0x5
   634                           
   635                           
   636                           ; 2 bytes @ 0x5
   637  0025                     	ds	1
   638  0026                     Lcd_Set_Cursor@z:
   639  0026                     Lcd_Write_String@a:	
   640                           ; 1 bytes @ 0x6
   641                           
   642  0026                     __Umul8_16@multiplier:	
   643                           ; 1 bytes @ 0x6
   644                           
   645  0026                     ___awdiv@quotient:	
   646                           ; 1 bytes @ 0x6
   647                           
   648                           
   649                           ; 2 bytes @ 0x6
   650  0026                     	ds	1
   651  0027                     ?___lwmod:
   652  0027                     ?___flmul:	
   653                           ; 2 bytes @ 0x7
   654                           
   655  0027                     Lcd_Set_Cursor@y:	
   656                           ; 4 bytes @ 0x7
   657                           
   658  0027                     ___lwmod@divisor:	
   659                           ; 1 bytes @ 0x7
   660                           
   661  0027                     ___flmul@b:	
   662                           ; 2 bytes @ 0x7
   663                           
   664                           
   665                           ; 4 bytes @ 0x7
   666  0027                     	ds	1
   667  0028                     ??_Cal_PID:
   668  0028                     ??___fldiv:	
   669                           ; 1 bytes @ 0x8
   670                           
   671  0028                     Lcd_Set_Cursor@temp:	
   672                           ; 1 bytes @ 0x8
   673                           
   674  0028                     ___xxtofl@sign:	
   675                           ; 1 bytes @ 0x8
   676                           
   677                           
   678                           ; 1 bytes @ 0x8
   679  0028                     	ds	1
   680  0029                     ___xxtofl@exp:
   681  0029                     ___lwmod@dividend:	
   682                           ; 1 bytes @ 0x9
   683                           
   684                           
   685                           ; 2 bytes @ 0x9
   686  0029                     	ds	1
   687  002A                     ___xxtofl@arg:
   688                           
   689                           ; 4 bytes @ 0xA
   690  002A                     	ds	1
   691  002B                     ___lwmod@counter:
   692  002B                     ___flmul@a:	
   693                           ; 1 bytes @ 0xB
   694                           
   695                           
   696                           ; 4 bytes @ 0xB
   697  002B                     	ds	1
   698  002C                     ?_sprintf:
   699  002C                     sprintf@f:	
   700                           ; 2 bytes @ 0xC
   701                           
   702                           
   703                           ; 1 bytes @ 0xC
   704  002C                     	ds	1
   705  002D                     ___fldiv@rem:
   706                           
   707                           ; 4 bytes @ 0xD
   708  002D                     	ds	2
   709  002F                     ??_sprintf:
   710  002F                     ??___flmul:	
   711                           ; 1 bytes @ 0xF
   712                           
   713                           
   714                           ; 1 bytes @ 0xF
   715  002F                     	ds	2
   716  0031                     ___fldiv@sign:
   717                           
   718                           ; 1 bytes @ 0x11
   719  0031                     	ds	1
   720  0032                     sprintf@ap:
   721  0032                     ___fldiv@new_exp:	
   722                           ; 1 bytes @ 0x12
   723                           
   724                           
   725                           ; 2 bytes @ 0x12
   726  0032                     	ds	1
   727  0033                     sprintf@flag:
   728                           
   729                           ; 1 bytes @ 0x13
   730  0033                     	ds	1
   731  0034                     sprintf@prec:
   732  0034                     ___flmul@sign:	
   733                           ; 1 bytes @ 0x14
   734                           
   735  0034                     ___fldiv@grs:	
   736                           ; 1 bytes @ 0x14
   737                           
   738                           
   739                           ; 4 bytes @ 0x14
   740  0034                     	ds	1
   741  0035                     ___flmul@aexp:
   742  0035                     sprintf@val:	
   743                           ; 1 bytes @ 0x15
   744                           
   745                           
   746                           ; 2 bytes @ 0x15
   747  0035                     	ds	1
   748  0036                     ___flmul@grs:
   749                           
   750                           ; 4 bytes @ 0x16
   751  0036                     	ds	1
   752  0037                     sprintf@sp:
   753                           
   754                           ; 1 bytes @ 0x17
   755  0037                     	ds	1
   756  0038                     sprintf@c:
   757  0038                     ___fldiv@bexp:	
   758                           ; 1 bytes @ 0x18
   759                           
   760                           
   761                           ; 1 bytes @ 0x18
   762  0038                     	ds	1
   763  0039                     ___fldiv@aexp:
   764                           
   765                           ; 1 bytes @ 0x19
   766  0039                     	ds	1
   767  003A                     ?___fltol:
   768  003A                     ___flmul@bexp:	
   769                           ; 4 bytes @ 0x1A
   770                           
   771  003A                     ___fltol@f1:	
   772                           ; 1 bytes @ 0x1A
   773                           
   774                           
   775                           ; 4 bytes @ 0x1A
   776  003A                     	ds	1
   777  003B                     ___flmul@prod:
   778                           
   779                           ; 4 bytes @ 0x1B
   780  003B                     	ds	3
   781  003E                     ??___fltol:
   782                           
   783                           ; 1 bytes @ 0x1E
   784  003E                     	ds	1
   785  003F                     ___flmul@temp:
   786                           
   787                           ; 2 bytes @ 0x1F
   788  003F                     	ds	4
   789  0043                     ??_Read_Temp:
   790                           
   791                           ; 1 bytes @ 0x23
   792  0043                     	ds	2
   793  0045                     Read_Temp@TempValue:
   794                           
   795                           ; 4 bytes @ 0x25
   796  0045                     	ds	4
   797  0049                     ??_main:
   798                           
   799                           ; 1 bytes @ 0x29
   800  0049                     	ds	2
   801                           
   802                           	psect	maintext
   803  0680                     __pmaintext:	
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 56 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  str            16    0[BANK1 ] unsigned char [16]
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2  181[None  ] int 
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : B00/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0      16       0       0
   825 ;;      Temps:          0       2       0       0       0
   826 ;;      Totals:         0       2      16       0       0
   827 ;;Total ram usage:       18 bytes
   828 ;; Hardware stack levels required when called:    4
   829 ;; This function calls:
   830 ;;		_Cal_PID
   831 ;;		_Lcd_Clear
   832 ;;		_Lcd_Init
   833 ;;		_Lcd_Set_Cursor
   834 ;;		_Lcd_Write_String
   835 ;;		_Read_Temp
   836 ;;		_init_ADC
   837 ;;		_sprintf
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  0680                     _main:
   846  0680                     l3215:	
   847                           ;incstack = 0
   848                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   849                           
   850  0680  120A  158A  22FF  120A  118A  	fcall	_init_ADC
   851  0685                     l3217:
   852  0685  1683               	bsf	3,5	;RP0=1, select bank1
   853  0686  1303               	bcf	3,6	;RP1=0, select bank1
   854  0687  1405               	bsf	5,0	;volatile
   855  0688                     l3219:
   856                           
   857                           ;main.c: 74:     TRISD = 0x00;
   858  0688  0188               	clrf	8	;volatile
   859  0689                     l3221:
   860                           
   861                           ;main.c: 75:     RD0 = 0;
   862  0689  1283               	bcf	3,5	;RP0=0, select bank0
   863  068A  1303               	bcf	3,6	;RP1=0, select bank0
   864  068B  1008               	bcf	8,0	;volatile
   865  068C                     l3223:
   866                           
   867                           ;main.c: 76:     Lcd_Init();
   868  068C  120A  158A  24D8  120A  118A  	fcall	_Lcd_Init
   869  0691                     l3225:
   870                           
   871                           ;main.c: 80:     TRISB4 = 1;
   872  0691  1683               	bsf	3,5	;RP0=1, select bank1
   873  0692  1303               	bcf	3,6	;RP1=0, select bank1
   874  0693  1606               	bsf	6,4	;volatile
   875  0694                     l3227:
   876                           
   877                           ;main.c: 81:     TRISB5 = 1;
   878  0694  1686               	bsf	6,5	;volatile
   879  0695                     l3229:
   880                           
   881                           ;main.c: 86:     TRISB0 = 1;
   882  0695  1406               	bsf	6,0	;volatile
   883  0696                     l3231:
   884                           
   885                           ;main.c: 90:     TRISB3 = 0;
   886  0696  1186               	bcf	6,3	;volatile
   887  0697                     l3233:
   888                           
   889                           ;main.c: 91:     TRISB7 = 0;
   890  0697  1386               	bcf	6,7	;volatile
   891  0698                     l3235:
   892                           
   893                           ;main.c: 92:     RB3 = 1;
   894  0698  1283               	bcf	3,5	;RP0=0, select bank0
   895  0699  1303               	bcf	3,6	;RP1=0, select bank0
   896  069A  1586               	bsf	6,3	;volatile
   897  069B                     l3237:
   898                           
   899                           ;main.c: 93:     RB7 = 0;
   900  069B  1386               	bcf	6,7	;volatile
   901  069C                     l3239:
   902                           
   903                           ;main.c: 98:     TMR0 = 0x38;
   904  069C  3038               	movlw	56
   905  069D  0081               	movwf	1	;volatile
   906                           
   907                           ;main.c: 99:     OPTION_REG = 0x00;
   908  069E  1683               	bsf	3,5	;RP0=1, select bank1
   909  069F  1303               	bcf	3,6	;RP1=0, select bank1
   910  06A0  0181               	clrf	1	;volatile
   911  06A1                     l3241:
   912                           
   913                           ;main.c: 104:     TMR1 = 0xB1E0;
   914  06A1  30B1               	movlw	177
   915  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   916  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   917  06A4  008F               	movwf	15	;volatile
   918  06A5  30E0               	movlw	224
   919  06A6  008E               	movwf	14	;volatile
   920  06A7                     l3243:
   921                           
   922                           ;main.c: 105:     TMR1CS = 0;
   923  06A7  1090               	bcf	16,1	;volatile
   924  06A8                     l3245:
   925                           
   926                           ;main.c: 106:     T1CKPS0 = 0;
   927  06A8  1210               	bcf	16,4	;volatile
   928  06A9                     l3247:
   929                           
   930                           ;main.c: 107:     T1CKPS1 = 1;
   931  06A9  1690               	bsf	16,5	;volatile
   932  06AA                     l3249:
   933                           
   934                           ;main.c: 108:     TMR1ON = 1;
   935  06AA  1410               	bsf	16,0	;volatile
   936  06AB                     l3251:
   937                           
   938                           ;main.c: 113:     TMR2 = 0x06;
   939  06AB  3006               	movlw	6
   940  06AC  0091               	movwf	17	;volatile
   941  06AD                     l3253:
   942                           
   943                           ;main.c: 114:     T2CON = (1<<1)|(1<<2);
   944  06AD  3006               	movlw	6
   945  06AE  0092               	movwf	18	;volatile
   946  06AF                     l3255:
   947                           
   948                           ;main.c: 119:     GIE = 1;
   949  06AF  178B               	bsf	11,7	;volatile
   950  06B0                     l3257:
   951                           
   952                           ;main.c: 120:     PEIE = 1;
   953  06B0  170B               	bsf	11,6	;volatile
   954  06B1                     l3259:
   955                           
   956                           ;main.c: 121:     INTEDG = 1;
   957  06B1  1683               	bsf	3,5	;RP0=1, select bank1
   958  06B2  1303               	bcf	3,6	;RP1=0, select bank1
   959  06B3  1701               	bsf	1,6	;volatile
   960  06B4                     l3261:
   961                           
   962                           ;main.c: 122:     INTE = 1;
   963  06B4  160B               	bsf	11,4	;volatile
   964  06B5                     l3263:
   965                           
   966                           ;main.c: 123:     RBIE = 1;
   967  06B5  158B               	bsf	11,3	;volatile
   968  06B6                     l3265:
   969                           
   970                           ;main.c: 124:     TMR0IE = 0;
   971  06B6  128B               	bcf	11,5	;volatile
   972  06B7                     l3267:
   973                           
   974                           ;main.c: 125:     TMR0IF = 0;
   975  06B7  110B               	bcf	11,2	;volatile
   976  06B8                     l3269:
   977                           
   978                           ;main.c: 126:     TMR1IE = 1;
   979  06B8  140C               	bsf	12,0	;volatile
   980  06B9                     l3271:
   981                           
   982                           ;main.c: 127:     TMR1IF = 0;
   983  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   984  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   985  06BB  100C               	bcf	12,0	;volatile
   986  06BC                     l3273:
   987                           
   988                           ;main.c: 128:     TMR2IE = 1;
   989  06BC  1683               	bsf	3,5	;RP0=1, select bank1
   990  06BD  1303               	bcf	3,6	;RP1=0, select bank1
   991  06BE  148C               	bsf	12,1	;volatile
   992  06BF                     l3275:
   993                           
   994                           ;main.c: 129:     TMR2IF = 0;
   995  06BF  1283               	bcf	3,5	;RP0=0, select bank0
   996  06C0  1303               	bcf	3,6	;RP1=0, select bank0
   997  06C1  108C               	bcf	12,1	;volatile
   998  06C2                     l3277:
   999                           
  1000                           ;main.c: 133:     {;main.c: 134:         Read_Temp();
  1001  06C2  120A  158A  25A5  120A  118A  	fcall	_Read_Temp
  1002  06C7                     l3279:
  1003                           
  1004                           ;main.c: 136:         if(Temperature > setPoint)
  1005  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1006  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1007  06C9  0862               	movf	_setPoint+1,w
  1008  06CA  3A80               	xorlw	128
  1009  06CB  00C9               	movwf	??_main
  1010  06CC  085C               	movf	_Temperature+1,w
  1011  06CD  3A80               	xorlw	128
  1012  06CE  0249               	subwf	??_main,w
  1013  06CF  1D03               	skipz
  1014  06D0  2ED3               	goto	u4535
  1015  06D1  085B               	movf	_Temperature,w
  1016  06D2  0261               	subwf	_setPoint,w
  1017  06D3                     u4535:
  1018  06D3  1803               	skipnc
  1019  06D4  2ED6               	goto	u4531
  1020  06D5  2ED7               	goto	u4530
  1021  06D6                     u4531:
  1022  06D6  2EDB               	goto	l183
  1023  06D7                     u4530:
  1024  06D7                     l3281:
  1025                           
  1026                           ;main.c: 137:         {;main.c: 138:             RB3 = 0;
  1027  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1028  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1029  06D9  1186               	bcf	6,3	;volatile
  1030                           
  1031                           ;main.c: 139:         }
  1032  06DA  2EDE               	goto	l3283
  1033  06DB                     l183:	
  1034                           ;main.c: 140:         else
  1035                           
  1036                           
  1037                           ;main.c: 141:         {;main.c: 142:             RB3 = 1;
  1038  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1039  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1040  06DD  1586               	bsf	6,3	;volatile
  1041  06DE                     l3283:
  1042                           
  1043                           ;main.c: 145:         if(samp == 1)
  1044  06DE  034B               	decf	_samp,w
  1045  06DF  044C               	iorwf	_samp+1,w
  1046  06E0  1D03               	btfss	3,2
  1047  06E1  2EE3               	goto	u4541
  1048  06E2  2EE4               	goto	u4540
  1049  06E3                     u4541:
  1050  06E3  2EED               	goto	l3289
  1051  06E4                     u4540:
  1052  06E4                     l3285:
  1053                           
  1054                           ;main.c: 146:         {;main.c: 147:             Cal_PID();
  1055  06E4  120A  158A  2699  120A  118A  	fcall	_Cal_PID
  1056  06E9                     l3287:
  1057                           
  1058                           ;main.c: 148:             samp = 0;
  1059  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1060  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1061  06EB  01CB               	clrf	_samp
  1062  06EC  01CC               	clrf	_samp+1
  1063  06ED                     l3289:
  1064                           
  1065                           ;main.c: 151:         Lcd_Clear();
  1066  06ED  120A  118A  27F2  120A  118A  	fcall	_Lcd_Clear
  1067  06F2                     l3291:
  1068                           
  1069                           ;main.c: 152:         sprintf(str, "Set  = %d ", setPoint);
  1070  06F2  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1071  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1072  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1073  06F5  00C9               	movwf	??_main
  1074  06F6  0849               	movf	??_main,w
  1075  06F7  00AC               	movwf	sprintf@f
  1076  06F8  0862               	movf	_setPoint+1,w
  1077  06F9  00AE               	movwf	?_sprintf+2
  1078  06FA  0861               	movf	_setPoint,w
  1079  06FB  00AD               	movwf	?_sprintf+1
  1080  06FC  30A0               	movlw	(low (main@str| 0))& (0+255)
  1081  06FD  120A  118A  2596  120A  118A  	fcall	_sprintf
  1082  0702                     l3293:
  1083                           
  1084                           ;main.c: 153:         Lcd_Set_Cursor(1,1);
  1085  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0704  01A2               	clrf	Lcd_Set_Cursor@b
  1088  0705  0AA2               	incf	Lcd_Set_Cursor@b,f
  1089  0706  3001               	movlw	1
  1090  0707  120A  158A  2480  120A  118A  	fcall	_Lcd_Set_Cursor
  1091  070C                     l3295:
  1092                           
  1093                           ;main.c: 154:         Lcd_Write_String(str);
  1094  070C  30A0               	movlw	(low (main@str| 0))& (0+255)
  1095  070D  120A  158A  2352  120A  118A  	fcall	_Lcd_Write_String
  1096  0712                     l3297:
  1097                           
  1098                           ;main.c: 155:         sprintf(str, "Real = %d ", Temperature);
  1099  0712  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1100  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0715  00C9               	movwf	??_main
  1103  0716  0849               	movf	??_main,w
  1104  0717  00AC               	movwf	sprintf@f
  1105  0718  085C               	movf	_Temperature+1,w
  1106  0719  00AE               	movwf	?_sprintf+2
  1107  071A  085B               	movf	_Temperature,w
  1108  071B  00AD               	movwf	?_sprintf+1
  1109  071C  30A0               	movlw	(low (main@str| 0))& (0+255)
  1110  071D  120A  118A  2596  120A  118A  	fcall	_sprintf
  1111  0722                     l3299:
  1112                           
  1113                           ;main.c: 156:         Lcd_Set_Cursor(2,1);
  1114  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0724  01A2               	clrf	Lcd_Set_Cursor@b
  1117  0725  0AA2               	incf	Lcd_Set_Cursor@b,f
  1118  0726  3002               	movlw	2
  1119  0727  120A  158A  2480  120A  118A  	fcall	_Lcd_Set_Cursor
  1120  072C                     l3301:
  1121                           
  1122                           ;main.c: 157:         Lcd_Write_String(str);
  1123  072C  30A0               	movlw	(low (main@str| 0))& (0+255)
  1124  072D  120A  158A  2352  120A  118A  	fcall	_Lcd_Write_String
  1125  0732                     l3303:
  1126                           
  1127                           ;main.c: 158:         sprintf(str, "%d ", PID_value);
  1128  0732  3012               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
  1129  0733  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0734  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0735  00C9               	movwf	??_main
  1132  0736  0849               	movf	??_main,w
  1133  0737  00AC               	movwf	sprintf@f
  1134  0738  0858               	movf	_PID_value+1,w
  1135  0739  00AE               	movwf	?_sprintf+2
  1136  073A  0857               	movf	_PID_value,w
  1137  073B  00AD               	movwf	?_sprintf+1
  1138  073C  30A0               	movlw	(low (main@str| 0))& (0+255)
  1139  073D  120A  118A  2596  120A  118A  	fcall	_sprintf
  1140  0742                     l3305:
  1141                           
  1142                           ;main.c: 159:         Lcd_Set_Cursor(1,12);
  1143  0742  300C               	movlw	12
  1144  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0745  00C9               	movwf	??_main
  1147  0746  0849               	movf	??_main,w
  1148  0747  00A2               	movwf	Lcd_Set_Cursor@b
  1149  0748  3001               	movlw	1
  1150  0749  120A  158A  2480  120A  118A  	fcall	_Lcd_Set_Cursor
  1151  074E                     l3307:
  1152                           
  1153                           ;main.c: 160:         Lcd_Write_String(str);
  1154  074E  30A0               	movlw	(low (main@str| 0))& (0+255)
  1155  074F  120A  158A  2352  120A  118A  	fcall	_Lcd_Write_String
  1156  0754                     l3309:
  1157                           
  1158                           ;main.c: 161:         _delay((unsigned long)((1000)*(16000000/4000000.0)));
  1159  0754  3006               	movlw	6
  1160  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0757  00CA               	movwf	??_main+1
  1163  0758  302F               	movlw	47
  1164  0759  00C9               	movwf	??_main
  1165  075A                     u4577:
  1166  075A  0BC9               	decfsz	??_main,f
  1167  075B  2F5A               	goto	u4577
  1168  075C  0BCA               	decfsz	??_main+1,f
  1169  075D  2F5A               	goto	u4577
  1170  075E  2F5F               	nop2
  1171  075F  2EC2               	goto	l3277
  1172  0760  120A  118A  280C   	ljmp	start
  1173  0763                     __end_of_main:
  1174                           
  1175                           	psect	text1
  1176  0596                     __ptext1:	
  1177 ;; *************** function _sprintf *****************
  1178 ;; Defined at:
  1179 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  sp              1    wreg     PTR unsigned char 
  1182 ;;		 -> main@str(16), 
  1183 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1184 ;;		 -> STR_3(4), STR_2(11), STR_1(11), 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  1187 ;;		 -> main@str(16), 
  1188 ;;  tmpval          4    0        struct .
  1189 ;;  val             2   21[BANK0 ] unsigned int 
  1190 ;;  cp              2    0        PTR const unsigned char 
  1191 ;;  len             2    0        unsigned int 
  1192 ;;  c               1   24[BANK0 ] unsigned char 
  1193 ;;  prec            1   20[BANK0 ] char 
  1194 ;;  flag            1   19[BANK0 ] unsigned char 
  1195 ;;  ap              1   18[BANK0 ] PTR void [1]
  1196 ;;		 -> ?_sprintf(2), 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2   12[BANK0 ] int 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       3       0       0       0
  1207 ;;      Locals:         0       7       0       0       0
  1208 ;;      Temps:          0       3       0       0       0
  1209 ;;      Totals:         0      13       0       0       0
  1210 ;;Total ram usage:       13 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    2
  1213 ;; This function calls:
  1214 ;;		___lwdiv
  1215 ;;		___lwmod
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _sprintf
  1223  0596                     _sprintf:
  1224                           
  1225                           ;incstack = 0
  1226                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1227                           ;sprintf@sp stored from wreg
  1228  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0598  00B7               	movwf	sprintf@sp
  1231  0599                     l3149:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1234  0599  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1235  059A  00AF               	movwf	??_sprintf
  1236  059B  082F               	movf	??_sprintf,w
  1237  059C  00B2               	movwf	sprintf@ap
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1240  059D  2E69               	goto	l3201
  1241  059E                     l3151:
  1242                           
  1243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1244  059E  3025               	movlw	37
  1245  059F  0638               	xorwf	sprintf@c,w
  1246  05A0  1903               	btfsc	3,2
  1247  05A1  2DA3               	goto	u4461
  1248  05A2  2DA4               	goto	u4460
  1249  05A3                     u4461:
  1250  05A3  2DB0               	goto	l3157
  1251  05A4                     u4460:
  1252  05A4                     l3153:
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1255  05A4  0838               	movf	sprintf@c,w
  1256  05A5  00AF               	movwf	??_sprintf
  1257  05A6  0837               	movf	sprintf@sp,w
  1258  05A7  0084               	movwf	4
  1259  05A8  082F               	movf	??_sprintf,w
  1260  05A9  1383               	bcf	3,7	;select IRP bank0
  1261  05AA  0080               	movwf	0
  1262  05AB                     l3155:
  1263  05AB  3001               	movlw	1
  1264  05AC  00AF               	movwf	??_sprintf
  1265  05AD  082F               	movf	??_sprintf,w
  1266  05AE  07B7               	addwf	sprintf@sp,f
  1267                           
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1269  05AF  2E69               	goto	l3201
  1270  05B0                     l3157:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1273  05B0  01B3               	clrf	sprintf@flag
  1274  05B1                     l3161:	
  1275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1276                           
  1277  05B1  3001               	movlw	1
  1278  05B2  07AC               	addwf	sprintf@f,f
  1279  05B3  30FF               	movlw	-1
  1280  05B4  072C               	addwf	sprintf@f,w
  1281  05B5  0084               	movwf	4
  1282  05B6  120A  158A  2000  120A  118A  	fcall	stringdir
  1283  05BB  00B8               	movwf	sprintf@c
  1284  05BC  00AF               	movwf	??_sprintf
  1285  05BD  01B0               	clrf	??_sprintf+1
  1286                           
  1287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1288                           ; Switch size 1, requested type "simple"
  1289                           ; Number of cases is 1, Range of values is 0 to 0
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte            4     3 (average)
  1293                           ; direct_byte           11     8 (fixed)
  1294                           ; jumptable            260     6 (fixed)
  1295                           ;	Chosen strategy is simple_byte
  1296  05BE  0830               	movf	??_sprintf+1,w
  1297  05BF  3A00               	xorlw	0	; case 0
  1298  05C0  1903               	skipnz
  1299  05C1  2DC3               	goto	l3341
  1300  05C2  2E69               	goto	l3201
  1301  05C3                     l3341:
  1302                           
  1303                           ; Switch size 1, requested type "simple"
  1304                           ; Number of cases is 3, Range of values is 0 to 105
  1305                           ; switch strategies available:
  1306                           ; Name         Instructions Cycles
  1307                           ; simple_byte           10     6 (average)
  1308                           ; jumptable            260     6 (fixed)
  1309                           ;	Chosen strategy is simple_byte
  1310  05C3  082F               	movf	??_sprintf,w
  1311  05C4  3A00               	xorlw	0	; case 0
  1312  05C5  1903               	skipnz
  1313  05C6  2E7B               	goto	l3203
  1314  05C7  3A64               	xorlw	100	; case 100
  1315  05C8  1903               	skipnz
  1316  05C9  2DCE               	goto	l3163
  1317  05CA  3A0D               	xorlw	13	; case 105
  1318  05CB  1903               	skipnz
  1319  05CC  2DCE               	goto	l3163
  1320  05CD  2E69               	goto	l3201
  1321  05CE                     l3163:
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1324  05CE  0832               	movf	sprintf@ap,w
  1325  05CF  0084               	movwf	4
  1326  05D0  1383               	bcf	3,7	;select IRP bank0
  1327  05D1  0800               	movf	0,w
  1328  05D2  00B5               	movwf	sprintf@val
  1329  05D3  0A84               	incf	4,f
  1330  05D4  0800               	movf	0,w
  1331  05D5  00B6               	movwf	sprintf@val+1
  1332  05D6                     l3165:
  1333  05D6  3002               	movlw	2
  1334  05D7  00AF               	movwf	??_sprintf
  1335  05D8  082F               	movf	??_sprintf,w
  1336  05D9  07B2               	addwf	sprintf@ap,f
  1337  05DA                     l3167:
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1340  05DA  1FB6               	btfss	sprintf@val+1,7
  1341  05DB  2DDD               	goto	u4471
  1342  05DC  2DDE               	goto	u4470
  1343  05DD                     u4471:
  1344  05DD  2DE7               	goto	l3173
  1345  05DE                     u4470:
  1346  05DE                     l3169:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1349  05DE  3003               	movlw	3
  1350  05DF  00AF               	movwf	??_sprintf
  1351  05E0  082F               	movf	??_sprintf,w
  1352  05E1  04B3               	iorwf	sprintf@flag,f
  1353  05E2                     l3171:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1356  05E2  09B5               	comf	sprintf@val,f
  1357  05E3  09B6               	comf	sprintf@val+1,f
  1358  05E4  0AB5               	incf	sprintf@val,f
  1359  05E5  1903               	skipnz
  1360  05E6  0AB6               	incf	sprintf@val+1,f
  1361  05E7                     l3173:
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1364  05E7  01B8               	clrf	sprintf@c
  1365  05E8  0AB8               	incf	sprintf@c,f
  1366  05E9                     l3179:
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1369  05E9  0838               	movf	sprintf@c,w
  1370  05EA  00AF               	movwf	??_sprintf
  1371  05EB  072F               	addwf	??_sprintf,w
  1372  05EC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1373  05ED  0084               	movwf	4
  1374  05EE  120A  158A  2000  120A  118A  	fcall	stringdir
  1375  05F3  00B0               	movwf	??_sprintf+1
  1376  05F4  120A  158A  2000  120A  118A  	fcall	stringdir
  1377  05F9  00B1               	movwf	??_sprintf+2
  1378  05FA  0831               	movf	??_sprintf+2,w
  1379  05FB  0236               	subwf	sprintf@val+1,w
  1380  05FC  1D03               	skipz
  1381  05FD  2E00               	goto	u4485
  1382  05FE  0830               	movf	??_sprintf+1,w
  1383  05FF  0235               	subwf	sprintf@val,w
  1384  0600                     u4485:
  1385  0600  1803               	skipnc
  1386  0601  2E03               	goto	u4481
  1387  0602  2E04               	goto	u4480
  1388  0603                     u4481:
  1389  0603  2E05               	goto	l3183
  1390  0604                     u4480:
  1391  0604  2E0F               	goto	l3185
  1392  0605                     l3183:
  1393  0605  3001               	movlw	1
  1394  0606  00AF               	movwf	??_sprintf
  1395  0607  082F               	movf	??_sprintf,w
  1396  0608  07B8               	addwf	sprintf@c,f
  1397  0609  3005               	movlw	5
  1398  060A  0638               	xorwf	sprintf@c,w
  1399  060B  1D03               	btfss	3,2
  1400  060C  2E0E               	goto	u4491
  1401  060D  2E0F               	goto	u4490
  1402  060E                     u4491:
  1403  060E  2DE9               	goto	l3179
  1404  060F                     u4490:
  1405  060F                     l3185:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1408  060F  0833               	movf	sprintf@flag,w
  1409  0610  3903               	andlw	3
  1410  0611  1903               	btfsc	3,2
  1411  0612  2E14               	goto	u4501
  1412  0613  2E15               	goto	u4500
  1413  0614                     u4501:
  1414  0614  2E20               	goto	l3191
  1415  0615                     u4500:
  1416  0615                     l3187:
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1419  0615  302D               	movlw	45
  1420  0616  00AF               	movwf	??_sprintf
  1421  0617  0837               	movf	sprintf@sp,w
  1422  0618  0084               	movwf	4
  1423  0619  082F               	movf	??_sprintf,w
  1424  061A  1383               	bcf	3,7	;select IRP bank0
  1425  061B  0080               	movwf	0
  1426  061C                     l3189:
  1427  061C  3001               	movlw	1
  1428  061D  00AF               	movwf	??_sprintf
  1429  061E  082F               	movf	??_sprintf,w
  1430  061F  07B7               	addwf	sprintf@sp,f
  1431  0620                     l3191:
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1434  0620  0838               	movf	sprintf@c,w
  1435  0621  00AF               	movwf	??_sprintf
  1436  0622  082F               	movf	??_sprintf,w
  1437  0623  00B4               	movwf	sprintf@prec
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1440  0624  2E60               	goto	l3199
  1441  0625                     l3193:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1444  0625  300A               	movlw	10
  1445  0626  00A7               	movwf	___lwmod@divisor
  1446  0627  3000               	movlw	0
  1447  0628  00A8               	movwf	___lwmod@divisor+1
  1448  0629  0834               	movf	sprintf@prec,w
  1449  062A  00AF               	movwf	??_sprintf
  1450  062B  072F               	addwf	??_sprintf,w
  1451  062C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1452  062D  0084               	movwf	4
  1453  062E  120A  158A  2000  120A  118A  	fcall	stringdir
  1454  0633  00A0               	movwf	___lwdiv@divisor
  1455  0634  120A  158A  2000  120A  118A  	fcall	stringdir
  1456  0639  00A1               	movwf	___lwdiv@divisor+1
  1457  063A  0836               	movf	sprintf@val+1,w
  1458  063B  00A3               	movwf	___lwdiv@dividend+1
  1459  063C  0835               	movf	sprintf@val,w
  1460  063D  00A2               	movwf	___lwdiv@dividend
  1461  063E  120A  158A  243A  120A  118A  	fcall	___lwdiv
  1462  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0645  0821               	movf	?___lwdiv+1,w
  1465  0646  00AA               	movwf	___lwmod@dividend+1
  1466  0647  0820               	movf	?___lwdiv,w
  1467  0648  00A9               	movwf	___lwmod@dividend
  1468  0649  120A  158A  23FE  120A  118A  	fcall	___lwmod
  1469  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1470  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0650  0827               	movf	?___lwmod,w
  1472  0651  3E30               	addlw	48
  1473  0652  00B0               	movwf	??_sprintf+1
  1474  0653  0830               	movf	??_sprintf+1,w
  1475  0654  00B8               	movwf	sprintf@c
  1476  0655                     l3195:
  1477                           
  1478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1479  0655  0838               	movf	sprintf@c,w
  1480  0656  00AF               	movwf	??_sprintf
  1481  0657  0837               	movf	sprintf@sp,w
  1482  0658  0084               	movwf	4
  1483  0659  082F               	movf	??_sprintf,w
  1484  065A  1383               	bcf	3,7	;select IRP bank0
  1485  065B  0080               	movwf	0
  1486  065C                     l3197:
  1487  065C  3001               	movlw	1
  1488  065D  00AF               	movwf	??_sprintf
  1489  065E  082F               	movf	??_sprintf,w
  1490  065F  07B7               	addwf	sprintf@sp,f
  1491  0660                     l3199:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1494  0660  30FF               	movlw	255
  1495  0661  00AF               	movwf	??_sprintf
  1496  0662  082F               	movf	??_sprintf,w
  1497  0663  07B4               	addwf	sprintf@prec,f
  1498  0664  0A34               	incf	sprintf@prec,w
  1499  0665  1D03               	btfss	3,2
  1500  0666  2E68               	goto	u4511
  1501  0667  2E69               	goto	u4510
  1502  0668                     u4511:
  1503  0668  2E25               	goto	l3193
  1504  0669                     u4510:
  1505  0669                     l3201:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1508  0669  3001               	movlw	1
  1509  066A  07AC               	addwf	sprintf@f,f
  1510  066B  30FF               	movlw	-1
  1511  066C  072C               	addwf	sprintf@f,w
  1512  066D  0084               	movwf	4
  1513  066E  120A  158A  2000  120A  118A  	fcall	stringdir
  1514  0673  00AF               	movwf	??_sprintf
  1515  0674  082F               	movf	??_sprintf,w
  1516  0675  00B8               	movwf	sprintf@c
  1517  0676  0838               	movf	sprintf@c,w
  1518  0677  1D03               	btfss	3,2
  1519  0678  2E7A               	goto	u4521
  1520  0679  2E7B               	goto	u4520
  1521  067A                     u4521:
  1522  067A  2D9E               	goto	l3151
  1523  067B                     u4520:
  1524  067B                     l3203:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1527  067B  0837               	movf	sprintf@sp,w
  1528  067C  0084               	movwf	4
  1529  067D  1383               	bcf	3,7	;select IRP bank0
  1530  067E  0180               	clrf	0
  1531  067F                     l337:
  1532  067F  0008               	return
  1533  0680                     __end_of_sprintf:
  1534                           
  1535                           	psect	text2
  1536  0BFE                     __ptext2:	
  1537 ;; *************** function ___lwmod *****************
  1538 ;; Defined at:
  1539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  divisor         2    7[BANK0 ] unsigned int 
  1542 ;;  dividend        2    9[BANK0 ] unsigned int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  counter         1   11[BANK0 ] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    7[BANK0 ] unsigned int 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       4       0       0       0
  1555 ;;      Locals:         0       1       0       0       0
  1556 ;;      Temps:          1       0       0       0       0
  1557 ;;      Totals:         1       5       0       0       0
  1558 ;;Total ram usage:        6 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_sprintf
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function ___lwmod
  1570  0BFE                     ___lwmod:
  1571  0BFE                     l2725:	
  1572                           ;incstack = 0
  1573                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1574                           
  1575  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0C00  0827               	movf	___lwmod@divisor,w
  1578  0C01  0428               	iorwf	___lwmod@divisor+1,w
  1579  0C02  1903               	btfsc	3,2
  1580  0C03  2C05               	goto	u3511
  1581  0C04  2C06               	goto	u3510
  1582  0C05                     u3511:
  1583  0C05  2C35               	goto	l2743
  1584  0C06                     u3510:
  1585  0C06                     l2727:
  1586  0C06  01AB               	clrf	___lwmod@counter
  1587  0C07  0AAB               	incf	___lwmod@counter,f
  1588  0C08  2C14               	goto	l2733
  1589  0C09                     l2729:
  1590  0C09  3001               	movlw	1
  1591  0C0A                     u3525:
  1592  0C0A  1003               	clrc
  1593  0C0B  0DA7               	rlf	___lwmod@divisor,f
  1594  0C0C  0DA8               	rlf	___lwmod@divisor+1,f
  1595  0C0D  3EFF               	addlw	-1
  1596  0C0E  1D03               	skipz
  1597  0C0F  2C0A               	goto	u3525
  1598  0C10                     l2731:
  1599  0C10  3001               	movlw	1
  1600  0C11  00F5               	movwf	??___lwmod
  1601  0C12  0875               	movf	??___lwmod,w
  1602  0C13  07AB               	addwf	___lwmod@counter,f
  1603  0C14                     l2733:
  1604  0C14  1FA8               	btfss	___lwmod@divisor+1,7
  1605  0C15  2C17               	goto	u3531
  1606  0C16  2C18               	goto	u3530
  1607  0C17                     u3531:
  1608  0C17  2C09               	goto	l2729
  1609  0C18                     u3530:
  1610  0C18                     l2735:
  1611  0C18  0828               	movf	___lwmod@divisor+1,w
  1612  0C19  022A               	subwf	___lwmod@dividend+1,w
  1613  0C1A  1D03               	skipz
  1614  0C1B  2C1E               	goto	u3545
  1615  0C1C  0827               	movf	___lwmod@divisor,w
  1616  0C1D  0229               	subwf	___lwmod@dividend,w
  1617  0C1E                     u3545:
  1618  0C1E  1C03               	skipc
  1619  0C1F  2C21               	goto	u3541
  1620  0C20  2C22               	goto	u3540
  1621  0C21                     u3541:
  1622  0C21  2C28               	goto	l2739
  1623  0C22                     u3540:
  1624  0C22                     l2737:
  1625  0C22  0827               	movf	___lwmod@divisor,w
  1626  0C23  02A9               	subwf	___lwmod@dividend,f
  1627  0C24  0828               	movf	___lwmod@divisor+1,w
  1628  0C25  1C03               	skipc
  1629  0C26  03AA               	decf	___lwmod@dividend+1,f
  1630  0C27  02AA               	subwf	___lwmod@dividend+1,f
  1631  0C28                     l2739:
  1632  0C28  3001               	movlw	1
  1633  0C29                     u3555:
  1634  0C29  1003               	clrc
  1635  0C2A  0CA8               	rrf	___lwmod@divisor+1,f
  1636  0C2B  0CA7               	rrf	___lwmod@divisor,f
  1637  0C2C  3EFF               	addlw	-1
  1638  0C2D  1D03               	skipz
  1639  0C2E  2C29               	goto	u3555
  1640  0C2F                     l2741:
  1641  0C2F  3001               	movlw	1
  1642  0C30  02AB               	subwf	___lwmod@counter,f
  1643  0C31  1D03               	btfss	3,2
  1644  0C32  2C34               	goto	u3561
  1645  0C33  2C35               	goto	u3560
  1646  0C34                     u3561:
  1647  0C34  2C18               	goto	l2735
  1648  0C35                     u3560:
  1649  0C35                     l2743:
  1650  0C35  082A               	movf	___lwmod@dividend+1,w
  1651  0C36  00A8               	movwf	?___lwmod+1
  1652  0C37  0829               	movf	___lwmod@dividend,w
  1653  0C38  00A7               	movwf	?___lwmod
  1654  0C39                     l623:
  1655  0C39  0008               	return
  1656  0C3A                     __end_of___lwmod:
  1657                           
  1658                           	psect	text3
  1659  0C3A                     __ptext3:	
  1660 ;; *************** function ___lwdiv *****************
  1661 ;; Defined at:
  1662 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  divisor         2    0[BANK0 ] unsigned int 
  1665 ;;  dividend        2    2[BANK0 ] unsigned int 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  quotient        2    5[BANK0 ] unsigned int 
  1668 ;;  counter         1    4[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2    0[BANK0 ] unsigned int 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       4       0       0       0
  1679 ;;      Locals:         0       3       0       0       0
  1680 ;;      Temps:          1       0       0       0       0
  1681 ;;      Totals:         1       7       0       0       0
  1682 ;;Total ram usage:        8 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_sprintf
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function ___lwdiv
  1694  0C3A                     ___lwdiv:
  1695  0C3A                     l2699:	
  1696                           ;incstack = 0
  1697                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1698                           
  1699  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0C3C  01A5               	clrf	___lwdiv@quotient
  1702  0C3D  01A6               	clrf	___lwdiv@quotient+1
  1703  0C3E                     l2701:
  1704  0C3E  0820               	movf	___lwdiv@divisor,w
  1705  0C3F  0421               	iorwf	___lwdiv@divisor+1,w
  1706  0C40  1903               	btfsc	3,2
  1707  0C41  2C43               	goto	u3441
  1708  0C42  2C44               	goto	u3440
  1709  0C43                     u3441:
  1710  0C43  2C7B               	goto	l2721
  1711  0C44                     u3440:
  1712  0C44                     l2703:
  1713  0C44  01A4               	clrf	___lwdiv@counter
  1714  0C45  0AA4               	incf	___lwdiv@counter,f
  1715  0C46  2C52               	goto	l2709
  1716  0C47                     l2705:
  1717  0C47  3001               	movlw	1
  1718  0C48                     u3455:
  1719  0C48  1003               	clrc
  1720  0C49  0DA0               	rlf	___lwdiv@divisor,f
  1721  0C4A  0DA1               	rlf	___lwdiv@divisor+1,f
  1722  0C4B  3EFF               	addlw	-1
  1723  0C4C  1D03               	skipz
  1724  0C4D  2C48               	goto	u3455
  1725  0C4E                     l2707:
  1726  0C4E  3001               	movlw	1
  1727  0C4F  00F4               	movwf	??___lwdiv
  1728  0C50  0874               	movf	??___lwdiv,w
  1729  0C51  07A4               	addwf	___lwdiv@counter,f
  1730  0C52                     l2709:
  1731  0C52  1FA1               	btfss	___lwdiv@divisor+1,7
  1732  0C53  2C55               	goto	u3461
  1733  0C54  2C56               	goto	u3460
  1734  0C55                     u3461:
  1735  0C55  2C47               	goto	l2705
  1736  0C56                     u3460:
  1737  0C56                     l2711:
  1738  0C56  3001               	movlw	1
  1739  0C57                     u3475:
  1740  0C57  1003               	clrc
  1741  0C58  0DA5               	rlf	___lwdiv@quotient,f
  1742  0C59  0DA6               	rlf	___lwdiv@quotient+1,f
  1743  0C5A  3EFF               	addlw	-1
  1744  0C5B  1D03               	skipz
  1745  0C5C  2C57               	goto	u3475
  1746  0C5D  0821               	movf	___lwdiv@divisor+1,w
  1747  0C5E  0223               	subwf	___lwdiv@dividend+1,w
  1748  0C5F  1D03               	skipz
  1749  0C60  2C63               	goto	u3485
  1750  0C61  0820               	movf	___lwdiv@divisor,w
  1751  0C62  0222               	subwf	___lwdiv@dividend,w
  1752  0C63                     u3485:
  1753  0C63  1C03               	skipc
  1754  0C64  2C66               	goto	u3481
  1755  0C65  2C67               	goto	u3480
  1756  0C66                     u3481:
  1757  0C66  2C6E               	goto	l2717
  1758  0C67                     u3480:
  1759  0C67                     l2713:
  1760  0C67  0820               	movf	___lwdiv@divisor,w
  1761  0C68  02A2               	subwf	___lwdiv@dividend,f
  1762  0C69  0821               	movf	___lwdiv@divisor+1,w
  1763  0C6A  1C03               	skipc
  1764  0C6B  03A3               	decf	___lwdiv@dividend+1,f
  1765  0C6C  02A3               	subwf	___lwdiv@dividend+1,f
  1766  0C6D                     l2715:
  1767  0C6D  1425               	bsf	___lwdiv@quotient,0
  1768  0C6E                     l2717:
  1769  0C6E  3001               	movlw	1
  1770  0C6F                     u3495:
  1771  0C6F  1003               	clrc
  1772  0C70  0CA1               	rrf	___lwdiv@divisor+1,f
  1773  0C71  0CA0               	rrf	___lwdiv@divisor,f
  1774  0C72  3EFF               	addlw	-1
  1775  0C73  1D03               	skipz
  1776  0C74  2C6F               	goto	u3495
  1777  0C75                     l2719:
  1778  0C75  3001               	movlw	1
  1779  0C76  02A4               	subwf	___lwdiv@counter,f
  1780  0C77  1D03               	btfss	3,2
  1781  0C78  2C7A               	goto	u3501
  1782  0C79  2C7B               	goto	u3500
  1783  0C7A                     u3501:
  1784  0C7A  2C56               	goto	l2711
  1785  0C7B                     u3500:
  1786  0C7B                     l2721:
  1787  0C7B  0826               	movf	___lwdiv@quotient+1,w
  1788  0C7C  00A1               	movwf	?___lwdiv+1
  1789  0C7D  0825               	movf	___lwdiv@quotient,w
  1790  0C7E  00A0               	movwf	?___lwdiv
  1791  0C7F                     l613:
  1792  0C7F  0008               	return
  1793  0C80                     __end_of___lwdiv:
  1794                           
  1795                           	psect	text4
  1796  0AFF                     __ptext4:	
  1797 ;; *************** function _init_ADC *****************
  1798 ;; Defined at:
  1799 ;;		line 166 in file "main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		None
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           
  1828                           ;psect for function _init_ADC
  1829  0AFF                     _init_ADC:
  1830  0AFF                     l3113:	
  1831                           ;incstack = 0
  1832                           ; Regs used in _init_ADC: []
  1833                           
  1834                           
  1835                           ;main.c: 169:     ADCON1bits.ADCS2 = 0, ADCON0bits.ADCS1 = 0,ADCON0bits.ADCS0 = 1;
  1836  0AFF  1683               	bsf	3,5	;RP0=1, select bank1
  1837  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  1838  0B01  131F               	bcf	31,6	;volatile
  1839  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0B04  139F               	bcf	31,7	;volatile
  1842  0B05  171F               	bsf	31,6	;volatile
  1843                           
  1844                           ;main.c: 171:     ADCON0bits.CHS2 = 1, ADCON0bits.CHS1 = 1, ADCON0bits.CHS0 = 0;
  1845  0B06  169F               	bsf	31,5	;volatile
  1846  0B07  161F               	bsf	31,4	;volatile
  1847  0B08  119F               	bcf	31,3	;volatile
  1848                           
  1849                           ;main.c: 173:     ADCON1bits.ADFM = 1;
  1850  0B09  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0B0A  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0B0B  179F               	bsf	31,7	;volatile
  1853                           
  1854                           ;main.c: 175:     ADCON1bits.PCFG3 = 1, ADCON1bits.PCFG2 = 1, ADCON1bits.PCFG1 = 1, ADCO
      +                          N1bits.PCFG0 = 0;
  1855  0B0C  159F               	bsf	31,3	;volatile
  1856  0B0D  151F               	bsf	31,2	;volatile
  1857  0B0E  149F               	bsf	31,1	;volatile
  1858  0B0F  101F               	bcf	31,0	;volatile
  1859                           
  1860                           ;main.c: 177:     ADCON0bits.ADON = 1;
  1861  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0B12  141F               	bsf	31,0	;volatile
  1864  0B13                     l191:
  1865  0B13  0008               	return
  1866  0B14                     __end_of_init_ADC:
  1867                           
  1868                           	psect	text5
  1869  0DA5                     __ptext5:	
  1870 ;; *************** function _Read_Temp *****************
  1871 ;; Defined at:
  1872 ;;		line 180 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  TempValue       4   37[BANK0 ] float 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       4       0       0       0
  1888 ;;      Temps:          0       2       0       0       0
  1889 ;;      Totals:         0       6       0       0       0
  1890 ;;Total ram usage:        6 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    3
  1893 ;; This function calls:
  1894 ;;		___fldiv
  1895 ;;		___flmul
  1896 ;;		___fltol
  1897 ;;		___xxtofl
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _Read_Temp
  1905  0DA5                     _Read_Temp:
  1906  0DA5                     l3115:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _Read_Temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1909                           
  1910  0DA5                     l3117:
  1911                           
  1912                           ;main.c: 183:     ADCON0bits.GO_nDONE = 1;
  1913  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0DA7  151F               	bsf	31,2	;volatile
  1916  0DA8                     l194:	
  1917                           ;main.c: 184:     while(ADCON0bits.GO_nDONE);
  1918                           
  1919  0DA8  191F               	btfsc	31,2	;volatile
  1920  0DA9  2DAB               	goto	u4421
  1921  0DAA  2DAC               	goto	u4420
  1922  0DAB                     u4421:
  1923  0DAB  2DA8               	goto	l194
  1924  0DAC                     u4420:
  1925  0DAC                     l3119:
  1926                           
  1927                           ;main.c: 185:     TempValue = ADRESH*256 + ADRESL;
  1928  0DAC  081E               	movf	30,w	;volatile
  1929  0DAD  00C3               	movwf	??_Read_Temp
  1930  0DAE  01C4               	clrf	??_Read_Temp+1
  1931  0DAF  0843               	movf	??_Read_Temp,w
  1932  0DB0  00C4               	movwf	??_Read_Temp+1
  1933  0DB1  01C3               	clrf	??_Read_Temp
  1934  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0DB4  081E               	movf	30,w	;volatile
  1937  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0DB7  0743               	addwf	??_Read_Temp,w
  1940  0DB8  00A0               	movwf	___xxtofl@val
  1941  0DB9  3000               	movlw	0
  1942  0DBA  1803               	skipnc
  1943  0DBB  3001               	movlw	1
  1944  0DBC  0744               	addwf	??_Read_Temp+1,w
  1945  0DBD  00A1               	movwf	___xxtofl@val+1
  1946  0DBE  01A2               	clrf	___xxtofl@val+2
  1947  0DBF  1BA1               	btfsc	___xxtofl@val+1,7
  1948  0DC0  03A2               	decf	___xxtofl@val+2,f
  1949  0DC1  0822               	movf	___xxtofl@val+2,w
  1950  0DC2  00A3               	movwf	___xxtofl@val+3
  1951  0DC3  3001               	movlw	1
  1952  0DC4  120A  158A  2744  120A  158A  	fcall	___xxtofl
  1953  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0DCB  0823               	movf	?___xxtofl+3,w
  1956  0DCC  00C8               	movwf	Read_Temp@TempValue+3
  1957  0DCD  0822               	movf	?___xxtofl+2,w
  1958  0DCE  00C7               	movwf	Read_Temp@TempValue+2
  1959  0DCF  0821               	movf	?___xxtofl+1,w
  1960  0DD0  00C6               	movwf	Read_Temp@TempValue+1
  1961  0DD1  0820               	movf	?___xxtofl,w
  1962  0DD2  00C5               	movwf	Read_Temp@TempValue
  1963                           
  1964                           ;main.c: 186:     TempValue = 5000.0f / 1023 * TempValue;
  1965  0DD3  3040               	movlw	64
  1966  0DD4  00AA               	movwf	___flmul@b+3
  1967  0DD5  309C               	movlw	156
  1968  0DD6  00A9               	movwf	___flmul@b+2
  1969  0DD7  3067               	movlw	103
  1970  0DD8  00A8               	movwf	___flmul@b+1
  1971  0DD9  301A               	movlw	26
  1972  0DDA  00A7               	movwf	___flmul@b
  1973  0DDB  0848               	movf	Read_Temp@TempValue+3,w
  1974  0DDC  00AE               	movwf	___flmul@a+3
  1975  0DDD  0847               	movf	Read_Temp@TempValue+2,w
  1976  0DDE  00AD               	movwf	___flmul@a+2
  1977  0DDF  0846               	movf	Read_Temp@TempValue+1,w
  1978  0DE0  00AC               	movwf	___flmul@a+1
  1979  0DE1  0845               	movf	Read_Temp@TempValue,w
  1980  0DE2  00AB               	movwf	___flmul@a
  1981  0DE3  120A  118A  2058  120A  158A  	fcall	___flmul
  1982  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0DEA  082A               	movf	?___flmul+3,w
  1985  0DEB  00C8               	movwf	Read_Temp@TempValue+3
  1986  0DEC  0829               	movf	?___flmul+2,w
  1987  0DED  00C7               	movwf	Read_Temp@TempValue+2
  1988  0DEE  0828               	movf	?___flmul+1,w
  1989  0DEF  00C6               	movwf	Read_Temp@TempValue+1
  1990  0DF0  0827               	movf	?___flmul,w
  1991  0DF1  00C5               	movwf	Read_Temp@TempValue
  1992                           
  1993                           ;main.c: 187:     Temperature = TempValue / 10;
  1994  0DF2  0848               	movf	Read_Temp@TempValue+3,w
  1995  0DF3  00A7               	movwf	___fldiv@b+3
  1996  0DF4  0847               	movf	Read_Temp@TempValue+2,w
  1997  0DF5  00A6               	movwf	___fldiv@b+2
  1998  0DF6  0846               	movf	Read_Temp@TempValue+1,w
  1999  0DF7  00A5               	movwf	___fldiv@b+1
  2000  0DF8  0845               	movf	Read_Temp@TempValue,w
  2001  0DF9  00A4               	movwf	___fldiv@b
  2002  0DFA  3041               	movlw	65
  2003  0DFB  00A3               	movwf	___fldiv@a+3
  2004  0DFC  3020               	movlw	32
  2005  0DFD  00A2               	movwf	___fldiv@a+2
  2006  0DFE  3000               	movlw	0
  2007  0DFF  00A1               	movwf	___fldiv@a+1
  2008  0E00  3000               	movlw	0
  2009  0E01  00A0               	movwf	___fldiv@a
  2010  0E02  120A  118A  23B9  120A  158A  	fcall	___fldiv
  2011  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0E09  0823               	movf	?___fldiv+3,w
  2014  0E0A  00BD               	movwf	___fltol@f1+3
  2015  0E0B  0822               	movf	?___fldiv+2,w
  2016  0E0C  00BC               	movwf	___fltol@f1+2
  2017  0E0D  0821               	movf	?___fldiv+1,w
  2018  0E0E  00BB               	movwf	___fltol@f1+1
  2019  0E0F  0820               	movf	?___fldiv,w
  2020  0E10  00BA               	movwf	___fltol@f1
  2021  0E11  120A  158A  261D  120A  158A  	fcall	___fltol
  2022  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0E18  083B               	movf	?___fltol+1,w
  2025  0E19  00DC               	movwf	_Temperature+1
  2026  0E1A  083A               	movf	?___fltol,w
  2027  0E1B  00DB               	movwf	_Temperature
  2028  0E1C                     l197:
  2029  0E1C  0008               	return
  2030  0E1D                     __end_of_Read_Temp:
  2031                           
  2032                           	psect	text6
  2033  0F44                     __ptext6:	
  2034 ;; *************** function ___xxtofl *****************
  2035 ;; Defined at:
  2036 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  sign            1    wreg     unsigned char 
  2039 ;;  val             4    0[BANK0 ] long 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  sign            1    8[BANK0 ] unsigned char 
  2042 ;;  arg             4   10[BANK0 ] unsigned long 
  2043 ;;  exp             1    9[BANK0 ] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  4    0[BANK0 ] unsigned char 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       4       0       0       0
  2054 ;;      Locals:         0       6       0       0       0
  2055 ;;      Temps:          0       4       0       0       0
  2056 ;;      Totals:         0      14       0       0       0
  2057 ;;Total ram usage:       14 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_Read_Temp
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function ___xxtofl
  2069  0F44                     ___xxtofl:
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2073                           ;___xxtofl@sign stored from wreg
  2074  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0F46  00A8               	movwf	___xxtofl@sign
  2077  0F47                     l3029:
  2078  0F47  0828               	movf	___xxtofl@sign,w
  2079  0F48  1903               	btfsc	3,2
  2080  0F49  2F4B               	goto	u4231
  2081  0F4A  2F4C               	goto	u4230
  2082  0F4B                     u4231:
  2083  0F4B  2F60               	goto	l3035
  2084  0F4C                     u4230:
  2085  0F4C                     l3031:
  2086  0F4C  1FA3               	btfss	___xxtofl@val+3,7
  2087  0F4D  2F4F               	goto	u4241
  2088  0F4E  2F50               	goto	u4240
  2089  0F4F                     u4241:
  2090  0F4F  2F60               	goto	l3035
  2091  0F50                     u4240:
  2092  0F50                     l3033:
  2093  0F50  0920               	comf	___xxtofl@val,w
  2094  0F51  00AA               	movwf	___xxtofl@arg
  2095  0F52  0921               	comf	___xxtofl@val+1,w
  2096  0F53  00AB               	movwf	___xxtofl@arg+1
  2097  0F54  0922               	comf	___xxtofl@val+2,w
  2098  0F55  00AC               	movwf	___xxtofl@arg+2
  2099  0F56  0923               	comf	___xxtofl@val+3,w
  2100  0F57  00AD               	movwf	___xxtofl@arg+3
  2101  0F58  0AAA               	incf	___xxtofl@arg,f
  2102  0F59  1903               	skipnz
  2103  0F5A  0AAB               	incf	___xxtofl@arg+1,f
  2104  0F5B  1903               	skipnz
  2105  0F5C  0AAC               	incf	___xxtofl@arg+2,f
  2106  0F5D  1903               	skipnz
  2107  0F5E  0AAD               	incf	___xxtofl@arg+3,f
  2108  0F5F  2F68               	goto	l774
  2109  0F60                     l3035:
  2110  0F60  0823               	movf	___xxtofl@val+3,w
  2111  0F61  00AD               	movwf	___xxtofl@arg+3
  2112  0F62  0822               	movf	___xxtofl@val+2,w
  2113  0F63  00AC               	movwf	___xxtofl@arg+2
  2114  0F64  0821               	movf	___xxtofl@val+1,w
  2115  0F65  00AB               	movwf	___xxtofl@arg+1
  2116  0F66  0820               	movf	___xxtofl@val,w
  2117  0F67  00AA               	movwf	___xxtofl@arg
  2118  0F68                     l774:
  2119  0F68  0823               	movf	___xxtofl@val+3,w
  2120  0F69  0422               	iorwf	___xxtofl@val+2,w
  2121  0F6A  0421               	iorwf	___xxtofl@val+1,w
  2122  0F6B  0420               	iorwf	___xxtofl@val,w
  2123  0F6C  1D03               	skipz
  2124  0F6D  2F6F               	goto	u4251
  2125  0F6E  2F70               	goto	u4250
  2126  0F6F                     u4251:
  2127  0F6F  2F79               	goto	l3041
  2128  0F70                     u4250:
  2129  0F70                     l3037:
  2130  0F70  3000               	movlw	0
  2131  0F71  00A3               	movwf	?___xxtofl+3
  2132  0F72  3000               	movlw	0
  2133  0F73  00A2               	movwf	?___xxtofl+2
  2134  0F74  3000               	movlw	0
  2135  0F75  00A1               	movwf	?___xxtofl+1
  2136  0F76  3000               	movlw	0
  2137  0F77  00A0               	movwf	?___xxtofl
  2138  0F78  2FFF               	goto	l776
  2139  0F79                     l3041:
  2140  0F79  3096               	movlw	150
  2141  0F7A  00A4               	movwf	??___xxtofl
  2142  0F7B  0824               	movf	??___xxtofl,w
  2143  0F7C  00A9               	movwf	___xxtofl@exp
  2144  0F7D  2F8B               	goto	l3045
  2145  0F7E                     l3043:
  2146  0F7E  3001               	movlw	1
  2147  0F7F  00A4               	movwf	??___xxtofl
  2148  0F80  0824               	movf	??___xxtofl,w
  2149  0F81  07A9               	addwf	___xxtofl@exp,f
  2150  0F82  3001               	movlw	1
  2151  0F83                     u4265:
  2152  0F83  1003               	clrc
  2153  0F84  0CAD               	rrf	___xxtofl@arg+3,f
  2154  0F85  0CAC               	rrf	___xxtofl@arg+2,f
  2155  0F86  0CAB               	rrf	___xxtofl@arg+1,f
  2156  0F87  0CAA               	rrf	___xxtofl@arg,f
  2157  0F88  3EFF               	addlw	-1
  2158  0F89  1D03               	skipz
  2159  0F8A  2F83               	goto	u4265
  2160  0F8B                     l3045:
  2161  0F8B  30FE               	movlw	254
  2162  0F8C  052D               	andwf	___xxtofl@arg+3,w
  2163  0F8D  1D03               	btfss	3,2
  2164  0F8E  2F90               	goto	u4271
  2165  0F8F  2F91               	goto	u4270
  2166  0F90                     u4271:
  2167  0F90  2F7E               	goto	l3043
  2168  0F91                     u4270:
  2169  0F91  2FAD               	goto	l780
  2170  0F92                     l3047:
  2171  0F92  3001               	movlw	1
  2172  0F93  00A4               	movwf	??___xxtofl
  2173  0F94  0824               	movf	??___xxtofl,w
  2174  0F95  07A9               	addwf	___xxtofl@exp,f
  2175  0F96                     l3049:
  2176  0F96  3001               	movlw	1
  2177  0F97  07AA               	addwf	___xxtofl@arg,f
  2178  0F98  3000               	movlw	0
  2179  0F99  1803               	skipnc
  2180  0F9A  3001               	movlw	1
  2181  0F9B  07AB               	addwf	___xxtofl@arg+1,f
  2182  0F9C  3000               	movlw	0
  2183  0F9D  1803               	skipnc
  2184  0F9E  3001               	movlw	1
  2185  0F9F  07AC               	addwf	___xxtofl@arg+2,f
  2186  0FA0  3000               	movlw	0
  2187  0FA1  1803               	skipnc
  2188  0FA2  3001               	movlw	1
  2189  0FA3  07AD               	addwf	___xxtofl@arg+3,f
  2190  0FA4                     l3051:
  2191  0FA4  3001               	movlw	1
  2192  0FA5                     u4285:
  2193  0FA5  1003               	clrc
  2194  0FA6  0CAD               	rrf	___xxtofl@arg+3,f
  2195  0FA7  0CAC               	rrf	___xxtofl@arg+2,f
  2196  0FA8  0CAB               	rrf	___xxtofl@arg+1,f
  2197  0FA9  0CAA               	rrf	___xxtofl@arg,f
  2198  0FAA  3EFF               	addlw	-1
  2199  0FAB  1D03               	skipz
  2200  0FAC  2FA5               	goto	u4285
  2201  0FAD                     l780:
  2202  0FAD  30FF               	movlw	255
  2203  0FAE  052D               	andwf	___xxtofl@arg+3,w
  2204  0FAF  1D03               	btfss	3,2
  2205  0FB0  2FB2               	goto	u4291
  2206  0FB1  2FB3               	goto	u4290
  2207  0FB2                     u4291:
  2208  0FB2  2F92               	goto	l3047
  2209  0FB3                     u4290:
  2210  0FB3  2FBF               	goto	l3055
  2211  0FB4                     l3053:
  2212  0FB4  3001               	movlw	1
  2213  0FB5  02A9               	subwf	___xxtofl@exp,f
  2214  0FB6  3001               	movlw	1
  2215  0FB7  00A4               	movwf	??___xxtofl
  2216  0FB8                     u4305:
  2217  0FB8  1003               	clrc
  2218  0FB9  0DAA               	rlf	___xxtofl@arg,f
  2219  0FBA  0DAB               	rlf	___xxtofl@arg+1,f
  2220  0FBB  0DAC               	rlf	___xxtofl@arg+2,f
  2221  0FBC  0DAD               	rlf	___xxtofl@arg+3,f
  2222  0FBD  0BA4               	decfsz	??___xxtofl,f
  2223  0FBE  2FB8               	goto	u4305
  2224  0FBF                     l3055:
  2225  0FBF  1BAC               	btfsc	___xxtofl@arg+2,7
  2226  0FC0  2FC2               	goto	u4311
  2227  0FC1  2FC3               	goto	u4310
  2228  0FC2                     u4311:
  2229  0FC2  2FC9               	goto	l787
  2230  0FC3                     u4310:
  2231  0FC3                     l3057:
  2232  0FC3  3002               	movlw	2
  2233  0FC4  0229               	subwf	___xxtofl@exp,w
  2234  0FC5  1803               	skipnc
  2235  0FC6  2FC8               	goto	u4321
  2236  0FC7  2FC9               	goto	u4320
  2237  0FC8                     u4321:
  2238  0FC8  2FB4               	goto	l3053
  2239  0FC9                     u4320:
  2240  0FC9                     l787:
  2241  0FC9  1829               	btfsc	___xxtofl@exp,0
  2242  0FCA  2FCC               	goto	u4331
  2243  0FCB  2FCD               	goto	u4330
  2244  0FCC                     u4331:
  2245  0FCC  2FD5               	goto	l788
  2246  0FCD                     u4330:
  2247  0FCD                     l3059:
  2248  0FCD  30FF               	movlw	255
  2249  0FCE  05AA               	andwf	___xxtofl@arg,f
  2250  0FCF  30FF               	movlw	255
  2251  0FD0  05AB               	andwf	___xxtofl@arg+1,f
  2252  0FD1  307F               	movlw	127
  2253  0FD2  05AC               	andwf	___xxtofl@arg+2,f
  2254  0FD3  30FF               	movlw	255
  2255  0FD4  05AD               	andwf	___xxtofl@arg+3,f
  2256  0FD5                     l788:
  2257  0FD5  1003               	clrc
  2258  0FD6  0CA9               	rrf	___xxtofl@exp,f
  2259  0FD7                     l3061:
  2260  0FD7  0829               	movf	___xxtofl@exp,w
  2261  0FD8  00A4               	movwf	??___xxtofl
  2262  0FD9  01A5               	clrf	??___xxtofl+1
  2263  0FDA  01A6               	clrf	??___xxtofl+2
  2264  0FDB  01A7               	clrf	??___xxtofl+3
  2265  0FDC  3018               	movlw	24
  2266  0FDD                     u4345:
  2267  0FDD  1003               	clrc
  2268  0FDE  0DA4               	rlf	??___xxtofl,f
  2269  0FDF  0DA5               	rlf	??___xxtofl+1,f
  2270  0FE0  0DA6               	rlf	??___xxtofl+2,f
  2271  0FE1  0DA7               	rlf	??___xxtofl+3,f
  2272  0FE2                     u4340:
  2273  0FE2  3EFF               	addlw	-1
  2274  0FE3  1D03               	skipz
  2275  0FE4  2FDD               	goto	u4345
  2276  0FE5  0824               	movf	??___xxtofl,w
  2277  0FE6  04AA               	iorwf	___xxtofl@arg,f
  2278  0FE7  0825               	movf	??___xxtofl+1,w
  2279  0FE8  04AB               	iorwf	___xxtofl@arg+1,f
  2280  0FE9  0826               	movf	??___xxtofl+2,w
  2281  0FEA  04AC               	iorwf	___xxtofl@arg+2,f
  2282  0FEB  0827               	movf	??___xxtofl+3,w
  2283  0FEC  04AD               	iorwf	___xxtofl@arg+3,f
  2284  0FED                     l3063:
  2285  0FED  0828               	movf	___xxtofl@sign,w
  2286  0FEE  1903               	btfsc	3,2
  2287  0FEF  2FF1               	goto	u4351
  2288  0FF0  2FF2               	goto	u4350
  2289  0FF1                     u4351:
  2290  0FF1  2FF7               	goto	l3069
  2291  0FF2                     u4350:
  2292  0FF2                     l3065:
  2293  0FF2  1FA3               	btfss	___xxtofl@val+3,7
  2294  0FF3  2FF5               	goto	u4361
  2295  0FF4  2FF6               	goto	u4360
  2296  0FF5                     u4361:
  2297  0FF5  2FF7               	goto	l3069
  2298  0FF6                     u4360:
  2299  0FF6                     l3067:
  2300  0FF6  17AD               	bsf	___xxtofl@arg+3,7
  2301  0FF7                     l3069:
  2302  0FF7  082D               	movf	___xxtofl@arg+3,w
  2303  0FF8  00A3               	movwf	?___xxtofl+3
  2304  0FF9  082C               	movf	___xxtofl@arg+2,w
  2305  0FFA  00A2               	movwf	?___xxtofl+2
  2306  0FFB  082B               	movf	___xxtofl@arg+1,w
  2307  0FFC  00A1               	movwf	?___xxtofl+1
  2308  0FFD  082A               	movf	___xxtofl@arg,w
  2309  0FFE  00A0               	movwf	?___xxtofl
  2310  0FFF                     l776:
  2311  0FFF  0008               	return
  2312  1000                     __end_of___xxtofl:
  2313                           
  2314                           	psect	text7
  2315  0E1D                     __ptext7:	
  2316 ;; *************** function ___fltol *****************
  2317 ;; Defined at:
  2318 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  f1              4   26[BANK0 ] unsigned char 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  exp1            1    5[COMMON] unsigned char 
  2323 ;;  sign1           1    4[COMMON] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  4   26[BANK0 ] long 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       4       0       0       0
  2334 ;;      Locals:         2       0       0       0       0
  2335 ;;      Temps:          0       5       0       0       0
  2336 ;;      Totals:         2       9       0       0       0
  2337 ;;Total ram usage:       11 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_Read_Temp
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function ___fltol
  2349  0E1D                     ___fltol:
  2350  0E1D                     l2663:	
  2351                           ;incstack = 0
  2352                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2353                           
  2354  0E1D  1003               	clrc
  2355  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0E20  0D3C               	rlf	___fltol@f1+2,w
  2358  0E21  0D3D               	rlf	___fltol@f1+3,w
  2359  0E22  00BE               	movwf	??___fltol
  2360  0E23  083E               	movf	??___fltol,w
  2361  0E24  00F5               	movwf	___fltol@exp1
  2362  0E25  0875               	movf	___fltol@exp1,w
  2363  0E26  1D03               	btfss	3,2
  2364  0E27  2E29               	goto	u3341
  2365  0E28  2E2A               	goto	u3340
  2366  0E29                     u3341:
  2367  0E29  2E33               	goto	l2669
  2368  0E2A                     u3340:
  2369  0E2A                     l2665:
  2370  0E2A  3000               	movlw	0
  2371  0E2B  00BD               	movwf	?___fltol+3
  2372  0E2C  3000               	movlw	0
  2373  0E2D  00BC               	movwf	?___fltol+2
  2374  0E2E  3000               	movlw	0
  2375  0E2F  00BB               	movwf	?___fltol+1
  2376  0E30  3000               	movlw	0
  2377  0E31  00BA               	movwf	?___fltol
  2378  0E32  2E98               	goto	l527
  2379  0E33                     l2669:
  2380  0E33  083A               	movf	___fltol@f1,w
  2381  0E34  00BE               	movwf	??___fltol
  2382  0E35  083B               	movf	___fltol@f1+1,w
  2383  0E36  00BF               	movwf	??___fltol+1
  2384  0E37  083C               	movf	___fltol@f1+2,w
  2385  0E38  00C0               	movwf	??___fltol+2
  2386  0E39  083D               	movf	___fltol@f1+3,w
  2387  0E3A  00C1               	movwf	??___fltol+3
  2388  0E3B  301F               	movlw	31
  2389  0E3C                     u3355:
  2390  0E3C  1003               	clrc
  2391  0E3D  0CC1               	rrf	??___fltol+3,f
  2392  0E3E  0CC0               	rrf	??___fltol+2,f
  2393  0E3F  0CBF               	rrf	??___fltol+1,f
  2394  0E40  0CBE               	rrf	??___fltol,f
  2395  0E41                     u3350:
  2396  0E41  3EFF               	addlw	-1
  2397  0E42  1D03               	skipz
  2398  0E43  2E3C               	goto	u3355
  2399  0E44  083E               	movf	??___fltol,w
  2400  0E45  00C2               	movwf	??___fltol+4
  2401  0E46  0842               	movf	??___fltol+4,w
  2402  0E47  00F4               	movwf	___fltol@sign1
  2403  0E48                     l2671:
  2404  0E48  17BC               	bsf	___fltol@f1+2,7
  2405  0E49                     l2673:
  2406  0E49  30FF               	movlw	255
  2407  0E4A  05BA               	andwf	___fltol@f1,f
  2408  0E4B  30FF               	movlw	255
  2409  0E4C  05BB               	andwf	___fltol@f1+1,f
  2410  0E4D  30FF               	movlw	255
  2411  0E4E  05BC               	andwf	___fltol@f1+2,f
  2412  0E4F  3000               	movlw	0
  2413  0E50  05BD               	andwf	___fltol@f1+3,f
  2414  0E51                     l2675:
  2415  0E51  3096               	movlw	150
  2416  0E52  02F5               	subwf	___fltol@exp1,f
  2417  0E53                     l2677:
  2418  0E53  1FF5               	btfss	___fltol@exp1,7
  2419  0E54  2E56               	goto	u3361
  2420  0E55  2E57               	goto	u3360
  2421  0E56                     u3361:
  2422  0E56  2E71               	goto	l2687
  2423  0E57                     u3360:
  2424  0E57                     l2679:
  2425  0E57  0875               	movf	___fltol@exp1,w
  2426  0E58  3A80               	xorlw	128
  2427  0E59  3E97               	addlw	151
  2428  0E5A  1803               	skipnc
  2429  0E5B  2E5D               	goto	u3371
  2430  0E5C  2E5E               	goto	u3370
  2431  0E5D                     u3371:
  2432  0E5D  2E5F               	goto	l2685
  2433  0E5E                     u3370:
  2434  0E5E  2E2A               	goto	l2665
  2435  0E5F                     l2685:
  2436  0E5F  3001               	movlw	1
  2437  0E60                     u3385:
  2438  0E60  1003               	clrc
  2439  0E61  0CBD               	rrf	___fltol@f1+3,f
  2440  0E62  0CBC               	rrf	___fltol@f1+2,f
  2441  0E63  0CBB               	rrf	___fltol@f1+1,f
  2442  0E64  0CBA               	rrf	___fltol@f1,f
  2443  0E65  3EFF               	addlw	-1
  2444  0E66  1D03               	skipz
  2445  0E67  2E60               	goto	u3385
  2446  0E68  3001               	movlw	1
  2447  0E69  00BE               	movwf	??___fltol
  2448  0E6A  083E               	movf	??___fltol,w
  2449  0E6B  07F5               	addwf	___fltol@exp1,f
  2450  0E6C  1D03               	btfss	3,2
  2451  0E6D  2E6F               	goto	u3391
  2452  0E6E  2E70               	goto	u3390
  2453  0E6F                     u3391:
  2454  0E6F  2E5F               	goto	l2685
  2455  0E70                     u3390:
  2456  0E70  2E88               	goto	l2695
  2457  0E71                     l2687:
  2458  0E71  3020               	movlw	32
  2459  0E72  0275               	subwf	___fltol@exp1,w
  2460  0E73  1C03               	skipc
  2461  0E74  2E76               	goto	u3401
  2462  0E75  2E77               	goto	u3400
  2463  0E76                     u3401:
  2464  0E76  2E83               	goto	l534
  2465  0E77                     u3400:
  2466  0E77  2E2A               	goto	l2665
  2467  0E78                     l2693:
  2468  0E78  3001               	movlw	1
  2469  0E79  00BE               	movwf	??___fltol
  2470  0E7A                     u3415:
  2471  0E7A  1003               	clrc
  2472  0E7B  0DBA               	rlf	___fltol@f1,f
  2473  0E7C  0DBB               	rlf	___fltol@f1+1,f
  2474  0E7D  0DBC               	rlf	___fltol@f1+2,f
  2475  0E7E  0DBD               	rlf	___fltol@f1+3,f
  2476  0E7F  0BBE               	decfsz	??___fltol,f
  2477  0E80  2E7A               	goto	u3415
  2478  0E81  3001               	movlw	1
  2479  0E82  02F5               	subwf	___fltol@exp1,f
  2480  0E83                     l534:
  2481  0E83  0875               	movf	___fltol@exp1,w
  2482  0E84  1D03               	btfss	3,2
  2483  0E85  2E87               	goto	u3421
  2484  0E86  2E88               	goto	u3420
  2485  0E87                     u3421:
  2486  0E87  2E78               	goto	l2693
  2487  0E88                     u3420:
  2488  0E88                     l2695:
  2489  0E88  0874               	movf	___fltol@sign1,w
  2490  0E89  1903               	btfsc	3,2
  2491  0E8A  2E8C               	goto	u3431
  2492  0E8B  2E8D               	goto	u3430
  2493  0E8C                     u3431:
  2494  0E8C  2E98               	goto	l537
  2495  0E8D                     u3430:
  2496  0E8D                     l2697:
  2497  0E8D  09BA               	comf	___fltol@f1,f
  2498  0E8E  09BB               	comf	___fltol@f1+1,f
  2499  0E8F  09BC               	comf	___fltol@f1+2,f
  2500  0E90  09BD               	comf	___fltol@f1+3,f
  2501  0E91  0ABA               	incf	___fltol@f1,f
  2502  0E92  1903               	skipnz
  2503  0E93  0ABB               	incf	___fltol@f1+1,f
  2504  0E94  1903               	skipnz
  2505  0E95  0ABC               	incf	___fltol@f1+2,f
  2506  0E96  1903               	skipnz
  2507  0E97  0ABD               	incf	___fltol@f1+3,f
  2508  0E98                     l537:
  2509  0E98                     l527:
  2510  0E98  0008               	return
  2511  0E99                     __end_of___fltol:
  2512                           
  2513                           	psect	text8
  2514  0058                     __ptext8:	
  2515 ;; *************** function ___flmul *****************
  2516 ;; Defined at:
  2517 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  b               4    7[BANK0 ] long 
  2520 ;;  a               4   11[BANK0 ] long 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  prod            4   27[BANK0 ] struct .
  2523 ;;  grs             4   22[BANK0 ] unsigned long 
  2524 ;;  temp            2   31[BANK0 ] struct .
  2525 ;;  bexp            1   26[BANK0 ] unsigned char 
  2526 ;;  aexp            1   21[BANK0 ] unsigned char 
  2527 ;;  sign            1   20[BANK0 ] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  4    7[BANK0 ] unsigned char 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2537 ;;      Params:         0       8       0       0       0
  2538 ;;      Locals:         0      13       0       0       0
  2539 ;;      Temps:          0       5       0       0       0
  2540 ;;      Totals:         0      26       0       0       0
  2541 ;;Total ram usage:       26 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    2
  2544 ;; This function calls:
  2545 ;;		__Umul8_16
  2546 ;; This function is called by:
  2547 ;;		_Read_Temp
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function ___flmul
  2553  0058                     ___flmul:
  2554  0058                     l2889:	
  2555                           ;incstack = 0
  2556                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2557                           
  2558  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2560  005A  082A               	movf	___flmul@b+3,w
  2561  005B  3980               	andlw	128
  2562  005C  00AF               	movwf	??___flmul
  2563  005D  082F               	movf	??___flmul,w
  2564  005E  00B4               	movwf	___flmul@sign
  2565  005F                     l2891:
  2566  005F  082A               	movf	___flmul@b+3,w
  2567  0060  00AF               	movwf	??___flmul
  2568  0061  072F               	addwf	??___flmul,w
  2569  0062  00B0               	movwf	??___flmul+1
  2570  0063  0830               	movf	??___flmul+1,w
  2571  0064  00BA               	movwf	___flmul@bexp
  2572  0065                     l2893:
  2573  0065  1FA9               	btfss	___flmul@b+2,7
  2574  0066  2868               	goto	u3861
  2575  0067  2869               	goto	u3860
  2576  0068                     u3861:
  2577  0068  286A               	goto	l2897
  2578  0069                     u3860:
  2579  0069                     l2895:
  2580  0069  143A               	bsf	___flmul@bexp,0
  2581  006A                     l2897:
  2582  006A  083A               	movf	___flmul@bexp,w
  2583  006B  1903               	btfsc	3,2
  2584  006C  286E               	goto	u3871
  2585  006D  286F               	goto	u3870
  2586  006E                     u3871:
  2587  006E  287E               	goto	l2905
  2588  006F                     u3870:
  2589  006F                     l2899:
  2590  006F  0A3A               	incf	___flmul@bexp,w
  2591  0070  1D03               	btfss	3,2
  2592  0071  2873               	goto	u3881
  2593  0072  2874               	goto	u3880
  2594  0073                     u3881:
  2595  0073  287C               	goto	l2903
  2596  0074                     u3880:
  2597  0074                     l2901:
  2598  0074  3000               	movlw	0
  2599  0075  00AA               	movwf	___flmul@b+3
  2600  0076  3000               	movlw	0
  2601  0077  00A9               	movwf	___flmul@b+2
  2602  0078  3000               	movlw	0
  2603  0079  00A8               	movwf	___flmul@b+1
  2604  007A  3000               	movlw	0
  2605  007B  00A7               	movwf	___flmul@b
  2606  007C                     l2903:
  2607  007C  17A9               	bsf	___flmul@b+2,7
  2608  007D  2886               	goto	l2907
  2609  007E                     l2905:
  2610  007E  3000               	movlw	0
  2611  007F  00AA               	movwf	___flmul@b+3
  2612  0080  3000               	movlw	0
  2613  0081  00A9               	movwf	___flmul@b+2
  2614  0082  3000               	movlw	0
  2615  0083  00A8               	movwf	___flmul@b+1
  2616  0084  3000               	movlw	0
  2617  0085  00A7               	movwf	___flmul@b
  2618  0086                     l2907:
  2619  0086  082E               	movf	___flmul@a+3,w
  2620  0087  3980               	andlw	128
  2621  0088  00AF               	movwf	??___flmul
  2622  0089  082F               	movf	??___flmul,w
  2623  008A  06B4               	xorwf	___flmul@sign,f
  2624  008B                     l2909:
  2625  008B  082E               	movf	___flmul@a+3,w
  2626  008C  00AF               	movwf	??___flmul
  2627  008D  072F               	addwf	??___flmul,w
  2628  008E  00B0               	movwf	??___flmul+1
  2629  008F  0830               	movf	??___flmul+1,w
  2630  0090  00B5               	movwf	___flmul@aexp
  2631  0091                     l2911:
  2632  0091  1FAD               	btfss	___flmul@a+2,7
  2633  0092  2894               	goto	u3891
  2634  0093  2895               	goto	u3890
  2635  0094                     u3891:
  2636  0094  2896               	goto	l2915
  2637  0095                     u3890:
  2638  0095                     l2913:
  2639  0095  1435               	bsf	___flmul@aexp,0
  2640  0096                     l2915:
  2641  0096  0835               	movf	___flmul@aexp,w
  2642  0097  1903               	btfsc	3,2
  2643  0098  289A               	goto	u3901
  2644  0099  289B               	goto	u3900
  2645  009A                     u3901:
  2646  009A  28AA               	goto	l2923
  2647  009B                     u3900:
  2648  009B                     l2917:
  2649  009B  0A35               	incf	___flmul@aexp,w
  2650  009C  1D03               	btfss	3,2
  2651  009D  289F               	goto	u3911
  2652  009E  28A0               	goto	u3910
  2653  009F                     u3911:
  2654  009F  28A8               	goto	l2921
  2655  00A0                     u3910:
  2656  00A0                     l2919:
  2657  00A0  3000               	movlw	0
  2658  00A1  00AE               	movwf	___flmul@a+3
  2659  00A2  3000               	movlw	0
  2660  00A3  00AD               	movwf	___flmul@a+2
  2661  00A4  3000               	movlw	0
  2662  00A5  00AC               	movwf	___flmul@a+1
  2663  00A6  3000               	movlw	0
  2664  00A7  00AB               	movwf	___flmul@a
  2665  00A8                     l2921:
  2666  00A8  17AD               	bsf	___flmul@a+2,7
  2667  00A9  28B2               	goto	l2925
  2668  00AA                     l2923:
  2669  00AA  3000               	movlw	0
  2670  00AB  00AE               	movwf	___flmul@a+3
  2671  00AC  3000               	movlw	0
  2672  00AD  00AD               	movwf	___flmul@a+2
  2673  00AE  3000               	movlw	0
  2674  00AF  00AC               	movwf	___flmul@a+1
  2675  00B0  3000               	movlw	0
  2676  00B1  00AB               	movwf	___flmul@a
  2677  00B2                     l2925:
  2678  00B2  0835               	movf	___flmul@aexp,w
  2679  00B3  1903               	btfsc	3,2
  2680  00B4  28B6               	goto	u3921
  2681  00B5  28B7               	goto	u3920
  2682  00B6                     u3921:
  2683  00B6  28BC               	goto	l2929
  2684  00B7                     u3920:
  2685  00B7                     l2927:
  2686  00B7  083A               	movf	___flmul@bexp,w
  2687  00B8  1D03               	btfss	3,2
  2688  00B9  28BB               	goto	u3931
  2689  00BA  28BC               	goto	u3930
  2690  00BB                     u3931:
  2691  00BB  28C5               	goto	l2933
  2692  00BC                     u3930:
  2693  00BC                     l2929:
  2694  00BC  3000               	movlw	0
  2695  00BD  00AA               	movwf	?___flmul+3
  2696  00BE  3000               	movlw	0
  2697  00BF  00A9               	movwf	?___flmul+2
  2698  00C0  3000               	movlw	0
  2699  00C1  00A8               	movwf	?___flmul+1
  2700  00C2  3000               	movlw	0
  2701  00C3  00A7               	movwf	?___flmul
  2702  00C4  2BB8               	goto	l730
  2703  00C5                     l2933:
  2704  00C5  0827               	movf	___flmul@b,w
  2705  00C6  00AF               	movwf	??___flmul
  2706  00C7  082F               	movf	??___flmul,w
  2707  00C8  00F4               	movwf	__Umul8_16@multiplicand
  2708  00C9  082D               	movf	___flmul@a+2,w
  2709  00CA  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  2710  00CF  0875               	movf	?__Umul8_16+1,w
  2711  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2712  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2713  00D2  00C0               	movwf	___flmul@temp+1
  2714  00D3  0874               	movf	?__Umul8_16,w
  2715  00D4  00BF               	movwf	___flmul@temp
  2716  00D5                     l2935:
  2717  00D5  083F               	movf	___flmul@temp,w
  2718  00D6  00AF               	movwf	??___flmul
  2719  00D7  01B0               	clrf	??___flmul+1
  2720  00D8  01B1               	clrf	??___flmul+2
  2721  00D9  01B2               	clrf	??___flmul+3
  2722  00DA  0832               	movf	??___flmul+3,w
  2723  00DB  00B9               	movwf	___flmul@grs+3
  2724  00DC  0831               	movf	??___flmul+2,w
  2725  00DD  00B8               	movwf	___flmul@grs+2
  2726  00DE  0830               	movf	??___flmul+1,w
  2727  00DF  00B7               	movwf	___flmul@grs+1
  2728  00E0  082F               	movf	??___flmul,w
  2729  00E1  00B6               	movwf	___flmul@grs
  2730  00E2                     l2937:
  2731  00E2  0840               	movf	___flmul@temp+1,w
  2732  00E3  00AF               	movwf	??___flmul
  2733  00E4  01B0               	clrf	??___flmul+1
  2734  00E5  01B1               	clrf	??___flmul+2
  2735  00E6  01B2               	clrf	??___flmul+3
  2736  00E7  0832               	movf	??___flmul+3,w
  2737  00E8  00BE               	movwf	___flmul@prod+3
  2738  00E9  0831               	movf	??___flmul+2,w
  2739  00EA  00BD               	movwf	___flmul@prod+2
  2740  00EB  0830               	movf	??___flmul+1,w
  2741  00EC  00BC               	movwf	___flmul@prod+1
  2742  00ED  082F               	movf	??___flmul,w
  2743  00EE  00BB               	movwf	___flmul@prod
  2744  00EF  0828               	movf	___flmul@b+1,w
  2745  00F0  00AF               	movwf	??___flmul
  2746  00F1  082F               	movf	??___flmul,w
  2747  00F2  00F4               	movwf	__Umul8_16@multiplicand
  2748  00F3  082C               	movf	___flmul@a+1,w
  2749  00F4  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  2750  00F9  0875               	movf	?__Umul8_16+1,w
  2751  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2752  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2753  00FC  00C0               	movwf	___flmul@temp+1
  2754  00FD  0874               	movf	?__Umul8_16,w
  2755  00FE  00BF               	movwf	___flmul@temp
  2756  00FF                     l2939:
  2757  00FF  083F               	movf	___flmul@temp,w
  2758  0100  00AF               	movwf	??___flmul
  2759  0101  01B0               	clrf	??___flmul+1
  2760  0102  01B1               	clrf	??___flmul+2
  2761  0103  01B2               	clrf	??___flmul+3
  2762  0104  082F               	movf	??___flmul,w
  2763  0105  07B6               	addwf	___flmul@grs,f
  2764  0106  0830               	movf	??___flmul+1,w
  2765  0107  1103               	clrz
  2766  0108  1803               	skipnc
  2767  0109  3E01               	addlw	1
  2768  010A  1903               	skipnz
  2769  010B  290D               	goto	u3941
  2770  010C  07B7               	addwf	___flmul@grs+1,f
  2771  010D                     u3941:
  2772  010D  0831               	movf	??___flmul+2,w
  2773  010E  1103               	clrz
  2774  010F  1803               	skipnc
  2775  0110  3E01               	addlw	1
  2776  0111  1903               	skipnz
  2777  0112  2914               	goto	u3942
  2778  0113  07B8               	addwf	___flmul@grs+2,f
  2779  0114                     u3942:
  2780  0114  0832               	movf	??___flmul+3,w
  2781  0115  1103               	clrz
  2782  0116  1803               	skipnc
  2783  0117  3E01               	addlw	1
  2784  0118  1903               	skipnz
  2785  0119  291B               	goto	u3943
  2786  011A  07B9               	addwf	___flmul@grs+3,f
  2787  011B                     u3943:
  2788  011B                     l2941:
  2789  011B  0840               	movf	___flmul@temp+1,w
  2790  011C  00AF               	movwf	??___flmul
  2791  011D  01B0               	clrf	??___flmul+1
  2792  011E  01B1               	clrf	??___flmul+2
  2793  011F  01B2               	clrf	??___flmul+3
  2794  0120  082F               	movf	??___flmul,w
  2795  0121  07BB               	addwf	___flmul@prod,f
  2796  0122  0830               	movf	??___flmul+1,w
  2797  0123  1103               	clrz
  2798  0124  1803               	skipnc
  2799  0125  3E01               	addlw	1
  2800  0126  1903               	skipnz
  2801  0127  2929               	goto	u3951
  2802  0128  07BC               	addwf	___flmul@prod+1,f
  2803  0129                     u3951:
  2804  0129  0831               	movf	??___flmul+2,w
  2805  012A  1103               	clrz
  2806  012B  1803               	skipnc
  2807  012C  3E01               	addlw	1
  2808  012D  1903               	skipnz
  2809  012E  2930               	goto	u3952
  2810  012F  07BD               	addwf	___flmul@prod+2,f
  2811  0130                     u3952:
  2812  0130  0832               	movf	??___flmul+3,w
  2813  0131  1103               	clrz
  2814  0132  1803               	skipnc
  2815  0133  3E01               	addlw	1
  2816  0134  1903               	skipnz
  2817  0135  2937               	goto	u3953
  2818  0136  07BE               	addwf	___flmul@prod+3,f
  2819  0137                     u3953:
  2820  0137  0829               	movf	___flmul@b+2,w
  2821  0138  00AF               	movwf	??___flmul
  2822  0139  082F               	movf	??___flmul,w
  2823  013A  00F4               	movwf	__Umul8_16@multiplicand
  2824  013B  082B               	movf	___flmul@a,w
  2825  013C  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  2826  0141  0875               	movf	?__Umul8_16+1,w
  2827  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0144  00C0               	movwf	___flmul@temp+1
  2830  0145  0874               	movf	?__Umul8_16,w
  2831  0146  00BF               	movwf	___flmul@temp
  2832  0147                     l2943:
  2833  0147  083F               	movf	___flmul@temp,w
  2834  0148  00AF               	movwf	??___flmul
  2835  0149  01B0               	clrf	??___flmul+1
  2836  014A  01B1               	clrf	??___flmul+2
  2837  014B  01B2               	clrf	??___flmul+3
  2838  014C  082F               	movf	??___flmul,w
  2839  014D  07B6               	addwf	___flmul@grs,f
  2840  014E  0830               	movf	??___flmul+1,w
  2841  014F  1103               	clrz
  2842  0150  1803               	skipnc
  2843  0151  3E01               	addlw	1
  2844  0152  1903               	skipnz
  2845  0153  2955               	goto	u3961
  2846  0154  07B7               	addwf	___flmul@grs+1,f
  2847  0155                     u3961:
  2848  0155  0831               	movf	??___flmul+2,w
  2849  0156  1103               	clrz
  2850  0157  1803               	skipnc
  2851  0158  3E01               	addlw	1
  2852  0159  1903               	skipnz
  2853  015A  295C               	goto	u3962
  2854  015B  07B8               	addwf	___flmul@grs+2,f
  2855  015C                     u3962:
  2856  015C  0832               	movf	??___flmul+3,w
  2857  015D  1103               	clrz
  2858  015E  1803               	skipnc
  2859  015F  3E01               	addlw	1
  2860  0160  1903               	skipnz
  2861  0161  2963               	goto	u3963
  2862  0162  07B9               	addwf	___flmul@grs+3,f
  2863  0163                     u3963:
  2864  0163                     l2945:
  2865  0163  0840               	movf	___flmul@temp+1,w
  2866  0164  00AF               	movwf	??___flmul
  2867  0165  01B0               	clrf	??___flmul+1
  2868  0166  01B1               	clrf	??___flmul+2
  2869  0167  01B2               	clrf	??___flmul+3
  2870  0168  082F               	movf	??___flmul,w
  2871  0169  07BB               	addwf	___flmul@prod,f
  2872  016A  0830               	movf	??___flmul+1,w
  2873  016B  1103               	clrz
  2874  016C  1803               	skipnc
  2875  016D  3E01               	addlw	1
  2876  016E  1903               	skipnz
  2877  016F  2971               	goto	u3971
  2878  0170  07BC               	addwf	___flmul@prod+1,f
  2879  0171                     u3971:
  2880  0171  0831               	movf	??___flmul+2,w
  2881  0172  1103               	clrz
  2882  0173  1803               	skipnc
  2883  0174  3E01               	addlw	1
  2884  0175  1903               	skipnz
  2885  0176  2978               	goto	u3972
  2886  0177  07BD               	addwf	___flmul@prod+2,f
  2887  0178                     u3972:
  2888  0178  0832               	movf	??___flmul+3,w
  2889  0179  1103               	clrz
  2890  017A  1803               	skipnc
  2891  017B  3E01               	addlw	1
  2892  017C  1903               	skipnz
  2893  017D  297F               	goto	u3973
  2894  017E  07BE               	addwf	___flmul@prod+3,f
  2895  017F                     u3973:
  2896  017F                     l2947:
  2897  017F  3008               	movlw	8
  2898  0180  00AF               	movwf	??___flmul
  2899  0181                     u3985:
  2900  0181  1003               	clrc
  2901  0182  0DB6               	rlf	___flmul@grs,f
  2902  0183  0DB7               	rlf	___flmul@grs+1,f
  2903  0184  0DB8               	rlf	___flmul@grs+2,f
  2904  0185  0DB9               	rlf	___flmul@grs+3,f
  2905  0186  0BAF               	decfsz	??___flmul,f
  2906  0187  2981               	goto	u3985
  2907  0188                     l2949:
  2908  0188  0828               	movf	___flmul@b+1,w
  2909  0189  00AF               	movwf	??___flmul
  2910  018A  082F               	movf	??___flmul,w
  2911  018B  00F4               	movwf	__Umul8_16@multiplicand
  2912  018C  082B               	movf	___flmul@a,w
  2913  018D  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  2914  0192  0875               	movf	?__Umul8_16+1,w
  2915  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0195  00C0               	movwf	___flmul@temp+1
  2918  0196  0874               	movf	?__Umul8_16,w
  2919  0197  00BF               	movwf	___flmul@temp
  2920  0198                     l2951:
  2921  0198  083F               	movf	___flmul@temp,w
  2922  0199  00AF               	movwf	??___flmul
  2923  019A  0840               	movf	___flmul@temp+1,w
  2924  019B  00B0               	movwf	??___flmul+1
  2925  019C  01B1               	clrf	??___flmul+2
  2926  019D  01B2               	clrf	??___flmul+3
  2927  019E  082F               	movf	??___flmul,w
  2928  019F  07B6               	addwf	___flmul@grs,f
  2929  01A0  0830               	movf	??___flmul+1,w
  2930  01A1  1103               	clrz
  2931  01A2  1803               	skipnc
  2932  01A3  3E01               	addlw	1
  2933  01A4  1903               	skipnz
  2934  01A5  29A7               	goto	u3991
  2935  01A6  07B7               	addwf	___flmul@grs+1,f
  2936  01A7                     u3991:
  2937  01A7  0831               	movf	??___flmul+2,w
  2938  01A8  1103               	clrz
  2939  01A9  1803               	skipnc
  2940  01AA  3E01               	addlw	1
  2941  01AB  1903               	skipnz
  2942  01AC  29AE               	goto	u3992
  2943  01AD  07B8               	addwf	___flmul@grs+2,f
  2944  01AE                     u3992:
  2945  01AE  0832               	movf	??___flmul+3,w
  2946  01AF  1103               	clrz
  2947  01B0  1803               	skipnc
  2948  01B1  3E01               	addlw	1
  2949  01B2  1903               	skipnz
  2950  01B3  29B5               	goto	u3993
  2951  01B4  07B9               	addwf	___flmul@grs+3,f
  2952  01B5                     u3993:
  2953  01B5                     l2953:
  2954  01B5  0827               	movf	___flmul@b,w
  2955  01B6  00AF               	movwf	??___flmul
  2956  01B7  082F               	movf	??___flmul,w
  2957  01B8  00F4               	movwf	__Umul8_16@multiplicand
  2958  01B9  082C               	movf	___flmul@a+1,w
  2959  01BA  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  2960  01BF  0875               	movf	?__Umul8_16+1,w
  2961  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2962  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2963  01C2  00C0               	movwf	___flmul@temp+1
  2964  01C3  0874               	movf	?__Umul8_16,w
  2965  01C4  00BF               	movwf	___flmul@temp
  2966  01C5                     l2955:
  2967  01C5  083F               	movf	___flmul@temp,w
  2968  01C6  00AF               	movwf	??___flmul
  2969  01C7  0840               	movf	___flmul@temp+1,w
  2970  01C8  00B0               	movwf	??___flmul+1
  2971  01C9  01B1               	clrf	??___flmul+2
  2972  01CA  01B2               	clrf	??___flmul+3
  2973  01CB  082F               	movf	??___flmul,w
  2974  01CC  07B6               	addwf	___flmul@grs,f
  2975  01CD  0830               	movf	??___flmul+1,w
  2976  01CE  1103               	clrz
  2977  01CF  1803               	skipnc
  2978  01D0  3E01               	addlw	1
  2979  01D1  1903               	skipnz
  2980  01D2  29D4               	goto	u4001
  2981  01D3  07B7               	addwf	___flmul@grs+1,f
  2982  01D4                     u4001:
  2983  01D4  0831               	movf	??___flmul+2,w
  2984  01D5  1103               	clrz
  2985  01D6  1803               	skipnc
  2986  01D7  3E01               	addlw	1
  2987  01D8  1903               	skipnz
  2988  01D9  29DB               	goto	u4002
  2989  01DA  07B8               	addwf	___flmul@grs+2,f
  2990  01DB                     u4002:
  2991  01DB  0832               	movf	??___flmul+3,w
  2992  01DC  1103               	clrz
  2993  01DD  1803               	skipnc
  2994  01DE  3E01               	addlw	1
  2995  01DF  1903               	skipnz
  2996  01E0  29E2               	goto	u4003
  2997  01E1  07B9               	addwf	___flmul@grs+3,f
  2998  01E2                     u4003:
  2999  01E2                     l2957:
  3000  01E2  3008               	movlw	8
  3001  01E3  00AF               	movwf	??___flmul
  3002  01E4                     u4015:
  3003  01E4  1003               	clrc
  3004  01E5  0DB6               	rlf	___flmul@grs,f
  3005  01E6  0DB7               	rlf	___flmul@grs+1,f
  3006  01E7  0DB8               	rlf	___flmul@grs+2,f
  3007  01E8  0DB9               	rlf	___flmul@grs+3,f
  3008  01E9  0BAF               	decfsz	??___flmul,f
  3009  01EA  29E4               	goto	u4015
  3010  01EB  0827               	movf	___flmul@b,w
  3011  01EC  00AF               	movwf	??___flmul
  3012  01ED  082F               	movf	??___flmul,w
  3013  01EE  00F4               	movwf	__Umul8_16@multiplicand
  3014  01EF  082B               	movf	___flmul@a,w
  3015  01F0  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  3016  01F5  0875               	movf	?__Umul8_16+1,w
  3017  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3018  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  3019  01F8  00C0               	movwf	___flmul@temp+1
  3020  01F9  0874               	movf	?__Umul8_16,w
  3021  01FA  00BF               	movwf	___flmul@temp
  3022  01FB                     l2959:
  3023  01FB  083F               	movf	___flmul@temp,w
  3024  01FC  00AF               	movwf	??___flmul
  3025  01FD  0840               	movf	___flmul@temp+1,w
  3026  01FE  00B0               	movwf	??___flmul+1
  3027  01FF  01B1               	clrf	??___flmul+2
  3028  0200  01B2               	clrf	??___flmul+3
  3029  0201  082F               	movf	??___flmul,w
  3030  0202  07B6               	addwf	___flmul@grs,f
  3031  0203  0830               	movf	??___flmul+1,w
  3032  0204  1103               	clrz
  3033  0205  1803               	skipnc
  3034  0206  3E01               	addlw	1
  3035  0207  1903               	skipnz
  3036  0208  2A0A               	goto	u4021
  3037  0209  07B7               	addwf	___flmul@grs+1,f
  3038  020A                     u4021:
  3039  020A  0831               	movf	??___flmul+2,w
  3040  020B  1103               	clrz
  3041  020C  1803               	skipnc
  3042  020D  3E01               	addlw	1
  3043  020E  1903               	skipnz
  3044  020F  2A11               	goto	u4022
  3045  0210  07B8               	addwf	___flmul@grs+2,f
  3046  0211                     u4022:
  3047  0211  0832               	movf	??___flmul+3,w
  3048  0212  1103               	clrz
  3049  0213  1803               	skipnc
  3050  0214  3E01               	addlw	1
  3051  0215  1903               	skipnz
  3052  0216  2A18               	goto	u4023
  3053  0217  07B9               	addwf	___flmul@grs+3,f
  3054  0218                     u4023:
  3055  0218                     l2961:
  3056  0218  0828               	movf	___flmul@b+1,w
  3057  0219  00AF               	movwf	??___flmul
  3058  021A  082F               	movf	??___flmul,w
  3059  021B  00F4               	movwf	__Umul8_16@multiplicand
  3060  021C  082D               	movf	___flmul@a+2,w
  3061  021D  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  3062  0222  0875               	movf	?__Umul8_16+1,w
  3063  0223  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0224  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0225  00C0               	movwf	___flmul@temp+1
  3066  0226  0874               	movf	?__Umul8_16,w
  3067  0227  00BF               	movwf	___flmul@temp
  3068  0228  083F               	movf	___flmul@temp,w
  3069  0229  00AF               	movwf	??___flmul
  3070  022A  0840               	movf	___flmul@temp+1,w
  3071  022B  00B0               	movwf	??___flmul+1
  3072  022C  01B1               	clrf	??___flmul+2
  3073  022D  01B2               	clrf	??___flmul+3
  3074  022E  082F               	movf	??___flmul,w
  3075  022F  07BB               	addwf	___flmul@prod,f
  3076  0230  0830               	movf	??___flmul+1,w
  3077  0231  1103               	clrz
  3078  0232  1803               	skipnc
  3079  0233  3E01               	addlw	1
  3080  0234  1903               	skipnz
  3081  0235  2A37               	goto	u4031
  3082  0236  07BC               	addwf	___flmul@prod+1,f
  3083  0237                     u4031:
  3084  0237  0831               	movf	??___flmul+2,w
  3085  0238  1103               	clrz
  3086  0239  1803               	skipnc
  3087  023A  3E01               	addlw	1
  3088  023B  1903               	skipnz
  3089  023C  2A3E               	goto	u4032
  3090  023D  07BD               	addwf	___flmul@prod+2,f
  3091  023E                     u4032:
  3092  023E  0832               	movf	??___flmul+3,w
  3093  023F  1103               	clrz
  3094  0240  1803               	skipnc
  3095  0241  3E01               	addlw	1
  3096  0242  1903               	skipnz
  3097  0243  2A45               	goto	u4033
  3098  0244  07BE               	addwf	___flmul@prod+3,f
  3099  0245                     u4033:
  3100  0245                     l2963:
  3101  0245  0829               	movf	___flmul@b+2,w
  3102  0246  00AF               	movwf	??___flmul
  3103  0247  082F               	movf	??___flmul,w
  3104  0248  00F4               	movwf	__Umul8_16@multiplicand
  3105  0249  082C               	movf	___flmul@a+1,w
  3106  024A  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  3107  024F  0875               	movf	?__Umul8_16+1,w
  3108  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0252  00C0               	movwf	___flmul@temp+1
  3111  0253  0874               	movf	?__Umul8_16,w
  3112  0254  00BF               	movwf	___flmul@temp
  3113  0255                     l2965:
  3114  0255  083F               	movf	___flmul@temp,w
  3115  0256  00AF               	movwf	??___flmul
  3116  0257  0840               	movf	___flmul@temp+1,w
  3117  0258  00B0               	movwf	??___flmul+1
  3118  0259  01B1               	clrf	??___flmul+2
  3119  025A  01B2               	clrf	??___flmul+3
  3120  025B  082F               	movf	??___flmul,w
  3121  025C  07BB               	addwf	___flmul@prod,f
  3122  025D  0830               	movf	??___flmul+1,w
  3123  025E  1103               	clrz
  3124  025F  1803               	skipnc
  3125  0260  3E01               	addlw	1
  3126  0261  1903               	skipnz
  3127  0262  2A64               	goto	u4041
  3128  0263  07BC               	addwf	___flmul@prod+1,f
  3129  0264                     u4041:
  3130  0264  0831               	movf	??___flmul+2,w
  3131  0265  1103               	clrz
  3132  0266  1803               	skipnc
  3133  0267  3E01               	addlw	1
  3134  0268  1903               	skipnz
  3135  0269  2A6B               	goto	u4042
  3136  026A  07BD               	addwf	___flmul@prod+2,f
  3137  026B                     u4042:
  3138  026B  0832               	movf	??___flmul+3,w
  3139  026C  1103               	clrz
  3140  026D  1803               	skipnc
  3141  026E  3E01               	addlw	1
  3142  026F  1903               	skipnz
  3143  0270  2A72               	goto	u4043
  3144  0271  07BE               	addwf	___flmul@prod+3,f
  3145  0272                     u4043:
  3146  0272  0829               	movf	___flmul@b+2,w
  3147  0273  00AF               	movwf	??___flmul
  3148  0274  082F               	movf	??___flmul,w
  3149  0275  00F4               	movwf	__Umul8_16@multiplicand
  3150  0276  082D               	movf	___flmul@a+2,w
  3151  0277  120A  158A  239E  120A  118A  	fcall	__Umul8_16
  3152  027C  0875               	movf	?__Umul8_16+1,w
  3153  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3154  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3155  027F  00C0               	movwf	___flmul@temp+1
  3156  0280  0874               	movf	?__Umul8_16,w
  3157  0281  00BF               	movwf	___flmul@temp
  3158  0282                     l2967:
  3159  0282  083F               	movf	___flmul@temp,w
  3160  0283  00AF               	movwf	??___flmul
  3161  0284  0840               	movf	___flmul@temp+1,w
  3162  0285  00B0               	movwf	??___flmul+1
  3163  0286  01B1               	clrf	??___flmul+2
  3164  0287  01B2               	clrf	??___flmul+3
  3165  0288  3008               	movlw	8
  3166  0289                     u4055:
  3167  0289  1003               	clrc
  3168  028A  0DAF               	rlf	??___flmul,f
  3169  028B  0DB0               	rlf	??___flmul+1,f
  3170  028C  0DB1               	rlf	??___flmul+2,f
  3171  028D  0DB2               	rlf	??___flmul+3,f
  3172  028E                     u4050:
  3173  028E  3EFF               	addlw	-1
  3174  028F  1D03               	skipz
  3175  0290  2A89               	goto	u4055
  3176  0291  082F               	movf	??___flmul,w
  3177  0292  07BB               	addwf	___flmul@prod,f
  3178  0293  0830               	movf	??___flmul+1,w
  3179  0294  1103               	clrz
  3180  0295  1803               	skipnc
  3181  0296  3E01               	addlw	1
  3182  0297  1903               	skipnz
  3183  0298  2A9A               	goto	u4061
  3184  0299  07BC               	addwf	___flmul@prod+1,f
  3185  029A                     u4061:
  3186  029A  0831               	movf	??___flmul+2,w
  3187  029B  1103               	clrz
  3188  029C  1803               	skipnc
  3189  029D  3E01               	addlw	1
  3190  029E  1903               	skipnz
  3191  029F  2AA1               	goto	u4062
  3192  02A0  07BD               	addwf	___flmul@prod+2,f
  3193  02A1                     u4062:
  3194  02A1  0832               	movf	??___flmul+3,w
  3195  02A2  1103               	clrz
  3196  02A3  1803               	skipnc
  3197  02A4  3E01               	addlw	1
  3198  02A5  1903               	skipnz
  3199  02A6  2AA8               	goto	u4063
  3200  02A7  07BE               	addwf	___flmul@prod+3,f
  3201  02A8                     u4063:
  3202  02A8                     l2969:
  3203  02A8  0836               	movf	___flmul@grs,w
  3204  02A9  00AF               	movwf	??___flmul
  3205  02AA  0837               	movf	___flmul@grs+1,w
  3206  02AB  00B0               	movwf	??___flmul+1
  3207  02AC  0838               	movf	___flmul@grs+2,w
  3208  02AD  00B1               	movwf	??___flmul+2
  3209  02AE  0839               	movf	___flmul@grs+3,w
  3210  02AF  00B2               	movwf	??___flmul+3
  3211  02B0  3018               	movlw	24
  3212  02B1                     u4075:
  3213  02B1  1003               	clrc
  3214  02B2  0CB2               	rrf	??___flmul+3,f
  3215  02B3  0CB1               	rrf	??___flmul+2,f
  3216  02B4  0CB0               	rrf	??___flmul+1,f
  3217  02B5  0CAF               	rrf	??___flmul,f
  3218  02B6                     u4070:
  3219  02B6  3EFF               	addlw	-1
  3220  02B7  1D03               	skipz
  3221  02B8  2AB1               	goto	u4075
  3222  02B9  082F               	movf	??___flmul,w
  3223  02BA  07BB               	addwf	___flmul@prod,f
  3224  02BB  0830               	movf	??___flmul+1,w
  3225  02BC  1103               	clrz
  3226  02BD  1803               	skipnc
  3227  02BE  3E01               	addlw	1
  3228  02BF  1903               	skipnz
  3229  02C0  2AC2               	goto	u4081
  3230  02C1  07BC               	addwf	___flmul@prod+1,f
  3231  02C2                     u4081:
  3232  02C2  0831               	movf	??___flmul+2,w
  3233  02C3  1103               	clrz
  3234  02C4  1803               	skipnc
  3235  02C5  3E01               	addlw	1
  3236  02C6  1903               	skipnz
  3237  02C7  2AC9               	goto	u4082
  3238  02C8  07BD               	addwf	___flmul@prod+2,f
  3239  02C9                     u4082:
  3240  02C9  0832               	movf	??___flmul+3,w
  3241  02CA  1103               	clrz
  3242  02CB  1803               	skipnc
  3243  02CC  3E01               	addlw	1
  3244  02CD  1903               	skipnz
  3245  02CE  2AD0               	goto	u4083
  3246  02CF  07BE               	addwf	___flmul@prod+3,f
  3247  02D0                     u4083:
  3248  02D0                     l2971:
  3249  02D0  3008               	movlw	8
  3250  02D1  00AF               	movwf	??___flmul
  3251  02D2                     u4095:
  3252  02D2  1003               	clrc
  3253  02D3  0DB6               	rlf	___flmul@grs,f
  3254  02D4  0DB7               	rlf	___flmul@grs+1,f
  3255  02D5  0DB8               	rlf	___flmul@grs+2,f
  3256  02D6  0DB9               	rlf	___flmul@grs+3,f
  3257  02D7  0BAF               	decfsz	??___flmul,f
  3258  02D8  2AD2               	goto	u4095
  3259  02D9                     l2973:
  3260  02D9  083A               	movf	___flmul@bexp,w
  3261  02DA  0735               	addwf	___flmul@aexp,w
  3262  02DB  00AF               	movwf	??___flmul
  3263  02DC  01B0               	clrf	??___flmul+1
  3264  02DD  0DB0               	rlf	??___flmul+1,f
  3265  02DE  082F               	movf	??___flmul,w
  3266  02DF  3E82               	addlw	130
  3267  02E0  00BF               	movwf	___flmul@temp
  3268  02E1  0830               	movf	??___flmul+1,w
  3269  02E2  1803               	skipnc
  3270  02E3  3E01               	addlw	1
  3271  02E4  3EFF               	addlw	255
  3272  02E5  00C0               	movwf	___flmul@temp+1
  3273  02E6  2B04               	goto	l2985
  3274  02E7                     l2975:
  3275  02E7  3001               	movlw	1
  3276  02E8  00AF               	movwf	??___flmul
  3277  02E9                     u4105:
  3278  02E9  1003               	clrc
  3279  02EA  0DBB               	rlf	___flmul@prod,f
  3280  02EB  0DBC               	rlf	___flmul@prod+1,f
  3281  02EC  0DBD               	rlf	___flmul@prod+2,f
  3282  02ED  0DBE               	rlf	___flmul@prod+3,f
  3283  02EE  0BAF               	decfsz	??___flmul,f
  3284  02EF  2AE9               	goto	u4105
  3285  02F0                     l2977:
  3286  02F0  1FB9               	btfss	___flmul@grs+3,7
  3287  02F1  2AF3               	goto	u4111
  3288  02F2  2AF4               	goto	u4110
  3289  02F3                     u4111:
  3290  02F3  2AF5               	goto	l2981
  3291  02F4                     u4110:
  3292  02F4                     l2979:
  3293  02F4  143B               	bsf	___flmul@prod,0
  3294  02F5                     l2981:
  3295  02F5  3001               	movlw	1
  3296  02F6  00AF               	movwf	??___flmul
  3297  02F7                     u4125:
  3298  02F7  1003               	clrc
  3299  02F8  0DB6               	rlf	___flmul@grs,f
  3300  02F9  0DB7               	rlf	___flmul@grs+1,f
  3301  02FA  0DB8               	rlf	___flmul@grs+2,f
  3302  02FB  0DB9               	rlf	___flmul@grs+3,f
  3303  02FC  0BAF               	decfsz	??___flmul,f
  3304  02FD  2AF7               	goto	u4125
  3305  02FE                     l2983:
  3306  02FE  30FF               	movlw	255
  3307  02FF  07BF               	addwf	___flmul@temp,f
  3308  0300  1803               	skipnc
  3309  0301  0AC0               	incf	___flmul@temp+1,f
  3310  0302  30FF               	movlw	255
  3311  0303  07C0               	addwf	___flmul@temp+1,f
  3312  0304                     l2985:
  3313  0304  1FBD               	btfss	___flmul@prod+2,7
  3314  0305  2B07               	goto	u4131
  3315  0306  2B08               	goto	u4130
  3316  0307                     u4131:
  3317  0307  2AE7               	goto	l2975
  3318  0308                     u4130:
  3319  0308                     l2987:
  3320  0308  01B5               	clrf	___flmul@aexp
  3321  0309                     l2989:
  3322  0309  1FB9               	btfss	___flmul@grs+3,7
  3323  030A  2B0C               	goto	u4141
  3324  030B  2B0D               	goto	u4140
  3325  030C                     u4141:
  3326  030C  2B29               	goto	l2997
  3327  030D                     u4140:
  3328  030D                     l2991:
  3329  030D  30FF               	movlw	255
  3330  030E  0536               	andwf	___flmul@grs,w
  3331  030F  00AF               	movwf	??___flmul
  3332  0310  30FF               	movlw	255
  3333  0311  0537               	andwf	___flmul@grs+1,w
  3334  0312  00B0               	movwf	??___flmul+1
  3335  0313  30FF               	movlw	255
  3336  0314  0538               	andwf	___flmul@grs+2,w
  3337  0315  00B1               	movwf	??___flmul+2
  3338  0316  307F               	movlw	127
  3339  0317  0539               	andwf	___flmul@grs+3,w
  3340  0318  00B2               	movwf	??___flmul+3
  3341  0319  0832               	movf	??___flmul+3,w
  3342  031A  0431               	iorwf	??___flmul+2,w
  3343  031B  0430               	iorwf	??___flmul+1,w
  3344  031C  042F               	iorwf	??___flmul,w
  3345  031D  1903               	skipnz
  3346  031E  2B20               	goto	u4151
  3347  031F  2B21               	goto	u4150
  3348  0320                     u4151:
  3349  0320  2B24               	goto	l736
  3350  0321                     u4150:
  3351  0321                     l2993:
  3352  0321  01B5               	clrf	___flmul@aexp
  3353  0322  0AB5               	incf	___flmul@aexp,f
  3354  0323  2B29               	goto	l2997
  3355  0324                     l736:
  3356  0324  1C3B               	btfss	___flmul@prod,0
  3357  0325  2B27               	goto	u4161
  3358  0326  2B28               	goto	u4160
  3359  0327                     u4161:
  3360  0327  2B29               	goto	l2997
  3361  0328                     u4160:
  3362  0328  2B21               	goto	l2993
  3363  0329                     l2997:
  3364  0329  0835               	movf	___flmul@aexp,w
  3365  032A  1903               	btfsc	3,2
  3366  032B  2B2D               	goto	u4171
  3367  032C  2B2E               	goto	u4170
  3368  032D                     u4171:
  3369  032D  2B5F               	goto	l3007
  3370  032E                     u4170:
  3371  032E                     l2999:
  3372  032E  3001               	movlw	1
  3373  032F  07BB               	addwf	___flmul@prod,f
  3374  0330  3000               	movlw	0
  3375  0331  1803               	skipnc
  3376  0332  3001               	movlw	1
  3377  0333  07BC               	addwf	___flmul@prod+1,f
  3378  0334  3000               	movlw	0
  3379  0335  1803               	skipnc
  3380  0336  3001               	movlw	1
  3381  0337  07BD               	addwf	___flmul@prod+2,f
  3382  0338  3000               	movlw	0
  3383  0339  1803               	skipnc
  3384  033A  3001               	movlw	1
  3385  033B  07BE               	addwf	___flmul@prod+3,f
  3386  033C                     l3001:
  3387  033C  1C3E               	btfss	___flmul@prod+3,0
  3388  033D  2B3F               	goto	u4181
  3389  033E  2B40               	goto	u4180
  3390  033F                     u4181:
  3391  033F  2B5F               	goto	l3007
  3392  0340                     u4180:
  3393  0340                     l3003:
  3394  0340  083B               	movf	___flmul@prod,w
  3395  0341  00AF               	movwf	??___flmul
  3396  0342  083C               	movf	___flmul@prod+1,w
  3397  0343  00B0               	movwf	??___flmul+1
  3398  0344  083D               	movf	___flmul@prod+2,w
  3399  0345  00B1               	movwf	??___flmul+2
  3400  0346  083E               	movf	___flmul@prod+3,w
  3401  0347  00B2               	movwf	??___flmul+3
  3402  0348  3001               	movlw	1
  3403  0349  00B3               	movwf	??___flmul+4
  3404  034A                     u4195:
  3405  034A  0D32               	rlf	??___flmul+3,w
  3406  034B  0CB2               	rrf	??___flmul+3,f
  3407  034C  0CB1               	rrf	??___flmul+2,f
  3408  034D  0CB0               	rrf	??___flmul+1,f
  3409  034E  0CAF               	rrf	??___flmul,f
  3410  034F                     u4190:
  3411  034F  0BB3               	decfsz	??___flmul+4,f
  3412  0350  2B4A               	goto	u4195
  3413  0351  0832               	movf	??___flmul+3,w
  3414  0352  00BE               	movwf	___flmul@prod+3
  3415  0353  0831               	movf	??___flmul+2,w
  3416  0354  00BD               	movwf	___flmul@prod+2
  3417  0355  0830               	movf	??___flmul+1,w
  3418  0356  00BC               	movwf	___flmul@prod+1
  3419  0357  082F               	movf	??___flmul,w
  3420  0358  00BB               	movwf	___flmul@prod
  3421  0359                     l3005:
  3422  0359  3001               	movlw	1
  3423  035A  07BF               	addwf	___flmul@temp,f
  3424  035B  1803               	skipnc
  3425  035C  0AC0               	incf	___flmul@temp+1,f
  3426  035D  3000               	movlw	0
  3427  035E  07C0               	addwf	___flmul@temp+1,f
  3428  035F                     l3007:
  3429  035F  0840               	movf	___flmul@temp+1,w
  3430  0360  3A80               	xorlw	128
  3431  0361  00FF               	movwf	btemp+1
  3432  0362  3080               	movlw	128
  3433  0363  027F               	subwf	btemp+1,w
  3434  0364  1D03               	skipz
  3435  0365  2B68               	goto	u4205
  3436  0366  30FF               	movlw	255
  3437  0367  023F               	subwf	___flmul@temp,w
  3438  0368                     u4205:
  3439  0368  1C03               	skipc
  3440  0369  2B6B               	goto	u4201
  3441  036A  2B6C               	goto	u4200
  3442  036B                     u4201:
  3443  036B  2B77               	goto	l3011
  3444  036C                     u4200:
  3445  036C                     l3009:
  3446  036C  307F               	movlw	127
  3447  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3448  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3449  036F  00BE               	movwf	___flmul@prod+3
  3450  0370  3080               	movlw	128
  3451  0371  00BD               	movwf	___flmul@prod+2
  3452  0372  3000               	movlw	0
  3453  0373  00BC               	movwf	___flmul@prod+1
  3454  0374  3000               	movlw	0
  3455  0375  00BB               	movwf	___flmul@prod
  3456  0376  2BAC               	goto	l742
  3457  0377                     l3011:
  3458  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0379  0840               	movf	___flmul@temp+1,w
  3461  037A  3A80               	xorlw	128
  3462  037B  00FF               	movwf	btemp+1
  3463  037C  3080               	movlw	128
  3464  037D  027F               	subwf	btemp+1,w
  3465  037E  1D03               	skipz
  3466  037F  2B82               	goto	u4215
  3467  0380  3001               	movlw	1
  3468  0381  023F               	subwf	___flmul@temp,w
  3469  0382                     u4215:
  3470  0382  1803               	skipnc
  3471  0383  2B85               	goto	u4211
  3472  0384  2B86               	goto	u4210
  3473  0385                     u4211:
  3474  0385  2B92               	goto	l3017
  3475  0386                     u4210:
  3476  0386                     l3013:
  3477  0386  3000               	movlw	0
  3478  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0389  00BE               	movwf	___flmul@prod+3
  3481  038A  3000               	movlw	0
  3482  038B  00BD               	movwf	___flmul@prod+2
  3483  038C  3000               	movlw	0
  3484  038D  00BC               	movwf	___flmul@prod+1
  3485  038E  3000               	movlw	0
  3486  038F  00BB               	movwf	___flmul@prod
  3487  0390                     l3015:
  3488  0390  01B4               	clrf	___flmul@sign
  3489  0391  2BAC               	goto	l742
  3490  0392                     l3017:
  3491  0392  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0393  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0394  083F               	movf	___flmul@temp,w
  3494  0395  00AF               	movwf	??___flmul
  3495  0396  082F               	movf	??___flmul,w
  3496  0397  00BA               	movwf	___flmul@bexp
  3497  0398  30FF               	movlw	255
  3498  0399  05BB               	andwf	___flmul@prod,f
  3499  039A  30FF               	movlw	255
  3500  039B  05BC               	andwf	___flmul@prod+1,f
  3501  039C  307F               	movlw	127
  3502  039D  05BD               	andwf	___flmul@prod+2,f
  3503  039E  3000               	movlw	0
  3504  039F  05BE               	andwf	___flmul@prod+3,f
  3505  03A0                     l3019:
  3506  03A0  1C3A               	btfss	___flmul@bexp,0
  3507  03A1  2BA3               	goto	u4221
  3508  03A2  2BA4               	goto	u4220
  3509  03A3                     u4221:
  3510  03A3  2BA5               	goto	l3023
  3511  03A4                     u4220:
  3512  03A4                     l3021:
  3513  03A4  17BD               	bsf	___flmul@prod+2,7
  3514  03A5                     l3023:
  3515  03A5  083A               	movf	___flmul@bexp,w
  3516  03A6  00AF               	movwf	??___flmul
  3517  03A7  1003               	clrc
  3518  03A8  0C2F               	rrf	??___flmul,w
  3519  03A9  00B0               	movwf	??___flmul+1
  3520  03AA  0830               	movf	??___flmul+1,w
  3521  03AB  00BE               	movwf	___flmul@prod+3
  3522  03AC                     l742:
  3523  03AC  0834               	movf	___flmul@sign,w
  3524  03AD  00AF               	movwf	??___flmul
  3525  03AE  082F               	movf	??___flmul,w
  3526  03AF  04BE               	iorwf	___flmul@prod+3,f
  3527  03B0                     l3025:
  3528  03B0  083E               	movf	___flmul@prod+3,w
  3529  03B1  00AA               	movwf	?___flmul+3
  3530  03B2  083D               	movf	___flmul@prod+2,w
  3531  03B3  00A9               	movwf	?___flmul+2
  3532  03B4  083C               	movf	___flmul@prod+1,w
  3533  03B5  00A8               	movwf	?___flmul+1
  3534  03B6  083B               	movf	___flmul@prod,w
  3535  03B7  00A7               	movwf	?___flmul
  3536  03B8                     l730:
  3537  03B8  0008               	return
  3538  03B9                     __end_of___flmul:
  3539                           
  3540                           	psect	text9
  3541  0B9E                     __ptext9:	
  3542 ;; *************** function __Umul8_16 *****************
  3543 ;; Defined at:
  3544 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  multiplier      1    wreg     unsigned char 
  3547 ;;  multiplicand    1    4[COMMON] unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  multiplier      1    6[BANK0 ] unsigned char 
  3550 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  3551 ;;  product         2    2[BANK0 ] unsigned int 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    4[COMMON] unsigned int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         2       0       0       0       0
  3562 ;;      Locals:         0       5       0       0       0
  3563 ;;      Temps:          0       2       0       0       0
  3564 ;;      Totals:         2       7       0       0       0
  3565 ;;Total ram usage:        9 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		___flmul
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function __Umul8_16
  3577  0B9E                     __Umul8_16:
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3581                           ;__Umul8_16@multiplier stored from wreg
  3582  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0BA0  00A6               	movwf	__Umul8_16@multiplier
  3585  0BA1                     l2561:
  3586  0BA1  01A2               	clrf	__Umul8_16@product
  3587  0BA2  01A3               	clrf	__Umul8_16@product+1
  3588  0BA3                     l2563:
  3589  0BA3  0874               	movf	__Umul8_16@multiplicand,w
  3590  0BA4  00A0               	movwf	??__Umul8_16
  3591  0BA5  01A1               	clrf	??__Umul8_16+1
  3592  0BA6  0820               	movf	??__Umul8_16,w
  3593  0BA7  00A4               	movwf	__Umul8_16@word_mpld
  3594  0BA8  0821               	movf	??__Umul8_16+1,w
  3595  0BA9  00A5               	movwf	__Umul8_16@word_mpld+1
  3596  0BAA                     l2565:
  3597  0BAA  1C26               	btfss	__Umul8_16@multiplier,0
  3598  0BAB  2BAD               	goto	u3161
  3599  0BAC  2BAE               	goto	u3160
  3600  0BAD                     u3161:
  3601  0BAD  2BB4               	goto	l749
  3602  0BAE                     u3160:
  3603  0BAE                     l2567:
  3604  0BAE  0824               	movf	__Umul8_16@word_mpld,w
  3605  0BAF  07A2               	addwf	__Umul8_16@product,f
  3606  0BB0  1803               	skipnc
  3607  0BB1  0AA3               	incf	__Umul8_16@product+1,f
  3608  0BB2  0825               	movf	__Umul8_16@word_mpld+1,w
  3609  0BB3  07A3               	addwf	__Umul8_16@product+1,f
  3610  0BB4                     l749:
  3611  0BB4  3001               	movlw	1
  3612  0BB5                     u3175:
  3613  0BB5  1003               	clrc
  3614  0BB6  0DA4               	rlf	__Umul8_16@word_mpld,f
  3615  0BB7  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  3616  0BB8  3EFF               	addlw	-1
  3617  0BB9  1D03               	skipz
  3618  0BBA  2BB5               	goto	u3175
  3619  0BBB  1003               	clrc
  3620  0BBC  0CA6               	rrf	__Umul8_16@multiplier,f
  3621  0BBD                     l2569:
  3622  0BBD  0826               	movf	__Umul8_16@multiplier,w
  3623  0BBE  1D03               	btfss	3,2
  3624  0BBF  2BC1               	goto	u3181
  3625  0BC0  2BC2               	goto	u3180
  3626  0BC1                     u3181:
  3627  0BC1  2BAA               	goto	l2565
  3628  0BC2                     u3180:
  3629  0BC2                     l2571:
  3630  0BC2  0823               	movf	__Umul8_16@product+1,w
  3631  0BC3  00F5               	movwf	?__Umul8_16+1
  3632  0BC4  0822               	movf	__Umul8_16@product,w
  3633  0BC5  00F4               	movwf	?__Umul8_16
  3634  0BC6                     l751:
  3635  0BC6  0008               	return
  3636  0BC7                     __end_of__Umul8_16:
  3637                           
  3638                           	psect	text10
  3639  03B9                     __ptext10:	
  3640 ;; *************** function ___fldiv *****************
  3641 ;; Defined at:
  3642 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  a               4    0[BANK0 ] unsigned int 
  3645 ;;  b               4    4[BANK0 ] unsigned int 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  grs             4   20[BANK0 ] unsigned long 
  3648 ;;  rem             4   13[BANK0 ] unsigned long 
  3649 ;;  new_exp         2   18[BANK0 ] int 
  3650 ;;  aexp            1   25[BANK0 ] unsigned char 
  3651 ;;  bexp            1   24[BANK0 ] unsigned char 
  3652 ;;  sign            1   17[BANK0 ] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  4    0[BANK0 ] unsigned char 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, btemp+1
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         0       8       0       0       0
  3663 ;;      Locals:         0      13       0       0       0
  3664 ;;      Temps:          0       5       0       0       0
  3665 ;;      Totals:         0      26       0       0       0
  3666 ;;Total ram usage:       26 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_Read_Temp
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function ___fldiv
  3678  03B9                     ___fldiv:
  3679  03B9                     l2747:	
  3680                           ;incstack = 0
  3681                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3682                           
  3683  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3684  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3685  03BB  0827               	movf	___fldiv@b+3,w
  3686  03BC  3980               	andlw	128
  3687  03BD  00A8               	movwf	??___fldiv
  3688  03BE  0828               	movf	??___fldiv,w
  3689  03BF  00B1               	movwf	___fldiv@sign
  3690  03C0                     l2749:
  3691  03C0  0827               	movf	___fldiv@b+3,w
  3692  03C1  00A8               	movwf	??___fldiv
  3693  03C2  0728               	addwf	??___fldiv,w
  3694  03C3  00A9               	movwf	??___fldiv+1
  3695  03C4  0829               	movf	??___fldiv+1,w
  3696  03C5  00B8               	movwf	___fldiv@bexp
  3697  03C6                     l2751:
  3698  03C6  1FA6               	btfss	___fldiv@b+2,7
  3699  03C7  2BC9               	goto	u3571
  3700  03C8  2BCA               	goto	u3570
  3701  03C9                     u3571:
  3702  03C9  2BCB               	goto	l2755
  3703  03CA                     u3570:
  3704  03CA                     l2753:
  3705  03CA  1438               	bsf	___fldiv@bexp,0
  3706  03CB                     l2755:
  3707  03CB  0838               	movf	___fldiv@bexp,w
  3708  03CC  1903               	btfsc	3,2
  3709  03CD  2BCF               	goto	u3581
  3710  03CE  2BD0               	goto	u3580
  3711  03CF                     u3581:
  3712  03CF  2BE0               	goto	l2765
  3713  03D0                     u3580:
  3714  03D0                     l2757:
  3715  03D0  0A38               	incf	___fldiv@bexp,w
  3716  03D1  1D03               	btfss	3,2
  3717  03D2  2BD4               	goto	u3591
  3718  03D3  2BD5               	goto	u3590
  3719  03D4                     u3591:
  3720  03D4  2BDD               	goto	l2761
  3721  03D5                     u3590:
  3722  03D5                     l2759:
  3723  03D5  3000               	movlw	0
  3724  03D6  00A7               	movwf	___fldiv@b+3
  3725  03D7  3000               	movlw	0
  3726  03D8  00A6               	movwf	___fldiv@b+2
  3727  03D9  3000               	movlw	0
  3728  03DA  00A5               	movwf	___fldiv@b+1
  3729  03DB  3000               	movlw	0
  3730  03DC  00A4               	movwf	___fldiv@b
  3731  03DD                     l2761:
  3732  03DD  17A6               	bsf	___fldiv@b+2,7
  3733  03DE                     l2763:
  3734  03DE  01A7               	clrf	___fldiv@b+3
  3735  03DF  2BE8               	goto	l2767
  3736  03E0                     l2765:
  3737  03E0  3000               	movlw	0
  3738  03E1  00A7               	movwf	___fldiv@b+3
  3739  03E2  3000               	movlw	0
  3740  03E3  00A6               	movwf	___fldiv@b+2
  3741  03E4  3000               	movlw	0
  3742  03E5  00A5               	movwf	___fldiv@b+1
  3743  03E6  3000               	movlw	0
  3744  03E7  00A4               	movwf	___fldiv@b
  3745  03E8                     l2767:
  3746  03E8  0823               	movf	___fldiv@a+3,w
  3747  03E9  3980               	andlw	128
  3748  03EA  00A8               	movwf	??___fldiv
  3749  03EB  0828               	movf	??___fldiv,w
  3750  03EC  06B1               	xorwf	___fldiv@sign,f
  3751  03ED                     l2769:
  3752  03ED  0823               	movf	___fldiv@a+3,w
  3753  03EE  00A8               	movwf	??___fldiv
  3754  03EF  0728               	addwf	??___fldiv,w
  3755  03F0  00A9               	movwf	??___fldiv+1
  3756  03F1  0829               	movf	??___fldiv+1,w
  3757  03F2  00B9               	movwf	___fldiv@aexp
  3758  03F3                     l2771:
  3759  03F3  1FA2               	btfss	___fldiv@a+2,7
  3760  03F4  2BF6               	goto	u3601
  3761  03F5  2BF7               	goto	u3600
  3762  03F6                     u3601:
  3763  03F6  2BF8               	goto	l2775
  3764  03F7                     u3600:
  3765  03F7                     l2773:
  3766  03F7  1439               	bsf	___fldiv@aexp,0
  3767  03F8                     l2775:
  3768  03F8  0839               	movf	___fldiv@aexp,w
  3769  03F9  1903               	btfsc	3,2
  3770  03FA  2BFC               	goto	u3611
  3771  03FB  2BFD               	goto	u3610
  3772  03FC                     u3611:
  3773  03FC  2C0D               	goto	l2785
  3774  03FD                     u3610:
  3775  03FD                     l2777:
  3776  03FD  0A39               	incf	___fldiv@aexp,w
  3777  03FE  1D03               	btfss	3,2
  3778  03FF  2C01               	goto	u3621
  3779  0400  2C02               	goto	u3620
  3780  0401                     u3621:
  3781  0401  2C0A               	goto	l2781
  3782  0402                     u3620:
  3783  0402                     l2779:
  3784  0402  3000               	movlw	0
  3785  0403  00A3               	movwf	___fldiv@a+3
  3786  0404  3000               	movlw	0
  3787  0405  00A2               	movwf	___fldiv@a+2
  3788  0406  3000               	movlw	0
  3789  0407  00A1               	movwf	___fldiv@a+1
  3790  0408  3000               	movlw	0
  3791  0409  00A0               	movwf	___fldiv@a
  3792  040A                     l2781:
  3793  040A  17A2               	bsf	___fldiv@a+2,7
  3794  040B                     l2783:
  3795  040B  01A3               	clrf	___fldiv@a+3
  3796  040C  2C15               	goto	l690
  3797  040D                     l2785:
  3798  040D  3000               	movlw	0
  3799  040E  00A3               	movwf	___fldiv@a+3
  3800  040F  3000               	movlw	0
  3801  0410  00A2               	movwf	___fldiv@a+2
  3802  0411  3000               	movlw	0
  3803  0412  00A1               	movwf	___fldiv@a+1
  3804  0413  3000               	movlw	0
  3805  0414  00A0               	movwf	___fldiv@a
  3806  0415                     l690:
  3807  0415  0823               	movf	___fldiv@a+3,w
  3808  0416  0422               	iorwf	___fldiv@a+2,w
  3809  0417  0421               	iorwf	___fldiv@a+1,w
  3810  0418  0420               	iorwf	___fldiv@a,w
  3811  0419  1D03               	skipz
  3812  041A  2C1C               	goto	u3631
  3813  041B  2C1D               	goto	u3630
  3814  041C                     u3631:
  3815  041C  2C36               	goto	l2795
  3816  041D                     u3630:
  3817  041D                     l2787:
  3818  041D  3000               	movlw	0
  3819  041E  00A7               	movwf	___fldiv@b+3
  3820  041F  3000               	movlw	0
  3821  0420  00A6               	movwf	___fldiv@b+2
  3822  0421  3000               	movlw	0
  3823  0422  00A5               	movwf	___fldiv@b+1
  3824  0423  3000               	movlw	0
  3825  0424  00A4               	movwf	___fldiv@b
  3826  0425  3080               	movlw	128
  3827  0426  04A6               	iorwf	___fldiv@b+2,f
  3828  0427  307F               	movlw	127
  3829  0428  04A7               	iorwf	___fldiv@b+3,f
  3830  0429                     l2789:
  3831  0429  0831               	movf	___fldiv@sign,w
  3832  042A  00A8               	movwf	??___fldiv
  3833  042B  0828               	movf	??___fldiv,w
  3834  042C  04A7               	iorwf	___fldiv@b+3,f
  3835  042D                     l2791:
  3836  042D  0827               	movf	___fldiv@b+3,w
  3837  042E  00A3               	movwf	?___fldiv+3
  3838  042F  0826               	movf	___fldiv@b+2,w
  3839  0430  00A2               	movwf	?___fldiv+2
  3840  0431  0825               	movf	___fldiv@b+1,w
  3841  0432  00A1               	movwf	?___fldiv+1
  3842  0433  0824               	movf	___fldiv@b,w
  3843  0434  00A0               	movwf	?___fldiv
  3844  0435  2D95               	goto	l692
  3845  0436                     l2795:
  3846  0436  0838               	movf	___fldiv@bexp,w
  3847  0437  1D03               	btfss	3,2
  3848  0438  2C3A               	goto	u3641
  3849  0439  2C3B               	goto	u3640
  3850  043A                     u3641:
  3851  043A  2C44               	goto	l2801
  3852  043B                     u3640:
  3853  043B                     l2797:
  3854  043B  3000               	movlw	0
  3855  043C  00A3               	movwf	?___fldiv+3
  3856  043D  3000               	movlw	0
  3857  043E  00A2               	movwf	?___fldiv+2
  3858  043F  3000               	movlw	0
  3859  0440  00A1               	movwf	?___fldiv+1
  3860  0441  3000               	movlw	0
  3861  0442  00A0               	movwf	?___fldiv
  3862  0443  2D95               	goto	l692
  3863  0444                     l2801:
  3864  0444  0838               	movf	___fldiv@bexp,w
  3865  0445  00A8               	movwf	??___fldiv
  3866  0446  01A9               	clrf	??___fldiv+1
  3867  0447  0829               	movf	??___fldiv+1,w
  3868  0448  00AB               	movwf	??___fldiv+3
  3869  0449  0839               	movf	___fldiv@aexp,w
  3870  044A  0228               	subwf	??___fldiv,w
  3871  044B  00AA               	movwf	??___fldiv+2
  3872  044C  1C03               	skipc
  3873  044D  03AB               	decf	??___fldiv+3,f
  3874  044E  082A               	movf	??___fldiv+2,w
  3875  044F  3E7F               	addlw	127
  3876  0450  00B2               	movwf	___fldiv@new_exp
  3877  0451  082B               	movf	??___fldiv+3,w
  3878  0452  1803               	skipnc
  3879  0453  3E01               	addlw	1
  3880  0454  3E00               	addlw	0
  3881  0455  00B3               	movwf	___fldiv@new_exp+1
  3882  0456                     l2803:
  3883  0456  0827               	movf	___fldiv@b+3,w
  3884  0457  00B0               	movwf	___fldiv@rem+3
  3885  0458  0826               	movf	___fldiv@b+2,w
  3886  0459  00AF               	movwf	___fldiv@rem+2
  3887  045A  0825               	movf	___fldiv@b+1,w
  3888  045B  00AE               	movwf	___fldiv@rem+1
  3889  045C  0824               	movf	___fldiv@b,w
  3890  045D  00AD               	movwf	___fldiv@rem
  3891  045E                     l2805:
  3892  045E  3000               	movlw	0
  3893  045F  00A7               	movwf	___fldiv@b+3
  3894  0460  3000               	movlw	0
  3895  0461  00A6               	movwf	___fldiv@b+2
  3896  0462  3000               	movlw	0
  3897  0463  00A5               	movwf	___fldiv@b+1
  3898  0464  3000               	movlw	0
  3899  0465  00A4               	movwf	___fldiv@b
  3900  0466                     l2807:
  3901  0466  3000               	movlw	0
  3902  0467  00B7               	movwf	___fldiv@grs+3
  3903  0468  3000               	movlw	0
  3904  0469  00B6               	movwf	___fldiv@grs+2
  3905  046A  3000               	movlw	0
  3906  046B  00B5               	movwf	___fldiv@grs+1
  3907  046C  3000               	movlw	0
  3908  046D  00B4               	movwf	___fldiv@grs
  3909  046E                     l2809:
  3910  046E  01B9               	clrf	___fldiv@aexp
  3911  046F  2CBA               	goto	l2829
  3912  0470                     l2811:
  3913  0470  0839               	movf	___fldiv@aexp,w
  3914  0471  1903               	btfsc	3,2
  3915  0472  2C74               	goto	u3651
  3916  0473  2C75               	goto	u3650
  3917  0474                     u3651:
  3918  0474  2C95               	goto	l2821
  3919  0475                     u3650:
  3920  0475                     l2813:
  3921  0475  3001               	movlw	1
  3922  0476  00A8               	movwf	??___fldiv
  3923  0477                     u3665:
  3924  0477  1003               	clrc
  3925  0478  0DAD               	rlf	___fldiv@rem,f
  3926  0479  0DAE               	rlf	___fldiv@rem+1,f
  3927  047A  0DAF               	rlf	___fldiv@rem+2,f
  3928  047B  0DB0               	rlf	___fldiv@rem+3,f
  3929  047C  0BA8               	decfsz	??___fldiv,f
  3930  047D  2C77               	goto	u3665
  3931  047E  3001               	movlw	1
  3932  047F  00A8               	movwf	??___fldiv
  3933  0480                     u3675:
  3934  0480  1003               	clrc
  3935  0481  0DA4               	rlf	___fldiv@b,f
  3936  0482  0DA5               	rlf	___fldiv@b+1,f
  3937  0483  0DA6               	rlf	___fldiv@b+2,f
  3938  0484  0DA7               	rlf	___fldiv@b+3,f
  3939  0485  0BA8               	decfsz	??___fldiv,f
  3940  0486  2C80               	goto	u3675
  3941  0487                     l2815:
  3942  0487  1FB7               	btfss	___fldiv@grs+3,7
  3943  0488  2C8A               	goto	u3681
  3944  0489  2C8B               	goto	u3680
  3945  048A                     u3681:
  3946  048A  2C8C               	goto	l2819
  3947  048B                     u3680:
  3948  048B                     l2817:
  3949  048B  1424               	bsf	___fldiv@b,0
  3950  048C                     l2819:
  3951  048C  3001               	movlw	1
  3952  048D  00A8               	movwf	??___fldiv
  3953  048E                     u3695:
  3954  048E  1003               	clrc
  3955  048F  0DB4               	rlf	___fldiv@grs,f
  3956  0490  0DB5               	rlf	___fldiv@grs+1,f
  3957  0491  0DB6               	rlf	___fldiv@grs+2,f
  3958  0492  0DB7               	rlf	___fldiv@grs+3,f
  3959  0493  0BA8               	decfsz	??___fldiv,f
  3960  0494  2C8E               	goto	u3695
  3961  0495                     l2821:
  3962  0495  0823               	movf	___fldiv@a+3,w
  3963  0496  0230               	subwf	___fldiv@rem+3,w
  3964  0497  1D03               	skipz
  3965  0498  2CA3               	goto	u3705
  3966  0499  0822               	movf	___fldiv@a+2,w
  3967  049A  022F               	subwf	___fldiv@rem+2,w
  3968  049B  1D03               	skipz
  3969  049C  2CA3               	goto	u3705
  3970  049D  0821               	movf	___fldiv@a+1,w
  3971  049E  022E               	subwf	___fldiv@rem+1,w
  3972  049F  1D03               	skipz
  3973  04A0  2CA3               	goto	u3705
  3974  04A1  0820               	movf	___fldiv@a,w
  3975  04A2  022D               	subwf	___fldiv@rem,w
  3976  04A3                     u3705:
  3977  04A3  1C03               	skipc
  3978  04A4  2CA6               	goto	u3701
  3979  04A5  2CA7               	goto	u3700
  3980  04A6                     u3701:
  3981  04A6  2CB6               	goto	l2827
  3982  04A7                     u3700:
  3983  04A7                     l2823:
  3984  04A7  1737               	bsf	___fldiv@grs+3,6
  3985  04A8                     l2825:
  3986  04A8  0820               	movf	___fldiv@a,w
  3987  04A9  02AD               	subwf	___fldiv@rem,f
  3988  04AA  0821               	movf	___fldiv@a+1,w
  3989  04AB  1C03               	skipc
  3990  04AC  0F21               	incfsz	___fldiv@a+1,w
  3991  04AD  02AE               	subwf	___fldiv@rem+1,f
  3992  04AE  0822               	movf	___fldiv@a+2,w
  3993  04AF  1C03               	skipc
  3994  04B0  0F22               	incfsz	___fldiv@a+2,w
  3995  04B1  02AF               	subwf	___fldiv@rem+2,f
  3996  04B2  0823               	movf	___fldiv@a+3,w
  3997  04B3  1C03               	skipc
  3998  04B4  0F23               	incfsz	___fldiv@a+3,w
  3999  04B5  02B0               	subwf	___fldiv@rem+3,f
  4000  04B6                     l2827:
  4001  04B6  3001               	movlw	1
  4002  04B7  00A8               	movwf	??___fldiv
  4003  04B8  0828               	movf	??___fldiv,w
  4004  04B9  07B9               	addwf	___fldiv@aexp,f
  4005  04BA                     l2829:
  4006  04BA  301A               	movlw	26
  4007  04BB  0239               	subwf	___fldiv@aexp,w
  4008  04BC  1C03               	skipc
  4009  04BD  2CBF               	goto	u3711
  4010  04BE  2CC0               	goto	u3710
  4011  04BF                     u3711:
  4012  04BF  2C70               	goto	l2811
  4013  04C0                     u3710:
  4014  04C0                     l2831:
  4015  04C0  0830               	movf	___fldiv@rem+3,w
  4016  04C1  042F               	iorwf	___fldiv@rem+2,w
  4017  04C2  042E               	iorwf	___fldiv@rem+1,w
  4018  04C3  042D               	iorwf	___fldiv@rem,w
  4019  04C4  1903               	skipnz
  4020  04C5  2CC7               	goto	u3721
  4021  04C6  2CC8               	goto	u3720
  4022  04C7                     u3721:
  4023  04C7  2CE7               	goto	l2845
  4024  04C8                     u3720:
  4025  04C8                     l2833:
  4026  04C8  1434               	bsf	___fldiv@grs,0
  4027  04C9  2CE7               	goto	l2845
  4028  04CA                     l2835:
  4029  04CA  3001               	movlw	1
  4030  04CB  00A8               	movwf	??___fldiv
  4031  04CC                     u3735:
  4032  04CC  1003               	clrc
  4033  04CD  0DA4               	rlf	___fldiv@b,f
  4034  04CE  0DA5               	rlf	___fldiv@b+1,f
  4035  04CF  0DA6               	rlf	___fldiv@b+2,f
  4036  04D0  0DA7               	rlf	___fldiv@b+3,f
  4037  04D1  0BA8               	decfsz	??___fldiv,f
  4038  04D2  2CCC               	goto	u3735
  4039  04D3                     l2837:
  4040  04D3  1FB7               	btfss	___fldiv@grs+3,7
  4041  04D4  2CD6               	goto	u3741
  4042  04D5  2CD7               	goto	u3740
  4043  04D6                     u3741:
  4044  04D6  2CD8               	goto	l2841
  4045  04D7                     u3740:
  4046  04D7                     l2839:
  4047  04D7  1424               	bsf	___fldiv@b,0
  4048  04D8                     l2841:
  4049  04D8  3001               	movlw	1
  4050  04D9  00A8               	movwf	??___fldiv
  4051  04DA                     u3755:
  4052  04DA  1003               	clrc
  4053  04DB  0DB4               	rlf	___fldiv@grs,f
  4054  04DC  0DB5               	rlf	___fldiv@grs+1,f
  4055  04DD  0DB6               	rlf	___fldiv@grs+2,f
  4056  04DE  0DB7               	rlf	___fldiv@grs+3,f
  4057  04DF  0BA8               	decfsz	??___fldiv,f
  4058  04E0  2CDA               	goto	u3755
  4059  04E1                     l2843:
  4060  04E1  30FF               	movlw	255
  4061  04E2  07B2               	addwf	___fldiv@new_exp,f
  4062  04E3  1803               	skipnc
  4063  04E4  0AB3               	incf	___fldiv@new_exp+1,f
  4064  04E5  30FF               	movlw	255
  4065  04E6  07B3               	addwf	___fldiv@new_exp+1,f
  4066  04E7                     l2845:
  4067  04E7  1FA6               	btfss	___fldiv@b+2,7
  4068  04E8  2CEA               	goto	u3761
  4069  04E9  2CEB               	goto	u3760
  4070  04EA                     u3761:
  4071  04EA  2CCA               	goto	l2835
  4072  04EB                     u3760:
  4073  04EB                     l2847:
  4074  04EB  01B9               	clrf	___fldiv@aexp
  4075  04EC                     l2849:
  4076  04EC  1FB7               	btfss	___fldiv@grs+3,7
  4077  04ED  2CEF               	goto	u3771
  4078  04EE  2CF0               	goto	u3770
  4079  04EF                     u3771:
  4080  04EF  2D0C               	goto	l2857
  4081  04F0                     u3770:
  4082  04F0                     l2851:
  4083  04F0  30FF               	movlw	255
  4084  04F1  0534               	andwf	___fldiv@grs,w
  4085  04F2  00A8               	movwf	??___fldiv
  4086  04F3  30FF               	movlw	255
  4087  04F4  0535               	andwf	___fldiv@grs+1,w
  4088  04F5  00A9               	movwf	??___fldiv+1
  4089  04F6  30FF               	movlw	255
  4090  04F7  0536               	andwf	___fldiv@grs+2,w
  4091  04F8  00AA               	movwf	??___fldiv+2
  4092  04F9  307F               	movlw	127
  4093  04FA  0537               	andwf	___fldiv@grs+3,w
  4094  04FB  00AB               	movwf	??___fldiv+3
  4095  04FC  082B               	movf	??___fldiv+3,w
  4096  04FD  042A               	iorwf	??___fldiv+2,w
  4097  04FE  0429               	iorwf	??___fldiv+1,w
  4098  04FF  0428               	iorwf	??___fldiv,w
  4099  0500  1903               	skipnz
  4100  0501  2D03               	goto	u3781
  4101  0502  2D04               	goto	u3780
  4102  0503                     u3781:
  4103  0503  2D07               	goto	l706
  4104  0504                     u3780:
  4105  0504                     l2853:
  4106  0504  01B9               	clrf	___fldiv@aexp
  4107  0505  0AB9               	incf	___fldiv@aexp,f
  4108  0506  2D0C               	goto	l2857
  4109  0507                     l706:
  4110  0507  1C24               	btfss	___fldiv@b,0
  4111  0508  2D0A               	goto	u3791
  4112  0509  2D0B               	goto	u3790
  4113  050A                     u3791:
  4114  050A  2D0C               	goto	l2857
  4115  050B                     u3790:
  4116  050B  2D04               	goto	l2853
  4117  050C                     l2857:
  4118  050C  0839               	movf	___fldiv@aexp,w
  4119  050D  1903               	btfsc	3,2
  4120  050E  2D10               	goto	u3801
  4121  050F  2D11               	goto	u3800
  4122  0510                     u3801:
  4123  0510  2D42               	goto	l2867
  4124  0511                     u3800:
  4125  0511                     l2859:
  4126  0511  3001               	movlw	1
  4127  0512  07A4               	addwf	___fldiv@b,f
  4128  0513  3000               	movlw	0
  4129  0514  1803               	skipnc
  4130  0515  3001               	movlw	1
  4131  0516  07A5               	addwf	___fldiv@b+1,f
  4132  0517  3000               	movlw	0
  4133  0518  1803               	skipnc
  4134  0519  3001               	movlw	1
  4135  051A  07A6               	addwf	___fldiv@b+2,f
  4136  051B  3000               	movlw	0
  4137  051C  1803               	skipnc
  4138  051D  3001               	movlw	1
  4139  051E  07A7               	addwf	___fldiv@b+3,f
  4140  051F                     l2861:
  4141  051F  1C27               	btfss	___fldiv@b+3,0
  4142  0520  2D22               	goto	u3811
  4143  0521  2D23               	goto	u3810
  4144  0522                     u3811:
  4145  0522  2D42               	goto	l2867
  4146  0523                     u3810:
  4147  0523                     l2863:
  4148  0523  0824               	movf	___fldiv@b,w
  4149  0524  00A8               	movwf	??___fldiv
  4150  0525  0825               	movf	___fldiv@b+1,w
  4151  0526  00A9               	movwf	??___fldiv+1
  4152  0527  0826               	movf	___fldiv@b+2,w
  4153  0528  00AA               	movwf	??___fldiv+2
  4154  0529  0827               	movf	___fldiv@b+3,w
  4155  052A  00AB               	movwf	??___fldiv+3
  4156  052B  3001               	movlw	1
  4157  052C  00AC               	movwf	??___fldiv+4
  4158  052D                     u3825:
  4159  052D  0D2B               	rlf	??___fldiv+3,w
  4160  052E  0CAB               	rrf	??___fldiv+3,f
  4161  052F  0CAA               	rrf	??___fldiv+2,f
  4162  0530  0CA9               	rrf	??___fldiv+1,f
  4163  0531  0CA8               	rrf	??___fldiv,f
  4164  0532                     u3820:
  4165  0532  0BAC               	decfsz	??___fldiv+4,f
  4166  0533  2D2D               	goto	u3825
  4167  0534  082B               	movf	??___fldiv+3,w
  4168  0535  00A7               	movwf	___fldiv@b+3
  4169  0536  082A               	movf	??___fldiv+2,w
  4170  0537  00A6               	movwf	___fldiv@b+2
  4171  0538  0829               	movf	??___fldiv+1,w
  4172  0539  00A5               	movwf	___fldiv@b+1
  4173  053A  0828               	movf	??___fldiv,w
  4174  053B  00A4               	movwf	___fldiv@b
  4175  053C                     l2865:
  4176  053C  3001               	movlw	1
  4177  053D  07B2               	addwf	___fldiv@new_exp,f
  4178  053E  1803               	skipnc
  4179  053F  0AB3               	incf	___fldiv@new_exp+1,f
  4180  0540  3000               	movlw	0
  4181  0541  07B3               	addwf	___fldiv@new_exp+1,f
  4182  0542                     l2867:
  4183  0542  0833               	movf	___fldiv@new_exp+1,w
  4184  0543  3A80               	xorlw	128
  4185  0544  00FF               	movwf	btemp+1
  4186  0545  3080               	movlw	128
  4187  0546  027F               	subwf	btemp+1,w
  4188  0547  1D03               	skipz
  4189  0548  2D4B               	goto	u3835
  4190  0549  30FF               	movlw	255
  4191  054A  0232               	subwf	___fldiv@new_exp,w
  4192  054B                     u3835:
  4193  054B  1C03               	skipc
  4194  054C  2D4E               	goto	u3831
  4195  054D  2D4F               	goto	u3830
  4196  054E                     u3831:
  4197  054E  2D5D               	goto	l2871
  4198  054F                     u3830:
  4199  054F                     l2869:
  4200  054F  30FF               	movlw	255
  4201  0550  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0551  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0552  00B2               	movwf	___fldiv@new_exp
  4204  0553  3000               	movlw	0
  4205  0554  00B3               	movwf	___fldiv@new_exp+1
  4206  0555  3000               	movlw	0
  4207  0556  00A7               	movwf	___fldiv@b+3
  4208  0557  3000               	movlw	0
  4209  0558  00A6               	movwf	___fldiv@b+2
  4210  0559  3000               	movlw	0
  4211  055A  00A5               	movwf	___fldiv@b+1
  4212  055B  3000               	movlw	0
  4213  055C  00A4               	movwf	___fldiv@b
  4214  055D                     l2871:
  4215  055D  1283               	bcf	3,5	;RP0=0, select bank0
  4216  055E  1303               	bcf	3,6	;RP1=0, select bank0
  4217  055F  0833               	movf	___fldiv@new_exp+1,w
  4218  0560  3A80               	xorlw	128
  4219  0561  00FF               	movwf	btemp+1
  4220  0562  3080               	movlw	128
  4221  0563  027F               	subwf	btemp+1,w
  4222  0564  1D03               	skipz
  4223  0565  2D68               	goto	u3845
  4224  0566  3001               	movlw	1
  4225  0567  0232               	subwf	___fldiv@new_exp,w
  4226  0568                     u3845:
  4227  0568  1803               	skipnc
  4228  0569  2D6B               	goto	u3841
  4229  056A  2D6C               	goto	u3840
  4230  056B                     u3841:
  4231  056B  2D79               	goto	l712
  4232  056C                     u3840:
  4233  056C                     l2873:
  4234  056C  1283               	bcf	3,5	;RP0=0, select bank0
  4235  056D  1303               	bcf	3,6	;RP1=0, select bank0
  4236  056E  01B2               	clrf	___fldiv@new_exp
  4237  056F  01B3               	clrf	___fldiv@new_exp+1
  4238  0570                     l2875:
  4239  0570  3000               	movlw	0
  4240  0571  00A7               	movwf	___fldiv@b+3
  4241  0572  3000               	movlw	0
  4242  0573  00A6               	movwf	___fldiv@b+2
  4243  0574  3000               	movlw	0
  4244  0575  00A5               	movwf	___fldiv@b+1
  4245  0576  3000               	movlw	0
  4246  0577  00A4               	movwf	___fldiv@b
  4247  0578                     l2877:
  4248  0578  01B1               	clrf	___fldiv@sign
  4249  0579                     l712:
  4250  0579  1283               	bcf	3,5	;RP0=0, select bank0
  4251  057A  1303               	bcf	3,6	;RP1=0, select bank0
  4252  057B  0832               	movf	___fldiv@new_exp,w
  4253  057C  00A8               	movwf	??___fldiv
  4254  057D  0828               	movf	??___fldiv,w
  4255  057E  00B8               	movwf	___fldiv@bexp
  4256  057F                     l2879:
  4257  057F  1C38               	btfss	___fldiv@bexp,0
  4258  0580  2D82               	goto	u3851
  4259  0581  2D83               	goto	u3850
  4260  0582                     u3851:
  4261  0582  2D85               	goto	l2883
  4262  0583                     u3850:
  4263  0583                     l2881:
  4264  0583  17A6               	bsf	___fldiv@b+2,7
  4265  0584  2D89               	goto	l714
  4266  0585                     l2883:
  4267  0585  307F               	movlw	127
  4268  0586  00A8               	movwf	??___fldiv
  4269  0587  0828               	movf	??___fldiv,w
  4270  0588  05A6               	andwf	___fldiv@b+2,f
  4271  0589                     l714:
  4272  0589  0838               	movf	___fldiv@bexp,w
  4273  058A  00A8               	movwf	??___fldiv
  4274  058B  1003               	clrc
  4275  058C  0C28               	rrf	??___fldiv,w
  4276  058D  00A9               	movwf	??___fldiv+1
  4277  058E  0829               	movf	??___fldiv+1,w
  4278  058F  00A7               	movwf	___fldiv@b+3
  4279  0590  0831               	movf	___fldiv@sign,w
  4280  0591  00A8               	movwf	??___fldiv
  4281  0592  0828               	movf	??___fldiv,w
  4282  0593  04A7               	iorwf	___fldiv@b+3,f
  4283  0594  2C2D               	goto	l2791
  4284  0595                     l692:
  4285  0595  0008               	return
  4286  0596                     __end_of___fldiv:
  4287                           
  4288                           	psect	text11
  4289  0B52                     __ptext11:	
  4290 ;; *************** function _Lcd_Write_String *****************
  4291 ;; Defined at:
  4292 ;;		line 95 in file "./lcd.h"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  a               1    wreg     PTR unsigned char 
  4295 ;;		 -> main@str(16), 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  a               1    6[BANK0 ] PTR unsigned char 
  4298 ;;		 -> main@str(16), 
  4299 ;;  i               2    4[BANK0 ] int 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4309 ;;      Params:         0       0       0       0       0
  4310 ;;      Locals:         0       3       0       0       0
  4311 ;;      Temps:          0       1       0       0       0
  4312 ;;      Totals:         0       4       0       0       0
  4313 ;;Total ram usage:        4 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    3
  4316 ;; This function calls:
  4317 ;;		_Lcd_Write_Char
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _Lcd_Write_String
  4325  0B52                     _Lcd_Write_String:
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4329                           ;Lcd_Write_String@a stored from wreg
  4330  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  4331  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  4332  0B54  00A6               	movwf	Lcd_Write_String@a
  4333  0B55                     l3105:
  4334                           
  4335                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  4336  0B55  01A4               	clrf	Lcd_Write_String@i
  4337  0B56  01A5               	clrf	Lcd_Write_String@i+1
  4338  0B57  2B6B               	goto	l3111
  4339  0B58                     l3107:
  4340                           
  4341                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  4342  0B58  0824               	movf	Lcd_Write_String@i,w
  4343  0B59  0726               	addwf	Lcd_Write_String@a,w
  4344  0B5A  00A3               	movwf	??_Lcd_Write_String
  4345  0B5B  0823               	movf	??_Lcd_Write_String,w
  4346  0B5C  0084               	movwf	4
  4347  0B5D  0800               	movf	0,w
  4348  0B5E  120A  158A  23C7  120A  158A  	fcall	_Lcd_Write_Char
  4349  0B63                     l3109:
  4350  0B63  3001               	movlw	1
  4351  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  4352  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  4353  0B66  07A4               	addwf	Lcd_Write_String@i,f
  4354  0B67  1803               	skipnc
  4355  0B68  0AA5               	incf	Lcd_Write_String@i+1,f
  4356  0B69  3000               	movlw	0
  4357  0B6A  07A5               	addwf	Lcd_Write_String@i+1,f
  4358  0B6B                     l3111:
  4359  0B6B  0824               	movf	Lcd_Write_String@i,w
  4360  0B6C  0726               	addwf	Lcd_Write_String@a,w
  4361  0B6D  00A3               	movwf	??_Lcd_Write_String
  4362  0B6E  0823               	movf	??_Lcd_Write_String,w
  4363  0B6F  0084               	movwf	4
  4364  0B70  1383               	bcf	3,7	;select IRP bank0
  4365  0B71  0800               	movf	0,w
  4366  0B72  1D03               	btfss	3,2
  4367  0B73  2B75               	goto	u4411
  4368  0B74  2B76               	goto	u4410
  4369  0B75                     u4411:
  4370  0B75  2B58               	goto	l3107
  4371  0B76                     u4410:
  4372  0B76                     l139:
  4373  0B76  0008               	return
  4374  0B77                     __end_of_Lcd_Write_String:
  4375                           
  4376                           	psect	text12
  4377  0BC7                     __ptext12:	
  4378 ;; *************** function _Lcd_Write_Char *****************
  4379 ;; Defined at:
  4380 ;;		line 79 in file "./lcd.h"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  a               1    wreg     unsigned char 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  a               1    2[BANK0 ] unsigned char 
  4385 ;;  y               1    1[BANK0 ] unsigned char 
  4386 ;;  temp            1    0[BANK0 ] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       0       0       0       0
  4397 ;;      Locals:         0       3       0       0       0
  4398 ;;      Temps:          1       0       0       0       0
  4399 ;;      Totals:         1       3       0       0       0
  4400 ;;Total ram usage:        4 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    2
  4403 ;; This function calls:
  4404 ;;		_Lcd_Port
  4405 ;; This function is called by:
  4406 ;;		_Lcd_Write_String
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           
  4411                           ;psect for function _Lcd_Write_Char
  4412  0BC7                     _Lcd_Write_Char:
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4416                           ;Lcd_Write_Char@a stored from wreg
  4417  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  4418  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  4419  0BC9  00A2               	movwf	Lcd_Write_Char@a
  4420  0BCA                     l2585:
  4421                           
  4422                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  4423  0BCA  0822               	movf	Lcd_Write_Char@a,w
  4424  0BCB  390F               	andlw	15
  4425  0BCC  00F5               	movwf	??_Lcd_Write_Char
  4426  0BCD  0875               	movf	??_Lcd_Write_Char,w
  4427  0BCE  00A0               	movwf	Lcd_Write_Char@temp
  4428                           
  4429                           ;./lcd.h: 83:    y = a&0xF0;
  4430  0BCF  0822               	movf	Lcd_Write_Char@a,w
  4431  0BD0  39F0               	andlw	240
  4432  0BD1  00F5               	movwf	??_Lcd_Write_Char
  4433  0BD2  0875               	movf	??_Lcd_Write_Char,w
  4434  0BD3  00A1               	movwf	Lcd_Write_Char@y
  4435  0BD4                     l2587:
  4436                           
  4437                           ;./lcd.h: 84:    RD7 = 1;
  4438  0BD4  1788               	bsf	8,7	;volatile
  4439  0BD5                     l2589:
  4440                           
  4441                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  4442  0BD5  0821               	movf	Lcd_Write_Char@y,w
  4443  0BD6  00F5               	movwf	??_Lcd_Write_Char
  4444  0BD7  3004               	movlw	4
  4445  0BD8                     u3195:
  4446  0BD8  1003               	clrc
  4447  0BD9  0CF5               	rrf	??_Lcd_Write_Char,f
  4448  0BDA  3EFF               	addlw	-1
  4449  0BDB  1D03               	skipz
  4450  0BDC  2BD8               	goto	u3195
  4451  0BDD  0875               	movf	??_Lcd_Write_Char,w
  4452  0BDE  120A  158A  2330  120A  158A  	fcall	_Lcd_Port
  4453  0BE3                     l2591:
  4454                           
  4455                           ;./lcd.h: 86:    RD6 = 1;
  4456  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0BE5  1708               	bsf	8,6	;volatile
  4459  0BE6                     l2593:
  4460                           
  4461                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  4462  0BE6  3035               	movlw	53
  4463  0BE7  00F5               	movwf	??_Lcd_Write_Char
  4464  0BE8                     u4587:
  4465  0BE8  0BF5               	decfsz	??_Lcd_Write_Char,f
  4466  0BE9  2BE8               	goto	u4587
  4467  0BEA                     l2595:
  4468                           
  4469                           ;./lcd.h: 88:    RD6 = 0;
  4470  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0BEC  1308               	bcf	8,6	;volatile
  4473  0BED                     l2597:
  4474                           
  4475                           ;./lcd.h: 89:    Lcd_Port(temp);
  4476  0BED  0820               	movf	Lcd_Write_Char@temp,w
  4477  0BEE  120A  158A  2330  120A  158A  	fcall	_Lcd_Port
  4478  0BF3                     l2599:
  4479                           
  4480                           ;./lcd.h: 90:    RD6 = 1;
  4481  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  4482  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  4483  0BF5  1708               	bsf	8,6	;volatile
  4484  0BF6                     l2601:
  4485                           
  4486                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  4487  0BF6  3035               	movlw	53
  4488  0BF7  00F5               	movwf	??_Lcd_Write_Char
  4489  0BF8                     u4597:
  4490  0BF8  0BF5               	decfsz	??_Lcd_Write_Char,f
  4491  0BF9  2BF8               	goto	u4597
  4492  0BFA                     l2603:
  4493                           
  4494                           ;./lcd.h: 92:    RD6 = 0;
  4495  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0BFC  1308               	bcf	8,6	;volatile
  4498  0BFD                     l133:
  4499  0BFD  0008               	return
  4500  0BFE                     __end_of_Lcd_Write_Char:
  4501                           
  4502                           	psect	text13
  4503  0C80                     __ptext13:	
  4504 ;; *************** function _Lcd_Set_Cursor *****************
  4505 ;; Defined at:
  4506 ;;		line 39 in file "./lcd.h"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  a               1    wreg     unsigned char 
  4509 ;;  b               1    2[BANK0 ] unsigned char 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  a               1    5[BANK0 ] unsigned char 
  4512 ;;  temp            1    8[BANK0 ] unsigned char 
  4513 ;;  y               1    7[BANK0 ] unsigned char 
  4514 ;;  z               1    6[BANK0 ] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, pclath, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         0       1       0       0       0
  4525 ;;      Locals:         0       4       0       0       0
  4526 ;;      Temps:          0       2       0       0       0
  4527 ;;      Totals:         0       7       0       0       0
  4528 ;;Total ram usage:        7 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    3
  4531 ;; This function calls:
  4532 ;;		_Lcd_Cmd
  4533 ;; This function is called by:
  4534 ;;		_main
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           
  4539                           ;psect for function _Lcd_Set_Cursor
  4540  0C80                     _Lcd_Set_Cursor:
  4541                           
  4542                           ;incstack = 0
  4543                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4544                           ;Lcd_Set_Cursor@a stored from wreg
  4545  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  4546  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  4547  0C82  00A5               	movwf	Lcd_Set_Cursor@a
  4548  0C83                     l3075:
  4549                           
  4550                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  4551  0C83  0325               	decf	Lcd_Set_Cursor@a,w
  4552  0C84  1D03               	btfss	3,2
  4553  0C85  2C87               	goto	u4371
  4554  0C86  2C88               	goto	u4370
  4555  0C87                     u4371:
  4556  0C87  2CAD               	goto	l3085
  4557  0C88                     u4370:
  4558  0C88                     l3077:
  4559                           
  4560                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  4561  0C88  0822               	movf	Lcd_Set_Cursor@b,w
  4562  0C89  3E7F               	addlw	127
  4563  0C8A  00A3               	movwf	??_Lcd_Set_Cursor
  4564  0C8B  0823               	movf	??_Lcd_Set_Cursor,w
  4565  0C8C  00A8               	movwf	Lcd_Set_Cursor@temp
  4566                           
  4567                           ;./lcd.h: 45:   z = temp>>4;
  4568  0C8D  0828               	movf	Lcd_Set_Cursor@temp,w
  4569  0C8E  00A3               	movwf	??_Lcd_Set_Cursor
  4570  0C8F  3004               	movlw	4
  4571  0C90                     u4385:
  4572  0C90  1003               	clrc
  4573  0C91  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4574  0C92  3EFF               	addlw	-1
  4575  0C93  1D03               	skipz
  4576  0C94  2C90               	goto	u4385
  4577  0C95  0823               	movf	??_Lcd_Set_Cursor,w
  4578  0C96  00A4               	movwf	??_Lcd_Set_Cursor+1
  4579  0C97  0824               	movf	??_Lcd_Set_Cursor+1,w
  4580  0C98  00A6               	movwf	Lcd_Set_Cursor@z
  4581  0C99                     l3079:
  4582                           
  4583                           ;./lcd.h: 46:   y = temp & 0x0F;
  4584  0C99  0828               	movf	Lcd_Set_Cursor@temp,w
  4585  0C9A  390F               	andlw	15
  4586  0C9B  00A3               	movwf	??_Lcd_Set_Cursor
  4587  0C9C  0823               	movf	??_Lcd_Set_Cursor,w
  4588  0C9D  00A7               	movwf	Lcd_Set_Cursor@y
  4589  0C9E                     l3081:
  4590                           
  4591                           ;./lcd.h: 47:   Lcd_Cmd(z);
  4592  0C9E  0826               	movf	Lcd_Set_Cursor@z,w
  4593  0C9F  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4594  0CA4                     l3083:
  4595                           
  4596                           ;./lcd.h: 48:   Lcd_Cmd(y);
  4597  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0CA6  0827               	movf	Lcd_Set_Cursor@y,w
  4600  0CA7  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4601                           
  4602                           ;./lcd.h: 49:  }
  4603  0CAC  2CD7               	goto	l127
  4604  0CAD                     l3085:
  4605  0CAD  3002               	movlw	2
  4606  0CAE  0625               	xorwf	Lcd_Set_Cursor@a,w
  4607  0CAF  1D03               	btfss	3,2
  4608  0CB0  2CB2               	goto	u4391
  4609  0CB1  2CB3               	goto	u4390
  4610  0CB2                     u4391:
  4611  0CB2  2CD7               	goto	l127
  4612  0CB3                     u4390:
  4613  0CB3                     l3087:
  4614                           
  4615                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  4616  0CB3  0822               	movf	Lcd_Set_Cursor@b,w
  4617  0CB4  3EBF               	addlw	191
  4618  0CB5  00A3               	movwf	??_Lcd_Set_Cursor
  4619  0CB6  0823               	movf	??_Lcd_Set_Cursor,w
  4620  0CB7  00A8               	movwf	Lcd_Set_Cursor@temp
  4621                           
  4622                           ;./lcd.h: 53:   z = temp>>4;
  4623  0CB8  0828               	movf	Lcd_Set_Cursor@temp,w
  4624  0CB9  00A3               	movwf	??_Lcd_Set_Cursor
  4625  0CBA  3004               	movlw	4
  4626  0CBB                     u4405:
  4627  0CBB  1003               	clrc
  4628  0CBC  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4629  0CBD  3EFF               	addlw	-1
  4630  0CBE  1D03               	skipz
  4631  0CBF  2CBB               	goto	u4405
  4632  0CC0  0823               	movf	??_Lcd_Set_Cursor,w
  4633  0CC1  00A4               	movwf	??_Lcd_Set_Cursor+1
  4634  0CC2  0824               	movf	??_Lcd_Set_Cursor+1,w
  4635  0CC3  00A6               	movwf	Lcd_Set_Cursor@z
  4636  0CC4                     l3089:
  4637                           
  4638                           ;./lcd.h: 54:   y = temp & 0x0F;
  4639  0CC4  0828               	movf	Lcd_Set_Cursor@temp,w
  4640  0CC5  390F               	andlw	15
  4641  0CC6  00A3               	movwf	??_Lcd_Set_Cursor
  4642  0CC7  0823               	movf	??_Lcd_Set_Cursor,w
  4643  0CC8  00A7               	movwf	Lcd_Set_Cursor@y
  4644  0CC9                     l3091:
  4645                           
  4646                           ;./lcd.h: 55:   Lcd_Cmd(z);
  4647  0CC9  0826               	movf	Lcd_Set_Cursor@z,w
  4648  0CCA  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4649  0CCF                     l3093:
  4650                           
  4651                           ;./lcd.h: 56:   Lcd_Cmd(y);
  4652  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  4653  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  4654  0CD1  0827               	movf	Lcd_Set_Cursor@y,w
  4655  0CD2  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4656  0CD7                     l127:
  4657  0CD7  0008               	return
  4658  0CD8                     __end_of_Lcd_Set_Cursor:
  4659                           
  4660                           	psect	text14
  4661  0CD8                     __ptext14:	
  4662 ;; *************** function _Lcd_Init *****************
  4663 ;; Defined at:
  4664 ;;		line 60 in file "./lcd.h"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0, pclath, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4678 ;;      Params:         0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0
  4680 ;;      Temps:          0       2       0       0       0
  4681 ;;      Totals:         0       2       0       0       0
  4682 ;;Total ram usage:        2 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    3
  4685 ;; This function calls:
  4686 ;;		_Lcd_Cmd
  4687 ;;		_Lcd_Port
  4688 ;; This function is called by:
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           
  4694                           ;psect for function _Lcd_Init
  4695  0CD8                     _Lcd_Init:
  4696  0CD8                     l3095:	
  4697                           ;incstack = 0
  4698                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4699                           
  4700                           
  4701                           ;./lcd.h: 62:   Lcd_Port(0x00);
  4702  0CD8  3000               	movlw	0
  4703  0CD9  120A  158A  2330  120A  158A  	fcall	_Lcd_Port
  4704  0CDE                     l3097:
  4705                           
  4706                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(16000000/4000.0)));
  4707  0CDE  3068               	movlw	104
  4708  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  4709  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  4710  0CE1  00A3               	movwf	??_Lcd_Init+1
  4711  0CE2  30E3               	movlw	227
  4712  0CE3  00A2               	movwf	??_Lcd_Init
  4713  0CE4                     u4607:
  4714  0CE4  0BA2               	decfsz	??_Lcd_Init,f
  4715  0CE5  2CE4               	goto	u4607
  4716  0CE6  0BA3               	decfsz	??_Lcd_Init+1,f
  4717  0CE7  2CE4               	goto	u4607
  4718  0CE8  2CE9               	nop2
  4719  0CE9                     l3099:
  4720                           
  4721                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  4722  0CE9  3003               	movlw	3
  4723  0CEA  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4724                           
  4725                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(16000000/4000.0)));
  4726  0CEF  301A               	movlw	26
  4727  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  4728  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  4729  0CF2  00A3               	movwf	??_Lcd_Init+1
  4730  0CF3  30F7               	movlw	247
  4731  0CF4  00A2               	movwf	??_Lcd_Init
  4732  0CF5                     u4617:
  4733  0CF5  0BA2               	decfsz	??_Lcd_Init,f
  4734  0CF6  2CF5               	goto	u4617
  4735  0CF7  0BA3               	decfsz	??_Lcd_Init+1,f
  4736  0CF8  2CF5               	goto	u4617
  4737  0CF9  2CFA               	nop2
  4738  0CFA                     l3101:
  4739                           
  4740                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  4741  0CFA  3003               	movlw	3
  4742  0CFB  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4743  0D00                     l3103:
  4744                           
  4745                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(16000000/4000.0)));
  4746  0D00  303A               	movlw	58
  4747  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  4748  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  4749  0D03  00A3               	movwf	??_Lcd_Init+1
  4750  0D04  3022               	movlw	34
  4751  0D05  00A2               	movwf	??_Lcd_Init
  4752  0D06                     u4627:
  4753  0D06  0BA2               	decfsz	??_Lcd_Init,f
  4754  0D07  2D06               	goto	u4627
  4755  0D08  0BA3               	decfsz	??_Lcd_Init+1,f
  4756  0D09  2D06               	goto	u4627
  4757  0D0A  0000               	nop
  4758                           
  4759                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  4760  0D0B  3003               	movlw	3
  4761  0D0C  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4762                           
  4763                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  4764  0D11  3002               	movlw	2
  4765  0D12  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4766                           
  4767                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  4768  0D17  3002               	movlw	2
  4769  0D18  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4770                           
  4771                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  4772  0D1D  3008               	movlw	8
  4773  0D1E  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4774                           
  4775                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  4776  0D23  3000               	movlw	0
  4777  0D24  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4778                           
  4779                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  4780  0D29  300C               	movlw	12
  4781  0D2A  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4782                           
  4783                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  4784  0D2F  3000               	movlw	0
  4785  0D30  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4786                           
  4787                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  4788  0D35  3006               	movlw	6
  4789  0D36  120A  158A  2314  120A  158A  	fcall	_Lcd_Cmd
  4790  0D3B                     l130:
  4791  0D3B  0008               	return
  4792  0D3C                     __end_of_Lcd_Init:
  4793                           
  4794                           	psect	text15
  4795  07F2                     __ptext15:	
  4796 ;; *************** function _Lcd_Clear *****************
  4797 ;; Defined at:
  4798 ;;		line 33 in file "./lcd.h"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4812 ;;      Params:         0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    3
  4819 ;; This function calls:
  4820 ;;		_Lcd_Cmd
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _Lcd_Clear
  4828  07F2                     _Lcd_Clear:
  4829  07F2                     l3073:	
  4830                           ;incstack = 0
  4831                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4832                           
  4833                           
  4834                           ;./lcd.h: 35:  Lcd_Cmd(0);
  4835  07F2  3000               	movlw	0
  4836  07F3  120A  158A  2314  120A  118A  	fcall	_Lcd_Cmd
  4837                           
  4838                           ;./lcd.h: 36:  Lcd_Cmd(1);
  4839  07F8  3001               	movlw	1
  4840  07F9  120A  158A  2314  120A  118A  	fcall	_Lcd_Cmd
  4841  07FE                     l121:
  4842  07FE  0008               	return
  4843  07FF                     __end_of_Lcd_Clear:
  4844                           
  4845                           	psect	text16
  4846  0B14                     __ptext16:	
  4847 ;; *************** function _Lcd_Cmd *****************
  4848 ;; Defined at:
  4849 ;;		line 24 in file "./lcd.h"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  a               1    wreg     unsigned char 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  a               1    5[COMMON] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0, pclath, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4863 ;;      Params:         0       0       0       0       0
  4864 ;;      Locals:         1       0       0       0       0
  4865 ;;      Temps:          0       2       0       0       0
  4866 ;;      Totals:         1       2       0       0       0
  4867 ;;Total ram usage:        3 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    2
  4870 ;; This function calls:
  4871 ;;		_Lcd_Port
  4872 ;; This function is called by:
  4873 ;;		_Lcd_Clear
  4874 ;;		_Lcd_Set_Cursor
  4875 ;;		_Lcd_Init
  4876 ;;		_Lcd_Shift_Right
  4877 ;;		_Lcd_Shift_Left
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _Lcd_Cmd
  4883  0B14                     _Lcd_Cmd:
  4884                           
  4885                           ;incstack = 0
  4886                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4887                           ;Lcd_Cmd@a stored from wreg
  4888  0B14  00F5               	movwf	Lcd_Cmd@a
  4889  0B15                     l2575:
  4890                           
  4891                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD7 = 0;
  4892  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  4894  0B17  1388               	bcf	8,7	;volatile
  4895  0B18                     l2577:
  4896                           
  4897                           ;./lcd.h: 27:  Lcd_Port(a);
  4898  0B18  0875               	movf	Lcd_Cmd@a,w
  4899  0B19  120A  158A  2330  120A  158A  	fcall	_Lcd_Port
  4900  0B1E                     l2579:
  4901                           
  4902                           ;./lcd.h: 28:  RD6 = 1;
  4903  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  4905  0B20  1708               	bsf	8,6	;volatile
  4906  0B21                     l2581:
  4907                           
  4908                           ;./lcd.h: 29:     _delay((unsigned long)((1000)*(16000000/4000000.0)));
  4909  0B21  3006               	movlw	6
  4910  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  4911  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  4912  0B24  00A1               	movwf	??_Lcd_Cmd+1
  4913  0B25  302F               	movlw	47
  4914  0B26  00A0               	movwf	??_Lcd_Cmd
  4915  0B27                     u4637:
  4916  0B27  0BA0               	decfsz	??_Lcd_Cmd,f
  4917  0B28  2B27               	goto	u4637
  4918  0B29  0BA1               	decfsz	??_Lcd_Cmd+1,f
  4919  0B2A  2B27               	goto	u4637
  4920  0B2B  2B2C               	nop2
  4921  0B2C                     l2583:
  4922                           
  4923                           ;./lcd.h: 30:     RD6 = 0;
  4924  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0B2E  1308               	bcf	8,6	;volatile
  4927  0B2F                     l118:
  4928  0B2F  0008               	return
  4929  0B30                     __end_of_Lcd_Cmd:
  4930                           
  4931                           	psect	text17
  4932  0B30                     __ptext17:	
  4933 ;; *************** function _Lcd_Port *****************
  4934 ;; Defined at:
  4935 ;;		line 2 in file "./lcd.h"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  a               1    wreg     unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  a               1    4[COMMON] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4949 ;;      Params:         0       0       0       0       0
  4950 ;;      Locals:         1       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0
  4952 ;;      Totals:         1       0       0       0       0
  4953 ;;Total ram usage:        1 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_Lcd_Cmd
  4960 ;;		_Lcd_Init
  4961 ;;		_Lcd_Write_Char
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           
  4966                           ;psect for function _Lcd_Port
  4967  0B30                     _Lcd_Port:
  4968                           
  4969                           ;incstack = 0
  4970                           ; Regs used in _Lcd_Port: [wreg]
  4971                           ;Lcd_Port@a stored from wreg
  4972  0B30  00F4               	movwf	Lcd_Port@a
  4973  0B31                     l2551:
  4974                           
  4975                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
  4976  0B31  1C74               	btfss	Lcd_Port@a,0
  4977  0B32  2B34               	goto	u3121
  4978  0B33  2B35               	goto	u3120
  4979  0B34                     u3121:
  4980  0B34  2B39               	goto	l107
  4981  0B35                     u3120:
  4982  0B35                     l2553:
  4983                           
  4984                           ;./lcd.h: 5:   RD5 = 1;
  4985  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  4986  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  4987  0B37  1688               	bsf	8,5	;volatile
  4988  0B38  2B3C               	goto	l108
  4989  0B39                     l107:	
  4990                           ;./lcd.h: 6:  else
  4991                           
  4992                           
  4993                           ;./lcd.h: 7:   RD5 = 0;
  4994  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0B3B  1288               	bcf	8,5	;volatile
  4997  0B3C                     l108:
  4998                           
  4999                           ;./lcd.h: 9:  if(a & 2)
  5000  0B3C  1CF4               	btfss	Lcd_Port@a,1
  5001  0B3D  2B3F               	goto	u3131
  5002  0B3E  2B40               	goto	u3130
  5003  0B3F                     u3131:
  5004  0B3F  2B42               	goto	l109
  5005  0B40                     u3130:
  5006  0B40                     l2555:
  5007                           
  5008                           ;./lcd.h: 10:   RD4 = 1;
  5009  0B40  1608               	bsf	8,4	;volatile
  5010  0B41  2B43               	goto	l110
  5011  0B42                     l109:	
  5012                           ;./lcd.h: 11:  else
  5013                           
  5014                           
  5015                           ;./lcd.h: 12:   RD4 = 0;
  5016  0B42  1208               	bcf	8,4	;volatile
  5017  0B43                     l110:
  5018                           
  5019                           ;./lcd.h: 14:  if(a & 4)
  5020  0B43  1D74               	btfss	Lcd_Port@a,2
  5021  0B44  2B46               	goto	u3141
  5022  0B45  2B47               	goto	u3140
  5023  0B46                     u3141:
  5024  0B46  2B49               	goto	l111
  5025  0B47                     u3140:
  5026  0B47                     l2557:
  5027                           
  5028                           ;./lcd.h: 15:   RD3 = 1;
  5029  0B47  1588               	bsf	8,3	;volatile
  5030  0B48  2B4A               	goto	l112
  5031  0B49                     l111:	
  5032                           ;./lcd.h: 16:  else
  5033                           
  5034                           
  5035                           ;./lcd.h: 17:   RD3 = 0;
  5036  0B49  1188               	bcf	8,3	;volatile
  5037  0B4A                     l112:
  5038                           
  5039                           ;./lcd.h: 19:  if(a & 8)
  5040  0B4A  1DF4               	btfss	Lcd_Port@a,3
  5041  0B4B  2B4D               	goto	u3151
  5042  0B4C  2B4E               	goto	u3150
  5043  0B4D                     u3151:
  5044  0B4D  2B50               	goto	l113
  5045  0B4E                     u3150:
  5046  0B4E                     l2559:
  5047                           
  5048                           ;./lcd.h: 20:   RD2 = 1;
  5049  0B4E  1508               	bsf	8,2	;volatile
  5050  0B4F  2B51               	goto	l115
  5051  0B50                     l113:	
  5052                           ;./lcd.h: 21:  else
  5053                           
  5054                           
  5055                           ;./lcd.h: 22:   RD2 = 0;
  5056  0B50  1108               	bcf	8,2	;volatile
  5057  0B51                     l115:
  5058  0B51  0008               	return
  5059  0B52                     __end_of_Lcd_Port:
  5060                           
  5061                           	psect	text18
  5062  0E99                     __ptext18:	
  5063 ;; *************** function _Cal_PID *****************
  5064 ;; Defined at:
  5065 ;;		line 190 in file "main.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0
  5081 ;;      Temps:          0       2       0       0       0
  5082 ;;      Totals:         0       2       0       0       0
  5083 ;;Total ram usage:        2 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    2
  5086 ;; This function calls:
  5087 ;;		___awdiv
  5088 ;;		___wmul
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _Cal_PID
  5096  0E99                     _Cal_PID:
  5097  0E99                     l3121:	
  5098                           ;incstack = 0
  5099                           ; Regs used in _Cal_PID: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5100                           
  5101                           
  5102                           ;main.c: 192:     PID_error = setPoint - Temperature;
  5103  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  5105  0E9B  085B               	movf	_Temperature,w
  5106  0E9C  0261               	subwf	_setPoint,w
  5107  0E9D  00F8               	movwf	_PID_error
  5108  0E9E  085C               	movf	_Temperature+1,w
  5109  0E9F  1C03               	skipc
  5110  0EA0  0A5C               	incf	_Temperature+1,w
  5111  0EA1  0262               	subwf	_setPoint+1,w
  5112  0EA2  00F9               	movwf	_PID_error+1
  5113  0EA3                     l3123:
  5114                           
  5115                           ;main.c: 193:     if(PID_error > 30)
  5116  0EA3  0879               	movf	_PID_error+1,w
  5117  0EA4  3A80               	xorlw	128
  5118  0EA5  00FF               	movwf	btemp+1
  5119  0EA6  3080               	movlw	128
  5120  0EA7  027F               	subwf	btemp+1,w
  5121  0EA8  1D03               	skipz
  5122  0EA9  2EAC               	goto	u4435
  5123  0EAA  301F               	movlw	31
  5124  0EAB  0278               	subwf	_PID_error,w
  5125  0EAC                     u4435:
  5126  0EAC  1C03               	skipc
  5127  0EAD  2EAF               	goto	u4431
  5128  0EAE  2EB0               	goto	u4430
  5129  0EAF                     u4431:
  5130  0EAF  2EB2               	goto	l3127
  5131  0EB0                     u4430:
  5132  0EB0                     l3125:
  5133                           
  5134                           ;main.c: 194:         PID_i = 0;
  5135  0EB0  01F6               	clrf	_PID_i
  5136  0EB1  01F7               	clrf	_PID_i+1
  5137  0EB2                     l3127:
  5138                           
  5139                           ;main.c: 195:     PID_p = kp * PID_error;
  5140  0EB2  0879               	movf	_PID_error+1,w
  5141  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0EB5  00A1               	movwf	___wmul@multiplier+1
  5144  0EB6  0878               	movf	_PID_error,w
  5145  0EB7  00A0               	movwf	___wmul@multiplier
  5146  0EB8  302F               	movlw	47
  5147  0EB9  00A2               	movwf	___wmul@multiplicand
  5148  0EBA  3001               	movlw	1
  5149  0EBB  00A3               	movwf	___wmul@multiplicand+1
  5150  0EBC  120A  158A  2377  120A  158A  	fcall	___wmul
  5151  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0EC3  0821               	movf	?___wmul+1,w
  5154  0EC4  00D6               	movwf	_PID_p+1
  5155  0EC5  0820               	movf	?___wmul,w
  5156  0EC6  00D5               	movwf	_PID_p
  5157  0EC7                     l3129:
  5158                           
  5159                           ;main.c: 196:     PID_i = PID_i + (ki * PID_error);
  5160  0EC7  0879               	movf	_PID_error+1,w
  5161  0EC8  00A1               	movwf	___wmul@multiplier+1
  5162  0EC9  0878               	movf	_PID_error,w
  5163  0ECA  00A0               	movwf	___wmul@multiplier
  5164  0ECB  3007               	movlw	7
  5165  0ECC  00A2               	movwf	___wmul@multiplicand
  5166  0ECD  3000               	movlw	0
  5167  0ECE  00A3               	movwf	___wmul@multiplicand+1
  5168  0ECF  120A  158A  2377  120A  158A  	fcall	___wmul
  5169  0ED4  0876               	movf	_PID_i,w
  5170  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0ED7  0720               	addwf	?___wmul,w
  5173  0ED8  00F6               	movwf	_PID_i
  5174  0ED9  0877               	movf	_PID_i+1,w
  5175  0EDA  1803               	skipnc
  5176  0EDB  0A77               	incf	_PID_i+1,w
  5177  0EDC  0721               	addwf	?___wmul+1,w
  5178  0EDD  00F7               	movwf	_PID_i+1
  5179  0EDE                     l3131:
  5180                           
  5181                           ;main.c: 197:     PID_d = kd*(PID_error - previous_error);
  5182  0EDE  0859               	movf	_previous_error,w
  5183  0EDF  0278               	subwf	_PID_error,w
  5184  0EE0  00D3               	movwf	_PID_d
  5185  0EE1  085A               	movf	_previous_error+1,w
  5186  0EE2  1C03               	skipc
  5187  0EE3  0A5A               	incf	_previous_error+1,w
  5188  0EE4  0279               	subwf	_PID_error+1,w
  5189  0EE5  00D4               	movwf	_PID_d+1
  5190  0EE6                     l3133:
  5191                           
  5192                           ;main.c: 198:     PID_value = PID_p + PID_i + PID_d;
  5193  0EE6  0876               	movf	_PID_i,w
  5194  0EE7  0755               	addwf	_PID_p,w
  5195  0EE8  00A8               	movwf	??_Cal_PID
  5196  0EE9  0877               	movf	_PID_i+1,w
  5197  0EEA  1803               	skipnc
  5198  0EEB  0A77               	incf	_PID_i+1,w
  5199  0EEC  0756               	addwf	_PID_p+1,w
  5200  0EED  00A9               	movwf	??_Cal_PID+1
  5201  0EEE  0853               	movf	_PID_d,w
  5202  0EEF  0728               	addwf	??_Cal_PID,w
  5203  0EF0  00D7               	movwf	_PID_value
  5204  0EF1  0854               	movf	_PID_d+1,w
  5205  0EF2  1803               	skipnc
  5206  0EF3  0A54               	incf	_PID_d+1,w
  5207  0EF4  0729               	addwf	??_Cal_PID+1,w
  5208  0EF5  00D8               	movwf	_PID_value+1
  5209  0EF6                     l3135:
  5210                           
  5211                           ;main.c: 199:     previous_error = PID_error;
  5212  0EF6  0879               	movf	_PID_error+1,w
  5213  0EF7  00DA               	movwf	_previous_error+1
  5214  0EF8  0878               	movf	_PID_error,w
  5215  0EF9  00D9               	movwf	_previous_error
  5216  0EFA                     l3137:
  5217                           
  5218                           ;main.c: 200:     if(PID_value < 2000)
  5219  0EFA  0858               	movf	_PID_value+1,w
  5220  0EFB  3A80               	xorlw	128
  5221  0EFC  00FF               	movwf	btemp+1
  5222  0EFD  3087               	movlw	135
  5223  0EFE  027F               	subwf	btemp+1,w
  5224  0EFF  1D03               	skipz
  5225  0F00  2F03               	goto	u4445
  5226  0F01  30D0               	movlw	208
  5227  0F02  0257               	subwf	_PID_value,w
  5228  0F03                     u4445:
  5229  0F03  1803               	skipnc
  5230  0F04  2F06               	goto	u4441
  5231  0F05  2F07               	goto	u4440
  5232  0F06                     u4441:
  5233  0F06  2F0D               	goto	l3141
  5234  0F07                     u4440:
  5235  0F07                     l3139:
  5236                           
  5237                           ;main.c: 201:         PID_value = 2000;
  5238  0F07  30D0               	movlw	208
  5239  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5241  0F0A  00D7               	movwf	_PID_value
  5242  0F0B  3007               	movlw	7
  5243  0F0C  00D8               	movwf	_PID_value+1
  5244  0F0D                     l3141:
  5245                           
  5246                           ;main.c: 202:     if(PID_value > 8000)
  5247  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0F0F  0858               	movf	_PID_value+1,w
  5250  0F10  3A80               	xorlw	128
  5251  0F11  00FF               	movwf	btemp+1
  5252  0F12  309F               	movlw	159
  5253  0F13  027F               	subwf	btemp+1,w
  5254  0F14  1D03               	skipz
  5255  0F15  2F18               	goto	u4455
  5256  0F16  3041               	movlw	65
  5257  0F17  0257               	subwf	_PID_value,w
  5258  0F18                     u4455:
  5259  0F18  1C03               	skipc
  5260  0F19  2F1B               	goto	u4451
  5261  0F1A  2F1C               	goto	u4450
  5262  0F1B                     u4451:
  5263  0F1B  2F22               	goto	l3145
  5264  0F1C                     u4450:
  5265  0F1C                     l3143:
  5266                           
  5267                           ;main.c: 203:         PID_value = 8000;
  5268  0F1C  3040               	movlw	64
  5269  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  5270  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  5271  0F1F  00D7               	movwf	_PID_value
  5272  0F20  301F               	movlw	31
  5273  0F21  00D8               	movwf	_PID_value+1
  5274  0F22                     l3145:
  5275                           
  5276                           ;main.c: 204:     PID_value = (10000 - PID_value);
  5277  0F22  3010               	movlw	16
  5278  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  5279  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  5280  0F25  00A8               	movwf	??_Cal_PID
  5281  0F26  3027               	movlw	39
  5282  0F27  00A9               	movwf	??_Cal_PID+1
  5283  0F28  0857               	movf	_PID_value,w
  5284  0F29  0228               	subwf	??_Cal_PID,w
  5285  0F2A  00D7               	movwf	_PID_value
  5286  0F2B  0858               	movf	_PID_value+1,w
  5287  0F2C  1C03               	skipc
  5288  0F2D  0A58               	incf	_PID_value+1,w
  5289  0F2E  0229               	subwf	??_Cal_PID+1,w
  5290  0F2F  00D8               	movwf	_PID_value+1
  5291  0F30                     l3147:
  5292                           
  5293                           ;main.c: 205:     tmp = PID_value / 100;
  5294  0F30  3064               	movlw	100
  5295  0F31  00A0               	movwf	___awdiv@divisor
  5296  0F32  3000               	movlw	0
  5297  0F33  00A1               	movwf	___awdiv@divisor+1
  5298  0F34  0858               	movf	_PID_value+1,w
  5299  0F35  00A3               	movwf	___awdiv@dividend+1
  5300  0F36  0857               	movf	_PID_value,w
  5301  0F37  00A2               	movwf	___awdiv@dividend
  5302  0F38  120A  158A  253C  120A  158A  	fcall	___awdiv
  5303  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  5305  0F3F  0821               	movf	?___awdiv+1,w
  5306  0F40  00CE               	movwf	_tmp+1
  5307  0F41  0820               	movf	?___awdiv,w
  5308  0F42  00CD               	movwf	_tmp
  5309  0F43                     l203:
  5310  0F43  0008               	return
  5311  0F44                     __end_of_Cal_PID:
  5312                           
  5313                           	psect	text19
  5314  0B77                     __ptext19:	
  5315 ;; *************** function ___wmul *****************
  5316 ;; Defined at:
  5317 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5320 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  product         2    4[COMMON] unsigned int 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  2    0[BANK0 ] unsigned int 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5332 ;;      Params:         0       4       0       0       0
  5333 ;;      Locals:         2       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0
  5335 ;;      Totals:         2       4       0       0       0
  5336 ;;Total ram usage:        6 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    1
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_Cal_PID
  5343 ;;		_map
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           
  5348                           ;psect for function ___wmul
  5349  0B77                     ___wmul:
  5350  0B77                     l2605:	
  5351                           ;incstack = 0
  5352                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5353                           
  5354  0B77  01F4               	clrf	___wmul@product
  5355  0B78  01F5               	clrf	___wmul@product+1
  5356  0B79                     l2607:
  5357  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  5358  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  5359  0B7B  1C20               	btfss	___wmul@multiplier,0
  5360  0B7C  2B7E               	goto	u3201
  5361  0B7D  2B7F               	goto	u3200
  5362  0B7E                     u3201:
  5363  0B7E  2B85               	goto	l341
  5364  0B7F                     u3200:
  5365  0B7F                     l2609:
  5366  0B7F  0822               	movf	___wmul@multiplicand,w
  5367  0B80  07F4               	addwf	___wmul@product,f
  5368  0B81  1803               	skipnc
  5369  0B82  0AF5               	incf	___wmul@product+1,f
  5370  0B83  0823               	movf	___wmul@multiplicand+1,w
  5371  0B84  07F5               	addwf	___wmul@product+1,f
  5372  0B85                     l341:
  5373  0B85  3001               	movlw	1
  5374  0B86                     u3215:
  5375  0B86  1003               	clrc
  5376  0B87  0DA2               	rlf	___wmul@multiplicand,f
  5377  0B88  0DA3               	rlf	___wmul@multiplicand+1,f
  5378  0B89  3EFF               	addlw	-1
  5379  0B8A  1D03               	skipz
  5380  0B8B  2B86               	goto	u3215
  5381  0B8C                     l2611:
  5382  0B8C  3001               	movlw	1
  5383  0B8D                     u3225:
  5384  0B8D  1003               	clrc
  5385  0B8E  0CA1               	rrf	___wmul@multiplier+1,f
  5386  0B8F  0CA0               	rrf	___wmul@multiplier,f
  5387  0B90  3EFF               	addlw	-1
  5388  0B91  1D03               	skipz
  5389  0B92  2B8D               	goto	u3225
  5390  0B93                     l2613:
  5391  0B93  0820               	movf	___wmul@multiplier,w
  5392  0B94  0421               	iorwf	___wmul@multiplier+1,w
  5393  0B95  1D03               	btfss	3,2
  5394  0B96  2B98               	goto	u3231
  5395  0B97  2B99               	goto	u3230
  5396  0B98                     u3231:
  5397  0B98  2B79               	goto	l2607
  5398  0B99                     u3230:
  5399  0B99                     l2615:
  5400  0B99  0875               	movf	___wmul@product+1,w
  5401  0B9A  00A1               	movwf	?___wmul+1
  5402  0B9B  0874               	movf	___wmul@product,w
  5403  0B9C  00A0               	movwf	?___wmul
  5404  0B9D                     l343:
  5405  0B9D  0008               	return
  5406  0B9E                     __end_of___wmul:
  5407                           
  5408                           	psect	text20
  5409  0D3C                     __ptext20:	
  5410 ;; *************** function ___awdiv *****************
  5411 ;; Defined at:
  5412 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  divisor         2    0[BANK0 ] int 
  5415 ;;  dividend        2    2[BANK0 ] int 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  quotient        2    6[BANK0 ] int 
  5418 ;;  sign            1    5[BANK0 ] unsigned char 
  5419 ;;  counter         1    4[BANK0 ] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  2    0[BANK0 ] int 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5429 ;;      Params:         0       4       0       0       0
  5430 ;;      Locals:         0       4       0       0       0
  5431 ;;      Temps:          1       0       0       0       0
  5432 ;;      Totals:         1       8       0       0       0
  5433 ;;Total ram usage:        9 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    1
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_Cal_PID
  5440 ;;		_map
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           
  5445                           ;psect for function ___awdiv
  5446  0D3C                     ___awdiv:
  5447  0D3C                     l2619:	
  5448                           ;incstack = 0
  5449                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5450                           
  5451  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0D3E  01A5               	clrf	___awdiv@sign
  5454  0D3F                     l2621:
  5455  0D3F  1FA1               	btfss	___awdiv@divisor+1,7
  5456  0D40  2D42               	goto	u3241
  5457  0D41  2D43               	goto	u3240
  5458  0D42                     u3241:
  5459  0D42  2D4A               	goto	l2627
  5460  0D43                     u3240:
  5461  0D43                     l2623:
  5462  0D43  09A0               	comf	___awdiv@divisor,f
  5463  0D44  09A1               	comf	___awdiv@divisor+1,f
  5464  0D45  0AA0               	incf	___awdiv@divisor,f
  5465  0D46  1903               	skipnz
  5466  0D47  0AA1               	incf	___awdiv@divisor+1,f
  5467  0D48                     l2625:
  5468  0D48  01A5               	clrf	___awdiv@sign
  5469  0D49  0AA5               	incf	___awdiv@sign,f
  5470  0D4A                     l2627:
  5471  0D4A  1FA3               	btfss	___awdiv@dividend+1,7
  5472  0D4B  2D4D               	goto	u3251
  5473  0D4C  2D4E               	goto	u3250
  5474  0D4D                     u3251:
  5475  0D4D  2D57               	goto	l2633
  5476  0D4E                     u3250:
  5477  0D4E                     l2629:
  5478  0D4E  09A2               	comf	___awdiv@dividend,f
  5479  0D4F  09A3               	comf	___awdiv@dividend+1,f
  5480  0D50  0AA2               	incf	___awdiv@dividend,f
  5481  0D51  1903               	skipnz
  5482  0D52  0AA3               	incf	___awdiv@dividend+1,f
  5483  0D53                     l2631:
  5484  0D53  3001               	movlw	1
  5485  0D54  00F4               	movwf	??___awdiv
  5486  0D55  0874               	movf	??___awdiv,w
  5487  0D56  06A5               	xorwf	___awdiv@sign,f
  5488  0D57                     l2633:
  5489  0D57  01A6               	clrf	___awdiv@quotient
  5490  0D58  01A7               	clrf	___awdiv@quotient+1
  5491  0D59                     l2635:
  5492  0D59  0820               	movf	___awdiv@divisor,w
  5493  0D5A  0421               	iorwf	___awdiv@divisor+1,w
  5494  0D5B  1903               	btfsc	3,2
  5495  0D5C  2D5E               	goto	u3261
  5496  0D5D  2D5F               	goto	u3260
  5497  0D5E                     u3261:
  5498  0D5E  2D96               	goto	l2655
  5499  0D5F                     u3260:
  5500  0D5F                     l2637:
  5501  0D5F  01A4               	clrf	___awdiv@counter
  5502  0D60  0AA4               	incf	___awdiv@counter,f
  5503  0D61  2D6D               	goto	l2643
  5504  0D62                     l2639:
  5505  0D62  3001               	movlw	1
  5506  0D63                     u3275:
  5507  0D63  1003               	clrc
  5508  0D64  0DA0               	rlf	___awdiv@divisor,f
  5509  0D65  0DA1               	rlf	___awdiv@divisor+1,f
  5510  0D66  3EFF               	addlw	-1
  5511  0D67  1D03               	skipz
  5512  0D68  2D63               	goto	u3275
  5513  0D69                     l2641:
  5514  0D69  3001               	movlw	1
  5515  0D6A  00F4               	movwf	??___awdiv
  5516  0D6B  0874               	movf	??___awdiv,w
  5517  0D6C  07A4               	addwf	___awdiv@counter,f
  5518  0D6D                     l2643:
  5519  0D6D  1FA1               	btfss	___awdiv@divisor+1,7
  5520  0D6E  2D70               	goto	u3281
  5521  0D6F  2D71               	goto	u3280
  5522  0D70                     u3281:
  5523  0D70  2D62               	goto	l2639
  5524  0D71                     u3280:
  5525  0D71                     l2645:
  5526  0D71  3001               	movlw	1
  5527  0D72                     u3295:
  5528  0D72  1003               	clrc
  5529  0D73  0DA6               	rlf	___awdiv@quotient,f
  5530  0D74  0DA7               	rlf	___awdiv@quotient+1,f
  5531  0D75  3EFF               	addlw	-1
  5532  0D76  1D03               	skipz
  5533  0D77  2D72               	goto	u3295
  5534  0D78  0821               	movf	___awdiv@divisor+1,w
  5535  0D79  0223               	subwf	___awdiv@dividend+1,w
  5536  0D7A  1D03               	skipz
  5537  0D7B  2D7E               	goto	u3305
  5538  0D7C  0820               	movf	___awdiv@divisor,w
  5539  0D7D  0222               	subwf	___awdiv@dividend,w
  5540  0D7E                     u3305:
  5541  0D7E  1C03               	skipc
  5542  0D7F  2D81               	goto	u3301
  5543  0D80  2D82               	goto	u3300
  5544  0D81                     u3301:
  5545  0D81  2D89               	goto	l2651
  5546  0D82                     u3300:
  5547  0D82                     l2647:
  5548  0D82  0820               	movf	___awdiv@divisor,w
  5549  0D83  02A2               	subwf	___awdiv@dividend,f
  5550  0D84  0821               	movf	___awdiv@divisor+1,w
  5551  0D85  1C03               	skipc
  5552  0D86  03A3               	decf	___awdiv@dividend+1,f
  5553  0D87  02A3               	subwf	___awdiv@dividend+1,f
  5554  0D88                     l2649:
  5555  0D88  1426               	bsf	___awdiv@quotient,0
  5556  0D89                     l2651:
  5557  0D89  3001               	movlw	1
  5558  0D8A                     u3315:
  5559  0D8A  1003               	clrc
  5560  0D8B  0CA1               	rrf	___awdiv@divisor+1,f
  5561  0D8C  0CA0               	rrf	___awdiv@divisor,f
  5562  0D8D  3EFF               	addlw	-1
  5563  0D8E  1D03               	skipz
  5564  0D8F  2D8A               	goto	u3315
  5565  0D90                     l2653:
  5566  0D90  3001               	movlw	1
  5567  0D91  02A4               	subwf	___awdiv@counter,f
  5568  0D92  1D03               	btfss	3,2
  5569  0D93  2D95               	goto	u3321
  5570  0D94  2D96               	goto	u3320
  5571  0D95                     u3321:
  5572  0D95  2D71               	goto	l2645
  5573  0D96                     u3320:
  5574  0D96                     l2655:
  5575  0D96  0825               	movf	___awdiv@sign,w
  5576  0D97  1903               	btfsc	3,2
  5577  0D98  2D9A               	goto	u3331
  5578  0D99  2D9B               	goto	u3330
  5579  0D9A                     u3331:
  5580  0D9A  2DA0               	goto	l2659
  5581  0D9B                     u3330:
  5582  0D9B                     l2657:
  5583  0D9B  09A6               	comf	___awdiv@quotient,f
  5584  0D9C  09A7               	comf	___awdiv@quotient+1,f
  5585  0D9D  0AA6               	incf	___awdiv@quotient,f
  5586  0D9E  1903               	skipnz
  5587  0D9F  0AA7               	incf	___awdiv@quotient+1,f
  5588  0DA0                     l2659:
  5589  0DA0  0827               	movf	___awdiv@quotient+1,w
  5590  0DA1  00A1               	movwf	?___awdiv+1
  5591  0DA2  0826               	movf	___awdiv@quotient,w
  5592  0DA3  00A0               	movwf	?___awdiv
  5593  0DA4                     l494:
  5594  0DA4  0008               	return
  5595  0DA5                     __end_of___awdiv:
  5596                           
  5597                           	psect	text21
  5598  0763                     __ptext21:	
  5599 ;; *************** function _ISR *****************
  5600 ;; Defined at:
  5601 ;;		line 208 in file "main.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5615 ;;      Params:         0       0       0       0       0
  5616 ;;      Locals:         0       0       0       0       0
  5617 ;;      Temps:          4       0       0       0       0
  5618 ;;      Totals:         4       0       0       0       0
  5619 ;;Total ram usage:        4 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		Interrupt level 1
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           
  5629                           ;psect for function _ISR
  5630  0763                     _ISR:
  5631  0763                     i1l2463:
  5632                           
  5633                           ;main.c: 210:     if(RBIF == 1)
  5634  0763  1C0B               	btfss	11,0	;volatile
  5635  0764  2F66               	goto	u301_21
  5636  0765  2F67               	goto	u301_20
  5637  0766                     u301_21:
  5638  0766  2F94               	goto	i1l2475
  5639  0767                     u301_20:
  5640  0767                     i1l2465:
  5641                           
  5642                           ;main.c: 211:     {;main.c: 212:         if(RB4 == 1)
  5643  0767  1283               	bcf	3,5	;RP0=0, select bank0
  5644  0768  1303               	bcf	3,6	;RP1=0, select bank0
  5645  0769  1E06               	btfss	6,4	;volatile
  5646  076A  2F6C               	goto	u302_21
  5647  076B  2F6D               	goto	u302_20
  5648  076C                     u302_21:
  5649  076C  2F7E               	goto	i1l2469
  5650  076D                     u302_20:
  5651  076D                     i1l2467:
  5652                           
  5653                           ;main.c: 213:         {;main.c: 214:             _delay((unsigned long)((2000)*(16000000
      +                          /4000000.0)));
  5654  076D  300B               	movlw	11
  5655  076E  00F1               	movwf	??_ISR+1
  5656  076F  3062               	movlw	98
  5657  0770  00F0               	movwf	??_ISR
  5658  0771                     u464_27:
  5659  0771  0BF0               	decfsz	??_ISR,f
  5660  0772  2F71               	goto	u464_27
  5661  0773  0BF1               	decfsz	??_ISR+1,f
  5662  0774  2F71               	goto	u464_27
  5663  0775  0000               	nop
  5664                           
  5665                           ;main.c: 215:             setPoint++;
  5666  0776  3001               	movlw	1
  5667  0777  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0778  1303               	bcf	3,6	;RP1=0, select bank0
  5669  0779  07E1               	addwf	_setPoint,f
  5670  077A  1803               	skipnc
  5671  077B  0AE2               	incf	_setPoint+1,f
  5672  077C  3000               	movlw	0
  5673  077D  07E2               	addwf	_setPoint+1,f
  5674  077E                     i1l2469:
  5675                           
  5676                           ;main.c: 217:         if(RB5 == 1)
  5677  077E  1E86               	btfss	6,5	;volatile
  5678  077F  2F81               	goto	u303_21
  5679  0780  2F82               	goto	u303_20
  5680  0781                     u303_21:
  5681  0781  2F93               	goto	i1l2473
  5682  0782                     u303_20:
  5683  0782                     i1l2471:
  5684                           
  5685                           ;main.c: 218:         {;main.c: 219:             _delay((unsigned long)((2000)*(16000000
      +                          /4000000.0)));
  5686  0782  300B               	movlw	11
  5687  0783  00F1               	movwf	??_ISR+1
  5688  0784  3062               	movlw	98
  5689  0785  00F0               	movwf	??_ISR
  5690  0786                     u465_27:
  5691  0786  0BF0               	decfsz	??_ISR,f
  5692  0787  2F86               	goto	u465_27
  5693  0788  0BF1               	decfsz	??_ISR+1,f
  5694  0789  2F86               	goto	u465_27
  5695  078A  0000               	nop
  5696                           
  5697                           ;main.c: 220:             setPoint--;
  5698  078B  30FF               	movlw	255
  5699  078C  1283               	bcf	3,5	;RP0=0, select bank0
  5700  078D  1303               	bcf	3,6	;RP1=0, select bank0
  5701  078E  07E1               	addwf	_setPoint,f
  5702  078F  1803               	skipnc
  5703  0790  0AE2               	incf	_setPoint+1,f
  5704  0791  30FF               	movlw	255
  5705  0792  07E2               	addwf	_setPoint+1,f
  5706  0793                     i1l2473:
  5707                           
  5708                           ;main.c: 222:         RBIF = 0;
  5709  0793  100B               	bcf	11,0	;volatile
  5710  0794                     i1l2475:
  5711                           
  5712                           ;main.c: 225:     if(TMR0IF == 1)
  5713  0794  1D0B               	btfss	11,2	;volatile
  5714  0795  2F97               	goto	u304_21
  5715  0796  2F98               	goto	u304_20
  5716  0797                     u304_21:
  5717  0797  2FB8               	goto	i1l2491
  5718  0798                     u304_20:
  5719  0798                     i1l2477:
  5720                           
  5721                           ;main.c: 226:     {;main.c: 227:         TMR0 = 0x38;
  5722  0798  3038               	movlw	56
  5723  0799  1283               	bcf	3,5	;RP0=0, select bank0
  5724  079A  1303               	bcf	3,6	;RP1=0, select bank0
  5725  079B  0081               	movwf	1	;volatile
  5726                           
  5727                           ;main.c: 228:         cnt0++;
  5728  079C  3001               	movlw	1
  5729  079D  07D1               	addwf	_cnt0,f
  5730  079E  1803               	skipnc
  5731  079F  0AD2               	incf	_cnt0+1,f
  5732  07A0  3000               	movlw	0
  5733  07A1  07D2               	addwf	_cnt0+1,f
  5734                           
  5735                           ;main.c: 229:         if(cnt0 == tmp)
  5736  07A2  0852               	movf	_cnt0+1,w
  5737  07A3  064E               	xorwf	_tmp+1,w
  5738  07A4  1D03               	skipz
  5739  07A5  2FA8               	goto	u305_25
  5740  07A6  0851               	movf	_cnt0,w
  5741  07A7  064D               	xorwf	_tmp,w
  5742  07A8                     u305_25:
  5743  07A8  1D03               	skipz
  5744  07A9  2FAB               	goto	u305_21
  5745  07AA  2FAC               	goto	u305_20
  5746  07AB                     u305_21:
  5747  07AB  2FB7               	goto	i1l2489
  5748  07AC                     u305_20:
  5749  07AC                     i1l2479:
  5750                           
  5751                           ;main.c: 230:         {;main.c: 231:             RB7 = 1;
  5752  07AC  1786               	bsf	6,7	;volatile
  5753  07AD                     i1l2481:
  5754                           
  5755                           ;main.c: 232:             _delay((unsigned long)((10)*(16000000/4000000.0)));
  5756  07AD  300D               	movlw	13
  5757  07AE  00F0               	movwf	??_ISR
  5758  07AF                     u466_27:
  5759  07AF  0BF0               	decfsz	??_ISR,f
  5760  07B0  2FAF               	goto	u466_27
  5761  07B1                     i1l2483:
  5762                           
  5763                           ;main.c: 233:             RB7 = 0;
  5764  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  5765  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  5766  07B3  1386               	bcf	6,7	;volatile
  5767  07B4                     i1l2485:
  5768                           
  5769                           ;main.c: 234:             cnt0 = 0;
  5770  07B4  01D1               	clrf	_cnt0
  5771  07B5  01D2               	clrf	_cnt0+1
  5772  07B6                     i1l2487:
  5773                           
  5774                           ;main.c: 235:             TMR0IE = 0;
  5775  07B6  128B               	bcf	11,5	;volatile
  5776  07B7                     i1l2489:
  5777                           
  5778                           ;main.c: 237:         TMR0IF = 0;
  5779  07B7  110B               	bcf	11,2	;volatile
  5780  07B8                     i1l2491:
  5781                           
  5782                           ;main.c: 240:     if(TMR1IF == 1)
  5783  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  5784  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  5785  07BA  1C0C               	btfss	12,0	;volatile
  5786  07BB  2FBD               	goto	u306_21
  5787  07BC  2FBE               	goto	u306_20
  5788  07BD                     u306_21:
  5789  07BD  2FC7               	goto	i1l2503
  5790  07BE                     u306_20:
  5791  07BE                     i1l2493:
  5792                           
  5793                           ;main.c: 241:     {;main.c: 242:         CCP2CON = 0x00;
  5794  07BE  019D               	clrf	29	;volatile
  5795  07BF                     i1l2495:
  5796                           
  5797                           ;main.c: 243:         RC1 = 1;
  5798  07BF  1487               	bsf	7,1	;volatile
  5799  07C0                     i1l2497:
  5800                           
  5801                           ;main.c: 244:         CCP2CON = 0x09;
  5802  07C0  3009               	movlw	9
  5803  07C1  009D               	movwf	29	;volatile
  5804  07C2                     i1l2499:
  5805                           
  5806                           ;main.c: 245:         TMR1 = 0xB1E0;
  5807  07C2  30B1               	movlw	177
  5808  07C3  008F               	movwf	15	;volatile
  5809  07C4  30E0               	movlw	224
  5810  07C5  008E               	movwf	14	;volatile
  5811  07C6                     i1l2501:
  5812                           
  5813                           ;main.c: 246:         TMR1IF = 0;
  5814  07C6  100C               	bcf	12,0	;volatile
  5815  07C7                     i1l2503:
  5816                           
  5817                           ;main.c: 249:     if(TMR2IF == 1)
  5818  07C7  1C8C               	btfss	12,1	;volatile
  5819  07C8  2FCA               	goto	u307_21
  5820  07C9  2FCB               	goto	u307_20
  5821  07CA                     u307_21:
  5822  07CA  2FE5               	goto	i1l2517
  5823  07CB                     u307_20:
  5824  07CB                     i1l2505:
  5825                           
  5826                           ;main.c: 250:     {;main.c: 251:         TMR2 = 0x06;
  5827  07CB  3006               	movlw	6
  5828  07CC  0091               	movwf	17	;volatile
  5829                           
  5830                           ;main.c: 252:         cnt2++;
  5831  07CD  3001               	movlw	1
  5832  07CE  07CF               	addwf	_cnt2,f
  5833  07CF  1803               	skipnc
  5834  07D0  0AD0               	incf	_cnt2+1,f
  5835  07D1  3000               	movlw	0
  5836  07D2  07D0               	addwf	_cnt2+1,f
  5837  07D3                     i1l2507:
  5838                           
  5839                           ;main.c: 253:         if(cnt2 == 1000)
  5840  07D3  30E8               	movlw	232
  5841  07D4  064F               	xorwf	_cnt2,w
  5842  07D5  3003               	movlw	3
  5843  07D6  1903               	skipnz
  5844  07D7  0650               	xorwf	_cnt2+1,w
  5845  07D8  1D03               	btfss	3,2
  5846  07D9  2FDB               	goto	u308_21
  5847  07DA  2FDC               	goto	u308_20
  5848  07DB                     u308_21:
  5849  07DB  2FE4               	goto	i1l2515
  5850  07DC                     u308_20:
  5851  07DC                     i1l2509:
  5852                           
  5853                           ;main.c: 254:         {;main.c: 255:             RD0 = ~RD0;
  5854  07DC  3001               	movlw	1
  5855  07DD  0688               	xorwf	8,f
  5856  07DE                     i1l2511:
  5857                           
  5858                           ;main.c: 256:             cnt2 = 0;
  5859  07DE  01CF               	clrf	_cnt2
  5860  07DF  01D0               	clrf	_cnt2+1
  5861  07E0                     i1l2513:
  5862                           
  5863                           ;main.c: 257:             samp = 1;
  5864  07E0  3001               	movlw	1
  5865  07E1  00CB               	movwf	_samp
  5866  07E2  3000               	movlw	0
  5867  07E3  00CC               	movwf	_samp+1
  5868  07E4                     i1l2515:
  5869                           
  5870                           ;main.c: 259:         TMR2IF = 0;
  5871  07E4  108C               	bcf	12,1	;volatile
  5872  07E5                     i1l2517:
  5873                           
  5874                           ;main.c: 262:     if(INTF == 1)
  5875  07E5  1C8B               	btfss	11,1	;volatile
  5876  07E6  2FE8               	goto	u309_21
  5877  07E7  2FE9               	goto	u309_20
  5878  07E8                     u309_21:
  5879  07E8  2FEB               	goto	i1l217
  5880  07E9                     u309_20:
  5881  07E9                     i1l2519:
  5882                           
  5883                           ;main.c: 263:     {;main.c: 264:         TMR0IE = 1;
  5884  07E9  168B               	bsf	11,5	;volatile
  5885                           
  5886                           ;main.c: 265:         INTF = 0;
  5887  07EA  108B               	bcf	11,1	;volatile
  5888  07EB                     i1l217:
  5889  07EB  0873               	movf	??_ISR+3,w
  5890  07EC  008A               	movwf	10
  5891  07ED  0E72               	swapf	??_ISR+2,w
  5892  07EE  0083               	movwf	3
  5893  07EF  0EFE               	swapf	btemp,f
  5894  07F0  0E7E               	swapf	btemp,w
  5895  07F1  0009               	retfie
  5896  07F2                     __end_of_ISR:
  5897  007E                     btemp	set	126	;btemp
  5898  007E                     wtemp0	set	126
  5899                           
  5900                           	psect	intentry
  5901  0004                     __pintentry:	
  5902                           ;incstack = 0
  5903                           ; Regs used in _ISR: [wreg+status,2+status,0]
  5904                           
  5905  0004                     interrupt_function:
  5906  007E                     saved_w	set	btemp
  5907  0004  00FE               	movwf	btemp
  5908  0005  0E03               	swapf	3,w
  5909  0006  00F2               	movwf	??_ISR+2
  5910  0007  080A               	movf	10,w
  5911  0008  00F3               	movwf	??_ISR+3
  5912  0009  120A  118A  2F63   	ljmp	_ISR
  5913                           
  5914                           	psect	config
  5915                           
  5916                           ;Config register CONFIG @ 0x2007
  5917                           ;	Oscillator Selection bits
  5918                           ;	FOSC = HS, HS oscillator
  5919                           ;	Watchdog Timer Enable bit
  5920                           ;	WDTE = OFF, WDT disabled
  5921                           ;	Power-up Timer Enable bit
  5922                           ;	PWRTE = ON, PWRT enabled
  5923                           ;	Brown-out Reset Enable bit
  5924                           ;	BOREN = ON, BOR enabled
  5925                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5926                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5927                           ;	Data EEPROM Memory Code Protection bit
  5928                           ;	CPD = OFF, Data EEPROM code protection off
  5929                           ;	Flash Program Memory Write Enable bits
  5930                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5931                           ;	In-Circuit Debugger Mode bit
  5932                           ;	DEBUG = 0x1, unprogrammed default
  5933                           ;	Flash Program Memory Code Protection bit
  5934                           ;	CP = OFF, Code protection off
  5935  2007                     	org	8199
  5936  2007  3F72               	dw	16242

Data Sizes:
    Strings     22
    Constant    10
    Data        8
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     43      67
    BANK1            80     16      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[4]), STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK1[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Read_Temp->___fltol
    ___flmul->__Umul8_16
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Cal_PID->___wmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Read_Temp
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Read_Temp->___fltol
    ___fltol->___fldiv
    ___flmul->__Umul8_16
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Cal_PID->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   11777
                                             41 BANK0      2     2      0
                                              0 BANK1     16    16      0
                            _Cal_PID
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Read_Temp
                           _init_ADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1907
                                             12 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Temp                                            6     6      0    6280
                                             35 BANK0      6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     427
                                              4 COMMON     2     2      0
                                             26 BANK0      9     5      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                              7 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     492
                                              3 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     815
                                              2 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Cal_PID                                              2     2      0    1633
                                              8 BANK0      2     2      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     828
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cal_PID
     ___awdiv
     ___wmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Temp
     ___fldiv
     ___flmul
       __Umul8_16
     ___fltol
       ___fldiv (ARG)
     ___xxtofl
   _init_ADC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     10      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2B      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 25 15:43:42 2021

             ___fldiv@aexp 0039               ___fldiv@bexp 0038                          pc 0002  
             ___fldiv@sign 0031               ___awdiv@sign 0025                         _kd 00B2  
                       _ki 005D                         _kp 005F                         fsr 0004  
      ___wmul@multiplicand 0022        __Umul8_16@word_mpld 0024                        l110 0B43  
                      l111 0B49                        l112 0B4A                        l113 0B50  
                      l121 07FE                        l130 0D3B                        l203 0F43  
                      l115 0B51                        l107 0B39                        l108 0B3C  
                      l109 0B42                        l133 0BFD                        l118 0B2F  
                      l127 0CD7                        l139 0B76                        l341 0B85  
                      l343 0B9D                        l191 0B13                        l183 06DB  
                      l337 067F                        l194 0DA8                        l197 0E1C  
                      l613 0C7F                        l534 0E83                        l527 0E98  
                      l623 0C39                        l712 0579                        l537 0E98  
                      l714 0589                        l706 0507                        l730 03B8  
                      l494 0DA4                        l742 03AC                        l751 0BC6  
                      l736 0324                        l690 0415                        l692 0595  
                      l780 0FAD                        l749 0BB4                        l774 0F68  
                      l776 0FFF                        l787 0FC9                        l788 0FD5  
                      _GIE 005F                        _RB3 0033                        _RC1 0039  
                      _RD0 0040                        _RB4 0034                        _RB5 0035  
                      _RD2 0042                        _RD3 0043                        _RB7 0037  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _ISR 0763                        fsr0 0004  
                      _tmp 004D                        indf 0000               ___flmul@aexp 0035  
             ___flmul@bexp 003A               ___flmul@sign 0034               ___flmul@temp 003F  
             ___flmul@prod 003B                       ?_ISR 0070               ___fltol@exp1 0075  
                     l3001 033C                       l3011 0377                       l3003 0340  
                     l3101 0CFA                       l3021 03A4                       l3013 0386  
                     l3005 0359                       l3103 0D00                       l3111 0B6B  
                     l3023 03A5                       l3015 0390                       l3007 035F  
                     l3031 0F4C                       l3121 0E99                       l3105 0B55  
                     l3025 03B0                       l3017 0392                       l3009 036C  
                     l3041 0F79                       l3033 0F50                       l3113 0AFF  
                     l3201 0669                       l3131 0EDE                       l3123 0EA3  
                     l3107 0B58                       l3019 03A0                       l3051 0FA4  
                     l3043 0F7E                       l3035 0F60                       l3115 0DA5  
                     l3203 067B                       l3141 0F0D                       l3133 0EE6  
                     l3125 0EB0                       l3109 0B63                       l3061 0FD7  
                     l3053 0FB4                       l3045 0F8B                       l3037 0F70  
                     l3029 0F47                       l3117 0DA5                       l3301 072C  
                     l3221 0689                       l3143 0F1C                       l3135 0EF6  
                     l3127 0EB2                       l3063 0FED                       l3055 0FBF  
                     l3047 0F92                       l3119 0DAC                       l3151 059E  
                     l3303 0732                       l3231 0696                       l3223 068C  
                     l3215 0680                       l3145 0F22                       l3137 0EFA  
                     l3129 0EC7                       l3073 07F2                       l3081 0C9E  
                     l2601 0BF6                       l3065 0FF2                       l3057 0FC3  
                     l3049 0F96                       l3161 05B1                       l3153 05A4  
                     l3305 0742                       l3241 06A1                       l3233 0697  
                     l3225 0691                       l3217 0685                       l2611 0B8C  
                     l3147 0F30                       l3139 0F07                       l3091 0CC9  
                     l3083 0CA4                       l3075 0C83                       l2603 0BFA  
                     l3067 0FF6                       l3059 0FCD                       l3171 05E2  
                     l3163 05CE                       l3155 05AB                       l3307 074E  
                     l3251 06AB                       l3243 06A7                       l3235 0698  
                     l3227 0694                       l3219 0688                       l2621 0D3F  
                     l2613 0B93                       l2605 0B77                       l3093 0CCF  
                     l3077 0C88                       l3085 0CAD                       l3069 0FF7  
                     l2701 0C3E                       l3173 05E7                       l3165 05D6  
                     l3341 05C3                       l3157 05B0                       l3149 0599  
                     l3309 0754                       l3261 06B4                       l3253 06AD  
                     l3245 06A8                       l3237 069B                       l3229 0695  
                     l2631 0D53                       l2623 0D43                       l2615 0B99  
                     l2607 0B79                       l2551 0B31                       l3095 0CD8  
                     l3087 0CB3                       l3079 0C99                       l2711 0C56  
                     l2703 0C44                       l3191 0620                       l3183 0605  
                     l3167 05DA                       l3271 06B9                       l3263 06B5  
                     l3255 06AF                       l3247 06A9                       l3239 069C  
                     l2641 0D69                       l2633 0D57                       l2625 0D48  
                     l2609 0B7F                       l2553 0B35                       l3097 0CDE  
                     l3089 0CC4                       l2801 0444                       l2561 0BA1  
                     l2713 0C67                       l2705 0C47                       l2721 0C7B  
                     l3193 0625                       l3185 060F                       l3169 05DE  
                     l3281 06D7                       l3273 06BC                       l3265 06B6  
                     l3257 06B0                       l3249 06AA                       l2651 0D89  
                     l2643 0D6D                       l2635 0D59                       l2627 0D4A  
                     l2619 0D3C                       l2555 0B40                       l3099 0CE9  
                     l2811 0470                       l2803 0456                       l2571 0BC2  
                     l2563 0BA3                       l2715 0C6D                       l2707 0C4E  
                     l2731 0C10                       l3195 0655                       l3187 0615  
                     l3179 05E9                       l3291 06F2                       l3283 06DE  
                     l3275 06BF                       l3267 06B7                       l3259 06B1  
                     l2653 0D90                       l2645 0D71                       l2637 0D5F  
                     l2629 0D4E                       l2557 0B47                       l2581 0B21  
                     l2813 0475                       l2821 0495                       l2805 045E  
                     l2565 0BAA                       l2901 0074                       l2717 0C6E  
                     l2709 0C52                       l2741 0C2F                       l2733 0C14  
                     l2725 0BFE                       l3197 065C                       l3189 061C  
                     l3293 0702                       l3285 06E4                       l3277 06C2  
                     l3269 06B8                       l2647 0D82                       l2639 0D62  
                     l2655 0D96                       l2559 0B4E                       l2583 0B2C  
                     l2575 0B15                       l2591 0BE3                       l2831 04C0  
                     l2823 04A7                       l2815 0487                       l2807 0466  
                     l2751 03C6                       l2567 0BAE                       l2911 0091  
                     l2903 007C                       l2671 0E48                       l2663 0E1D  
                     l2719 0C75                       l2735 0C18                       l2727 0C06  
                     l2743 0C35                       l3199 0660                       l3295 070C  
                     l3287 06E9                       l3279 06C7                       l2657 0D9B  
                     l2649 0D88                       l2577 0B18                       l2593 0BE6  
                     l2585 0BCA                       l2841 04D8                       l2833 04C8  
                     l2825 04A8                       l2817 048B                       l2809 046E  
                     l2761 03DD                       l2753 03CA                       l2569 0BBD  
                     l2921 00A8                       l2913 0095                       l2905 007E  
                     l2673 0E49                       l2665 0E2A                       l2737 0C22  
                     l2729 0C09                       l3297 0712                       l3289 06ED  
                     l2659 0DA0                       l2579 0B1E                       l2595 0BEA  
                     l2587 0BD4                       l2851 04F0                       l2843 04E1  
                     l2835 04CA                       l2827 04B6                       l2819 048C  
                     l2771 03F3                       l2763 03DE                       l2755 03CB  
                     l2747 03B9                       l2923 00AA                       l2915 0096  
                     l2907 0086                       l2675 0E51                       l2739 0C28  
                     l3299 0722                       l2597 0BED                       l2589 0BD5  
                     l2861 051F                       l2853 0504                       l2837 04D3  
                     l2845 04E7                       l2829 04BA                       l2781 040A  
                     l2773 03F7                       l2757 03D0                       l2765 03E0  
                     l2749 03C0                       l2941 011B                       l2933 00C5  
                     l2925 00B2                       l2917 009B                       l2909 008B  
                     l2693 0E78                       l2685 0E5F                       l2677 0E53  
                     l2669 0E33                       l2599 0BF3                       l2871 055D  
                     l2863 0523                       l2847 04EB                       l2839 04D7  
                     l2791 042D                       l2783 040B                       l2775 03F8  
                     l2767 03E8                       l2759 03D5                       l2951 0198  
                     l2943 0147                       l2935 00D5                       l2927 00B7  
                     l2919 00A0                       l2695 0E88                       l2679 0E57  
                     l2687 0E71                       l2881 0583                       l2873 056C  
                     l2865 053C                       l2857 050C                       l2849 04EC  
                     l2777 03FD                       l2785 040D                       l2769 03ED  
                     l2961 0218                       l2953 01B5                       l2945 0163  
                     l2937 00E2                       l2929 00BC                       l2697 0E8D  
                     l2883 0585                       l2875 0570                       l2859 0511  
                     l2867 0542                       l2787 041D                       l2795 0436  
                     l2779 0402                       l2971 02D0                       l2963 0245  
                     l2955 01C5                       l2947 017F                       l2939 00FF  
                     l2891 005F                       l2699 0C3A                       l2877 0578  
                     l2869 054F                       l2797 043B                       l2789 0429  
                     l2981 02F5                       l2973 02D9                       l2965 0255  
                     l2957 01E2                       l2949 0188                       l2893 0065  
                     l2879 057F                       l2991 030D                       l2983 02FE  
                     l2975 02E7                       l2967 0282                       l2959 01FB  
                     l2895 0069                       l2993 0321                       l2977 02F0  
                     l2985 0304                       l2969 02A8                       l2897 006A  
                     l2889 0058                       l2987 0308                       l2979 02F4  
                     l2899 006F                       l2997 0329                       l2989 0309  
                     l2999 032E                       STR_1 0810                       STR_2 081B  
                     STR_3 0817                       u3200 0B7F                       u3120 0B35  
                     u3201 0B7E                       u3121 0B34                       u4001 01D4  
                     u3130 0B40                       u4002 01DB                       u3131 0B3F  
                     u4003 01E2                       u3300 0D82                       u3140 0B47  
                     u3301 0D81                       u3141 0B46                       u4021 020A  
                     u3230 0B99                       u3150 0B4E                       u4110 02F4  
                     u4022 0211                       u3231 0B98                       u3215 0B86  
                     u3151 0B4D                       u4111 02F3                       u4031 0237  
                     u4023 0218                       u4015 01E4                       u3320 0D96  
                     u3240 0D43                       u3160 0BAE                       u4200 036C  
                     u4032 023E                       u3400 0E77                       u3321 0D95  
                     u3305 0D7E                       u3241 0D42                       u3225 0B8D  
                     u3161 0BAD                       u4201 036B                       u4105 02E9  
                     u4041 0264                       u4033 0245                       u3401 0E76  
                     u3330 0D9B                       u3250 0D4E                       u4210 0386  
                     u4130 0308                       u4050 028E                       u4042 026B  
                     u3331 0D9A                       u3315 0D8A                       u3251 0D4D  
                     u4211 0385                       u4131 0307                       u4043 0272  
                     u3260 0D5F                       u3180 0BC2                       u4220 03A4  
                     u4140 030D                       u3420 0E88                       u3340 0E2A  
                     u3500 0C7B                       u3261 0D5E                       u3181 0BC1  
                     u4221 03A3                       u4205 0368                       u4141 030C  
                     u4125 02F7                       u4061 029A                       u3421 0E87  
                     u3341 0E29                       u3501 0C7A                       u4150 0321  
                     u4070 02B6                       u4062 02A1                       u3430 0E8D  
                     u3350 0E41                       u4310 0FC3                       u4230 0F4C  
                     u3510 0C06                       u3175 0BB5                       u4215 0382  
                     u4151 0320                       u4063 02A8                       u4055 0289  
                     u3431 0E8C                       u3415 0E7A                       u4311 0FC2  
                     u4231 0F4B                       u3511 0C05                       u3280 0D71  
                     u3600 03F7                       u4160 0328                       u3360 0E57  
                     u4320 0FC9                       u4240 0F50                       u3440 0C44  
                     u3281 0D70                       u3601 03F6                       u4161 0327  
                     u4081 02C2                       u3361 0E56                       u4321 0FC8  
                     u4305 0FB8                       u4241 0F4F                       u3441 0C43  
                     u4410 0B76                       u3610 03FD                       u4170 032E  
                     u4082 02C9                       u3370 0E5E                       u4330 0FCD  
                     u4250 0F70                       u3530 0C18                       u3275 0D63  
                     u3195 0BD8                       u4411 0B75                       u3611 03FC  
                     u4171 032D                       u4083 02D0                       u4075 02B1  
                     u3371 0E5D                       u3355 0E3C                       u4331 0FCC  
                     u4251 0F6F                       u3531 0C17                       u3700 04A7  
                     u3620 0402                       u4180 0340                       u4340 0FE2  
                     u4420 0DAC                       u3460 0C56                       u3540 0C22  
                     u4500 0615                       u4405 0CBB                       u3701 04A6  
                     u3621 0401                       u4181 033F                       u4421 0DAB  
                     u3461 0C55                       u3541 0C21                       u3525 0C0A  
                     u4501 0614                       u4430 0EB0                       u3710 04C0  
                     u3630 041D                       u4190 034F                       u3390 0E70  
                     u4350 0FF2                       u4270 0F91                       u4510 0669  
                     u3295 0D72                       u4431 0EAF                       u3711 04BF  
                     u3631 041C                       u4095 02D2                       u3391 0E6F  
                     u4351 0FF1                       u4271 0F90                       u3455 0C48  
                     u4511 0668                       u4440 0F07                       u3800 0511  
                     u3720 04C8                       u3640 043B                       u4360 0FF6  
                     u3480 0C67                       u3560 0C35                       u4520 067B  
                     u4441 0F06                       u3801 0510                       u3721 04C7  
                     u3705 04A3                       u3641 043A                       u3385 0E60  
                     u4361 0FF5                       u4345 0FDD                       u4265 0F83  
                     u3481 0C66                       u3561 0C34                       u3545 0C1E  
                     u4521 067A                       u4450 0F1C                       u4370 0C88  
                     u3810 0523                       u3650 0475                       u3570 03CA  
                     u4290 0FB3                       u4530 06D7                       u4451 0F1B  
                     u4435 0EAC                       u4371 0C87                       u3811 0522  
                     u3651 0474                       u3571 03C9                       u4195 034A  
                     u4291 0FB2                       u3475 0C57                       u3555 0C29  
                     u4531 06D6                       _PEIE 005E                       u3820 0532  
                     u3740 04D7                       u3580 03D0                       u3900 009B  
                     u4460 05A4                       u4540 06E4                       u4445 0F03  
                     u3741 04D6                       u3581 03CF                       u3901 009A  
                     u4285 0FA5                       u3485 0C63                       u4461 05A3  
                     u4541 06E3                       _INTE 005C                       u4390 0CB3  
                     u3830 054F                       u3590 03D5                       u3910 00A0  
                     u4470 05DE                       _INTF 0059                       u4455 0F18  
                     u4607 0CE4                       u4391 0CB2                       u3831 054E  
                     u3735 04CC                       u3591 03D4                       u3911 009F  
                     u3495 0C6F                       u4471 05DD                       u4535 06D3  
                     _RBIE 005B                       u3840 056C                       u3760 04EB  
                     u3680 048B                       u3920 00B7                       u4480 0604  
                     _RBIF 0058                       u4617 0CF5                       u4385 0C90  
                     u3841 056B                       u3825 052D                       u3761 04EA  
                     u3681 048A                       u3665 0477                       u3921 00B6  
                     u4481 0603                       u3850 0583                       u3770 04F0  
                     u3930 00BC                       u4490 060F                       u4627 0D06  
                     u3851 0582                       u3835 054B                       u3771 04EF  
                     u3755 04DA                       u3675 0480                       u3931 00BB  
                     u4491 060E                       u3780 0504                       u3860 0069  
                     u4637 0B27                       u3845 0568                       u3781 0503  
                     u3941 010D                       u3861 0068                       u4485 0600  
                     u3790 050B                       u3942 0114                       u3870 006F  
                     u3791 050A                       u3695 048E                       u3951 0129  
                     u3943 011B                       u3871 006E                       u3952 0130  
                     u3880 0074                       u3961 0155                       u3953 0137  
                     u3881 0073                       u4577 075A                       u3962 015C  
                     u3890 0095                       u4587 0BE8                       u3971 0171  
                     u3963 0163                       u3891 0094                       u3972 0178  
                     u4597 0BF8                       u3973 017F                       u3991 01A7  
                     u3992 01AE                       u3993 01B5                       u3985 0181  
                     _TMR0 0001                       _TMR1 000E                       _TMR2 0011  
                     _cnt0 0051                       _cnt1 00B0                       _cnt2 004F  
        ?_Lcd_Write_String 0070                       _main 0680                       _samp 004B  
          __end_of_Cal_PID 0F44                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0023            ___fldiv@new_exp 0032            __end_of_Lcd_Cmd 0B30  
                    ??_ISR 0070              ___fltol@sign1 0074                      ?_main 0070  
          __end_of___fldiv 0596            __end_of___awdiv 0DA5                      _CCPR2 001B  
          __end_of___flmul 03B9            __end_of___fltol 0E99            ___awdiv@divisor 0020  
                    _T2CON 0012            __end_of___lwdiv 0C80                      i1l217 07EB  
          __end_of___lwmod 0C3A            ___awdiv@counter 0024                      _PID_d 0053  
                    _PID_i 0076                      _PID_p 0055    __size_of_Lcd_Set_Cursor 0058  
                    _TRISD 0088            __end_of_dpowers 0810                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0680  
         __end_of_Lcd_Init 0D3C           __end_of_Lcd_Port 0B52            __initialization 000F  
             __end_of_main 0763                     ??_main 0049         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E                     _ADRESL 009E                  ??_Cal_PID 0028  
         ___awdiv@dividend 0022                     i1l2501 07C6                     i1l2511 07DE  
                   i1l2503 07C7                     i1l2513 07E0                     i1l2505 07CB  
                   i1l2515 07E4                     i1l2507 07D3                     i1l2509 07DC  
                   i1l2517 07E5                     i1l2519 07E9                     i1l2471 0782  
                   i1l2463 0763                     i1l2481 07AD                     i1l2473 0793  
                   i1l2465 0767                     i1l2483 07B1                     i1l2491 07B8  
                   i1l2467 076D                     i1l2475 0794                     i1l2493 07BE  
                   i1l2485 07B4                     i1l2477 0798                     i1l2469 077E  
                   i1l2495 07BF                     i1l2487 07B6                     i1l2479 07AC  
                   i1l2497 07C0                     i1l2489 07B7                     i1l2499 07C2  
                   u301_20 0767                     u301_21 0766                     u302_20 076D  
                   u302_21 076C                     _INTEDG 040E                     u303_20 0782  
                   u303_21 0781                     u304_20 0798                     u304_21 0797  
                   u305_20 07AC                     u305_21 07AB                     u305_25 07A8  
                   u306_20 07BE                     u306_21 07BD                     u307_20 07CB  
                   u307_21 07CA                     u308_20 07DC                     u308_21 07DB  
                   u309_20 07E9                     u309_21 07E8                     u464_27 0771  
                   u465_27 0786                     u466_27 07AF                  ??_Lcd_Cmd 0020  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR1CS 0081                     _TMR2IE 0461  
                   _TMR2IF 0061                     _TMR1ON 0080    __size_of_Lcd_Write_Char 0037  
                   _TRISA0 0428                     _TRISB0 0430                     _TRISB3 0433  
                   _TRISB4 0434                     _TRISB5 0435                     _TRISB7 0437  
         __end_of___xxtofl 1000         __size_of_Read_Temp 0078                     ___wmul 0B77  
                ??___fldiv 0028                  ??___awdiv 0074                  ??___flmul 002F  
                ??___fltol 003E           __end_of_init_ADC 0B14                  ??___lwdiv 0074  
                ??___lwmod 0075           ___awdiv@quotient 0026         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 002F            Lcd_Set_Cursor@a 0025  
          Lcd_Set_Cursor@b 0022            Lcd_Set_Cursor@y 0027            Lcd_Set_Cursor@z 0026  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
  __end_of__initialization 0054          __end_of_Lcd_Clear 07FF                 ___fltol@f1 003A  
           __pcstackCOMMON 0070               __pidataBANK0 0AF1               __pidataBANK1 0AEF  
        __end_of_Read_Temp 0E1D             _Lcd_Set_Cursor 0C80                  ?_Lcd_Init 0070  
       Read_Temp@TempValue 0045                  ?_Lcd_Port 0070                 __pbssBANK0 004B  
               __pbssBANK1 00B0          __end_of__Umul8_16 0BC7                 __pmaintext 0680  
                  ?___wmul 0020                 __pintentry 0004                    _CCP2CON 001D  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0CD8                    _T1CKPS0 0084  
                  _T1CKPS1 0085                  ?___xxtofl 0020                 ??_Lcd_Init 0022  
               ??_Lcd_Port 0074                    _Cal_PID 0E99                 __stringtab 0800  
                ?_init_ADC 0070             _Lcd_Write_Char 0BC7                    _Lcd_Cmd 0B14  
                  ___fldiv 03B9                    ___awdiv 0D3C                    ___flmul 0058  
                  ___fltol 0E1D            __size_of___wmul 0027                    ___lwdiv 0C3A  
                  ___lwmod 0BFE                _Temperature 005B            ?_Lcd_Set_Cursor 0022  
                  __ptext1 0596                    __ptext2 0BFE                    __ptext3 0C3A  
                  __ptext4 0AFF                    __ptext5 0DA5                    __ptext6 0F44  
                  __ptext7 0E1D                    __ptext8 0058                    __ptext9 0B9E  
             __size_of_ISR 008F                    _dpowers 0806                 ??___xxtofl 0024  
                  _sprintf 0596                    clrloop0 0AF8                    main@str 00A0  
   __end_of_Lcd_Write_Char 0BFE       end_of_initialization 0054                 ??_init_ADC 0074  
                Lcd_Port@a 0074                  _PID_error 0078                  _PID_value 0057  
            ___xxtofl@sign 0028                ___fldiv@grs 0034                ___fldiv@rem 002D  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0026          Lcd_Write_String@i 0024  
              ___flmul@grs 0036                  _Lcd_Clear 07F2             __end_of___wmul 0B9E  
         _Lcd_Write_String 0B52        start_initialization 000F                __end_of_ISR 07F2  
                _Read_Temp 0DA5          __size_of_Lcd_Init 0064          __size_of_Lcd_Port 0022  
               ?_Lcd_Clear 0070                   ??___wmul 0074                  __Umul8_16 0B9E  
              __pdataBANK0 005D                __pdataBANK1 00B2            Lcd_Write_Char@a 0022  
          Lcd_Write_Char@y 0021                  ___fldiv@a 0020                  ___fldiv@b 0024  
                ___flmul@a 002B                  ___flmul@b 0027                __pbssCOMMON 0076  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
               ?_Read_Temp 0070          __size_of___xxtofl 00BC                   ?_Cal_PID 0070  
                 ?_Lcd_Cmd 0070                sprintf@flag 0033                sprintf@prec 0034  
        __size_of_init_ADC 0015           ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0023  
                 ?___fldiv 0020                   ?___awdiv 0020                   ?___flmul 0027  
                 ?___fltol 003A                 ?__Umul8_16 0074                   ?___lwdiv 0020  
                 ?___lwmod 0027                  __pstrings 0800           ___lwdiv@quotient 0025  
                 ?_sprintf 002C          interrupt_function 0004             ___wmul@product 0074  
                clear_ram0 0AF7                   Lcd_Cmd@a 0075                ??_Lcd_Clear 0076  
               _ADCON0bits 001F                __stringbase 0805                 _ADCON1bits 009F  
        ___wmul@multiplier 0020           ??_Lcd_Write_Char 0075                   _Lcd_Init 0CD8  
              ??_Read_Temp 0043                   _Lcd_Port 0B30           __size_of_Cal_PID 00AB  
 __end_of_Lcd_Write_String 0B77           __size_of_Lcd_Cmd 001C                ??__Umul8_16 0020  
         __size_of___fldiv 01DD           __size_of___awdiv 0069           __size_of___flmul 0361  
         __size_of___fltol 007C           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 0806                 sprintf@val 0035                   ___xxtofl 0F44  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0024                   __ptext10 03B9  
                 __ptext11 0B52                   __ptext20 0D3C                   __ptext12 0BC7  
                 __ptext21 0763                   __ptext13 0C80                   __ptext14 0CD8  
                 __ptext15 07F2                   __ptext16 0B14                   __ptext17 0B30  
                 __ptext18 0E99                   __ptext19 0B77           __size_of_sprintf 00EA  
                 _init_ADC 0AFF              __size_of_main 00E3                   _setPoint 0061  
           _previous_error 0059         Lcd_Write_Char@temp 0020                   intlevel1 0000  
                sprintf@ap 0032                  sprintf@sp 0037           ___lwmod@dividend 0029  
                stringcode 0800         Lcd_Set_Cursor@temp 0028     __Umul8_16@multiplicand 0074  
               _OPTION_REG 0081                   sprintf@c 0038                   sprintf@f 002C  
          ___lwmod@divisor 0027            ___lwmod@counter 002B                   stringdir 0800  
                 stringtab 0800       __Umul8_16@multiplier 0026          __Umul8_16@product 0022  
